// generated by cdk8s
import { ApiObject } from 'cdk8s';
import { Construct } from 'constructs';

/**
 * WorkflowTemplate is the definition of a workflow template resource
 *
 * @schema WorkflowTemplate
 */
export class WorkflowTemplate extends ApiObject {
  /**
   * Defines a "WorkflowTemplate" API object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: WorkflowTemplateOptions) {
    super(scope, name, {
      ...options,
      kind: 'WorkflowTemplate',
      apiVersion: 'argoproj.io/v1alpha1',
    });
  }
}

/**
 * WorkflowTemplate is the definition of a workflow template resource
 *
 * @schema WorkflowTemplate
 */
export interface WorkflowTemplateOptions {
  /**
   * @schema WorkflowTemplate#metadata
   */
  readonly metadata: any;

  /**
   * WorkflowTemplateSpec is a spec of WorkflowTemplate.
   *
   * @schema WorkflowTemplate#spec
   */
  readonly spec: WorkflowTemplateSpec;

}

/**
 * WorkflowTemplateSpec is a spec of WorkflowTemplate.
 *
 * @schema WorkflowTemplateSpec
 */
export interface WorkflowTemplateSpec {
  /**
   * Optional duration in seconds relative to the workflow start time which the workflow is allowed to run before the controller terminates the io.argoproj.workflow.v1alpha1. A value of zero is used to terminate a Running workflow
   *
   * @schema WorkflowTemplateSpec#activeDeadlineSeconds
   */
  readonly activeDeadlineSeconds?: number;

  /**
   * Affinity is a group of affinity scheduling rules.
   *
   * @schema WorkflowTemplateSpec#affinity
   */
  readonly affinity?: WorkflowTemplateSpecAffinity;

  /**
   * Arguments to a template
   *
   * @schema WorkflowTemplateSpec#arguments
   */
  readonly arguments?: WorkflowTemplateSpecArguments;

  /**
   * @schema WorkflowTemplateSpec#artifactRepositoryRef
   */
  readonly artifactRepositoryRef?: WorkflowTemplateSpecArtifactRepositoryRef;

  /**
   * AutomountServiceAccountToken indicates whether a service account token should be automatically mounted in pods. ServiceAccountName of ExecutorConfig must be specified if this value is false.
   *
   * @schema WorkflowTemplateSpec#automountServiceAccountToken
   */
  readonly automountServiceAccountToken?: boolean;

  /**
   * PodDNSConfig defines the DNS parameters of a pod in addition to those generated from DNSPolicy.
   *
   * @schema WorkflowTemplateSpec#dnsConfig
   */
  readonly dnsConfig?: WorkflowTemplateSpecDnsConfig;

  /**
   * Set DNS policy for the pod. Defaults to "ClusterFirst". Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'.
   *
   * @default ClusterFirst". Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'.
   * @schema WorkflowTemplateSpec#dnsPolicy
   */
  readonly dnsPolicy?: string;

  /**
   * Entrypoint is a template reference to the starting point of the io.argoproj.workflow.v1alpha1.
   *
   * @schema WorkflowTemplateSpec#entrypoint
   */
  readonly entrypoint?: string;

  /**
   * ExecutorConfig holds configurations of an executor container.
   *
   * @schema WorkflowTemplateSpec#executor
   */
  readonly executor?: WorkflowTemplateSpecExecutor;

  /**
   * @schema WorkflowTemplateSpec#hostAliases
   */
  readonly hostAliases?: WorkflowTemplateSpecHostAliases[];

  /**
   * Host networking requested for this workflow pod. Default to false.
   *
   * @default false.
   * @schema WorkflowTemplateSpec#hostNetwork
   */
  readonly hostNetwork?: boolean;

  /**
   * ImagePullSecrets is a list of references to secrets in the same namespace to use for pulling any images in pods that reference this ServiceAccount. ImagePullSecrets are distinct from Secrets because Secrets can be mounted in the pod, but ImagePullSecrets are only accessed by the kubelet. More info: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
   *
   * @schema WorkflowTemplateSpec#imagePullSecrets
   */
  readonly imagePullSecrets?: WorkflowTemplateSpecImagePullSecrets[];

  /**
   * Metrics are a list of metrics emitted from a Workflow/Template
   *
   * @schema WorkflowTemplateSpec#metrics
   */
  readonly metrics?: WorkflowTemplateSpecMetrics;

  /**
   * NodeSelector is a selector which will result in all pods of the workflow to be scheduled on the selected node(s). This is able to be overridden by a nodeSelector specified in the template.
   *
   * @schema WorkflowTemplateSpec#nodeSelector
   */
  readonly nodeSelector?: { [key: string]: string };

  /**
   * OnExit is a template reference which is invoked at the end of the workflow, irrespective of the success, failure, or error of the primary io.argoproj.workflow.v1alpha1.
   *
   * @schema WorkflowTemplateSpec#onExit
   */
  readonly onExit?: string;

  /**
   * Parallelism limits the max total parallel pods that can execute at the same time in a workflow
   *
   * @schema WorkflowTemplateSpec#parallelism
   */
  readonly parallelism?: number;

  /**
   * PodDisruptionBudgetSpec is a description of a PodDisruptionBudget.
   *
   * @schema WorkflowTemplateSpec#podDisruptionBudget
   */
  readonly podDisruptionBudget?: WorkflowTemplateSpecPodDisruptionBudget;

  /**
   * PodGC describes how to delete completed pods as they complete
   *
   * @schema WorkflowTemplateSpec#podGC
   */
  readonly podGC?: WorkflowTemplateSpecPodGc;

  /**
   * Priority to apply to workflow pods.
   *
   * @schema WorkflowTemplateSpec#podPriority
   */
  readonly podPriority?: number;

  /**
   * PriorityClassName to apply to workflow pods.
   *
   * @schema WorkflowTemplateSpec#podPriorityClassName
   */
  readonly podPriorityClassName?: string;

  /**
   * PodSpecPatch holds strategic merge patch to apply against the pod spec. Allows parameterization of container fields which are not strings (e.g. resource limits).
   *
   * @schema WorkflowTemplateSpec#podSpecPatch
   */
  readonly podSpecPatch?: string;

  /**
   * Priority is used if controller is configured to process limited number of workflows in parallel. Workflows with higher priority are processed first.
   *
   * @schema WorkflowTemplateSpec#priority
   */
  readonly priority?: number;

  /**
   * Set scheduler name for all pods. Will be overridden if container/script template's scheduler name is set. Default scheduler will be used if neither specified.
   *
   * @schema WorkflowTemplateSpec#schedulerName
   */
  readonly schedulerName?: string;

  /**
   * PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext.
   *
   * @schema WorkflowTemplateSpec#securityContext
   */
  readonly securityContext?: WorkflowTemplateSpecSecurityContext;

  /**
   * ServiceAccountName is the name of the ServiceAccount to run all pods of the workflow as.
   *
   * @schema WorkflowTemplateSpec#serviceAccountName
   */
  readonly serviceAccountName?: string;

  /**
   * Shutdown will shutdown the workflow according to its ShutdownStrategy
   *
   * @schema WorkflowTemplateSpec#shutdown
   */
  readonly shutdown?: string;

  /**
   * Suspend will suspend the workflow and prevent execution of any future steps in the workflow
   *
   * @schema WorkflowTemplateSpec#suspend
   */
  readonly suspend?: boolean;

  /**
   * Templates is a list of workflow templates used in a workflow
   *
   * @schema WorkflowTemplateSpec#templates
   */
  readonly templates?: WorkflowTemplateSpecTemplates[];

  /**
   * Tolerations to apply to workflow pods.
   *
   * @schema WorkflowTemplateSpec#tolerations
   */
  readonly tolerations?: WorkflowTemplateSpecTolerations[];

  /**
   * TTLSecondsAfterFinished limits the lifetime of a Workflow that has finished execution (Succeeded, Failed, Error). If this field is set, once the Workflow finishes, it will be deleted after ttlSecondsAfterFinished expires. If this field is unset, ttlSecondsAfterFinished will not expire. If this field is set to zero, ttlSecondsAfterFinished expires immediately after the Workflow finishes. DEPRECATED: Use TTLStrategy.SecondsAfterCompletion instead.
   *
   * @schema WorkflowTemplateSpec#ttlSecondsAfterFinished
   */
  readonly ttlSecondsAfterFinished?: number;

  /**
   * TTLStrategy is the strategy for the time to live depending on if the workflow succeeded or failed
   *
   * @schema WorkflowTemplateSpec#ttlStrategy
   */
  readonly ttlStrategy?: WorkflowTemplateSpecTtlStrategy;

  /**
   * VolumeClaimTemplates is a list of claims that containers are allowed to reference. The Workflow controller will create the claims at the beginning of the workflow and delete the claims upon completion of the workflow
   *
   * @schema WorkflowTemplateSpec#volumeClaimTemplates
   */
  readonly volumeClaimTemplates?: WorkflowTemplateSpecVolumeClaimTemplates[];

  /**
   * Volumes is a list of volumes that can be mounted by containers in a io.argoproj.workflow.v1alpha1.
   *
   * @schema WorkflowTemplateSpec#volumes
   */
  readonly volumes?: WorkflowTemplateSpecVolumes[];

  /**
   * WorkflowTemplateRef is a reference to a WorkflowTemplate resource.
   *
   * @schema WorkflowTemplateSpec#workflowTemplateRef
   */
  readonly workflowTemplateRef?: WorkflowTemplateSpecWorkflowTemplateRef;

}

/**
 * Affinity is a group of affinity scheduling rules.
 *
 * @schema WorkflowTemplateSpecAffinity
 */
export interface WorkflowTemplateSpecAffinity {
  /**
   * Node affinity is a group of node affinity scheduling rules.
   *
   * @schema WorkflowTemplateSpecAffinity#nodeAffinity
   */
  readonly nodeAffinity?: WorkflowTemplateSpecAffinityNodeAffinity;

  /**
   * Pod affinity is a group of inter pod affinity scheduling rules.
   *
   * @schema WorkflowTemplateSpecAffinity#podAffinity
   */
  readonly podAffinity?: WorkflowTemplateSpecAffinityPodAffinity;

  /**
   * Pod anti affinity is a group of inter pod anti affinity scheduling rules.
   *
   * @schema WorkflowTemplateSpecAffinity#podAntiAffinity
   */
  readonly podAntiAffinity?: WorkflowTemplateSpecAffinityPodAntiAffinity;

}

/**
 * Arguments to a template
 *
 * @schema WorkflowTemplateSpecArguments
 */
export interface WorkflowTemplateSpecArguments {
  /**
   * Artifacts is the list of artifacts to pass to the template or workflow
   *
   * @schema WorkflowTemplateSpecArguments#artifacts
   */
  readonly artifacts?: WorkflowTemplateSpecArgumentsArtifacts[];

  /**
   * Parameters is the list of parameters to pass to the template or workflow
   *
   * @schema WorkflowTemplateSpecArguments#parameters
   */
  readonly parameters?: WorkflowTemplateSpecArgumentsParameters[];

}

/**
 * @schema WorkflowTemplateSpecArtifactRepositoryRef
 */
export interface WorkflowTemplateSpecArtifactRepositoryRef {
  /**
   * @schema WorkflowTemplateSpecArtifactRepositoryRef#configMap
   */
  readonly configMap?: string;

  /**
   * @schema WorkflowTemplateSpecArtifactRepositoryRef#key
   */
  readonly key?: string;

}

/**
 * PodDNSConfig defines the DNS parameters of a pod in addition to those generated from DNSPolicy.
 *
 * @schema WorkflowTemplateSpecDnsConfig
 */
export interface WorkflowTemplateSpecDnsConfig {
  /**
   * A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.
   *
   * @schema WorkflowTemplateSpecDnsConfig#nameservers
   */
  readonly nameservers?: string[];

  /**
   * A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.
   *
   * @schema WorkflowTemplateSpecDnsConfig#options
   */
  readonly options?: WorkflowTemplateSpecDnsConfigOptions[];

  /**
   * A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.
   *
   * @schema WorkflowTemplateSpecDnsConfig#searches
   */
  readonly searches?: string[];

}

/**
 * ExecutorConfig holds configurations of an executor container.
 *
 * @schema WorkflowTemplateSpecExecutor
 */
export interface WorkflowTemplateSpecExecutor {
  /**
   * ServiceAccountName specifies the service account name of the executor container.
   *
   * @schema WorkflowTemplateSpecExecutor#serviceAccountName
   */
  readonly serviceAccountName?: string;

}

/**
 * HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the pod's hosts file.
 *
 * @schema WorkflowTemplateSpecHostAliases
 */
export interface WorkflowTemplateSpecHostAliases {
  /**
   * Hostnames for the above IP address.
   *
   * @schema WorkflowTemplateSpecHostAliases#hostnames
   */
  readonly hostnames?: string[];

  /**
   * IP address of the host file entry.
   *
   * @schema WorkflowTemplateSpecHostAliases#ip
   */
  readonly ip?: string;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema WorkflowTemplateSpecImagePullSecrets
 */
export interface WorkflowTemplateSpecImagePullSecrets {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecImagePullSecrets#name
   */
  readonly name?: string;

}

/**
 * Metrics are a list of metrics emitted from a Workflow/Template
 *
 * @schema WorkflowTemplateSpecMetrics
 */
export interface WorkflowTemplateSpecMetrics {
  /**
   * Prometheus is a list of prometheus metrics to be emitted
   *
   * @schema WorkflowTemplateSpecMetrics#prometheus
   */
  readonly prometheus: WorkflowTemplateSpecMetricsPrometheus[];

}

/**
 * PodDisruptionBudgetSpec is a description of a PodDisruptionBudget.
 *
 * @schema WorkflowTemplateSpecPodDisruptionBudget
 */
export interface WorkflowTemplateSpecPodDisruptionBudget {
  /**
   * @schema WorkflowTemplateSpecPodDisruptionBudget#maxUnavailable
   */
  readonly maxUnavailable?: string;

  /**
   * @schema WorkflowTemplateSpecPodDisruptionBudget#minAvailable
   */
  readonly minAvailable?: string;

  /**
   * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
   *
   * @schema WorkflowTemplateSpecPodDisruptionBudget#selector
   */
  readonly selector?: WorkflowTemplateSpecPodDisruptionBudgetSelector;

}

/**
 * PodGC describes how to delete completed pods as they complete
 *
 * @schema WorkflowTemplateSpecPodGc
 */
export interface WorkflowTemplateSpecPodGc {
  /**
   * Strategy is the strategy to use. One of "OnPodCompletion", "OnPodSuccess", "OnWorkflowCompletion", "OnWorkflowSuccess"
   *
   * @schema WorkflowTemplateSpecPodGc#strategy
   */
  readonly strategy?: string;

}

/**
 * PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext.
 *
 * @schema WorkflowTemplateSpecSecurityContext
 */
export interface WorkflowTemplateSpecSecurityContext {
  /**
   * A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:

1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----

If unset, the Kubelet will not modify the ownership and permissions of any volume.
   *
   * @schema WorkflowTemplateSpecSecurityContext#fsGroup
   */
  readonly fsGroup?: number;

  /**
   * The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
   *
   * @schema WorkflowTemplateSpecSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema WorkflowTemplateSpecSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
   *
   * @default user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
   * @schema WorkflowTemplateSpecSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * SELinuxOptions are the labels to be applied to the container
   *
   * @schema WorkflowTemplateSpecSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: WorkflowTemplateSpecSecurityContextSeLinuxOptions;

  /**
   * A list of groups applied to the first process run in each container, in addition to the container's primary GID.  If unspecified, no groups will be added to any container.
   *
   * @schema WorkflowTemplateSpecSecurityContext#supplementalGroups
   */
  readonly supplementalGroups?: number[];

  /**
   * Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch.
   *
   * @schema WorkflowTemplateSpecSecurityContext#sysctls
   */
  readonly sysctls?: WorkflowTemplateSpecSecurityContextSysctls[];

  /**
   * WindowsSecurityContextOptions contain Windows-specific options and credentials.
   *
   * @schema WorkflowTemplateSpecSecurityContext#windowsOptions
   */
  readonly windowsOptions?: WorkflowTemplateSpecSecurityContextWindowsOptions;

}

/**
 * Template is a reusable and composable unit of execution in a workflow
 *
 * @schema WorkflowTemplateSpecTemplates
 */
export interface WorkflowTemplateSpecTemplates {
  /**
   * Optional duration in seconds relative to the StartTime that the pod may be active on a node before the system actively tries to terminate the pod; value must be positive integer This field is only applicable to container and script templates.
   *
   * @schema WorkflowTemplateSpecTemplates#activeDeadlineSeconds
   */
  readonly activeDeadlineSeconds?: number;

  /**
   * Affinity is a group of affinity scheduling rules.
   *
   * @schema WorkflowTemplateSpecTemplates#affinity
   */
  readonly affinity?: WorkflowTemplateSpecTemplatesAffinity;

  /**
   * ArtifactLocation describes a location for a single or multiple artifacts. It is used as single artifact in the context of inputs/outputs (e.g. outputs.artifacts.artname). It is also used to describe the location of multiple artifacts such as the archive location of a single workflow step, which the executor will use as a default location to store its files.
   *
   * @schema WorkflowTemplateSpecTemplates#archiveLocation
   */
  readonly archiveLocation?: WorkflowTemplateSpecTemplatesArchiveLocation;

  /**
   * Arguments to a template
   *
   * @schema WorkflowTemplateSpecTemplates#arguments
   */
  readonly arguments?: WorkflowTemplateSpecTemplatesArguments;

  /**
   * AutomountServiceAccountToken indicates whether a service account token should be automatically mounted in pods. ServiceAccountName of ExecutorConfig must be specified if this value is false.
   *
   * @schema WorkflowTemplateSpecTemplates#automountServiceAccountToken
   */
  readonly automountServiceAccountToken?: boolean;

  /**
   * A single application container that you want to run within a pod.
   *
   * @schema WorkflowTemplateSpecTemplates#container
   */
  readonly container?: WorkflowTemplateSpecTemplatesContainer;

  /**
   * Deamon will allow a workflow to proceed to the next step so long as the container reaches readiness
   *
   * @schema WorkflowTemplateSpecTemplates#daemon
   */
  readonly daemon?: boolean;

  /**
   * DAGTemplate is a template subtype for directed acyclic graph templates
   *
   * @schema WorkflowTemplateSpecTemplates#dag
   */
  readonly dag?: WorkflowTemplateSpecTemplatesDag;

  /**
   * ExecutorConfig holds configurations of an executor container.
   *
   * @schema WorkflowTemplateSpecTemplates#executor
   */
  readonly executor?: WorkflowTemplateSpecTemplatesExecutor;

  /**
   * HostAliases is an optional list of hosts and IPs that will be injected into the pod spec
   *
   * @schema WorkflowTemplateSpecTemplates#hostAliases
   */
  readonly hostAliases?: WorkflowTemplateSpecTemplatesHostAliases[];

  /**
   * InitContainers is a list of containers which run before the main container.
   *
   * @schema WorkflowTemplateSpecTemplates#initContainers
   */
  readonly initContainers?: WorkflowTemplateSpecTemplatesInitContainers[];

  /**
   * Inputs are the mechanism for passing parameters, artifacts, volumes from one template to another
   *
   * @schema WorkflowTemplateSpecTemplates#inputs
   */
  readonly inputs?: WorkflowTemplateSpecTemplatesInputs;

  /**
   * Pod metdata
   *
   * @schema WorkflowTemplateSpecTemplates#metadata
   */
  readonly metadata?: WorkflowTemplateSpecTemplatesMetadata;

  /**
   * Metrics are a list of metrics emitted from a Workflow/Template
   *
   * @schema WorkflowTemplateSpecTemplates#metrics
   */
  readonly metrics?: WorkflowTemplateSpecTemplatesMetrics;

  /**
   * Name is the name of the template
   *
   * @schema WorkflowTemplateSpecTemplates#name
   */
  readonly name: string;

  /**
   * NodeSelector is a selector to schedule this step of the workflow to be run on the selected node(s). Overrides the selector set at the workflow level.
   *
   * @schema WorkflowTemplateSpecTemplates#nodeSelector
   */
  readonly nodeSelector?: { [key: string]: string };

  /**
   * Outputs hold parameters, artifacts, and results from a step
   *
   * @schema WorkflowTemplateSpecTemplates#outputs
   */
  readonly outputs?: WorkflowTemplateSpecTemplatesOutputs;

  /**
   * Parallelism limits the max total parallel pods that can execute at the same time within the boundaries of this template invocation. If additional steps/dag templates are invoked, the pods created by those templates will not be counted towards this total.
   *
   * @schema WorkflowTemplateSpecTemplates#parallelism
   */
  readonly parallelism?: number;

  /**
   * PodSpecPatch holds strategic merge patch to apply against the pod spec. Allows parameterization of container fields which are not strings (e.g. resource limits).
   *
   * @schema WorkflowTemplateSpecTemplates#podSpecPatch
   */
  readonly podSpecPatch?: string;

  /**
   * Priority to apply to workflow pods.
   *
   * @schema WorkflowTemplateSpecTemplates#priority
   */
  readonly priority?: number;

  /**
   * PriorityClassName to apply to workflow pods.
   *
   * @schema WorkflowTemplateSpecTemplates#priorityClassName
   */
  readonly priorityClassName?: string;

  /**
   * ResourceTemplate is a template subtype to manipulate kubernetes resources
   *
   * @schema WorkflowTemplateSpecTemplates#resource
   */
  readonly resource?: WorkflowTemplateSpecTemplatesResource;

  /**
   * ResubmitPendingPods is a flag to enable resubmitting pods that remain Pending after initial submission
   *
   * @schema WorkflowTemplateSpecTemplates#resubmitPendingPods
   */
  readonly resubmitPendingPods?: boolean;

  /**
   * RetryStrategy provides controls on how to retry a workflow step
   *
   * @schema WorkflowTemplateSpecTemplates#retryStrategy
   */
  readonly retryStrategy?: WorkflowTemplateSpecTemplatesRetryStrategy;

  /**
   * If specified, the pod will be dispatched by specified scheduler. Or it will be dispatched by workflow scope scheduler if specified. If neither specified, the pod will be dispatched by default scheduler.
   *
   * @schema WorkflowTemplateSpecTemplates#schedulerName
   */
  readonly schedulerName?: string;

  /**
   * ScriptTemplate is a template subtype to enable scripting through code steps
   *
   * @schema WorkflowTemplateSpecTemplates#script
   */
  readonly script?: WorkflowTemplateSpecTemplatesScript;

  /**
   * PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext.
   *
   * @schema WorkflowTemplateSpecTemplates#securityContext
   */
  readonly securityContext?: WorkflowTemplateSpecTemplatesSecurityContext;

  /**
   * ServiceAccountName to apply to workflow pods
   *
   * @schema WorkflowTemplateSpecTemplates#serviceAccountName
   */
  readonly serviceAccountName?: string;

  /**
   * Sidecars is a list of containers which run alongside the main container Sidecars are automatically killed when the main container completes
   *
   * @schema WorkflowTemplateSpecTemplates#sidecars
   */
  readonly sidecars?: WorkflowTemplateSpecTemplatesSidecars[];

  /**
   * Steps define a series of sequential/parallel workflow steps
   *
   * @schema WorkflowTemplateSpecTemplates#steps
   */
  readonly steps?: WorkflowTemplateSpecTemplatesSteps[][];

  /**
   * SuspendTemplate is a template subtype to suspend a workflow at a predetermined point in time
   *
   * @schema WorkflowTemplateSpecTemplates#suspend
   */
  readonly suspend?: WorkflowTemplateSpecTemplatesSuspend;

  /**
   * Template is the name of the template which is used as the base of this template. DEPRECATED: This field is not used.
   *
   * @schema WorkflowTemplateSpecTemplates#template
   */
  readonly template?: string;

  /**
   * TemplateRef is a reference of template resource.
   *
   * @schema WorkflowTemplateSpecTemplates#templateRef
   */
  readonly templateRef?: WorkflowTemplateSpecTemplatesTemplateRef;

  /**
   * Tolerations to apply to workflow pods.
   *
   * @schema WorkflowTemplateSpecTemplates#tolerations
   */
  readonly tolerations?: WorkflowTemplateSpecTemplatesTolerations[];

  /**
   * Volumes is a list of volumes that can be mounted by containers in a template.
   *
   * @schema WorkflowTemplateSpecTemplates#volumes
   */
  readonly volumes?: WorkflowTemplateSpecTemplatesVolumes[];

}

/**
 * The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
 *
 * @schema WorkflowTemplateSpecTolerations
 */
export interface WorkflowTemplateSpecTolerations {
  /**
   * Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
   *
   * @schema WorkflowTemplateSpecTolerations#effect
   */
  readonly effect?: string;

  /**
   * Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
   *
   * @schema WorkflowTemplateSpecTolerations#key
   */
  readonly key?: string;

  /**
   * Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
   *
   * @default Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
   * @schema WorkflowTemplateSpecTolerations#operator
   */
  readonly operator?: string;

  /**
   * TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
   *
   * @schema WorkflowTemplateSpecTolerations#tolerationSeconds
   */
  readonly tolerationSeconds?: number;

  /**
   * Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
   *
   * @schema WorkflowTemplateSpecTolerations#value
   */
  readonly value?: string;

}

/**
 * TTLStrategy is the strategy for the time to live depending on if the workflow succeeded or failed
 *
 * @schema WorkflowTemplateSpecTtlStrategy
 */
export interface WorkflowTemplateSpecTtlStrategy {
  /**
   * SecondsAfterCompletion is the number of seconds to live after completion
   *
   * @schema WorkflowTemplateSpecTtlStrategy#secondsAfterCompletion
   */
  readonly secondsAfterCompletion?: number;

  /**
   * SecondsAfterFailure is the number of seconds to live after failure
   *
   * @schema WorkflowTemplateSpecTtlStrategy#secondsAfterFailure
   */
  readonly secondsAfterFailure?: number;

  /**
   * SecondsAfterSuccess is the number of seconds to live after success
   *
   * @schema WorkflowTemplateSpecTtlStrategy#secondsAfterSuccess
   */
  readonly secondsAfterSuccess?: number;

}

/**
 * PersistentVolumeClaim is a user's request for and claim to a persistent volume
 *
 * @schema WorkflowTemplateSpecVolumeClaimTemplates
 */
export interface WorkflowTemplateSpecVolumeClaimTemplates {
  /**
   * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   *
   * @schema WorkflowTemplateSpecVolumeClaimTemplates#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   *
   * @schema WorkflowTemplateSpecVolumeClaimTemplates#kind
   */
  readonly kind?: string;

  /**
   * @schema WorkflowTemplateSpecVolumeClaimTemplates#metadata
   */
  readonly metadata?: any;

  /**
   * PersistentVolumeClaimSpec describes the common attributes of storage devices and allows a Source for provider-specific attributes
   *
   * @schema WorkflowTemplateSpecVolumeClaimTemplates#spec
   */
  readonly spec?: WorkflowTemplateSpecVolumeClaimTemplatesSpec;

  /**
   * PersistentVolumeClaimStatus is the current status of a persistent volume claim.
   *
   * @schema WorkflowTemplateSpecVolumeClaimTemplates#status
   */
  readonly status?: WorkflowTemplateSpecVolumeClaimTemplatesStatus;

}

/**
 * Volume represents a named volume in a pod that may be accessed by any container in the pod.
 *
 * @schema WorkflowTemplateSpecVolumes
 */
export interface WorkflowTemplateSpecVolumes {
  /**
   * Represents a Persistent Disk resource in AWS.

An AWS EBS disk must exist before mounting to a container. The disk must also be in the same AWS zone as the kubelet. An AWS EBS disk can only be mounted as read/write once. AWS EBS volumes support ownership management and SELinux relabeling.
   *
   * @schema WorkflowTemplateSpecVolumes#awsElasticBlockStore
   */
  readonly awsElasticBlockStore?: WorkflowTemplateSpecVolumesAwsElasticBlockStore;

  /**
   * AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
   *
   * @schema WorkflowTemplateSpecVolumes#azureDisk
   */
  readonly azureDisk?: WorkflowTemplateSpecVolumesAzureDisk;

  /**
   * AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
   *
   * @schema WorkflowTemplateSpecVolumes#azureFile
   */
  readonly azureFile?: WorkflowTemplateSpecVolumesAzureFile;

  /**
   * Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling.
   *
   * @schema WorkflowTemplateSpecVolumes#cephfs
   */
  readonly cephfs?: WorkflowTemplateSpecVolumesCephfs;

  /**
   * Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling.
   *
   * @schema WorkflowTemplateSpecVolumes#cinder
   */
  readonly cinder?: WorkflowTemplateSpecVolumesCinder;

  /**
   * Adapts a ConfigMap into a volume.

The contents of the target ConfigMap's Data field will be presented in a volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. ConfigMap volumes support ownership management and SELinux relabeling.
   *
   * @schema WorkflowTemplateSpecVolumes#configMap
   */
  readonly configMap?: WorkflowTemplateSpecVolumesConfigMap;

  /**
   * Represents a source location of a volume to mount, managed by an external CSI driver
   *
   * @schema WorkflowTemplateSpecVolumes#csi
   */
  readonly csi?: WorkflowTemplateSpecVolumesCsi;

  /**
   * DownwardAPIVolumeSource represents a volume containing downward API info. Downward API volumes support ownership management and SELinux relabeling.
   *
   * @schema WorkflowTemplateSpecVolumes#downwardAPI
   */
  readonly downwardAPI?: WorkflowTemplateSpecVolumesDownwardApi;

  /**
   * Represents an empty directory for a pod. Empty directory volumes support ownership management and SELinux relabeling.
   *
   * @schema WorkflowTemplateSpecVolumes#emptyDir
   */
  readonly emptyDir?: WorkflowTemplateSpecVolumesEmptyDir;

  /**
   * Represents a Fibre Channel volume. Fibre Channel volumes can only be mounted as read/write once. Fibre Channel volumes support ownership management and SELinux relabeling.
   *
   * @schema WorkflowTemplateSpecVolumes#fc
   */
  readonly fc?: WorkflowTemplateSpecVolumesFc;

  /**
   * FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
   *
   * @schema WorkflowTemplateSpecVolumes#flexVolume
   */
  readonly flexVolume?: WorkflowTemplateSpecVolumesFlexVolume;

  /**
   * Represents a Flocker volume mounted by the Flocker agent. One and only one of datasetName and datasetUUID should be set. Flocker volumes do not support ownership management or SELinux relabeling.
   *
   * @schema WorkflowTemplateSpecVolumes#flocker
   */
  readonly flocker?: WorkflowTemplateSpecVolumesFlocker;

  /**
   * Represents a Persistent Disk resource in Google Compute Engine.

A GCE PD must exist before mounting to a container. The disk must also be in the same GCE project and zone as the kubelet. A GCE PD can only be mounted as read/write once or read-only many times. GCE PDs support ownership management and SELinux relabeling.
   *
   * @schema WorkflowTemplateSpecVolumes#gcePersistentDisk
   */
  readonly gcePersistentDisk?: WorkflowTemplateSpecVolumesGcePersistentDisk;

  /**
   * Represents a volume that is populated with the contents of a git repository. Git repo volumes do not support ownership management. Git repo volumes support SELinux relabeling.

DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.
   *
   * @schema WorkflowTemplateSpecVolumes#gitRepo
   */
  readonly gitRepo?: WorkflowTemplateSpecVolumesGitRepo;

  /**
   * Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling.
   *
   * @schema WorkflowTemplateSpecVolumes#glusterfs
   */
  readonly glusterfs?: WorkflowTemplateSpecVolumesGlusterfs;

  /**
   * Represents a host path mapped into a pod. Host path volumes do not support ownership management or SELinux relabeling.
   *
   * @schema WorkflowTemplateSpecVolumes#hostPath
   */
  readonly hostPath?: WorkflowTemplateSpecVolumesHostPath;

  /**
   * Represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling.
   *
   * @schema WorkflowTemplateSpecVolumes#iscsi
   */
  readonly iscsi?: WorkflowTemplateSpecVolumesIscsi;

  /**
   * Volume's name. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecVolumes#name
   */
  readonly name: string;

  /**
   * Represents an NFS mount that lasts the lifetime of a pod. NFS volumes do not support ownership management or SELinux relabeling.
   *
   * @schema WorkflowTemplateSpecVolumes#nfs
   */
  readonly nfs?: WorkflowTemplateSpecVolumesNfs;

  /**
   * PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace. This volume finds the bound PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another type of volume that is owned by someone else (the system).
   *
   * @schema WorkflowTemplateSpecVolumes#persistentVolumeClaim
   */
  readonly persistentVolumeClaim?: WorkflowTemplateSpecVolumesPersistentVolumeClaim;

  /**
   * Represents a Photon Controller persistent disk resource.
   *
   * @schema WorkflowTemplateSpecVolumes#photonPersistentDisk
   */
  readonly photonPersistentDisk?: WorkflowTemplateSpecVolumesPhotonPersistentDisk;

  /**
   * PortworxVolumeSource represents a Portworx volume resource.
   *
   * @schema WorkflowTemplateSpecVolumes#portworxVolume
   */
  readonly portworxVolume?: WorkflowTemplateSpecVolumesPortworxVolume;

  /**
   * Represents a projected volume source
   *
   * @schema WorkflowTemplateSpecVolumes#projected
   */
  readonly projected?: WorkflowTemplateSpecVolumesProjected;

  /**
   * Represents a Quobyte mount that lasts the lifetime of a pod. Quobyte volumes do not support ownership management or SELinux relabeling.
   *
   * @schema WorkflowTemplateSpecVolumes#quobyte
   */
  readonly quobyte?: WorkflowTemplateSpecVolumesQuobyte;

  /**
   * Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling.
   *
   * @schema WorkflowTemplateSpecVolumes#rbd
   */
  readonly rbd?: WorkflowTemplateSpecVolumesRbd;

  /**
   * ScaleIOVolumeSource represents a persistent ScaleIO volume
   *
   * @schema WorkflowTemplateSpecVolumes#scaleIO
   */
  readonly scaleIO?: WorkflowTemplateSpecVolumesScaleIo;

  /**
   * Adapts a Secret into a volume.

The contents of the target Secret's Data field will be presented in a volume as files using the keys in the Data field as the file names. Secret volumes support ownership management and SELinux relabeling.
   *
   * @schema WorkflowTemplateSpecVolumes#secret
   */
  readonly secret?: WorkflowTemplateSpecVolumesSecret;

  /**
   * Represents a StorageOS persistent volume resource.
   *
   * @schema WorkflowTemplateSpecVolumes#storageos
   */
  readonly storageos?: WorkflowTemplateSpecVolumesStorageos;

  /**
   * Represents a vSphere volume resource.
   *
   * @schema WorkflowTemplateSpecVolumes#vsphereVolume
   */
  readonly vsphereVolume?: WorkflowTemplateSpecVolumesVsphereVolume;

}

/**
 * WorkflowTemplateRef is a reference to a WorkflowTemplate resource.
 *
 * @schema WorkflowTemplateSpecWorkflowTemplateRef
 */
export interface WorkflowTemplateSpecWorkflowTemplateRef {
  /**
   * ClusterScope indicates the referred template is cluster scoped (i.e. a ClusterWorkflowTemplate).
   *
   * @schema WorkflowTemplateSpecWorkflowTemplateRef#clusterScope
   */
  readonly clusterScope?: boolean;

  /**
   * Name is the resource name of the workflow template.
   *
   * @schema WorkflowTemplateSpecWorkflowTemplateRef#name
   */
  readonly name?: string;

}

/**
 * Node affinity is a group of node affinity scheduling rules.
 *
 * @schema WorkflowTemplateSpecAffinityNodeAffinity
 */
export interface WorkflowTemplateSpecAffinityNodeAffinity {
  /**
   * The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
   *
   * @schema WorkflowTemplateSpecAffinityNodeAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: WorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms.
   *
   * @schema WorkflowTemplateSpecAffinityNodeAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: WorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution;

}

/**
 * Pod affinity is a group of inter pod affinity scheduling rules.
 *
 * @schema WorkflowTemplateSpecAffinityPodAffinity
 */
export interface WorkflowTemplateSpecAffinityPodAffinity {
  /**
   * The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
   *
   * @schema WorkflowTemplateSpecAffinityPodAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: WorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
   *
   * @schema WorkflowTemplateSpecAffinityPodAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: WorkflowTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution[];

}

/**
 * Pod anti affinity is a group of inter pod anti affinity scheduling rules.
 *
 * @schema WorkflowTemplateSpecAffinityPodAntiAffinity
 */
export interface WorkflowTemplateSpecAffinityPodAntiAffinity {
  /**
   * The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
   *
   * @schema WorkflowTemplateSpecAffinityPodAntiAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: WorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
   *
   * @schema WorkflowTemplateSpecAffinityPodAntiAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: WorkflowTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution[];

}

/**
 * Artifact indicates an artifact to place at a specified path
 *
 * @schema WorkflowTemplateSpecArgumentsArtifacts
 */
export interface WorkflowTemplateSpecArgumentsArtifacts {
  /**
   * ArchiveStrategy describes how to archive files/directory when saving artifacts
   *
   * @schema WorkflowTemplateSpecArgumentsArtifacts#archive
   */
  readonly archive?: WorkflowTemplateSpecArgumentsArtifactsArchive;

  /**
   * ArchiveLogs indicates if the container logs should be archived
   *
   * @schema WorkflowTemplateSpecArgumentsArtifacts#archiveLogs
   */
  readonly archiveLogs?: boolean;

  /**
   * ArtifactoryArtifact is the location of an artifactory artifact
   *
   * @schema WorkflowTemplateSpecArgumentsArtifacts#artifactory
   */
  readonly artifactory?: WorkflowTemplateSpecArgumentsArtifactsArtifactory;

  /**
   * From allows an artifact to reference an artifact from a previous step
   *
   * @schema WorkflowTemplateSpecArgumentsArtifacts#from
   */
  readonly from?: string;

  /**
   * GCSArtifact is the location of a GCS artifact
   *
   * @schema WorkflowTemplateSpecArgumentsArtifacts#gcs
   */
  readonly gcs?: WorkflowTemplateSpecArgumentsArtifactsGcs;

  /**
   * GitArtifact is the location of an git artifact
   *
   * @schema WorkflowTemplateSpecArgumentsArtifacts#git
   */
  readonly git?: WorkflowTemplateSpecArgumentsArtifactsGit;

  /**
   * GlobalName exports an output artifact to the global scope, making it available as '{{io.argoproj.workflow.v1alpha1.outputs.artifacts.XXXX}} and in workflow.status.outputs.artifacts
   *
   * @schema WorkflowTemplateSpecArgumentsArtifacts#globalName
   */
  readonly globalName?: string;

  /**
   * HDFSArtifact is the location of an HDFS artifact
   *
   * @schema WorkflowTemplateSpecArgumentsArtifacts#hdfs
   */
  readonly hdfs?: WorkflowTemplateSpecArgumentsArtifactsHdfs;

  /**
   * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
   *
   * @schema WorkflowTemplateSpecArgumentsArtifacts#http
   */
  readonly http?: WorkflowTemplateSpecArgumentsArtifactsHttp;

  /**
   * mode bits to use on this file, must be a value between 0 and 0777 set when loading input artifacts.
   *
   * @schema WorkflowTemplateSpecArgumentsArtifacts#mode
   */
  readonly mode?: number;

  /**
   * name of the artifact. must be unique within a template's inputs/outputs.
   *
   * @schema WorkflowTemplateSpecArgumentsArtifacts#name
   */
  readonly name: string;

  /**
   * Make Artifacts optional, if Artifacts doesn't generate or exist
   *
   * @schema WorkflowTemplateSpecArgumentsArtifacts#optional
   */
  readonly optional?: boolean;

  /**
   * OSSArtifact is the location of an Alibaba Cloud OSS artifact
   *
   * @schema WorkflowTemplateSpecArgumentsArtifacts#oss
   */
  readonly oss?: WorkflowTemplateSpecArgumentsArtifactsOss;

  /**
   * Path is the container path to the artifact
   *
   * @schema WorkflowTemplateSpecArgumentsArtifacts#path
   */
  readonly path?: string;

  /**
   * RawArtifact allows raw string content to be placed as an artifact in a container
   *
   * @schema WorkflowTemplateSpecArgumentsArtifacts#raw
   */
  readonly raw?: WorkflowTemplateSpecArgumentsArtifactsRaw;

  /**
   * S3Artifact is the location of an S3 artifact
   *
   * @schema WorkflowTemplateSpecArgumentsArtifacts#s3
   */
  readonly s3?: WorkflowTemplateSpecArgumentsArtifactsS3;

}

/**
 * Parameter indicate a passed string parameter to a service template with an optional default value
 *
 * @schema WorkflowTemplateSpecArgumentsParameters
 */
export interface WorkflowTemplateSpecArgumentsParameters {
  /**
   * @schema WorkflowTemplateSpecArgumentsParameters#default
   */
  readonly default?: string;

  /**
   * GlobalName exports an output parameter to the global scope, making it available as '{{io.argoproj.workflow.v1alpha1.outputs.parameters.XXXX}} and in workflow.status.outputs.parameters
   *
   * @schema WorkflowTemplateSpecArgumentsParameters#globalName
   */
  readonly globalName?: string;

  /**
   * Name is the parameter name
   *
   * @schema WorkflowTemplateSpecArgumentsParameters#name
   */
  readonly name: string;

  /**
   * @schema WorkflowTemplateSpecArgumentsParameters#value
   */
  readonly value?: string;

  /**
   * ValueFrom describes a location in which to obtain the value to a parameter
   *
   * @schema WorkflowTemplateSpecArgumentsParameters#valueFrom
   */
  readonly valueFrom?: WorkflowTemplateSpecArgumentsParametersValueFrom;

}

/**
 * PodDNSConfigOption defines DNS resolver options of a pod.
 *
 * @schema WorkflowTemplateSpecDnsConfigOptions
 */
export interface WorkflowTemplateSpecDnsConfigOptions {
  /**
   * Required.
   *
   * @schema WorkflowTemplateSpecDnsConfigOptions#name
   */
  readonly name?: string;

  /**
   * @schema WorkflowTemplateSpecDnsConfigOptions#value
   */
  readonly value?: string;

}

/**
 * Prometheus is a prometheus metric to be emitted
 *
 * @schema WorkflowTemplateSpecMetricsPrometheus
 */
export interface WorkflowTemplateSpecMetricsPrometheus {
  /**
   * Counter is a Counter prometheus metric
   *
   * @schema WorkflowTemplateSpecMetricsPrometheus#counter
   */
  readonly counter?: WorkflowTemplateSpecMetricsPrometheusCounter;

  /**
   * Gauge is a Gauge prometheus metric
   *
   * @schema WorkflowTemplateSpecMetricsPrometheus#gauge
   */
  readonly gauge?: WorkflowTemplateSpecMetricsPrometheusGauge;

  /**
   * Help is a string that describes the metric
   *
   * @schema WorkflowTemplateSpecMetricsPrometheus#help
   */
  readonly help: string;

  /**
   * Histogram is a Histogram prometheus metric
   *
   * @schema WorkflowTemplateSpecMetricsPrometheus#histogram
   */
  readonly histogram?: WorkflowTemplateSpecMetricsPrometheusHistogram;

  /**
   * Labels is a list of metric labels
   *
   * @schema WorkflowTemplateSpecMetricsPrometheus#labels
   */
  readonly labels?: WorkflowTemplateSpecMetricsPrometheusLabels[];

  /**
   * Name is the name of the metric
   *
   * @schema WorkflowTemplateSpecMetricsPrometheus#name
   */
  readonly name: string;

  /**
   * When is a conditional statement that decides when to emit the metric
   *
   * @schema WorkflowTemplateSpecMetricsPrometheus#when
   */
  readonly when?: string;

}

/**
 * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
 *
 * @schema WorkflowTemplateSpecPodDisruptionBudgetSelector
 */
export interface WorkflowTemplateSpecPodDisruptionBudgetSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema WorkflowTemplateSpecPodDisruptionBudgetSelector#matchExpressions
   */
  readonly matchExpressions?: WorkflowTemplateSpecPodDisruptionBudgetSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema WorkflowTemplateSpecPodDisruptionBudgetSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * SELinuxOptions are the labels to be applied to the container
 *
 * @schema WorkflowTemplateSpecSecurityContextSeLinuxOptions
 */
export interface WorkflowTemplateSpecSecurityContextSeLinuxOptions {
  /**
   * Level is SELinux level label that applies to the container.
   *
   * @schema WorkflowTemplateSpecSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * Role is a SELinux role label that applies to the container.
   *
   * @schema WorkflowTemplateSpecSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * Type is a SELinux type label that applies to the container.
   *
   * @schema WorkflowTemplateSpecSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * User is a SELinux user label that applies to the container.
   *
   * @schema WorkflowTemplateSpecSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * Sysctl defines a kernel parameter to be set
 *
 * @schema WorkflowTemplateSpecSecurityContextSysctls
 */
export interface WorkflowTemplateSpecSecurityContextSysctls {
  /**
   * Name of a property to set
   *
   * @schema WorkflowTemplateSpecSecurityContextSysctls#name
   */
  readonly name: string;

  /**
   * Value of a property to set
   *
   * @schema WorkflowTemplateSpecSecurityContextSysctls#value
   */
  readonly value: string;

}

/**
 * WindowsSecurityContextOptions contain Windows-specific options and credentials.
 *
 * @schema WorkflowTemplateSpecSecurityContextWindowsOptions
 */
export interface WorkflowTemplateSpecSecurityContextWindowsOptions {
  /**
   * GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
   *
   * @schema WorkflowTemplateSpecSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * GMSACredentialSpecName is the name of the GMSA credential spec to use. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
   *
   * @schema WorkflowTemplateSpecSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

}

/**
 * Affinity is a group of affinity scheduling rules.
 *
 * @schema WorkflowTemplateSpecTemplatesAffinity
 */
export interface WorkflowTemplateSpecTemplatesAffinity {
  /**
   * Node affinity is a group of node affinity scheduling rules.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinity#nodeAffinity
   */
  readonly nodeAffinity?: WorkflowTemplateSpecTemplatesAffinityNodeAffinity;

  /**
   * Pod affinity is a group of inter pod affinity scheduling rules.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinity#podAffinity
   */
  readonly podAffinity?: WorkflowTemplateSpecTemplatesAffinityPodAffinity;

  /**
   * Pod anti affinity is a group of inter pod anti affinity scheduling rules.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinity#podAntiAffinity
   */
  readonly podAntiAffinity?: WorkflowTemplateSpecTemplatesAffinityPodAntiAffinity;

}

/**
 * ArtifactLocation describes a location for a single or multiple artifacts. It is used as single artifact in the context of inputs/outputs (e.g. outputs.artifacts.artname). It is also used to describe the location of multiple artifacts such as the archive location of a single workflow step, which the executor will use as a default location to store its files.
 *
 * @schema WorkflowTemplateSpecTemplatesArchiveLocation
 */
export interface WorkflowTemplateSpecTemplatesArchiveLocation {
  /**
   * ArchiveLogs indicates if the container logs should be archived
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocation#archiveLogs
   */
  readonly archiveLogs?: boolean;

  /**
   * ArtifactoryArtifact is the location of an artifactory artifact
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocation#artifactory
   */
  readonly artifactory?: WorkflowTemplateSpecTemplatesArchiveLocationArtifactory;

  /**
   * GCSArtifact is the location of a GCS artifact
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocation#gcs
   */
  readonly gcs?: WorkflowTemplateSpecTemplatesArchiveLocationGcs;

  /**
   * GitArtifact is the location of an git artifact
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocation#git
   */
  readonly git?: WorkflowTemplateSpecTemplatesArchiveLocationGit;

  /**
   * HDFSArtifact is the location of an HDFS artifact
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocation#hdfs
   */
  readonly hdfs?: WorkflowTemplateSpecTemplatesArchiveLocationHdfs;

  /**
   * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocation#http
   */
  readonly http?: WorkflowTemplateSpecTemplatesArchiveLocationHttp;

  /**
   * OSSArtifact is the location of an Alibaba Cloud OSS artifact
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocation#oss
   */
  readonly oss?: WorkflowTemplateSpecTemplatesArchiveLocationOss;

  /**
   * RawArtifact allows raw string content to be placed as an artifact in a container
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocation#raw
   */
  readonly raw?: WorkflowTemplateSpecTemplatesArchiveLocationRaw;

  /**
   * S3Artifact is the location of an S3 artifact
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocation#s3
   */
  readonly s3?: WorkflowTemplateSpecTemplatesArchiveLocationS3;

}

/**
 * Arguments to a template
 *
 * @schema WorkflowTemplateSpecTemplatesArguments
 */
export interface WorkflowTemplateSpecTemplatesArguments {
  /**
   * Artifacts is the list of artifacts to pass to the template or workflow
   *
   * @schema WorkflowTemplateSpecTemplatesArguments#artifacts
   */
  readonly artifacts?: WorkflowTemplateSpecTemplatesArgumentsArtifacts[];

  /**
   * Parameters is the list of parameters to pass to the template or workflow
   *
   * @schema WorkflowTemplateSpecTemplatesArguments#parameters
   */
  readonly parameters?: WorkflowTemplateSpecTemplatesArgumentsParameters[];

}

/**
 * A single application container that you want to run within a pod.
 *
 * @schema WorkflowTemplateSpecTemplatesContainer
 */
export interface WorkflowTemplateSpecTemplatesContainer {
  /**
   * Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
   *
   * @schema WorkflowTemplateSpecTemplatesContainer#args
   */
  readonly args?: string[];

  /**
   * Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
   *
   * @schema WorkflowTemplateSpecTemplatesContainer#command
   */
  readonly command?: string[];

  /**
   * List of environment variables to set in the container. Cannot be updated.
   *
   * @schema WorkflowTemplateSpecTemplatesContainer#env
   */
  readonly env?: WorkflowTemplateSpecTemplatesContainerEnv[];

  /**
   * List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
   *
   * @schema WorkflowTemplateSpecTemplatesContainer#envFrom
   */
  readonly envFrom?: WorkflowTemplateSpecTemplatesContainerEnvFrom[];

  /**
   * Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.
   *
   * @schema WorkflowTemplateSpecTemplatesContainer#image
   */
  readonly image?: string;

  /**
   * Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
   *
   * @default Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
   * @schema WorkflowTemplateSpecTemplatesContainer#imagePullPolicy
   */
  readonly imagePullPolicy?: string;

  /**
   * Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.
   *
   * @schema WorkflowTemplateSpecTemplatesContainer#lifecycle
   */
  readonly lifecycle?: WorkflowTemplateSpecTemplatesContainerLifecycle;

  /**
   * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
   *
   * @schema WorkflowTemplateSpecTemplatesContainer#livenessProbe
   */
  readonly livenessProbe?: WorkflowTemplateSpecTemplatesContainerLivenessProbe;

  /**
   * Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
   *
   * @schema WorkflowTemplateSpecTemplatesContainer#name
   */
  readonly name?: string;

  /**
   * List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Cannot be updated.
   *
   * @schema WorkflowTemplateSpecTemplatesContainer#ports
   */
  readonly ports?: WorkflowTemplateSpecTemplatesContainerPorts[];

  /**
   * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
   *
   * @schema WorkflowTemplateSpecTemplatesContainer#readinessProbe
   */
  readonly readinessProbe?: WorkflowTemplateSpecTemplatesContainerReadinessProbe;

  /**
   * ResourceRequirements describes the compute resource requirements.
   *
   * @schema WorkflowTemplateSpecTemplatesContainer#resources
   */
  readonly resources?: WorkflowTemplateSpecTemplatesContainerResources;

  /**
   * SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.
   *
   * @schema WorkflowTemplateSpecTemplatesContainer#securityContext
   */
  readonly securityContext?: WorkflowTemplateSpecTemplatesContainerSecurityContext;

  /**
   * Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
   *
   * @default false.
   * @schema WorkflowTemplateSpecTemplatesContainer#stdin
   */
  readonly stdin?: boolean;

  /**
   * Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
   *
   * @default false
   * @schema WorkflowTemplateSpecTemplatesContainer#stdinOnce
   */
  readonly stdinOnce?: boolean;

  /**
   * Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.
   *
   * @default dev/termination-log. Cannot be updated.
   * @schema WorkflowTemplateSpecTemplatesContainer#terminationMessagePath
   */
  readonly terminationMessagePath?: string;

  /**
   * Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
   *
   * @default File. Cannot be updated.
   * @schema WorkflowTemplateSpecTemplatesContainer#terminationMessagePolicy
   */
  readonly terminationMessagePolicy?: string;

  /**
   * Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
   *
   * @default false.
   * @schema WorkflowTemplateSpecTemplatesContainer#tty
   */
  readonly tty?: boolean;

  /**
   * volumeDevices is the list of block devices to be used by the container. This is a beta feature.
   *
   * @schema WorkflowTemplateSpecTemplatesContainer#volumeDevices
   */
  readonly volumeDevices?: WorkflowTemplateSpecTemplatesContainerVolumeDevices[];

  /**
   * Pod volumes to mount into the container's filesystem. Cannot be updated.
   *
   * @schema WorkflowTemplateSpecTemplatesContainer#volumeMounts
   */
  readonly volumeMounts?: WorkflowTemplateSpecTemplatesContainerVolumeMounts[];

  /**
   * Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
   *
   * @schema WorkflowTemplateSpecTemplatesContainer#workingDir
   */
  readonly workingDir?: string;

}

/**
 * DAGTemplate is a template subtype for directed acyclic graph templates
 *
 * @schema WorkflowTemplateSpecTemplatesDag
 */
export interface WorkflowTemplateSpecTemplatesDag {
  /**
   * This flag is for DAG logic. The DAG logic has a built-in "fail fast" feature to stop scheduling new steps, as soon as it detects that one of the DAG nodes is failed. Then it waits until all DAG nodes are completed before failing the DAG itself. The FailFast flag default is true,  if set to false, it will allow a DAG to run all branches of the DAG to completion (either success or failure), regardless of the failed outcomes of branches in the DAG. More info and example about this feature at https://github.com/argoproj/argo/issues/1442
   *
   * @schema WorkflowTemplateSpecTemplatesDag#failFast
   */
  readonly failFast?: boolean;

  /**
   * Target are one or more names of targets to execute in a DAG
   *
   * @schema WorkflowTemplateSpecTemplatesDag#target
   */
  readonly target?: string;

  /**
   * Tasks are a list of DAG tasks
   *
   * @schema WorkflowTemplateSpecTemplatesDag#tasks
   */
  readonly tasks: WorkflowTemplateSpecTemplatesDagTasks[];

}

/**
 * ExecutorConfig holds configurations of an executor container.
 *
 * @schema WorkflowTemplateSpecTemplatesExecutor
 */
export interface WorkflowTemplateSpecTemplatesExecutor {
  /**
   * ServiceAccountName specifies the service account name of the executor container.
   *
   * @schema WorkflowTemplateSpecTemplatesExecutor#serviceAccountName
   */
  readonly serviceAccountName?: string;

}

/**
 * HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the pod's hosts file.
 *
 * @schema WorkflowTemplateSpecTemplatesHostAliases
 */
export interface WorkflowTemplateSpecTemplatesHostAliases {
  /**
   * Hostnames for the above IP address.
   *
   * @schema WorkflowTemplateSpecTemplatesHostAliases#hostnames
   */
  readonly hostnames?: string[];

  /**
   * IP address of the host file entry.
   *
   * @schema WorkflowTemplateSpecTemplatesHostAliases#ip
   */
  readonly ip?: string;

}

/**
 * UserContainer is a container specified by a user.
 *
 * @schema WorkflowTemplateSpecTemplatesInitContainers
 */
export interface WorkflowTemplateSpecTemplatesInitContainers {
  /**
   * Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainers#args
   */
  readonly args?: string[];

  /**
   * Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainers#command
   */
  readonly command?: string[];

  /**
   * List of environment variables to set in the container. Cannot be updated.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainers#env
   */
  readonly env?: WorkflowTemplateSpecTemplatesInitContainersEnv[];

  /**
   * List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainers#envFrom
   */
  readonly envFrom?: WorkflowTemplateSpecTemplatesInitContainersEnvFrom[];

  /**
   * Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainers#image
   */
  readonly image?: string;

  /**
   * Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
   *
   * @default Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
   * @schema WorkflowTemplateSpecTemplatesInitContainers#imagePullPolicy
   */
  readonly imagePullPolicy?: string;

  /**
   * Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainers#lifecycle
   */
  readonly lifecycle?: WorkflowTemplateSpecTemplatesInitContainersLifecycle;

  /**
   * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainers#livenessProbe
   */
  readonly livenessProbe?: WorkflowTemplateSpecTemplatesInitContainersLivenessProbe;

  /**
   * MirrorVolumeMounts will mount the same volumes specified in the main container to the container (including artifacts), at the same mountPaths. This enables dind daemon to partially see the same filesystem as the main container in order to use features such as docker volume binding
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainers#mirrorVolumeMounts
   */
  readonly mirrorVolumeMounts?: boolean;

  /**
   * Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainers#name
   */
  readonly name: string;

  /**
   * List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Cannot be updated.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainers#ports
   */
  readonly ports?: WorkflowTemplateSpecTemplatesInitContainersPorts[];

  /**
   * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainers#readinessProbe
   */
  readonly readinessProbe?: WorkflowTemplateSpecTemplatesInitContainersReadinessProbe;

  /**
   * ResourceRequirements describes the compute resource requirements.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainers#resources
   */
  readonly resources?: WorkflowTemplateSpecTemplatesInitContainersResources;

  /**
   * SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainers#securityContext
   */
  readonly securityContext?: WorkflowTemplateSpecTemplatesInitContainersSecurityContext;

  /**
   * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainers#startupProbe
   */
  readonly startupProbe?: WorkflowTemplateSpecTemplatesInitContainersStartupProbe;

  /**
   * Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
   *
   * @default false.
   * @schema WorkflowTemplateSpecTemplatesInitContainers#stdin
   */
  readonly stdin?: boolean;

  /**
   * Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
   *
   * @default false
   * @schema WorkflowTemplateSpecTemplatesInitContainers#stdinOnce
   */
  readonly stdinOnce?: boolean;

  /**
   * Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.
   *
   * @default dev/termination-log. Cannot be updated.
   * @schema WorkflowTemplateSpecTemplatesInitContainers#terminationMessagePath
   */
  readonly terminationMessagePath?: string;

  /**
   * Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
   *
   * @default File. Cannot be updated.
   * @schema WorkflowTemplateSpecTemplatesInitContainers#terminationMessagePolicy
   */
  readonly terminationMessagePolicy?: string;

  /**
   * Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
   *
   * @default false.
   * @schema WorkflowTemplateSpecTemplatesInitContainers#tty
   */
  readonly tty?: boolean;

  /**
   * volumeDevices is the list of block devices to be used by the container. This is a beta feature.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainers#volumeDevices
   */
  readonly volumeDevices?: WorkflowTemplateSpecTemplatesInitContainersVolumeDevices[];

  /**
   * Pod volumes to mount into the container's filesystem. Cannot be updated.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainers#volumeMounts
   */
  readonly volumeMounts?: WorkflowTemplateSpecTemplatesInitContainersVolumeMounts[];

  /**
   * Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainers#workingDir
   */
  readonly workingDir?: string;

}

/**
 * Inputs are the mechanism for passing parameters, artifacts, volumes from one template to another
 *
 * @schema WorkflowTemplateSpecTemplatesInputs
 */
export interface WorkflowTemplateSpecTemplatesInputs {
  /**
   * Artifact are a list of artifacts passed as inputs
   *
   * @schema WorkflowTemplateSpecTemplatesInputs#artifacts
   */
  readonly artifacts?: WorkflowTemplateSpecTemplatesInputsArtifacts[];

  /**
   * Parameters are a list of parameters passed as inputs
   *
   * @schema WorkflowTemplateSpecTemplatesInputs#parameters
   */
  readonly parameters?: WorkflowTemplateSpecTemplatesInputsParameters[];

}

/**
 * Pod metdata
 *
 * @schema WorkflowTemplateSpecTemplatesMetadata
 */
export interface WorkflowTemplateSpecTemplatesMetadata {
  /**
   * @schema WorkflowTemplateSpecTemplatesMetadata#annotations
   */
  readonly annotations?: { [key: string]: string };

  /**
   * @schema WorkflowTemplateSpecTemplatesMetadata#labels
   */
  readonly labels?: { [key: string]: string };

}

/**
 * Metrics are a list of metrics emitted from a Workflow/Template
 *
 * @schema WorkflowTemplateSpecTemplatesMetrics
 */
export interface WorkflowTemplateSpecTemplatesMetrics {
  /**
   * Prometheus is a list of prometheus metrics to be emitted
   *
   * @schema WorkflowTemplateSpecTemplatesMetrics#prometheus
   */
  readonly prometheus: WorkflowTemplateSpecTemplatesMetricsPrometheus[];

}

/**
 * Outputs hold parameters, artifacts, and results from a step
 *
 * @schema WorkflowTemplateSpecTemplatesOutputs
 */
export interface WorkflowTemplateSpecTemplatesOutputs {
  /**
   * Artifacts holds the list of output artifacts produced by a step
   *
   * @schema WorkflowTemplateSpecTemplatesOutputs#artifacts
   */
  readonly artifacts?: WorkflowTemplateSpecTemplatesOutputsArtifacts[];

  /**
   * ExitCode holds the exit code of a script template
   *
   * @schema WorkflowTemplateSpecTemplatesOutputs#exitCode
   */
  readonly exitCode?: string;

  /**
   * Parameters holds the list of output parameters produced by a step
   *
   * @schema WorkflowTemplateSpecTemplatesOutputs#parameters
   */
  readonly parameters?: WorkflowTemplateSpecTemplatesOutputsParameters[];

  /**
   * Result holds the result (stdout) of a script template
   *
   * @schema WorkflowTemplateSpecTemplatesOutputs#result
   */
  readonly result?: string;

}

/**
 * ResourceTemplate is a template subtype to manipulate kubernetes resources
 *
 * @schema WorkflowTemplateSpecTemplatesResource
 */
export interface WorkflowTemplateSpecTemplatesResource {
  /**
   * Action is the action to perform to the resource. Must be one of: get, create, apply, delete, replace, patch
   *
   * @schema WorkflowTemplateSpecTemplatesResource#action
   */
  readonly action: string;

  /**
   * FailureCondition is a label selector expression which describes the conditions of the k8s resource in which the step was considered failed
   *
   * @schema WorkflowTemplateSpecTemplatesResource#failureCondition
   */
  readonly failureCondition?: string;

  /**
   * Flags is a set of additional options passed to kubectl before submitting a resource I.e. to disable resource validation: flags: [
	"--validate=false"  # disable resource validation
]
   *
   * @schema WorkflowTemplateSpecTemplatesResource#flags
   */
  readonly flags?: string[];

  /**
   * Manifest contains the kubernetes manifest
   *
   * @schema WorkflowTemplateSpecTemplatesResource#manifest
   */
  readonly manifest?: string;

  /**
   * MergeStrategy is the strategy used to merge a patch. It defaults to "strategic" Must be one of: strategic, merge, json
   *
   * @schema WorkflowTemplateSpecTemplatesResource#mergeStrategy
   */
  readonly mergeStrategy?: string;

  /**
   * SetOwnerReference sets the reference to the workflow on the OwnerReference of generated resource.
   *
   * @schema WorkflowTemplateSpecTemplatesResource#setOwnerReference
   */
  readonly setOwnerReference?: boolean;

  /**
   * SuccessCondition is a label selector expression which describes the conditions of the k8s resource in which it is acceptable to proceed to the following step
   *
   * @schema WorkflowTemplateSpecTemplatesResource#successCondition
   */
  readonly successCondition?: string;

}

/**
 * RetryStrategy provides controls on how to retry a workflow step
 *
 * @schema WorkflowTemplateSpecTemplatesRetryStrategy
 */
export interface WorkflowTemplateSpecTemplatesRetryStrategy {
  /**
   * Backoff is a backoff strategy to use within retryStrategy
   *
   * @schema WorkflowTemplateSpecTemplatesRetryStrategy#backoff
   */
  readonly backoff?: WorkflowTemplateSpecTemplatesRetryStrategyBackoff;

  /**
   * Limit is the maximum number of attempts when retrying a container
   *
   * @schema WorkflowTemplateSpecTemplatesRetryStrategy#limit
   */
  readonly limit?: number;

  /**
   * RetryPolicy is a policy of NodePhase statuses that will be retried
   *
   * @schema WorkflowTemplateSpecTemplatesRetryStrategy#retryPolicy
   */
  readonly retryPolicy?: string;

}

/**
 * ScriptTemplate is a template subtype to enable scripting through code steps
 *
 * @schema WorkflowTemplateSpecTemplatesScript
 */
export interface WorkflowTemplateSpecTemplatesScript {
  /**
   * Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
   *
   * @schema WorkflowTemplateSpecTemplatesScript#args
   */
  readonly args?: string[];

  /**
   * Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
   *
   * @schema WorkflowTemplateSpecTemplatesScript#command
   */
  readonly command?: string[];

  /**
   * List of environment variables to set in the container. Cannot be updated.
   *
   * @schema WorkflowTemplateSpecTemplatesScript#env
   */
  readonly env?: WorkflowTemplateSpecTemplatesScriptEnv[];

  /**
   * List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
   *
   * @schema WorkflowTemplateSpecTemplatesScript#envFrom
   */
  readonly envFrom?: WorkflowTemplateSpecTemplatesScriptEnvFrom[];

  /**
   * Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.
   *
   * @schema WorkflowTemplateSpecTemplatesScript#image
   */
  readonly image?: string;

  /**
   * Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
   *
   * @default Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
   * @schema WorkflowTemplateSpecTemplatesScript#imagePullPolicy
   */
  readonly imagePullPolicy?: string;

  /**
   * Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.
   *
   * @schema WorkflowTemplateSpecTemplatesScript#lifecycle
   */
  readonly lifecycle?: WorkflowTemplateSpecTemplatesScriptLifecycle;

  /**
   * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
   *
   * @schema WorkflowTemplateSpecTemplatesScript#livenessProbe
   */
  readonly livenessProbe?: WorkflowTemplateSpecTemplatesScriptLivenessProbe;

  /**
   * Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
   *
   * @schema WorkflowTemplateSpecTemplatesScript#name
   */
  readonly name?: string;

  /**
   * List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Cannot be updated.
   *
   * @schema WorkflowTemplateSpecTemplatesScript#ports
   */
  readonly ports?: WorkflowTemplateSpecTemplatesScriptPorts[];

  /**
   * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
   *
   * @schema WorkflowTemplateSpecTemplatesScript#readinessProbe
   */
  readonly readinessProbe?: WorkflowTemplateSpecTemplatesScriptReadinessProbe;

  /**
   * ResourceRequirements describes the compute resource requirements.
   *
   * @schema WorkflowTemplateSpecTemplatesScript#resources
   */
  readonly resources?: WorkflowTemplateSpecTemplatesScriptResources;

  /**
   * SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.
   *
   * @schema WorkflowTemplateSpecTemplatesScript#securityContext
   */
  readonly securityContext?: WorkflowTemplateSpecTemplatesScriptSecurityContext;

  /**
   * Source contains the source code of the script to execute
   *
   * @schema WorkflowTemplateSpecTemplatesScript#source
   */
  readonly source: string;

  /**
   * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
   *
   * @schema WorkflowTemplateSpecTemplatesScript#startupProbe
   */
  readonly startupProbe?: WorkflowTemplateSpecTemplatesScriptStartupProbe;

  /**
   * Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
   *
   * @default false.
   * @schema WorkflowTemplateSpecTemplatesScript#stdin
   */
  readonly stdin?: boolean;

  /**
   * Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
   *
   * @default false
   * @schema WorkflowTemplateSpecTemplatesScript#stdinOnce
   */
  readonly stdinOnce?: boolean;

  /**
   * Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.
   *
   * @default dev/termination-log. Cannot be updated.
   * @schema WorkflowTemplateSpecTemplatesScript#terminationMessagePath
   */
  readonly terminationMessagePath?: string;

  /**
   * Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
   *
   * @default File. Cannot be updated.
   * @schema WorkflowTemplateSpecTemplatesScript#terminationMessagePolicy
   */
  readonly terminationMessagePolicy?: string;

  /**
   * Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
   *
   * @default false.
   * @schema WorkflowTemplateSpecTemplatesScript#tty
   */
  readonly tty?: boolean;

  /**
   * volumeDevices is the list of block devices to be used by the container. This is a beta feature.
   *
   * @schema WorkflowTemplateSpecTemplatesScript#volumeDevices
   */
  readonly volumeDevices?: WorkflowTemplateSpecTemplatesScriptVolumeDevices[];

  /**
   * Pod volumes to mount into the container's filesystem. Cannot be updated.
   *
   * @schema WorkflowTemplateSpecTemplatesScript#volumeMounts
   */
  readonly volumeMounts?: WorkflowTemplateSpecTemplatesScriptVolumeMounts[];

  /**
   * Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
   *
   * @schema WorkflowTemplateSpecTemplatesScript#workingDir
   */
  readonly workingDir?: string;

}

/**
 * PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext.
 *
 * @schema WorkflowTemplateSpecTemplatesSecurityContext
 */
export interface WorkflowTemplateSpecTemplatesSecurityContext {
  /**
   * A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:

1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----

If unset, the Kubelet will not modify the ownership and permissions of any volume.
   *
   * @schema WorkflowTemplateSpecTemplatesSecurityContext#fsGroup
   */
  readonly fsGroup?: number;

  /**
   * The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
   *
   * @schema WorkflowTemplateSpecTemplatesSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema WorkflowTemplateSpecTemplatesSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
   *
   * @default user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
   * @schema WorkflowTemplateSpecTemplatesSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * SELinuxOptions are the labels to be applied to the container
   *
   * @schema WorkflowTemplateSpecTemplatesSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: WorkflowTemplateSpecTemplatesSecurityContextSeLinuxOptions;

  /**
   * A list of groups applied to the first process run in each container, in addition to the container's primary GID.  If unspecified, no groups will be added to any container.
   *
   * @schema WorkflowTemplateSpecTemplatesSecurityContext#supplementalGroups
   */
  readonly supplementalGroups?: number[];

  /**
   * Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch.
   *
   * @schema WorkflowTemplateSpecTemplatesSecurityContext#sysctls
   */
  readonly sysctls?: WorkflowTemplateSpecTemplatesSecurityContextSysctls[];

  /**
   * WindowsSecurityContextOptions contain Windows-specific options and credentials.
   *
   * @schema WorkflowTemplateSpecTemplatesSecurityContext#windowsOptions
   */
  readonly windowsOptions?: WorkflowTemplateSpecTemplatesSecurityContextWindowsOptions;

}

/**
 * UserContainer is a container specified by a user.
 *
 * @schema WorkflowTemplateSpecTemplatesSidecars
 */
export interface WorkflowTemplateSpecTemplatesSidecars {
  /**
   * Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
   *
   * @schema WorkflowTemplateSpecTemplatesSidecars#args
   */
  readonly args?: string[];

  /**
   * Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
   *
   * @schema WorkflowTemplateSpecTemplatesSidecars#command
   */
  readonly command?: string[];

  /**
   * List of environment variables to set in the container. Cannot be updated.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecars#env
   */
  readonly env?: WorkflowTemplateSpecTemplatesSidecarsEnv[];

  /**
   * List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecars#envFrom
   */
  readonly envFrom?: WorkflowTemplateSpecTemplatesSidecarsEnvFrom[];

  /**
   * Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecars#image
   */
  readonly image?: string;

  /**
   * Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
   *
   * @default Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
   * @schema WorkflowTemplateSpecTemplatesSidecars#imagePullPolicy
   */
  readonly imagePullPolicy?: string;

  /**
   * Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecars#lifecycle
   */
  readonly lifecycle?: WorkflowTemplateSpecTemplatesSidecarsLifecycle;

  /**
   * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecars#livenessProbe
   */
  readonly livenessProbe?: WorkflowTemplateSpecTemplatesSidecarsLivenessProbe;

  /**
   * MirrorVolumeMounts will mount the same volumes specified in the main container to the container (including artifacts), at the same mountPaths. This enables dind daemon to partially see the same filesystem as the main container in order to use features such as docker volume binding
   *
   * @schema WorkflowTemplateSpecTemplatesSidecars#mirrorVolumeMounts
   */
  readonly mirrorVolumeMounts?: boolean;

  /**
   * Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecars#name
   */
  readonly name: string;

  /**
   * List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Cannot be updated.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecars#ports
   */
  readonly ports?: WorkflowTemplateSpecTemplatesSidecarsPorts[];

  /**
   * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecars#readinessProbe
   */
  readonly readinessProbe?: WorkflowTemplateSpecTemplatesSidecarsReadinessProbe;

  /**
   * ResourceRequirements describes the compute resource requirements.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecars#resources
   */
  readonly resources?: WorkflowTemplateSpecTemplatesSidecarsResources;

  /**
   * SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecars#securityContext
   */
  readonly securityContext?: WorkflowTemplateSpecTemplatesSidecarsSecurityContext;

  /**
   * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecars#startupProbe
   */
  readonly startupProbe?: WorkflowTemplateSpecTemplatesSidecarsStartupProbe;

  /**
   * Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
   *
   * @default false.
   * @schema WorkflowTemplateSpecTemplatesSidecars#stdin
   */
  readonly stdin?: boolean;

  /**
   * Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
   *
   * @default false
   * @schema WorkflowTemplateSpecTemplatesSidecars#stdinOnce
   */
  readonly stdinOnce?: boolean;

  /**
   * Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.
   *
   * @default dev/termination-log. Cannot be updated.
   * @schema WorkflowTemplateSpecTemplatesSidecars#terminationMessagePath
   */
  readonly terminationMessagePath?: string;

  /**
   * Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
   *
   * @default File. Cannot be updated.
   * @schema WorkflowTemplateSpecTemplatesSidecars#terminationMessagePolicy
   */
  readonly terminationMessagePolicy?: string;

  /**
   * Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
   *
   * @default false.
   * @schema WorkflowTemplateSpecTemplatesSidecars#tty
   */
  readonly tty?: boolean;

  /**
   * volumeDevices is the list of block devices to be used by the container. This is a beta feature.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecars#volumeDevices
   */
  readonly volumeDevices?: WorkflowTemplateSpecTemplatesSidecarsVolumeDevices[];

  /**
   * Pod volumes to mount into the container's filesystem. Cannot be updated.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecars#volumeMounts
   */
  readonly volumeMounts?: WorkflowTemplateSpecTemplatesSidecarsVolumeMounts[];

  /**
   * Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecars#workingDir
   */
  readonly workingDir?: string;

}

/**
 * WorkflowStep is a reference to a template to execute in a series of step
 *
 * @schema WorkflowTemplateSpecTemplatesSteps
 */
export interface WorkflowTemplateSpecTemplatesSteps {
  /**
   * Arguments to a template
   *
   * @schema WorkflowTemplateSpecTemplatesSteps#arguments
   */
  readonly arguments?: WorkflowTemplateSpecTemplatesStepsArguments;

  /**
   * ContinueOn defines if a workflow should continue even if a task or step fails/errors. It can be specified if the workflow should continue when the pod errors, fails or both.
   *
   * @schema WorkflowTemplateSpecTemplatesSteps#continueOn
   */
  readonly continueOn?: WorkflowTemplateSpecTemplatesStepsContinueOn;

  /**
   * Name of the step
   *
   * @schema WorkflowTemplateSpecTemplatesSteps#name
   */
  readonly name?: string;

  /**
   * OnExit is a template reference which is invoked at the end of the template, irrespective of the success, failure, or error of the primary template.
   *
   * @schema WorkflowTemplateSpecTemplatesSteps#onExit
   */
  readonly onExit?: string;

  /**
   * Template is the name of the template to execute as the step
   *
   * @schema WorkflowTemplateSpecTemplatesSteps#template
   */
  readonly template?: string;

  /**
   * TemplateRef is a reference of template resource.
   *
   * @schema WorkflowTemplateSpecTemplatesSteps#templateRef
   */
  readonly templateRef?: WorkflowTemplateSpecTemplatesStepsTemplateRef;

  /**
   * When is an expression in which the step should conditionally execute
   *
   * @schema WorkflowTemplateSpecTemplatesSteps#when
   */
  readonly when?: string;

  /**
   * WithItems expands a step into multiple parallel steps from the items in the list
   *
   * @schema WorkflowTemplateSpecTemplatesSteps#withItems
   */
  readonly withItems?: string[];

  /**
   * WithParam expands a step into multiple parallel steps from the value in the parameter, which is expected to be a JSON list.
   *
   * @schema WorkflowTemplateSpecTemplatesSteps#withParam
   */
  readonly withParam?: string;

  /**
   * Sequence expands a workflow step into numeric range
   *
   * @schema WorkflowTemplateSpecTemplatesSteps#withSequence
   */
  readonly withSequence?: WorkflowTemplateSpecTemplatesStepsWithSequence;

}

/**
 * SuspendTemplate is a template subtype to suspend a workflow at a predetermined point in time
 *
 * @schema WorkflowTemplateSpecTemplatesSuspend
 */
export interface WorkflowTemplateSpecTemplatesSuspend {
  /**
   * Duration is the seconds to wait before automatically resuming a template
   *
   * @schema WorkflowTemplateSpecTemplatesSuspend#duration
   */
  readonly duration?: string;

}

/**
 * TemplateRef is a reference of template resource.
 *
 * @schema WorkflowTemplateSpecTemplatesTemplateRef
 */
export interface WorkflowTemplateSpecTemplatesTemplateRef {
  /**
   * ClusterScope indicates the referred template is cluster scoped (i.e. a ClusterWorkflowTemplate).
   *
   * @schema WorkflowTemplateSpecTemplatesTemplateRef#clusterScope
   */
  readonly clusterScope?: boolean;

  /**
   * Name is the resource name of the template.
   *
   * @schema WorkflowTemplateSpecTemplatesTemplateRef#name
   */
  readonly name?: string;

  /**
   * RuntimeResolution skips validation at creation time. By enabling this option, you can create the referred workflow template before the actual runtime.
   *
   * @schema WorkflowTemplateSpecTemplatesTemplateRef#runtimeResolution
   */
  readonly runtimeResolution?: boolean;

  /**
   * Template is the name of referred template in the resource.
   *
   * @schema WorkflowTemplateSpecTemplatesTemplateRef#template
   */
  readonly template?: string;

}

/**
 * The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
 *
 * @schema WorkflowTemplateSpecTemplatesTolerations
 */
export interface WorkflowTemplateSpecTemplatesTolerations {
  /**
   * Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
   *
   * @schema WorkflowTemplateSpecTemplatesTolerations#effect
   */
  readonly effect?: string;

  /**
   * Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
   *
   * @schema WorkflowTemplateSpecTemplatesTolerations#key
   */
  readonly key?: string;

  /**
   * Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
   *
   * @default Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
   * @schema WorkflowTemplateSpecTemplatesTolerations#operator
   */
  readonly operator?: string;

  /**
   * TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
   *
   * @schema WorkflowTemplateSpecTemplatesTolerations#tolerationSeconds
   */
  readonly tolerationSeconds?: number;

  /**
   * Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
   *
   * @schema WorkflowTemplateSpecTemplatesTolerations#value
   */
  readonly value?: string;

}

/**
 * Volume represents a named volume in a pod that may be accessed by any container in the pod.
 *
 * @schema WorkflowTemplateSpecTemplatesVolumes
 */
export interface WorkflowTemplateSpecTemplatesVolumes {
  /**
   * Represents a Persistent Disk resource in AWS.

An AWS EBS disk must exist before mounting to a container. The disk must also be in the same AWS zone as the kubelet. An AWS EBS disk can only be mounted as read/write once. AWS EBS volumes support ownership management and SELinux relabeling.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumes#awsElasticBlockStore
   */
  readonly awsElasticBlockStore?: WorkflowTemplateSpecTemplatesVolumesAwsElasticBlockStore;

  /**
   * AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumes#azureDisk
   */
  readonly azureDisk?: WorkflowTemplateSpecTemplatesVolumesAzureDisk;

  /**
   * AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumes#azureFile
   */
  readonly azureFile?: WorkflowTemplateSpecTemplatesVolumesAzureFile;

  /**
   * Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumes#cephfs
   */
  readonly cephfs?: WorkflowTemplateSpecTemplatesVolumesCephfs;

  /**
   * Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumes#cinder
   */
  readonly cinder?: WorkflowTemplateSpecTemplatesVolumesCinder;

  /**
   * Adapts a ConfigMap into a volume.

The contents of the target ConfigMap's Data field will be presented in a volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. ConfigMap volumes support ownership management and SELinux relabeling.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumes#configMap
   */
  readonly configMap?: WorkflowTemplateSpecTemplatesVolumesConfigMap;

  /**
   * Represents a source location of a volume to mount, managed by an external CSI driver
   *
   * @schema WorkflowTemplateSpecTemplatesVolumes#csi
   */
  readonly csi?: WorkflowTemplateSpecTemplatesVolumesCsi;

  /**
   * DownwardAPIVolumeSource represents a volume containing downward API info. Downward API volumes support ownership management and SELinux relabeling.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumes#downwardAPI
   */
  readonly downwardAPI?: WorkflowTemplateSpecTemplatesVolumesDownwardApi;

  /**
   * Represents an empty directory for a pod. Empty directory volumes support ownership management and SELinux relabeling.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumes#emptyDir
   */
  readonly emptyDir?: WorkflowTemplateSpecTemplatesVolumesEmptyDir;

  /**
   * Represents a Fibre Channel volume. Fibre Channel volumes can only be mounted as read/write once. Fibre Channel volumes support ownership management and SELinux relabeling.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumes#fc
   */
  readonly fc?: WorkflowTemplateSpecTemplatesVolumesFc;

  /**
   * FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumes#flexVolume
   */
  readonly flexVolume?: WorkflowTemplateSpecTemplatesVolumesFlexVolume;

  /**
   * Represents a Flocker volume mounted by the Flocker agent. One and only one of datasetName and datasetUUID should be set. Flocker volumes do not support ownership management or SELinux relabeling.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumes#flocker
   */
  readonly flocker?: WorkflowTemplateSpecTemplatesVolumesFlocker;

  /**
   * Represents a Persistent Disk resource in Google Compute Engine.

A GCE PD must exist before mounting to a container. The disk must also be in the same GCE project and zone as the kubelet. A GCE PD can only be mounted as read/write once or read-only many times. GCE PDs support ownership management and SELinux relabeling.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumes#gcePersistentDisk
   */
  readonly gcePersistentDisk?: WorkflowTemplateSpecTemplatesVolumesGcePersistentDisk;

  /**
   * Represents a volume that is populated with the contents of a git repository. Git repo volumes do not support ownership management. Git repo volumes support SELinux relabeling.

DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumes#gitRepo
   */
  readonly gitRepo?: WorkflowTemplateSpecTemplatesVolumesGitRepo;

  /**
   * Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumes#glusterfs
   */
  readonly glusterfs?: WorkflowTemplateSpecTemplatesVolumesGlusterfs;

  /**
   * Represents a host path mapped into a pod. Host path volumes do not support ownership management or SELinux relabeling.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumes#hostPath
   */
  readonly hostPath?: WorkflowTemplateSpecTemplatesVolumesHostPath;

  /**
   * Represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumes#iscsi
   */
  readonly iscsi?: WorkflowTemplateSpecTemplatesVolumesIscsi;

  /**
   * Volume's name. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesVolumes#name
   */
  readonly name: string;

  /**
   * Represents an NFS mount that lasts the lifetime of a pod. NFS volumes do not support ownership management or SELinux relabeling.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumes#nfs
   */
  readonly nfs?: WorkflowTemplateSpecTemplatesVolumesNfs;

  /**
   * PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace. This volume finds the bound PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another type of volume that is owned by someone else (the system).
   *
   * @schema WorkflowTemplateSpecTemplatesVolumes#persistentVolumeClaim
   */
  readonly persistentVolumeClaim?: WorkflowTemplateSpecTemplatesVolumesPersistentVolumeClaim;

  /**
   * Represents a Photon Controller persistent disk resource.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumes#photonPersistentDisk
   */
  readonly photonPersistentDisk?: WorkflowTemplateSpecTemplatesVolumesPhotonPersistentDisk;

  /**
   * PortworxVolumeSource represents a Portworx volume resource.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumes#portworxVolume
   */
  readonly portworxVolume?: WorkflowTemplateSpecTemplatesVolumesPortworxVolume;

  /**
   * Represents a projected volume source
   *
   * @schema WorkflowTemplateSpecTemplatesVolumes#projected
   */
  readonly projected?: WorkflowTemplateSpecTemplatesVolumesProjected;

  /**
   * Represents a Quobyte mount that lasts the lifetime of a pod. Quobyte volumes do not support ownership management or SELinux relabeling.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumes#quobyte
   */
  readonly quobyte?: WorkflowTemplateSpecTemplatesVolumesQuobyte;

  /**
   * Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumes#rbd
   */
  readonly rbd?: WorkflowTemplateSpecTemplatesVolumesRbd;

  /**
   * ScaleIOVolumeSource represents a persistent ScaleIO volume
   *
   * @schema WorkflowTemplateSpecTemplatesVolumes#scaleIO
   */
  readonly scaleIO?: WorkflowTemplateSpecTemplatesVolumesScaleIo;

  /**
   * Adapts a Secret into a volume.

The contents of the target Secret's Data field will be presented in a volume as files using the keys in the Data field as the file names. Secret volumes support ownership management and SELinux relabeling.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumes#secret
   */
  readonly secret?: WorkflowTemplateSpecTemplatesVolumesSecret;

  /**
   * Represents a StorageOS persistent volume resource.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumes#storageos
   */
  readonly storageos?: WorkflowTemplateSpecTemplatesVolumesStorageos;

  /**
   * Represents a vSphere volume resource.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumes#vsphereVolume
   */
  readonly vsphereVolume?: WorkflowTemplateSpecTemplatesVolumesVsphereVolume;

}

/**
 * PersistentVolumeClaimSpec describes the common attributes of storage devices and allows a Source for provider-specific attributes
 *
 * @schema WorkflowTemplateSpecVolumeClaimTemplatesSpec
 */
export interface WorkflowTemplateSpecVolumeClaimTemplatesSpec {
  /**
   * AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
   *
   * @schema WorkflowTemplateSpecVolumeClaimTemplatesSpec#accessModes
   */
  readonly accessModes?: string[];

  /**
   * TypedLocalObjectReference contains enough information to let you locate the typed referenced object inside the same namespace.
   *
   * @schema WorkflowTemplateSpecVolumeClaimTemplatesSpec#dataSource
   */
  readonly dataSource?: WorkflowTemplateSpecVolumeClaimTemplatesSpecDataSource;

  /**
   * ResourceRequirements describes the compute resource requirements.
   *
   * @schema WorkflowTemplateSpecVolumeClaimTemplatesSpec#resources
   */
  readonly resources?: WorkflowTemplateSpecVolumeClaimTemplatesSpecResources;

  /**
   * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
   *
   * @schema WorkflowTemplateSpecVolumeClaimTemplatesSpec#selector
   */
  readonly selector?: WorkflowTemplateSpecVolumeClaimTemplatesSpecSelector;

  /**
   * Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
   *
   * @schema WorkflowTemplateSpecVolumeClaimTemplatesSpec#storageClassName
   */
  readonly storageClassName?: string;

  /**
   * volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is a beta feature.
   *
   * @schema WorkflowTemplateSpecVolumeClaimTemplatesSpec#volumeMode
   */
  readonly volumeMode?: string;

  /**
   * VolumeName is the binding reference to the PersistentVolume backing this claim.
   *
   * @schema WorkflowTemplateSpecVolumeClaimTemplatesSpec#volumeName
   */
  readonly volumeName?: string;

}

/**
 * PersistentVolumeClaimStatus is the current status of a persistent volume claim.
 *
 * @schema WorkflowTemplateSpecVolumeClaimTemplatesStatus
 */
export interface WorkflowTemplateSpecVolumeClaimTemplatesStatus {
  /**
   * AccessModes contains the actual access modes the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
   *
   * @schema WorkflowTemplateSpecVolumeClaimTemplatesStatus#accessModes
   */
  readonly accessModes?: string[];

  /**
   * Represents the actual resources of the underlying volume.
   *
   * @schema WorkflowTemplateSpecVolumeClaimTemplatesStatus#capacity
   */
  readonly capacity?: { [key: string]: string };

  /**
   * Current Condition of persistent volume claim. If underlying persistent volume is being resized then the Condition will be set to 'ResizeStarted'.
   *
   * @schema WorkflowTemplateSpecVolumeClaimTemplatesStatus#conditions
   */
  readonly conditions?: WorkflowTemplateSpecVolumeClaimTemplatesStatusConditions[];

  /**
   * Phase represents the current phase of PersistentVolumeClaim.
   *
   * @schema WorkflowTemplateSpecVolumeClaimTemplatesStatus#phase
   */
  readonly phase?: string;

}

/**
 * Represents a Persistent Disk resource in AWS.

An AWS EBS disk must exist before mounting to a container. The disk must also be in the same AWS zone as the kubelet. An AWS EBS disk can only be mounted as read/write once. AWS EBS volumes support ownership management and SELinux relabeling.
 *
 * @schema WorkflowTemplateSpecVolumesAwsElasticBlockStore
 */
export interface WorkflowTemplateSpecVolumesAwsElasticBlockStore {
  /**
   * Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
   *
   * @schema WorkflowTemplateSpecVolumesAwsElasticBlockStore#fsType
   */
  readonly fsType?: string;

  /**
   * The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
   *
   * @schema WorkflowTemplateSpecVolumesAwsElasticBlockStore#partition
   */
  readonly partition?: number;

  /**
   * Specify "true" to force and set the ReadOnly property in VolumeMounts to "true". If omitted, the default is "false". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
   *
   * @schema WorkflowTemplateSpecVolumesAwsElasticBlockStore#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
   *
   * @schema WorkflowTemplateSpecVolumesAwsElasticBlockStore#volumeID
   */
  readonly volumeID: string;

}

/**
 * AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
 *
 * @schema WorkflowTemplateSpecVolumesAzureDisk
 */
export interface WorkflowTemplateSpecVolumesAzureDisk {
  /**
   * Host Caching mode: None, Read Only, Read Write.
   *
   * @schema WorkflowTemplateSpecVolumesAzureDisk#cachingMode
   */
  readonly cachingMode?: string;

  /**
   * The Name of the data disk in the blob storage
   *
   * @schema WorkflowTemplateSpecVolumesAzureDisk#diskName
   */
  readonly diskName: string;

  /**
   * The URI the data disk in the blob storage
   *
   * @schema WorkflowTemplateSpecVolumesAzureDisk#diskURI
   */
  readonly diskURI: string;

  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
   *
   * @schema WorkflowTemplateSpecVolumesAzureDisk#fsType
   */
  readonly fsType?: string;

  /**
   * Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared
   *
   * @schema WorkflowTemplateSpecVolumesAzureDisk#kind
   */
  readonly kind?: string;

  /**
   * Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema WorkflowTemplateSpecVolumesAzureDisk#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
 *
 * @schema WorkflowTemplateSpecVolumesAzureFile
 */
export interface WorkflowTemplateSpecVolumesAzureFile {
  /**
   * Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema WorkflowTemplateSpecVolumesAzureFile#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * the name of secret that contains Azure Storage Account Name and Key
   *
   * @schema WorkflowTemplateSpecVolumesAzureFile#secretName
   */
  readonly secretName: string;

  /**
   * Share Name
   *
   * @schema WorkflowTemplateSpecVolumesAzureFile#shareName
   */
  readonly shareName: string;

}

/**
 * Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling.
 *
 * @schema WorkflowTemplateSpecVolumesCephfs
 */
export interface WorkflowTemplateSpecVolumesCephfs {
  /**
   * Required: Monitors is a collection of Ceph monitors More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
   *
   * @schema WorkflowTemplateSpecVolumesCephfs#monitors
   */
  readonly monitors: string[];

  /**
   * Optional: Used as the mounted root, rather than the full Ceph tree, default is /
   *
   * @schema WorkflowTemplateSpecVolumesCephfs#path
   */
  readonly path?: string;

  /**
   * Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
   * @schema WorkflowTemplateSpecVolumesCephfs#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
   *
   * @schema WorkflowTemplateSpecVolumesCephfs#secretFile
   */
  readonly secretFile?: string;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema WorkflowTemplateSpecVolumesCephfs#secretRef
   */
  readonly secretRef?: WorkflowTemplateSpecVolumesCephfsSecretRef;

  /**
   * Optional: User is the rados user name, default is admin More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
   *
   * @schema WorkflowTemplateSpecVolumesCephfs#user
   */
  readonly user?: string;

}

/**
 * Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling.
 *
 * @schema WorkflowTemplateSpecVolumesCinder
 */
export interface WorkflowTemplateSpecVolumesCinder {
  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
   *
   * @schema WorkflowTemplateSpecVolumesCinder#fsType
   */
  readonly fsType?: string;

  /**
   * Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
   * @schema WorkflowTemplateSpecVolumesCinder#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema WorkflowTemplateSpecVolumesCinder#secretRef
   */
  readonly secretRef?: WorkflowTemplateSpecVolumesCinderSecretRef;

  /**
   * volume id used to identify the volume in cinder More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
   *
   * @schema WorkflowTemplateSpecVolumesCinder#volumeID
   */
  readonly volumeID: string;

}

/**
 * Adapts a ConfigMap into a volume.

The contents of the target ConfigMap's Data field will be presented in a volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. ConfigMap volumes support ownership management and SELinux relabeling.
 *
 * @schema WorkflowTemplateSpecVolumesConfigMap
 */
export interface WorkflowTemplateSpecVolumesConfigMap {
  /**
   * Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @default 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   * @schema WorkflowTemplateSpecVolumesConfigMap#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
   *
   * @schema WorkflowTemplateSpecVolumesConfigMap#items
   */
  readonly items?: WorkflowTemplateSpecVolumesConfigMapItems[];

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecVolumesConfigMap#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its keys must be defined
   *
   * @schema WorkflowTemplateSpecVolumesConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Represents a source location of a volume to mount, managed by an external CSI driver
 *
 * @schema WorkflowTemplateSpecVolumesCsi
 */
export interface WorkflowTemplateSpecVolumesCsi {
  /**
   * Driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster.
   *
   * @schema WorkflowTemplateSpecVolumesCsi#driver
   */
  readonly driver: string;

  /**
   * Filesystem type to mount. Ex. "ext4", "xfs", "ntfs". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.
   *
   * @schema WorkflowTemplateSpecVolumesCsi#fsType
   */
  readonly fsType?: string;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema WorkflowTemplateSpecVolumesCsi#nodePublishSecretRef
   */
  readonly nodePublishSecretRef?: WorkflowTemplateSpecVolumesCsiNodePublishSecretRef;

  /**
   * Specifies a read-only configuration for the volume. Defaults to false (read/write).
   *
   * @default false (read/write).
   * @schema WorkflowTemplateSpecVolumesCsi#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * VolumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.
   *
   * @schema WorkflowTemplateSpecVolumesCsi#volumeAttributes
   */
  readonly volumeAttributes?: { [key: string]: string };

}

/**
 * DownwardAPIVolumeSource represents a volume containing downward API info. Downward API volumes support ownership management and SELinux relabeling.
 *
 * @schema WorkflowTemplateSpecVolumesDownwardApi
 */
export interface WorkflowTemplateSpecVolumesDownwardApi {
  /**
   * Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @default 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   * @schema WorkflowTemplateSpecVolumesDownwardApi#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * Items is a list of downward API volume file
   *
   * @schema WorkflowTemplateSpecVolumesDownwardApi#items
   */
  readonly items?: WorkflowTemplateSpecVolumesDownwardApiItems[];

}

/**
 * Represents an empty directory for a pod. Empty directory volumes support ownership management and SELinux relabeling.
 *
 * @schema WorkflowTemplateSpecVolumesEmptyDir
 */
export interface WorkflowTemplateSpecVolumesEmptyDir {
  /**
   * What type of storage medium should back this directory. The default is "" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
   *
   * @schema WorkflowTemplateSpecVolumesEmptyDir#medium
   */
  readonly medium?: string;

  /**
   * Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and Int64() accessors.

The serialization format is:

<quantity>        ::= <signedNumber><suffix>
  (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
<decimalSI>       ::= m | "" | k | M | G | T | P | E
  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
<decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  a. No precision is lost
  b. No fractional digits will be emitted
  c. The exponent (or suffix) is as large as possible.
The sign will be omitted unless the number is negative.

Examples:
  1.5 will be serialized as "1500m"
  1.5Gi will be serialized as "1536Mi"

Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.

Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
   *
   * @schema WorkflowTemplateSpecVolumesEmptyDir#sizeLimit
   */
  readonly sizeLimit?: string;

}

/**
 * Represents a Fibre Channel volume. Fibre Channel volumes can only be mounted as read/write once. Fibre Channel volumes support ownership management and SELinux relabeling.
 *
 * @schema WorkflowTemplateSpecVolumesFc
 */
export interface WorkflowTemplateSpecVolumesFc {
  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
   *
   * @schema WorkflowTemplateSpecVolumesFc#fsType
   */
  readonly fsType?: string;

  /**
   * Optional: FC target lun number
   *
   * @schema WorkflowTemplateSpecVolumesFc#lun
   */
  readonly lun?: number;

  /**
   * Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema WorkflowTemplateSpecVolumesFc#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Optional: FC target worldwide names (WWNs)
   *
   * @schema WorkflowTemplateSpecVolumesFc#targetWWNs
   */
  readonly targetWWNs?: string[];

  /**
   * Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
   *
   * @schema WorkflowTemplateSpecVolumesFc#wwids
   */
  readonly wwids?: string[];

}

/**
 * FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
 *
 * @schema WorkflowTemplateSpecVolumesFlexVolume
 */
export interface WorkflowTemplateSpecVolumesFlexVolume {
  /**
   * Driver is the name of the driver to use for this volume.
   *
   * @schema WorkflowTemplateSpecVolumesFlexVolume#driver
   */
  readonly driver: string;

  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
   *
   * @schema WorkflowTemplateSpecVolumesFlexVolume#fsType
   */
  readonly fsType?: string;

  /**
   * Optional: Extra command options if any.
   *
   * @schema WorkflowTemplateSpecVolumesFlexVolume#options
   */
  readonly options?: { [key: string]: string };

  /**
   * Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema WorkflowTemplateSpecVolumesFlexVolume#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema WorkflowTemplateSpecVolumesFlexVolume#secretRef
   */
  readonly secretRef?: WorkflowTemplateSpecVolumesFlexVolumeSecretRef;

}

/**
 * Represents a Flocker volume mounted by the Flocker agent. One and only one of datasetName and datasetUUID should be set. Flocker volumes do not support ownership management or SELinux relabeling.
 *
 * @schema WorkflowTemplateSpecVolumesFlocker
 */
export interface WorkflowTemplateSpecVolumesFlocker {
  /**
   * Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated
   *
   * @schema WorkflowTemplateSpecVolumesFlocker#datasetName
   */
  readonly datasetName?: string;

  /**
   * UUID of the dataset. This is unique identifier of a Flocker dataset
   *
   * @schema WorkflowTemplateSpecVolumesFlocker#datasetUUID
   */
  readonly datasetUUID?: string;

}

/**
 * Represents a Persistent Disk resource in Google Compute Engine.

A GCE PD must exist before mounting to a container. The disk must also be in the same GCE project and zone as the kubelet. A GCE PD can only be mounted as read/write once or read-only many times. GCE PDs support ownership management and SELinux relabeling.
 *
 * @schema WorkflowTemplateSpecVolumesGcePersistentDisk
 */
export interface WorkflowTemplateSpecVolumesGcePersistentDisk {
  /**
   * Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
   *
   * @schema WorkflowTemplateSpecVolumesGcePersistentDisk#fsType
   */
  readonly fsType?: string;

  /**
   * The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
   *
   * @schema WorkflowTemplateSpecVolumesGcePersistentDisk#partition
   */
  readonly partition?: number;

  /**
   * Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
   *
   * @schema WorkflowTemplateSpecVolumesGcePersistentDisk#pdName
   */
  readonly pdName: string;

  /**
   * ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
   *
   * @default false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
   * @schema WorkflowTemplateSpecVolumesGcePersistentDisk#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Represents a volume that is populated with the contents of a git repository. Git repo volumes do not support ownership management. Git repo volumes support SELinux relabeling.

DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.
 *
 * @schema WorkflowTemplateSpecVolumesGitRepo
 */
export interface WorkflowTemplateSpecVolumesGitRepo {
  /**
   * Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.
   *
   * @schema WorkflowTemplateSpecVolumesGitRepo#directory
   */
  readonly directory?: string;

  /**
   * Repository URL
   *
   * @schema WorkflowTemplateSpecVolumesGitRepo#repository
   */
  readonly repository: string;

  /**
   * Commit hash for the specified revision.
   *
   * @schema WorkflowTemplateSpecVolumesGitRepo#revision
   */
  readonly revision?: string;

}

/**
 * Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling.
 *
 * @schema WorkflowTemplateSpecVolumesGlusterfs
 */
export interface WorkflowTemplateSpecVolumesGlusterfs {
  /**
   * EndpointsName is the endpoint name that details Glusterfs topology. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod
   *
   * @schema WorkflowTemplateSpecVolumesGlusterfs#endpoints
   */
  readonly endpoints: string;

  /**
   * Path is the Glusterfs volume path. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod
   *
   * @schema WorkflowTemplateSpecVolumesGlusterfs#path
   */
  readonly path: string;

  /**
   * ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod
   *
   * @default false. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod
   * @schema WorkflowTemplateSpecVolumesGlusterfs#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Represents a host path mapped into a pod. Host path volumes do not support ownership management or SELinux relabeling.
 *
 * @schema WorkflowTemplateSpecVolumesHostPath
 */
export interface WorkflowTemplateSpecVolumesHostPath {
  /**
   * Path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
   *
   * @schema WorkflowTemplateSpecVolumesHostPath#path
   */
  readonly path: string;

  /**
   * Type for HostPath Volume Defaults to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
   *
   * @default More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
   * @schema WorkflowTemplateSpecVolumesHostPath#type
   */
  readonly type?: string;

}

/**
 * Represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling.
 *
 * @schema WorkflowTemplateSpecVolumesIscsi
 */
export interface WorkflowTemplateSpecVolumesIscsi {
  /**
   * whether support iSCSI Discovery CHAP authentication
   *
   * @schema WorkflowTemplateSpecVolumesIscsi#chapAuthDiscovery
   */
  readonly chapAuthDiscovery?: boolean;

  /**
   * whether support iSCSI Session CHAP authentication
   *
   * @schema WorkflowTemplateSpecVolumesIscsi#chapAuthSession
   */
  readonly chapAuthSession?: boolean;

  /**
   * Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
   *
   * @schema WorkflowTemplateSpecVolumesIscsi#fsType
   */
  readonly fsType?: string;

  /**
   * Custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.
   *
   * @schema WorkflowTemplateSpecVolumesIscsi#initiatorName
   */
  readonly initiatorName?: string;

  /**
   * Target iSCSI Qualified Name.
   *
   * @schema WorkflowTemplateSpecVolumesIscsi#iqn
   */
  readonly iqn: string;

  /**
   * iSCSI Interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).
   *
   * @default default' (tcp).
   * @schema WorkflowTemplateSpecVolumesIscsi#iscsiInterface
   */
  readonly iscsiInterface?: string;

  /**
   * iSCSI Target Lun number.
   *
   * @schema WorkflowTemplateSpecVolumesIscsi#lun
   */
  readonly lun: number;

  /**
   * iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
   *
   * @schema WorkflowTemplateSpecVolumesIscsi#portals
   */
  readonly portals?: string[];

  /**
   * ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.
   *
   * @default false.
   * @schema WorkflowTemplateSpecVolumesIscsi#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema WorkflowTemplateSpecVolumesIscsi#secretRef
   */
  readonly secretRef?: WorkflowTemplateSpecVolumesIscsiSecretRef;

  /**
   * iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
   *
   * @schema WorkflowTemplateSpecVolumesIscsi#targetPortal
   */
  readonly targetPortal: string;

}

/**
 * Represents an NFS mount that lasts the lifetime of a pod. NFS volumes do not support ownership management or SELinux relabeling.
 *
 * @schema WorkflowTemplateSpecVolumesNfs
 */
export interface WorkflowTemplateSpecVolumesNfs {
  /**
   * Path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
   *
   * @schema WorkflowTemplateSpecVolumesNfs#path
   */
  readonly path: string;

  /**
   * ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
   *
   * @default false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
   * @schema WorkflowTemplateSpecVolumesNfs#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
   *
   * @schema WorkflowTemplateSpecVolumesNfs#server
   */
  readonly server: string;

}

/**
 * PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace. This volume finds the bound PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another type of volume that is owned by someone else (the system).
 *
 * @schema WorkflowTemplateSpecVolumesPersistentVolumeClaim
 */
export interface WorkflowTemplateSpecVolumesPersistentVolumeClaim {
  /**
   * ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
   *
   * @schema WorkflowTemplateSpecVolumesPersistentVolumeClaim#claimName
   */
  readonly claimName: string;

  /**
   * Will force the ReadOnly setting in VolumeMounts. Default false.
   *
   * @schema WorkflowTemplateSpecVolumesPersistentVolumeClaim#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Represents a Photon Controller persistent disk resource.
 *
 * @schema WorkflowTemplateSpecVolumesPhotonPersistentDisk
 */
export interface WorkflowTemplateSpecVolumesPhotonPersistentDisk {
  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
   *
   * @schema WorkflowTemplateSpecVolumesPhotonPersistentDisk#fsType
   */
  readonly fsType?: string;

  /**
   * ID that identifies Photon Controller persistent disk
   *
   * @schema WorkflowTemplateSpecVolumesPhotonPersistentDisk#pdID
   */
  readonly pdID: string;

}

/**
 * PortworxVolumeSource represents a Portworx volume resource.
 *
 * @schema WorkflowTemplateSpecVolumesPortworxVolume
 */
export interface WorkflowTemplateSpecVolumesPortworxVolume {
  /**
   * FSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
   *
   * @schema WorkflowTemplateSpecVolumesPortworxVolume#fsType
   */
  readonly fsType?: string;

  /**
   * Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema WorkflowTemplateSpecVolumesPortworxVolume#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * VolumeID uniquely identifies a Portworx volume
   *
   * @schema WorkflowTemplateSpecVolumesPortworxVolume#volumeID
   */
  readonly volumeID: string;

}

/**
 * Represents a projected volume source
 *
 * @schema WorkflowTemplateSpecVolumesProjected
 */
export interface WorkflowTemplateSpecVolumesProjected {
  /**
   * Mode bits to use on created files by default. Must be a value between 0 and 0777. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema WorkflowTemplateSpecVolumesProjected#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * list of volume projections
   *
   * @schema WorkflowTemplateSpecVolumesProjected#sources
   */
  readonly sources: WorkflowTemplateSpecVolumesProjectedSources[];

}

/**
 * Represents a Quobyte mount that lasts the lifetime of a pod. Quobyte volumes do not support ownership management or SELinux relabeling.
 *
 * @schema WorkflowTemplateSpecVolumesQuobyte
 */
export interface WorkflowTemplateSpecVolumesQuobyte {
  /**
   * Group to map volume access to Default is no group
   *
   * @default no group
   * @schema WorkflowTemplateSpecVolumesQuobyte#group
   */
  readonly group?: string;

  /**
   * ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.
   *
   * @default false.
   * @schema WorkflowTemplateSpecVolumesQuobyte#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes
   *
   * @schema WorkflowTemplateSpecVolumesQuobyte#registry
   */
  readonly registry: string;

  /**
   * Tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin
   *
   * @schema WorkflowTemplateSpecVolumesQuobyte#tenant
   */
  readonly tenant?: string;

  /**
   * User to map volume access to Defaults to serivceaccount user
   *
   * @default serivceaccount user
   * @schema WorkflowTemplateSpecVolumesQuobyte#user
   */
  readonly user?: string;

  /**
   * Volume is a string that references an already created Quobyte volume by name.
   *
   * @schema WorkflowTemplateSpecVolumesQuobyte#volume
   */
  readonly volume: string;

}

/**
 * Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling.
 *
 * @schema WorkflowTemplateSpecVolumesRbd
 */
export interface WorkflowTemplateSpecVolumesRbd {
  /**
   * Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
   *
   * @schema WorkflowTemplateSpecVolumesRbd#fsType
   */
  readonly fsType?: string;

  /**
   * The rados image name. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   *
   * @schema WorkflowTemplateSpecVolumesRbd#image
   */
  readonly image: string;

  /**
   * Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   *
   * @default etc/ceph/keyring. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   * @schema WorkflowTemplateSpecVolumesRbd#keyring
   */
  readonly keyring?: string;

  /**
   * A collection of Ceph monitors. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   *
   * @schema WorkflowTemplateSpecVolumesRbd#monitors
   */
  readonly monitors: string[];

  /**
   * The rados pool name. Default is rbd. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   *
   * @default rbd. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   * @schema WorkflowTemplateSpecVolumesRbd#pool
   */
  readonly pool?: string;

  /**
   * ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   *
   * @default false. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   * @schema WorkflowTemplateSpecVolumesRbd#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema WorkflowTemplateSpecVolumesRbd#secretRef
   */
  readonly secretRef?: WorkflowTemplateSpecVolumesRbdSecretRef;

  /**
   * The rados user name. Default is admin. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   *
   * @default admin. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   * @schema WorkflowTemplateSpecVolumesRbd#user
   */
  readonly user?: string;

}

/**
 * ScaleIOVolumeSource represents a persistent ScaleIO volume
 *
 * @schema WorkflowTemplateSpecVolumesScaleIo
 */
export interface WorkflowTemplateSpecVolumesScaleIo {
  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Default is "xfs".
   *
   * @default xfs".
   * @schema WorkflowTemplateSpecVolumesScaleIo#fsType
   */
  readonly fsType?: string;

  /**
   * The host address of the ScaleIO API Gateway.
   *
   * @schema WorkflowTemplateSpecVolumesScaleIo#gateway
   */
  readonly gateway: string;

  /**
   * The name of the ScaleIO Protection Domain for the configured storage.
   *
   * @schema WorkflowTemplateSpecVolumesScaleIo#protectionDomain
   */
  readonly protectionDomain?: string;

  /**
   * Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema WorkflowTemplateSpecVolumesScaleIo#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema WorkflowTemplateSpecVolumesScaleIo#secretRef
   */
  readonly secretRef: WorkflowTemplateSpecVolumesScaleIoSecretRef;

  /**
   * Flag to enable/disable SSL communication with Gateway, default false
   *
   * @schema WorkflowTemplateSpecVolumesScaleIo#sslEnabled
   */
  readonly sslEnabled?: boolean;

  /**
   * Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.
   *
   * @default ThinProvisioned.
   * @schema WorkflowTemplateSpecVolumesScaleIo#storageMode
   */
  readonly storageMode?: string;

  /**
   * The ScaleIO Storage Pool associated with the protection domain.
   *
   * @schema WorkflowTemplateSpecVolumesScaleIo#storagePool
   */
  readonly storagePool?: string;

  /**
   * The name of the storage system as configured in ScaleIO.
   *
   * @schema WorkflowTemplateSpecVolumesScaleIo#system
   */
  readonly system: string;

  /**
   * The name of a volume already created in the ScaleIO system that is associated with this volume source.
   *
   * @schema WorkflowTemplateSpecVolumesScaleIo#volumeName
   */
  readonly volumeName?: string;

}

/**
 * Adapts a Secret into a volume.

The contents of the target Secret's Data field will be presented in a volume as files using the keys in the Data field as the file names. Secret volumes support ownership management and SELinux relabeling.
 *
 * @schema WorkflowTemplateSpecVolumesSecret
 */
export interface WorkflowTemplateSpecVolumesSecret {
  /**
   * Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @default 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   * @schema WorkflowTemplateSpecVolumesSecret#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
   *
   * @schema WorkflowTemplateSpecVolumesSecret#items
   */
  readonly items?: WorkflowTemplateSpecVolumesSecretItems[];

  /**
   * Specify whether the Secret or its keys must be defined
   *
   * @schema WorkflowTemplateSpecVolumesSecret#optional
   */
  readonly optional?: boolean;

  /**
   * Name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
   *
   * @schema WorkflowTemplateSpecVolumesSecret#secretName
   */
  readonly secretName?: string;

}

/**
 * Represents a StorageOS persistent volume resource.
 *
 * @schema WorkflowTemplateSpecVolumesStorageos
 */
export interface WorkflowTemplateSpecVolumesStorageos {
  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
   *
   * @schema WorkflowTemplateSpecVolumesStorageos#fsType
   */
  readonly fsType?: string;

  /**
   * Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema WorkflowTemplateSpecVolumesStorageos#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema WorkflowTemplateSpecVolumesStorageos#secretRef
   */
  readonly secretRef?: WorkflowTemplateSpecVolumesStorageosSecretRef;

  /**
   * VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.
   *
   * @schema WorkflowTemplateSpecVolumesStorageos#volumeName
   */
  readonly volumeName?: string;

  /**
   * VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to "default" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.
   *
   * @schema WorkflowTemplateSpecVolumesStorageos#volumeNamespace
   */
  readonly volumeNamespace?: string;

}

/**
 * Represents a vSphere volume resource.
 *
 * @schema WorkflowTemplateSpecVolumesVsphereVolume
 */
export interface WorkflowTemplateSpecVolumesVsphereVolume {
  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
   *
   * @schema WorkflowTemplateSpecVolumesVsphereVolume#fsType
   */
  readonly fsType?: string;

  /**
   * Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
   *
   * @schema WorkflowTemplateSpecVolumesVsphereVolume#storagePolicyID
   */
  readonly storagePolicyID?: string;

  /**
   * Storage Policy Based Management (SPBM) profile name.
   *
   * @schema WorkflowTemplateSpecVolumesVsphereVolume#storagePolicyName
   */
  readonly storagePolicyName?: string;

  /**
   * Path that identifies vSphere volume vmdk
   *
   * @schema WorkflowTemplateSpecVolumesVsphereVolume#volumePath
   */
  readonly volumePath: string;

}

/**
 * An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
 *
 * @schema WorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface WorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
   *
   * @schema WorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution#preference
   */
  readonly preference: WorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference;

  /**
   * Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
   *
   * @schema WorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms.
 *
 * @schema WorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface WorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * Required. A list of node selector terms. The terms are ORed.
   *
   * @schema WorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution#nodeSelectorTerms
   */
  readonly nodeSelectorTerms: WorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms[];

}

/**
 * The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
 *
 * @schema WorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface WorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
   *
   * @schema WorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution#podAffinityTerm
   */
  readonly podAffinityTerm: WorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;

  /**
   * weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
   *
   * @schema WorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
 *
 * @schema WorkflowTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface WorkflowTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
   *
   * @schema WorkflowTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#labelSelector
   */
  readonly labelSelector?: WorkflowTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;

  /**
   * namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
   *
   * @schema WorkflowTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaces
   */
  readonly namespaces?: string[];

  /**
   * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
   *
   * @schema WorkflowTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
 *
 * @schema WorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface WorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
   *
   * @schema WorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution#podAffinityTerm
   */
  readonly podAffinityTerm: WorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;

  /**
   * weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
   *
   * @schema WorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
 *
 * @schema WorkflowTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface WorkflowTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
   *
   * @schema WorkflowTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#labelSelector
   */
  readonly labelSelector?: WorkflowTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;

  /**
   * namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
   *
   * @schema WorkflowTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaces
   */
  readonly namespaces?: string[];

  /**
   * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
   *
   * @schema WorkflowTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * ArchiveStrategy describes how to archive files/directory when saving artifacts
 *
 * @schema WorkflowTemplateSpecArgumentsArtifactsArchive
 */
export interface WorkflowTemplateSpecArgumentsArtifactsArchive {
  /**
   * NoneStrategy indicates to skip tar process and upload the files or directory tree as independent files. Note that if the artifact is a directory, the artifact driver must support the ability to save/load the directory appropriately.
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsArchive#none
   */
  readonly none?: any;

  /**
   * TarStrategy will tar and gzip the file or directory when saving
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsArchive#tar
   */
  readonly tar?: WorkflowTemplateSpecArgumentsArtifactsArchiveTar;

}

/**
 * ArtifactoryArtifact is the location of an artifactory artifact
 *
 * @schema WorkflowTemplateSpecArgumentsArtifactsArtifactory
 */
export interface WorkflowTemplateSpecArgumentsArtifactsArtifactory {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsArtifactory#passwordSecret
   */
  readonly passwordSecret?: WorkflowTemplateSpecArgumentsArtifactsArtifactoryPasswordSecret;

  /**
   * URL of the artifact
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsArtifactory#url
   */
  readonly url: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsArtifactory#usernameSecret
   */
  readonly usernameSecret?: WorkflowTemplateSpecArgumentsArtifactsArtifactoryUsernameSecret;

}

/**
 * GCSArtifact is the location of a GCS artifact
 *
 * @schema WorkflowTemplateSpecArgumentsArtifactsGcs
 */
export interface WorkflowTemplateSpecArgumentsArtifactsGcs {
  /**
   * Bucket is the name of the bucket
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsGcs#bucket
   */
  readonly bucket: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsGcs#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsGcs#serviceAccountKeySecret
   */
  readonly serviceAccountKeySecret?: WorkflowTemplateSpecArgumentsArtifactsGcsServiceAccountKeySecret;

}

/**
 * GitArtifact is the location of an git artifact
 *
 * @schema WorkflowTemplateSpecArgumentsArtifactsGit
 */
export interface WorkflowTemplateSpecArgumentsArtifactsGit {
  /**
   * Depth specifies clones/fetches should be shallow and include the given number of commits from the branch tip
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsGit#depth
   */
  readonly depth?: number;

  /**
   * Fetch specifies a number of refs that should be fetched before checkout
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsGit#fetch
   */
  readonly fetch?: string[];

  /**
   * InsecureIgnoreHostKey disables SSH strict host key checking during git clone
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsGit#insecureIgnoreHostKey
   */
  readonly insecureIgnoreHostKey?: boolean;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsGit#passwordSecret
   */
  readonly passwordSecret?: WorkflowTemplateSpecArgumentsArtifactsGitPasswordSecret;

  /**
   * Repo is the git repository
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsGit#repo
   */
  readonly repo: string;

  /**
   * Revision is the git commit, tag, branch to checkout
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsGit#revision
   */
  readonly revision?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsGit#sshPrivateKeySecret
   */
  readonly sshPrivateKeySecret?: WorkflowTemplateSpecArgumentsArtifactsGitSshPrivateKeySecret;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsGit#usernameSecret
   */
  readonly usernameSecret?: WorkflowTemplateSpecArgumentsArtifactsGitUsernameSecret;

}

/**
 * HDFSArtifact is the location of an HDFS artifact
 *
 * @schema WorkflowTemplateSpecArgumentsArtifactsHdfs
 */
export interface WorkflowTemplateSpecArgumentsArtifactsHdfs {
  /**
   * Addresses is accessible addresses of HDFS name nodes
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsHdfs#addresses
   */
  readonly addresses: string[];

  /**
   * Force copies a file forcibly even if it exists (default: false)
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsHdfs#force
   */
  readonly force?: boolean;

  /**
   * HDFSUser is the user to access HDFS file system. It is ignored if either ccache or keytab is used.
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsHdfs#hdfsUser
   */
  readonly hdfsUser?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsHdfs#krbCCacheSecret
   */
  readonly krbCCacheSecret?: WorkflowTemplateSpecArgumentsArtifactsHdfsKrbCCacheSecret;

  /**
   * Selects a key from a ConfigMap.
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsHdfs#krbConfigConfigMap
   */
  readonly krbConfigConfigMap?: WorkflowTemplateSpecArgumentsArtifactsHdfsKrbConfigConfigMap;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsHdfs#krbKeytabSecret
   */
  readonly krbKeytabSecret?: WorkflowTemplateSpecArgumentsArtifactsHdfsKrbKeytabSecret;

  /**
   * KrbRealm is the Kerberos realm used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsHdfs#krbRealm
   */
  readonly krbRealm?: string;

  /**
   * KrbServicePrincipalName is the principal name of Kerberos service It must be set if either ccache or keytab is used.
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsHdfs#krbServicePrincipalName
   */
  readonly krbServicePrincipalName?: string;

  /**
   * KrbUsername is the Kerberos username used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsHdfs#krbUsername
   */
  readonly krbUsername?: string;

  /**
   * Path is a file path in HDFS
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsHdfs#path
   */
  readonly path: string;

}

/**
 * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
 *
 * @schema WorkflowTemplateSpecArgumentsArtifactsHttp
 */
export interface WorkflowTemplateSpecArgumentsArtifactsHttp {
  /**
   * URL of the artifact
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsHttp#url
   */
  readonly url: string;

}

/**
 * OSSArtifact is the location of an Alibaba Cloud OSS artifact
 *
 * @schema WorkflowTemplateSpecArgumentsArtifactsOss
 */
export interface WorkflowTemplateSpecArgumentsArtifactsOss {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsOss#accessKeySecret
   */
  readonly accessKeySecret: WorkflowTemplateSpecArgumentsArtifactsOssAccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsOss#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsOss#endpoint
   */
  readonly endpoint: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsOss#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsOss#secretKeySecret
   */
  readonly secretKeySecret: WorkflowTemplateSpecArgumentsArtifactsOssSecretKeySecret;

}

/**
 * RawArtifact allows raw string content to be placed as an artifact in a container
 *
 * @schema WorkflowTemplateSpecArgumentsArtifactsRaw
 */
export interface WorkflowTemplateSpecArgumentsArtifactsRaw {
  /**
   * Data is the string contents of the artifact
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsRaw#data
   */
  readonly data: string;

}

/**
 * S3Artifact is the location of an S3 artifact
 *
 * @schema WorkflowTemplateSpecArgumentsArtifactsS3
 */
export interface WorkflowTemplateSpecArgumentsArtifactsS3 {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsS3#accessKeySecret
   */
  readonly accessKeySecret: WorkflowTemplateSpecArgumentsArtifactsS3AccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsS3#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsS3#endpoint
   */
  readonly endpoint: string;

  /**
   * Insecure will connect to the service with TLS
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsS3#insecure
   */
  readonly insecure?: boolean;

  /**
   * Key is the key in the bucket where the artifact resides
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsS3#key
   */
  readonly key: string;

  /**
   * Region contains the optional bucket region
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsS3#region
   */
  readonly region?: string;

  /**
   * RoleARN is the Amazon Resource Name (ARN) of the role to assume.
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsS3#roleARN
   */
  readonly roleARN?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsS3#secretKeySecret
   */
  readonly secretKeySecret: WorkflowTemplateSpecArgumentsArtifactsS3SecretKeySecret;

  /**
   * UseSDKCreds tells the driver to figure out credentials based on sdk defaults.
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsS3#useSDKCreds
   */
  readonly useSDKCreds?: boolean;

}

/**
 * ValueFrom describes a location in which to obtain the value to a parameter
 *
 * @schema WorkflowTemplateSpecArgumentsParametersValueFrom
 */
export interface WorkflowTemplateSpecArgumentsParametersValueFrom {
  /**
   * @schema WorkflowTemplateSpecArgumentsParametersValueFrom#default
   */
  readonly default?: string;

  /**
   * JQFilter expression against the resource object in resource templates
   *
   * @schema WorkflowTemplateSpecArgumentsParametersValueFrom#jqFilter
   */
  readonly jqFilter?: string;

  /**
   * JSONPath of a resource to retrieve an output parameter value from in resource templates
   *
   * @schema WorkflowTemplateSpecArgumentsParametersValueFrom#jsonPath
   */
  readonly jsonPath?: string;

  /**
   * Parameter reference to a step or dag task in which to retrieve an output parameter value from (e.g. '{{steps.mystep.outputs.myparam}}')
   *
   * @schema WorkflowTemplateSpecArgumentsParametersValueFrom#parameter
   */
  readonly parameter?: string;

  /**
   * Path in the container to retrieve an output parameter value from in container templates
   *
   * @schema WorkflowTemplateSpecArgumentsParametersValueFrom#path
   */
  readonly path?: string;

}

/**
 * Counter is a Counter prometheus metric
 *
 * @schema WorkflowTemplateSpecMetricsPrometheusCounter
 */
export interface WorkflowTemplateSpecMetricsPrometheusCounter {
  /**
   * Value is the value of the metric
   *
   * @schema WorkflowTemplateSpecMetricsPrometheusCounter#value
   */
  readonly value: string;

}

/**
 * Gauge is a Gauge prometheus metric
 *
 * @schema WorkflowTemplateSpecMetricsPrometheusGauge
 */
export interface WorkflowTemplateSpecMetricsPrometheusGauge {
  /**
   * Realtime emits this metric in real time if applicable
   *
   * @schema WorkflowTemplateSpecMetricsPrometheusGauge#realtime
   */
  readonly realtime: boolean;

  /**
   * Value is the value of the metric
   *
   * @schema WorkflowTemplateSpecMetricsPrometheusGauge#value
   */
  readonly value: string;

}

/**
 * Histogram is a Histogram prometheus metric
 *
 * @schema WorkflowTemplateSpecMetricsPrometheusHistogram
 */
export interface WorkflowTemplateSpecMetricsPrometheusHistogram {
  /**
   * Buckets is a list of bucket divisors for the histogram
   *
   * @schema WorkflowTemplateSpecMetricsPrometheusHistogram#buckets
   */
  readonly buckets: number[];

  /**
   * Value is the value of the metric
   *
   * @schema WorkflowTemplateSpecMetricsPrometheusHistogram#value
   */
  readonly value: string;

}

/**
 * MetricLabel is a single label for a prometheus metric
 *
 * @schema WorkflowTemplateSpecMetricsPrometheusLabels
 */
export interface WorkflowTemplateSpecMetricsPrometheusLabels {
  /**
   * @schema WorkflowTemplateSpecMetricsPrometheusLabels#key
   */
  readonly key: string;

  /**
   * @schema WorkflowTemplateSpecMetricsPrometheusLabels#value
   */
  readonly value: string;

}

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema WorkflowTemplateSpecPodDisruptionBudgetSelectorMatchExpressions
 */
export interface WorkflowTemplateSpecPodDisruptionBudgetSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema WorkflowTemplateSpecPodDisruptionBudgetSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema WorkflowTemplateSpecPodDisruptionBudgetSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   *
   * @schema WorkflowTemplateSpecPodDisruptionBudgetSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Node affinity is a group of node affinity scheduling rules.
 *
 * @schema WorkflowTemplateSpecTemplatesAffinityNodeAffinity
 */
export interface WorkflowTemplateSpecTemplatesAffinityNodeAffinity {
  /**
   * The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityNodeAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: WorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityNodeAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: WorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution;

}

/**
 * Pod affinity is a group of inter pod affinity scheduling rules.
 *
 * @schema WorkflowTemplateSpecTemplatesAffinityPodAffinity
 */
export interface WorkflowTemplateSpecTemplatesAffinityPodAffinity {
  /**
   * The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityPodAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: WorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityPodAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: WorkflowTemplateSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution[];

}

/**
 * Pod anti affinity is a group of inter pod anti affinity scheduling rules.
 *
 * @schema WorkflowTemplateSpecTemplatesAffinityPodAntiAffinity
 */
export interface WorkflowTemplateSpecTemplatesAffinityPodAntiAffinity {
  /**
   * The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityPodAntiAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: WorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityPodAntiAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: WorkflowTemplateSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution[];

}

/**
 * ArtifactoryArtifact is the location of an artifactory artifact
 *
 * @schema WorkflowTemplateSpecTemplatesArchiveLocationArtifactory
 */
export interface WorkflowTemplateSpecTemplatesArchiveLocationArtifactory {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationArtifactory#passwordSecret
   */
  readonly passwordSecret?: WorkflowTemplateSpecTemplatesArchiveLocationArtifactoryPasswordSecret;

  /**
   * URL of the artifact
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationArtifactory#url
   */
  readonly url: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationArtifactory#usernameSecret
   */
  readonly usernameSecret?: WorkflowTemplateSpecTemplatesArchiveLocationArtifactoryUsernameSecret;

}

/**
 * GCSArtifact is the location of a GCS artifact
 *
 * @schema WorkflowTemplateSpecTemplatesArchiveLocationGcs
 */
export interface WorkflowTemplateSpecTemplatesArchiveLocationGcs {
  /**
   * Bucket is the name of the bucket
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationGcs#bucket
   */
  readonly bucket: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationGcs#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationGcs#serviceAccountKeySecret
   */
  readonly serviceAccountKeySecret?: WorkflowTemplateSpecTemplatesArchiveLocationGcsServiceAccountKeySecret;

}

/**
 * GitArtifact is the location of an git artifact
 *
 * @schema WorkflowTemplateSpecTemplatesArchiveLocationGit
 */
export interface WorkflowTemplateSpecTemplatesArchiveLocationGit {
  /**
   * Depth specifies clones/fetches should be shallow and include the given number of commits from the branch tip
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationGit#depth
   */
  readonly depth?: number;

  /**
   * Fetch specifies a number of refs that should be fetched before checkout
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationGit#fetch
   */
  readonly fetch?: string[];

  /**
   * InsecureIgnoreHostKey disables SSH strict host key checking during git clone
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationGit#insecureIgnoreHostKey
   */
  readonly insecureIgnoreHostKey?: boolean;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationGit#passwordSecret
   */
  readonly passwordSecret?: WorkflowTemplateSpecTemplatesArchiveLocationGitPasswordSecret;

  /**
   * Repo is the git repository
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationGit#repo
   */
  readonly repo: string;

  /**
   * Revision is the git commit, tag, branch to checkout
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationGit#revision
   */
  readonly revision?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationGit#sshPrivateKeySecret
   */
  readonly sshPrivateKeySecret?: WorkflowTemplateSpecTemplatesArchiveLocationGitSshPrivateKeySecret;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationGit#usernameSecret
   */
  readonly usernameSecret?: WorkflowTemplateSpecTemplatesArchiveLocationGitUsernameSecret;

}

/**
 * HDFSArtifact is the location of an HDFS artifact
 *
 * @schema WorkflowTemplateSpecTemplatesArchiveLocationHdfs
 */
export interface WorkflowTemplateSpecTemplatesArchiveLocationHdfs {
  /**
   * Addresses is accessible addresses of HDFS name nodes
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationHdfs#addresses
   */
  readonly addresses: string[];

  /**
   * Force copies a file forcibly even if it exists (default: false)
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationHdfs#force
   */
  readonly force?: boolean;

  /**
   * HDFSUser is the user to access HDFS file system. It is ignored if either ccache or keytab is used.
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationHdfs#hdfsUser
   */
  readonly hdfsUser?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationHdfs#krbCCacheSecret
   */
  readonly krbCCacheSecret?: WorkflowTemplateSpecTemplatesArchiveLocationHdfsKrbCCacheSecret;

  /**
   * Selects a key from a ConfigMap.
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationHdfs#krbConfigConfigMap
   */
  readonly krbConfigConfigMap?: WorkflowTemplateSpecTemplatesArchiveLocationHdfsKrbConfigConfigMap;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationHdfs#krbKeytabSecret
   */
  readonly krbKeytabSecret?: WorkflowTemplateSpecTemplatesArchiveLocationHdfsKrbKeytabSecret;

  /**
   * KrbRealm is the Kerberos realm used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationHdfs#krbRealm
   */
  readonly krbRealm?: string;

  /**
   * KrbServicePrincipalName is the principal name of Kerberos service It must be set if either ccache or keytab is used.
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationHdfs#krbServicePrincipalName
   */
  readonly krbServicePrincipalName?: string;

  /**
   * KrbUsername is the Kerberos username used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationHdfs#krbUsername
   */
  readonly krbUsername?: string;

  /**
   * Path is a file path in HDFS
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationHdfs#path
   */
  readonly path: string;

}

/**
 * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
 *
 * @schema WorkflowTemplateSpecTemplatesArchiveLocationHttp
 */
export interface WorkflowTemplateSpecTemplatesArchiveLocationHttp {
  /**
   * URL of the artifact
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationHttp#url
   */
  readonly url: string;

}

/**
 * OSSArtifact is the location of an Alibaba Cloud OSS artifact
 *
 * @schema WorkflowTemplateSpecTemplatesArchiveLocationOss
 */
export interface WorkflowTemplateSpecTemplatesArchiveLocationOss {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationOss#accessKeySecret
   */
  readonly accessKeySecret: WorkflowTemplateSpecTemplatesArchiveLocationOssAccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationOss#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationOss#endpoint
   */
  readonly endpoint: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationOss#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationOss#secretKeySecret
   */
  readonly secretKeySecret: WorkflowTemplateSpecTemplatesArchiveLocationOssSecretKeySecret;

}

/**
 * RawArtifact allows raw string content to be placed as an artifact in a container
 *
 * @schema WorkflowTemplateSpecTemplatesArchiveLocationRaw
 */
export interface WorkflowTemplateSpecTemplatesArchiveLocationRaw {
  /**
   * Data is the string contents of the artifact
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationRaw#data
   */
  readonly data: string;

}

/**
 * S3Artifact is the location of an S3 artifact
 *
 * @schema WorkflowTemplateSpecTemplatesArchiveLocationS3
 */
export interface WorkflowTemplateSpecTemplatesArchiveLocationS3 {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationS3#accessKeySecret
   */
  readonly accessKeySecret: WorkflowTemplateSpecTemplatesArchiveLocationS3AccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationS3#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationS3#endpoint
   */
  readonly endpoint: string;

  /**
   * Insecure will connect to the service with TLS
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationS3#insecure
   */
  readonly insecure?: boolean;

  /**
   * Key is the key in the bucket where the artifact resides
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationS3#key
   */
  readonly key: string;

  /**
   * Region contains the optional bucket region
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationS3#region
   */
  readonly region?: string;

  /**
   * RoleARN is the Amazon Resource Name (ARN) of the role to assume.
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationS3#roleARN
   */
  readonly roleARN?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationS3#secretKeySecret
   */
  readonly secretKeySecret: WorkflowTemplateSpecTemplatesArchiveLocationS3SecretKeySecret;

  /**
   * UseSDKCreds tells the driver to figure out credentials based on sdk defaults.
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationS3#useSDKCreds
   */
  readonly useSDKCreds?: boolean;

}

/**
 * Artifact indicates an artifact to place at a specified path
 *
 * @schema WorkflowTemplateSpecTemplatesArgumentsArtifacts
 */
export interface WorkflowTemplateSpecTemplatesArgumentsArtifacts {
  /**
   * ArchiveStrategy describes how to archive files/directory when saving artifacts
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifacts#archive
   */
  readonly archive?: WorkflowTemplateSpecTemplatesArgumentsArtifactsArchive;

  /**
   * ArchiveLogs indicates if the container logs should be archived
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifacts#archiveLogs
   */
  readonly archiveLogs?: boolean;

  /**
   * ArtifactoryArtifact is the location of an artifactory artifact
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifacts#artifactory
   */
  readonly artifactory?: WorkflowTemplateSpecTemplatesArgumentsArtifactsArtifactory;

  /**
   * From allows an artifact to reference an artifact from a previous step
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifacts#from
   */
  readonly from?: string;

  /**
   * GCSArtifact is the location of a GCS artifact
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifacts#gcs
   */
  readonly gcs?: WorkflowTemplateSpecTemplatesArgumentsArtifactsGcs;

  /**
   * GitArtifact is the location of an git artifact
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifacts#git
   */
  readonly git?: WorkflowTemplateSpecTemplatesArgumentsArtifactsGit;

  /**
   * GlobalName exports an output artifact to the global scope, making it available as '{{io.argoproj.workflow.v1alpha1.outputs.artifacts.XXXX}} and in workflow.status.outputs.artifacts
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifacts#globalName
   */
  readonly globalName?: string;

  /**
   * HDFSArtifact is the location of an HDFS artifact
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifacts#hdfs
   */
  readonly hdfs?: WorkflowTemplateSpecTemplatesArgumentsArtifactsHdfs;

  /**
   * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifacts#http
   */
  readonly http?: WorkflowTemplateSpecTemplatesArgumentsArtifactsHttp;

  /**
   * mode bits to use on this file, must be a value between 0 and 0777 set when loading input artifacts.
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifacts#mode
   */
  readonly mode?: number;

  /**
   * name of the artifact. must be unique within a template's inputs/outputs.
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifacts#name
   */
  readonly name: string;

  /**
   * Make Artifacts optional, if Artifacts doesn't generate or exist
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifacts#optional
   */
  readonly optional?: boolean;

  /**
   * OSSArtifact is the location of an Alibaba Cloud OSS artifact
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifacts#oss
   */
  readonly oss?: WorkflowTemplateSpecTemplatesArgumentsArtifactsOss;

  /**
   * Path is the container path to the artifact
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifacts#path
   */
  readonly path?: string;

  /**
   * RawArtifact allows raw string content to be placed as an artifact in a container
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifacts#raw
   */
  readonly raw?: WorkflowTemplateSpecTemplatesArgumentsArtifactsRaw;

  /**
   * S3Artifact is the location of an S3 artifact
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifacts#s3
   */
  readonly s3?: WorkflowTemplateSpecTemplatesArgumentsArtifactsS3;

}

/**
 * Parameter indicate a passed string parameter to a service template with an optional default value
 *
 * @schema WorkflowTemplateSpecTemplatesArgumentsParameters
 */
export interface WorkflowTemplateSpecTemplatesArgumentsParameters {
  /**
   * @schema WorkflowTemplateSpecTemplatesArgumentsParameters#default
   */
  readonly default?: string;

  /**
   * GlobalName exports an output parameter to the global scope, making it available as '{{io.argoproj.workflow.v1alpha1.outputs.parameters.XXXX}} and in workflow.status.outputs.parameters
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsParameters#globalName
   */
  readonly globalName?: string;

  /**
   * Name is the parameter name
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsParameters#name
   */
  readonly name: string;

  /**
   * @schema WorkflowTemplateSpecTemplatesArgumentsParameters#value
   */
  readonly value?: string;

  /**
   * ValueFrom describes a location in which to obtain the value to a parameter
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsParameters#valueFrom
   */
  readonly valueFrom?: WorkflowTemplateSpecTemplatesArgumentsParametersValueFrom;

}

/**
 * EnvVar represents an environment variable present in a Container.
 *
 * @schema WorkflowTemplateSpecTemplatesContainerEnv
 */
export interface WorkflowTemplateSpecTemplatesContainerEnv {
  /**
   * Name of the environment variable. Must be a C_IDENTIFIER.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerEnv#name
   */
  readonly name: string;

  /**
   * Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
   *
   * @default .
   * @schema WorkflowTemplateSpecTemplatesContainerEnv#value
   */
  readonly value?: string;

  /**
   * EnvVarSource represents a source for the value of an EnvVar.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerEnv#valueFrom
   */
  readonly valueFrom?: WorkflowTemplateSpecTemplatesContainerEnvValueFrom;

}

/**
 * EnvFromSource represents the source of a set of ConfigMaps
 *
 * @schema WorkflowTemplateSpecTemplatesContainerEnvFrom
 */
export interface WorkflowTemplateSpecTemplatesContainerEnvFrom {
  /**
   * ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.

The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerEnvFrom#configMapRef
   */
  readonly configMapRef?: WorkflowTemplateSpecTemplatesContainerEnvFromConfigMapRef;

  /**
   * An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerEnvFrom#prefix
   */
  readonly prefix?: string;

  /**
   * SecretEnvSource selects a Secret to populate the environment variables with.

The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerEnvFrom#secretRef
   */
  readonly secretRef?: WorkflowTemplateSpecTemplatesContainerEnvFromSecretRef;

}

/**
 * Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.
 *
 * @schema WorkflowTemplateSpecTemplatesContainerLifecycle
 */
export interface WorkflowTemplateSpecTemplatesContainerLifecycle {
  /**
   * Handler defines a specific action that should be taken
   *
   * @schema WorkflowTemplateSpecTemplatesContainerLifecycle#postStart
   */
  readonly postStart?: WorkflowTemplateSpecTemplatesContainerLifecyclePostStart;

  /**
   * Handler defines a specific action that should be taken
   *
   * @schema WorkflowTemplateSpecTemplatesContainerLifecycle#preStop
   */
  readonly preStop?: WorkflowTemplateSpecTemplatesContainerLifecyclePreStop;

}

/**
 * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
 *
 * @schema WorkflowTemplateSpecTemplatesContainerLivenessProbe
 */
export interface WorkflowTemplateSpecTemplatesContainerLivenessProbe {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerLivenessProbe#exec
   */
  readonly exec?: WorkflowTemplateSpecTemplatesContainerLivenessProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema WorkflowTemplateSpecTemplatesContainerLivenessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerLivenessProbe#httpGet
   */
  readonly httpGet?: WorkflowTemplateSpecTemplatesContainerLivenessProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema WorkflowTemplateSpecTemplatesContainerLivenessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema WorkflowTemplateSpecTemplatesContainerLivenessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness. Minimum value is 1.
   * @schema WorkflowTemplateSpecTemplatesContainerLivenessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema WorkflowTemplateSpecTemplatesContainerLivenessProbe#tcpSocket
   */
  readonly tcpSocket?: WorkflowTemplateSpecTemplatesContainerLivenessProbeTcpSocket;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema WorkflowTemplateSpecTemplatesContainerLivenessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * ContainerPort represents a network port in a single container.
 *
 * @schema WorkflowTemplateSpecTemplatesContainerPorts
 */
export interface WorkflowTemplateSpecTemplatesContainerPorts {
  /**
   * Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerPorts#containerPort
   */
  readonly containerPort: number;

  /**
   * What host IP to bind the external port to.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerPorts#hostIP
   */
  readonly hostIP?: string;

  /**
   * Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerPorts#hostPort
   */
  readonly hostPort?: number;

  /**
   * If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerPorts#name
   */
  readonly name?: string;

  /**
   * Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
   *
   * @default TCP".
   * @schema WorkflowTemplateSpecTemplatesContainerPorts#protocol
   */
  readonly protocol?: string;

}

/**
 * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
 *
 * @schema WorkflowTemplateSpecTemplatesContainerReadinessProbe
 */
export interface WorkflowTemplateSpecTemplatesContainerReadinessProbe {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerReadinessProbe#exec
   */
  readonly exec?: WorkflowTemplateSpecTemplatesContainerReadinessProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema WorkflowTemplateSpecTemplatesContainerReadinessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerReadinessProbe#httpGet
   */
  readonly httpGet?: WorkflowTemplateSpecTemplatesContainerReadinessProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema WorkflowTemplateSpecTemplatesContainerReadinessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema WorkflowTemplateSpecTemplatesContainerReadinessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness. Minimum value is 1.
   * @schema WorkflowTemplateSpecTemplatesContainerReadinessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema WorkflowTemplateSpecTemplatesContainerReadinessProbe#tcpSocket
   */
  readonly tcpSocket?: WorkflowTemplateSpecTemplatesContainerReadinessProbeTcpSocket;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema WorkflowTemplateSpecTemplatesContainerReadinessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * ResourceRequirements describes the compute resource requirements.
 *
 * @schema WorkflowTemplateSpecTemplatesContainerResources
 */
export interface WorkflowTemplateSpecTemplatesContainerResources {
  /**
   * Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
   *
   * @schema WorkflowTemplateSpecTemplatesContainerResources#limits
   */
  readonly limits?: { [key: string]: string };

  /**
   * Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
   *
   * @schema WorkflowTemplateSpecTemplatesContainerResources#requests
   */
  readonly requests?: { [key: string]: string };

}

/**
 * SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.
 *
 * @schema WorkflowTemplateSpecTemplatesContainerSecurityContext
 */
export interface WorkflowTemplateSpecTemplatesContainerSecurityContext {
  /**
   * AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN
   *
   * @schema WorkflowTemplateSpecTemplatesContainerSecurityContext#allowPrivilegeEscalation
   */
  readonly allowPrivilegeEscalation?: boolean;

  /**
   * Adds and removes POSIX capabilities from running containers.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerSecurityContext#capabilities
   */
  readonly capabilities?: WorkflowTemplateSpecTemplatesContainerSecurityContextCapabilities;

  /**
   * Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.
   *
   * @default false.
   * @schema WorkflowTemplateSpecTemplatesContainerSecurityContext#privileged
   */
  readonly privileged?: boolean;

  /**
   * procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerSecurityContext#procMount
   */
  readonly procMount?: string;

  /**
   * Whether this container has a read-only root filesystem. Default is false.
   *
   * @default false.
   * @schema WorkflowTemplateSpecTemplatesContainerSecurityContext#readOnlyRootFilesystem
   */
  readonly readOnlyRootFilesystem?: boolean;

  /**
   * The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @default user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   * @schema WorkflowTemplateSpecTemplatesContainerSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * SELinuxOptions are the labels to be applied to the container
   *
   * @schema WorkflowTemplateSpecTemplatesContainerSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: WorkflowTemplateSpecTemplatesContainerSecurityContextSeLinuxOptions;

  /**
   * WindowsSecurityContextOptions contain Windows-specific options and credentials.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerSecurityContext#windowsOptions
   */
  readonly windowsOptions?: WorkflowTemplateSpecTemplatesContainerSecurityContextWindowsOptions;

}

/**
 * volumeDevice describes a mapping of a raw block device within a container.
 *
 * @schema WorkflowTemplateSpecTemplatesContainerVolumeDevices
 */
export interface WorkflowTemplateSpecTemplatesContainerVolumeDevices {
  /**
   * devicePath is the path inside of the container that the device will be mapped to.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerVolumeDevices#devicePath
   */
  readonly devicePath: string;

  /**
   * name must match the name of a persistentVolumeClaim in the pod
   *
   * @schema WorkflowTemplateSpecTemplatesContainerVolumeDevices#name
   */
  readonly name: string;

}

/**
 * VolumeMount describes a mounting of a Volume within a container.
 *
 * @schema WorkflowTemplateSpecTemplatesContainerVolumeMounts
 */
export interface WorkflowTemplateSpecTemplatesContainerVolumeMounts {
  /**
   * Path within the container at which the volume should be mounted.  Must not contain ':'.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerVolumeMounts#mountPath
   */
  readonly mountPath: string;

  /**
   * mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerVolumeMounts#mountPropagation
   */
  readonly mountPropagation?: string;

  /**
   * This must match the Name of a Volume.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerVolumeMounts#name
   */
  readonly name: string;

  /**
   * Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
   *
   * @default false.
   * @schema WorkflowTemplateSpecTemplatesContainerVolumeMounts#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
   *
   * @default volume's root).
   * @schema WorkflowTemplateSpecTemplatesContainerVolumeMounts#subPath
   */
  readonly subPath?: string;

  /**
   * Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive. This field is beta in 1.15.
   *
   * @default volume's root). SubPathExpr and SubPath are mutually exclusive. This field is beta in 1.15.
   * @schema WorkflowTemplateSpecTemplatesContainerVolumeMounts#subPathExpr
   */
  readonly subPathExpr?: string;

}

/**
 * DAGTask represents a node in the graph during DAG execution
 *
 * @schema WorkflowTemplateSpecTemplatesDagTasks
 */
export interface WorkflowTemplateSpecTemplatesDagTasks {
  /**
   * Arguments to a template
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasks#arguments
   */
  readonly arguments?: WorkflowTemplateSpecTemplatesDagTasksArguments;

  /**
   * ContinueOn defines if a workflow should continue even if a task or step fails/errors. It can be specified if the workflow should continue when the pod errors, fails or both.
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasks#continueOn
   */
  readonly continueOn?: WorkflowTemplateSpecTemplatesDagTasksContinueOn;

  /**
   * Dependencies are name of other targets which this depends on
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasks#dependencies
   */
  readonly dependencies?: string[];

  /**
   * Depends are name of other targets which this depends on
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasks#depends
   */
  readonly depends?: string;

  /**
   * Name is the name of the target
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasks#name
   */
  readonly name: string;

  /**
   * OnExit is a template reference which is invoked at the end of the template, irrespective of the success, failure, or error of the primary template.
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasks#onExit
   */
  readonly onExit?: string;

  /**
   * Name of template to execute
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasks#template
   */
  readonly template: string;

  /**
   * TemplateRef is a reference of template resource.
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasks#templateRef
   */
  readonly templateRef?: WorkflowTemplateSpecTemplatesDagTasksTemplateRef;

  /**
   * When is an expression in which the task should conditionally execute
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasks#when
   */
  readonly when?: string;

  /**
   * WithItems expands a task into multiple parallel tasks from the items in the list
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasks#withItems
   */
  readonly withItems?: string[];

  /**
   * WithParam expands a task into multiple parallel tasks from the value in the parameter, which is expected to be a JSON list.
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasks#withParam
   */
  readonly withParam?: string;

  /**
   * Sequence expands a workflow step into numeric range
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasks#withSequence
   */
  readonly withSequence?: WorkflowTemplateSpecTemplatesDagTasksWithSequence;

}

/**
 * EnvVar represents an environment variable present in a Container.
 *
 * @schema WorkflowTemplateSpecTemplatesInitContainersEnv
 */
export interface WorkflowTemplateSpecTemplatesInitContainersEnv {
  /**
   * Name of the environment variable. Must be a C_IDENTIFIER.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersEnv#name
   */
  readonly name: string;

  /**
   * Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
   *
   * @default .
   * @schema WorkflowTemplateSpecTemplatesInitContainersEnv#value
   */
  readonly value?: string;

  /**
   * EnvVarSource represents a source for the value of an EnvVar.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersEnv#valueFrom
   */
  readonly valueFrom?: WorkflowTemplateSpecTemplatesInitContainersEnvValueFrom;

}

/**
 * EnvFromSource represents the source of a set of ConfigMaps
 *
 * @schema WorkflowTemplateSpecTemplatesInitContainersEnvFrom
 */
export interface WorkflowTemplateSpecTemplatesInitContainersEnvFrom {
  /**
   * ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.

The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersEnvFrom#configMapRef
   */
  readonly configMapRef?: WorkflowTemplateSpecTemplatesInitContainersEnvFromConfigMapRef;

  /**
   * An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersEnvFrom#prefix
   */
  readonly prefix?: string;

  /**
   * SecretEnvSource selects a Secret to populate the environment variables with.

The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersEnvFrom#secretRef
   */
  readonly secretRef?: WorkflowTemplateSpecTemplatesInitContainersEnvFromSecretRef;

}

/**
 * Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.
 *
 * @schema WorkflowTemplateSpecTemplatesInitContainersLifecycle
 */
export interface WorkflowTemplateSpecTemplatesInitContainersLifecycle {
  /**
   * Handler defines a specific action that should be taken
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersLifecycle#postStart
   */
  readonly postStart?: WorkflowTemplateSpecTemplatesInitContainersLifecyclePostStart;

  /**
   * Handler defines a specific action that should be taken
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersLifecycle#preStop
   */
  readonly preStop?: WorkflowTemplateSpecTemplatesInitContainersLifecyclePreStop;

}

/**
 * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
 *
 * @schema WorkflowTemplateSpecTemplatesInitContainersLivenessProbe
 */
export interface WorkflowTemplateSpecTemplatesInitContainersLivenessProbe {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersLivenessProbe#exec
   */
  readonly exec?: WorkflowTemplateSpecTemplatesInitContainersLivenessProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema WorkflowTemplateSpecTemplatesInitContainersLivenessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersLivenessProbe#httpGet
   */
  readonly httpGet?: WorkflowTemplateSpecTemplatesInitContainersLivenessProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersLivenessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema WorkflowTemplateSpecTemplatesInitContainersLivenessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness. Minimum value is 1.
   * @schema WorkflowTemplateSpecTemplatesInitContainersLivenessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersLivenessProbe#tcpSocket
   */
  readonly tcpSocket?: WorkflowTemplateSpecTemplatesInitContainersLivenessProbeTcpSocket;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema WorkflowTemplateSpecTemplatesInitContainersLivenessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * ContainerPort represents a network port in a single container.
 *
 * @schema WorkflowTemplateSpecTemplatesInitContainersPorts
 */
export interface WorkflowTemplateSpecTemplatesInitContainersPorts {
  /**
   * Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersPorts#containerPort
   */
  readonly containerPort: number;

  /**
   * What host IP to bind the external port to.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersPorts#hostIP
   */
  readonly hostIP?: string;

  /**
   * Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersPorts#hostPort
   */
  readonly hostPort?: number;

  /**
   * If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersPorts#name
   */
  readonly name?: string;

  /**
   * Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
   *
   * @default TCP".
   * @schema WorkflowTemplateSpecTemplatesInitContainersPorts#protocol
   */
  readonly protocol?: string;

}

/**
 * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
 *
 * @schema WorkflowTemplateSpecTemplatesInitContainersReadinessProbe
 */
export interface WorkflowTemplateSpecTemplatesInitContainersReadinessProbe {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersReadinessProbe#exec
   */
  readonly exec?: WorkflowTemplateSpecTemplatesInitContainersReadinessProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema WorkflowTemplateSpecTemplatesInitContainersReadinessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersReadinessProbe#httpGet
   */
  readonly httpGet?: WorkflowTemplateSpecTemplatesInitContainersReadinessProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersReadinessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema WorkflowTemplateSpecTemplatesInitContainersReadinessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness. Minimum value is 1.
   * @schema WorkflowTemplateSpecTemplatesInitContainersReadinessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersReadinessProbe#tcpSocket
   */
  readonly tcpSocket?: WorkflowTemplateSpecTemplatesInitContainersReadinessProbeTcpSocket;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema WorkflowTemplateSpecTemplatesInitContainersReadinessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * ResourceRequirements describes the compute resource requirements.
 *
 * @schema WorkflowTemplateSpecTemplatesInitContainersResources
 */
export interface WorkflowTemplateSpecTemplatesInitContainersResources {
  /**
   * Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersResources#limits
   */
  readonly limits?: { [key: string]: string };

  /**
   * Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersResources#requests
   */
  readonly requests?: { [key: string]: string };

}

/**
 * SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.
 *
 * @schema WorkflowTemplateSpecTemplatesInitContainersSecurityContext
 */
export interface WorkflowTemplateSpecTemplatesInitContainersSecurityContext {
  /**
   * AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersSecurityContext#allowPrivilegeEscalation
   */
  readonly allowPrivilegeEscalation?: boolean;

  /**
   * Adds and removes POSIX capabilities from running containers.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersSecurityContext#capabilities
   */
  readonly capabilities?: WorkflowTemplateSpecTemplatesInitContainersSecurityContextCapabilities;

  /**
   * Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.
   *
   * @default false.
   * @schema WorkflowTemplateSpecTemplatesInitContainersSecurityContext#privileged
   */
  readonly privileged?: boolean;

  /**
   * procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersSecurityContext#procMount
   */
  readonly procMount?: string;

  /**
   * Whether this container has a read-only root filesystem. Default is false.
   *
   * @default false.
   * @schema WorkflowTemplateSpecTemplatesInitContainersSecurityContext#readOnlyRootFilesystem
   */
  readonly readOnlyRootFilesystem?: boolean;

  /**
   * The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @default user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   * @schema WorkflowTemplateSpecTemplatesInitContainersSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * SELinuxOptions are the labels to be applied to the container
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: WorkflowTemplateSpecTemplatesInitContainersSecurityContextSeLinuxOptions;

  /**
   * WindowsSecurityContextOptions contain Windows-specific options and credentials.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersSecurityContext#windowsOptions
   */
  readonly windowsOptions?: WorkflowTemplateSpecTemplatesInitContainersSecurityContextWindowsOptions;

}

/**
 * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
 *
 * @schema WorkflowTemplateSpecTemplatesInitContainersStartupProbe
 */
export interface WorkflowTemplateSpecTemplatesInitContainersStartupProbe {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersStartupProbe#exec
   */
  readonly exec?: WorkflowTemplateSpecTemplatesInitContainersStartupProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema WorkflowTemplateSpecTemplatesInitContainersStartupProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersStartupProbe#httpGet
   */
  readonly httpGet?: WorkflowTemplateSpecTemplatesInitContainersStartupProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersStartupProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema WorkflowTemplateSpecTemplatesInitContainersStartupProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness. Minimum value is 1.
   * @schema WorkflowTemplateSpecTemplatesInitContainersStartupProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersStartupProbe#tcpSocket
   */
  readonly tcpSocket?: WorkflowTemplateSpecTemplatesInitContainersStartupProbeTcpSocket;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema WorkflowTemplateSpecTemplatesInitContainersStartupProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * volumeDevice describes a mapping of a raw block device within a container.
 *
 * @schema WorkflowTemplateSpecTemplatesInitContainersVolumeDevices
 */
export interface WorkflowTemplateSpecTemplatesInitContainersVolumeDevices {
  /**
   * devicePath is the path inside of the container that the device will be mapped to.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersVolumeDevices#devicePath
   */
  readonly devicePath: string;

  /**
   * name must match the name of a persistentVolumeClaim in the pod
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersVolumeDevices#name
   */
  readonly name: string;

}

/**
 * VolumeMount describes a mounting of a Volume within a container.
 *
 * @schema WorkflowTemplateSpecTemplatesInitContainersVolumeMounts
 */
export interface WorkflowTemplateSpecTemplatesInitContainersVolumeMounts {
  /**
   * Path within the container at which the volume should be mounted.  Must not contain ':'.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersVolumeMounts#mountPath
   */
  readonly mountPath: string;

  /**
   * mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersVolumeMounts#mountPropagation
   */
  readonly mountPropagation?: string;

  /**
   * This must match the Name of a Volume.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersVolumeMounts#name
   */
  readonly name: string;

  /**
   * Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
   *
   * @default false.
   * @schema WorkflowTemplateSpecTemplatesInitContainersVolumeMounts#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
   *
   * @default volume's root).
   * @schema WorkflowTemplateSpecTemplatesInitContainersVolumeMounts#subPath
   */
  readonly subPath?: string;

  /**
   * Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive. This field is beta in 1.15.
   *
   * @default volume's root). SubPathExpr and SubPath are mutually exclusive. This field is beta in 1.15.
   * @schema WorkflowTemplateSpecTemplatesInitContainersVolumeMounts#subPathExpr
   */
  readonly subPathExpr?: string;

}

/**
 * Artifact indicates an artifact to place at a specified path
 *
 * @schema WorkflowTemplateSpecTemplatesInputsArtifacts
 */
export interface WorkflowTemplateSpecTemplatesInputsArtifacts {
  /**
   * ArchiveStrategy describes how to archive files/directory when saving artifacts
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifacts#archive
   */
  readonly archive?: WorkflowTemplateSpecTemplatesInputsArtifactsArchive;

  /**
   * ArchiveLogs indicates if the container logs should be archived
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifacts#archiveLogs
   */
  readonly archiveLogs?: boolean;

  /**
   * ArtifactoryArtifact is the location of an artifactory artifact
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifacts#artifactory
   */
  readonly artifactory?: WorkflowTemplateSpecTemplatesInputsArtifactsArtifactory;

  /**
   * From allows an artifact to reference an artifact from a previous step
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifacts#from
   */
  readonly from?: string;

  /**
   * GCSArtifact is the location of a GCS artifact
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifacts#gcs
   */
  readonly gcs?: WorkflowTemplateSpecTemplatesInputsArtifactsGcs;

  /**
   * GitArtifact is the location of an git artifact
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifacts#git
   */
  readonly git?: WorkflowTemplateSpecTemplatesInputsArtifactsGit;

  /**
   * GlobalName exports an output artifact to the global scope, making it available as '{{io.argoproj.workflow.v1alpha1.outputs.artifacts.XXXX}} and in workflow.status.outputs.artifacts
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifacts#globalName
   */
  readonly globalName?: string;

  /**
   * HDFSArtifact is the location of an HDFS artifact
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifacts#hdfs
   */
  readonly hdfs?: WorkflowTemplateSpecTemplatesInputsArtifactsHdfs;

  /**
   * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifacts#http
   */
  readonly http?: WorkflowTemplateSpecTemplatesInputsArtifactsHttp;

  /**
   * mode bits to use on this file, must be a value between 0 and 0777 set when loading input artifacts.
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifacts#mode
   */
  readonly mode?: number;

  /**
   * name of the artifact. must be unique within a template's inputs/outputs.
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifacts#name
   */
  readonly name: string;

  /**
   * Make Artifacts optional, if Artifacts doesn't generate or exist
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifacts#optional
   */
  readonly optional?: boolean;

  /**
   * OSSArtifact is the location of an Alibaba Cloud OSS artifact
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifacts#oss
   */
  readonly oss?: WorkflowTemplateSpecTemplatesInputsArtifactsOss;

  /**
   * Path is the container path to the artifact
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifacts#path
   */
  readonly path?: string;

  /**
   * RawArtifact allows raw string content to be placed as an artifact in a container
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifacts#raw
   */
  readonly raw?: WorkflowTemplateSpecTemplatesInputsArtifactsRaw;

  /**
   * S3Artifact is the location of an S3 artifact
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifacts#s3
   */
  readonly s3?: WorkflowTemplateSpecTemplatesInputsArtifactsS3;

}

/**
 * Parameter indicate a passed string parameter to a service template with an optional default value
 *
 * @schema WorkflowTemplateSpecTemplatesInputsParameters
 */
export interface WorkflowTemplateSpecTemplatesInputsParameters {
  /**
   * @schema WorkflowTemplateSpecTemplatesInputsParameters#default
   */
  readonly default?: string;

  /**
   * GlobalName exports an output parameter to the global scope, making it available as '{{io.argoproj.workflow.v1alpha1.outputs.parameters.XXXX}} and in workflow.status.outputs.parameters
   *
   * @schema WorkflowTemplateSpecTemplatesInputsParameters#globalName
   */
  readonly globalName?: string;

  /**
   * Name is the parameter name
   *
   * @schema WorkflowTemplateSpecTemplatesInputsParameters#name
   */
  readonly name: string;

  /**
   * @schema WorkflowTemplateSpecTemplatesInputsParameters#value
   */
  readonly value?: string;

  /**
   * ValueFrom describes a location in which to obtain the value to a parameter
   *
   * @schema WorkflowTemplateSpecTemplatesInputsParameters#valueFrom
   */
  readonly valueFrom?: WorkflowTemplateSpecTemplatesInputsParametersValueFrom;

}

/**
 * Prometheus is a prometheus metric to be emitted
 *
 * @schema WorkflowTemplateSpecTemplatesMetricsPrometheus
 */
export interface WorkflowTemplateSpecTemplatesMetricsPrometheus {
  /**
   * Counter is a Counter prometheus metric
   *
   * @schema WorkflowTemplateSpecTemplatesMetricsPrometheus#counter
   */
  readonly counter?: WorkflowTemplateSpecTemplatesMetricsPrometheusCounter;

  /**
   * Gauge is a Gauge prometheus metric
   *
   * @schema WorkflowTemplateSpecTemplatesMetricsPrometheus#gauge
   */
  readonly gauge?: WorkflowTemplateSpecTemplatesMetricsPrometheusGauge;

  /**
   * Help is a string that describes the metric
   *
   * @schema WorkflowTemplateSpecTemplatesMetricsPrometheus#help
   */
  readonly help: string;

  /**
   * Histogram is a Histogram prometheus metric
   *
   * @schema WorkflowTemplateSpecTemplatesMetricsPrometheus#histogram
   */
  readonly histogram?: WorkflowTemplateSpecTemplatesMetricsPrometheusHistogram;

  /**
   * Labels is a list of metric labels
   *
   * @schema WorkflowTemplateSpecTemplatesMetricsPrometheus#labels
   */
  readonly labels?: WorkflowTemplateSpecTemplatesMetricsPrometheusLabels[];

  /**
   * Name is the name of the metric
   *
   * @schema WorkflowTemplateSpecTemplatesMetricsPrometheus#name
   */
  readonly name: string;

  /**
   * When is a conditional statement that decides when to emit the metric
   *
   * @schema WorkflowTemplateSpecTemplatesMetricsPrometheus#when
   */
  readonly when?: string;

}

/**
 * Artifact indicates an artifact to place at a specified path
 *
 * @schema WorkflowTemplateSpecTemplatesOutputsArtifacts
 */
export interface WorkflowTemplateSpecTemplatesOutputsArtifacts {
  /**
   * ArchiveStrategy describes how to archive files/directory when saving artifacts
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifacts#archive
   */
  readonly archive?: WorkflowTemplateSpecTemplatesOutputsArtifactsArchive;

  /**
   * ArchiveLogs indicates if the container logs should be archived
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifacts#archiveLogs
   */
  readonly archiveLogs?: boolean;

  /**
   * ArtifactoryArtifact is the location of an artifactory artifact
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifacts#artifactory
   */
  readonly artifactory?: WorkflowTemplateSpecTemplatesOutputsArtifactsArtifactory;

  /**
   * From allows an artifact to reference an artifact from a previous step
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifacts#from
   */
  readonly from?: string;

  /**
   * GCSArtifact is the location of a GCS artifact
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifacts#gcs
   */
  readonly gcs?: WorkflowTemplateSpecTemplatesOutputsArtifactsGcs;

  /**
   * GitArtifact is the location of an git artifact
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifacts#git
   */
  readonly git?: WorkflowTemplateSpecTemplatesOutputsArtifactsGit;

  /**
   * GlobalName exports an output artifact to the global scope, making it available as '{{io.argoproj.workflow.v1alpha1.outputs.artifacts.XXXX}} and in workflow.status.outputs.artifacts
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifacts#globalName
   */
  readonly globalName?: string;

  /**
   * HDFSArtifact is the location of an HDFS artifact
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifacts#hdfs
   */
  readonly hdfs?: WorkflowTemplateSpecTemplatesOutputsArtifactsHdfs;

  /**
   * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifacts#http
   */
  readonly http?: WorkflowTemplateSpecTemplatesOutputsArtifactsHttp;

  /**
   * mode bits to use on this file, must be a value between 0 and 0777 set when loading input artifacts.
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifacts#mode
   */
  readonly mode?: number;

  /**
   * name of the artifact. must be unique within a template's inputs/outputs.
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifacts#name
   */
  readonly name: string;

  /**
   * Make Artifacts optional, if Artifacts doesn't generate or exist
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifacts#optional
   */
  readonly optional?: boolean;

  /**
   * OSSArtifact is the location of an Alibaba Cloud OSS artifact
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifacts#oss
   */
  readonly oss?: WorkflowTemplateSpecTemplatesOutputsArtifactsOss;

  /**
   * Path is the container path to the artifact
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifacts#path
   */
  readonly path?: string;

  /**
   * RawArtifact allows raw string content to be placed as an artifact in a container
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifacts#raw
   */
  readonly raw?: WorkflowTemplateSpecTemplatesOutputsArtifactsRaw;

  /**
   * S3Artifact is the location of an S3 artifact
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifacts#s3
   */
  readonly s3?: WorkflowTemplateSpecTemplatesOutputsArtifactsS3;

}

/**
 * Parameter indicate a passed string parameter to a service template with an optional default value
 *
 * @schema WorkflowTemplateSpecTemplatesOutputsParameters
 */
export interface WorkflowTemplateSpecTemplatesOutputsParameters {
  /**
   * @schema WorkflowTemplateSpecTemplatesOutputsParameters#default
   */
  readonly default?: string;

  /**
   * GlobalName exports an output parameter to the global scope, making it available as '{{io.argoproj.workflow.v1alpha1.outputs.parameters.XXXX}} and in workflow.status.outputs.parameters
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsParameters#globalName
   */
  readonly globalName?: string;

  /**
   * Name is the parameter name
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsParameters#name
   */
  readonly name: string;

  /**
   * @schema WorkflowTemplateSpecTemplatesOutputsParameters#value
   */
  readonly value?: string;

  /**
   * ValueFrom describes a location in which to obtain the value to a parameter
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsParameters#valueFrom
   */
  readonly valueFrom?: WorkflowTemplateSpecTemplatesOutputsParametersValueFrom;

}

/**
 * Backoff is a backoff strategy to use within retryStrategy
 *
 * @schema WorkflowTemplateSpecTemplatesRetryStrategyBackoff
 */
export interface WorkflowTemplateSpecTemplatesRetryStrategyBackoff {
  /**
   * Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
   *
   * @schema WorkflowTemplateSpecTemplatesRetryStrategyBackoff#duration
   */
  readonly duration?: string;

  /**
   * Factor is a factor to multiply the base duration after each failed retry
   *
   * @schema WorkflowTemplateSpecTemplatesRetryStrategyBackoff#factor
   */
  readonly factor?: number;

  /**
   * MaxDuration is the maximum amount of time allowed for the backoff strategy
   *
   * @schema WorkflowTemplateSpecTemplatesRetryStrategyBackoff#maxDuration
   */
  readonly maxDuration?: string;

}

/**
 * EnvVar represents an environment variable present in a Container.
 *
 * @schema WorkflowTemplateSpecTemplatesScriptEnv
 */
export interface WorkflowTemplateSpecTemplatesScriptEnv {
  /**
   * Name of the environment variable. Must be a C_IDENTIFIER.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptEnv#name
   */
  readonly name: string;

  /**
   * Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
   *
   * @default .
   * @schema WorkflowTemplateSpecTemplatesScriptEnv#value
   */
  readonly value?: string;

  /**
   * EnvVarSource represents a source for the value of an EnvVar.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptEnv#valueFrom
   */
  readonly valueFrom?: WorkflowTemplateSpecTemplatesScriptEnvValueFrom;

}

/**
 * EnvFromSource represents the source of a set of ConfigMaps
 *
 * @schema WorkflowTemplateSpecTemplatesScriptEnvFrom
 */
export interface WorkflowTemplateSpecTemplatesScriptEnvFrom {
  /**
   * ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.

The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptEnvFrom#configMapRef
   */
  readonly configMapRef?: WorkflowTemplateSpecTemplatesScriptEnvFromConfigMapRef;

  /**
   * An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptEnvFrom#prefix
   */
  readonly prefix?: string;

  /**
   * SecretEnvSource selects a Secret to populate the environment variables with.

The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptEnvFrom#secretRef
   */
  readonly secretRef?: WorkflowTemplateSpecTemplatesScriptEnvFromSecretRef;

}

/**
 * Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.
 *
 * @schema WorkflowTemplateSpecTemplatesScriptLifecycle
 */
export interface WorkflowTemplateSpecTemplatesScriptLifecycle {
  /**
   * Handler defines a specific action that should be taken
   *
   * @schema WorkflowTemplateSpecTemplatesScriptLifecycle#postStart
   */
  readonly postStart?: WorkflowTemplateSpecTemplatesScriptLifecyclePostStart;

  /**
   * Handler defines a specific action that should be taken
   *
   * @schema WorkflowTemplateSpecTemplatesScriptLifecycle#preStop
   */
  readonly preStop?: WorkflowTemplateSpecTemplatesScriptLifecyclePreStop;

}

/**
 * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
 *
 * @schema WorkflowTemplateSpecTemplatesScriptLivenessProbe
 */
export interface WorkflowTemplateSpecTemplatesScriptLivenessProbe {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptLivenessProbe#exec
   */
  readonly exec?: WorkflowTemplateSpecTemplatesScriptLivenessProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema WorkflowTemplateSpecTemplatesScriptLivenessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptLivenessProbe#httpGet
   */
  readonly httpGet?: WorkflowTemplateSpecTemplatesScriptLivenessProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema WorkflowTemplateSpecTemplatesScriptLivenessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema WorkflowTemplateSpecTemplatesScriptLivenessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness. Minimum value is 1.
   * @schema WorkflowTemplateSpecTemplatesScriptLivenessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema WorkflowTemplateSpecTemplatesScriptLivenessProbe#tcpSocket
   */
  readonly tcpSocket?: WorkflowTemplateSpecTemplatesScriptLivenessProbeTcpSocket;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema WorkflowTemplateSpecTemplatesScriptLivenessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * ContainerPort represents a network port in a single container.
 *
 * @schema WorkflowTemplateSpecTemplatesScriptPorts
 */
export interface WorkflowTemplateSpecTemplatesScriptPorts {
  /**
   * Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptPorts#containerPort
   */
  readonly containerPort: number;

  /**
   * What host IP to bind the external port to.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptPorts#hostIP
   */
  readonly hostIP?: string;

  /**
   * Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptPorts#hostPort
   */
  readonly hostPort?: number;

  /**
   * If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptPorts#name
   */
  readonly name?: string;

  /**
   * Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
   *
   * @default TCP".
   * @schema WorkflowTemplateSpecTemplatesScriptPorts#protocol
   */
  readonly protocol?: string;

}

/**
 * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
 *
 * @schema WorkflowTemplateSpecTemplatesScriptReadinessProbe
 */
export interface WorkflowTemplateSpecTemplatesScriptReadinessProbe {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptReadinessProbe#exec
   */
  readonly exec?: WorkflowTemplateSpecTemplatesScriptReadinessProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema WorkflowTemplateSpecTemplatesScriptReadinessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptReadinessProbe#httpGet
   */
  readonly httpGet?: WorkflowTemplateSpecTemplatesScriptReadinessProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema WorkflowTemplateSpecTemplatesScriptReadinessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema WorkflowTemplateSpecTemplatesScriptReadinessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness. Minimum value is 1.
   * @schema WorkflowTemplateSpecTemplatesScriptReadinessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema WorkflowTemplateSpecTemplatesScriptReadinessProbe#tcpSocket
   */
  readonly tcpSocket?: WorkflowTemplateSpecTemplatesScriptReadinessProbeTcpSocket;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema WorkflowTemplateSpecTemplatesScriptReadinessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * ResourceRequirements describes the compute resource requirements.
 *
 * @schema WorkflowTemplateSpecTemplatesScriptResources
 */
export interface WorkflowTemplateSpecTemplatesScriptResources {
  /**
   * Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
   *
   * @schema WorkflowTemplateSpecTemplatesScriptResources#limits
   */
  readonly limits?: { [key: string]: string };

  /**
   * Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
   *
   * @schema WorkflowTemplateSpecTemplatesScriptResources#requests
   */
  readonly requests?: { [key: string]: string };

}

/**
 * SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.
 *
 * @schema WorkflowTemplateSpecTemplatesScriptSecurityContext
 */
export interface WorkflowTemplateSpecTemplatesScriptSecurityContext {
  /**
   * AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN
   *
   * @schema WorkflowTemplateSpecTemplatesScriptSecurityContext#allowPrivilegeEscalation
   */
  readonly allowPrivilegeEscalation?: boolean;

  /**
   * Adds and removes POSIX capabilities from running containers.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptSecurityContext#capabilities
   */
  readonly capabilities?: WorkflowTemplateSpecTemplatesScriptSecurityContextCapabilities;

  /**
   * Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.
   *
   * @default false.
   * @schema WorkflowTemplateSpecTemplatesScriptSecurityContext#privileged
   */
  readonly privileged?: boolean;

  /**
   * procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptSecurityContext#procMount
   */
  readonly procMount?: string;

  /**
   * Whether this container has a read-only root filesystem. Default is false.
   *
   * @default false.
   * @schema WorkflowTemplateSpecTemplatesScriptSecurityContext#readOnlyRootFilesystem
   */
  readonly readOnlyRootFilesystem?: boolean;

  /**
   * The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @default user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   * @schema WorkflowTemplateSpecTemplatesScriptSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * SELinuxOptions are the labels to be applied to the container
   *
   * @schema WorkflowTemplateSpecTemplatesScriptSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: WorkflowTemplateSpecTemplatesScriptSecurityContextSeLinuxOptions;

  /**
   * WindowsSecurityContextOptions contain Windows-specific options and credentials.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptSecurityContext#windowsOptions
   */
  readonly windowsOptions?: WorkflowTemplateSpecTemplatesScriptSecurityContextWindowsOptions;

}

/**
 * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
 *
 * @schema WorkflowTemplateSpecTemplatesScriptStartupProbe
 */
export interface WorkflowTemplateSpecTemplatesScriptStartupProbe {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptStartupProbe#exec
   */
  readonly exec?: WorkflowTemplateSpecTemplatesScriptStartupProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema WorkflowTemplateSpecTemplatesScriptStartupProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptStartupProbe#httpGet
   */
  readonly httpGet?: WorkflowTemplateSpecTemplatesScriptStartupProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema WorkflowTemplateSpecTemplatesScriptStartupProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema WorkflowTemplateSpecTemplatesScriptStartupProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness. Minimum value is 1.
   * @schema WorkflowTemplateSpecTemplatesScriptStartupProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema WorkflowTemplateSpecTemplatesScriptStartupProbe#tcpSocket
   */
  readonly tcpSocket?: WorkflowTemplateSpecTemplatesScriptStartupProbeTcpSocket;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema WorkflowTemplateSpecTemplatesScriptStartupProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * volumeDevice describes a mapping of a raw block device within a container.
 *
 * @schema WorkflowTemplateSpecTemplatesScriptVolumeDevices
 */
export interface WorkflowTemplateSpecTemplatesScriptVolumeDevices {
  /**
   * devicePath is the path inside of the container that the device will be mapped to.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptVolumeDevices#devicePath
   */
  readonly devicePath: string;

  /**
   * name must match the name of a persistentVolumeClaim in the pod
   *
   * @schema WorkflowTemplateSpecTemplatesScriptVolumeDevices#name
   */
  readonly name: string;

}

/**
 * VolumeMount describes a mounting of a Volume within a container.
 *
 * @schema WorkflowTemplateSpecTemplatesScriptVolumeMounts
 */
export interface WorkflowTemplateSpecTemplatesScriptVolumeMounts {
  /**
   * Path within the container at which the volume should be mounted.  Must not contain ':'.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptVolumeMounts#mountPath
   */
  readonly mountPath: string;

  /**
   * mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptVolumeMounts#mountPropagation
   */
  readonly mountPropagation?: string;

  /**
   * This must match the Name of a Volume.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptVolumeMounts#name
   */
  readonly name: string;

  /**
   * Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
   *
   * @default false.
   * @schema WorkflowTemplateSpecTemplatesScriptVolumeMounts#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
   *
   * @default volume's root).
   * @schema WorkflowTemplateSpecTemplatesScriptVolumeMounts#subPath
   */
  readonly subPath?: string;

  /**
   * Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive. This field is beta in 1.15.
   *
   * @default volume's root). SubPathExpr and SubPath are mutually exclusive. This field is beta in 1.15.
   * @schema WorkflowTemplateSpecTemplatesScriptVolumeMounts#subPathExpr
   */
  readonly subPathExpr?: string;

}

/**
 * SELinuxOptions are the labels to be applied to the container
 *
 * @schema WorkflowTemplateSpecTemplatesSecurityContextSeLinuxOptions
 */
export interface WorkflowTemplateSpecTemplatesSecurityContextSeLinuxOptions {
  /**
   * Level is SELinux level label that applies to the container.
   *
   * @schema WorkflowTemplateSpecTemplatesSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * Role is a SELinux role label that applies to the container.
   *
   * @schema WorkflowTemplateSpecTemplatesSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * Type is a SELinux type label that applies to the container.
   *
   * @schema WorkflowTemplateSpecTemplatesSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * User is a SELinux user label that applies to the container.
   *
   * @schema WorkflowTemplateSpecTemplatesSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * Sysctl defines a kernel parameter to be set
 *
 * @schema WorkflowTemplateSpecTemplatesSecurityContextSysctls
 */
export interface WorkflowTemplateSpecTemplatesSecurityContextSysctls {
  /**
   * Name of a property to set
   *
   * @schema WorkflowTemplateSpecTemplatesSecurityContextSysctls#name
   */
  readonly name: string;

  /**
   * Value of a property to set
   *
   * @schema WorkflowTemplateSpecTemplatesSecurityContextSysctls#value
   */
  readonly value: string;

}

/**
 * WindowsSecurityContextOptions contain Windows-specific options and credentials.
 *
 * @schema WorkflowTemplateSpecTemplatesSecurityContextWindowsOptions
 */
export interface WorkflowTemplateSpecTemplatesSecurityContextWindowsOptions {
  /**
   * GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
   *
   * @schema WorkflowTemplateSpecTemplatesSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * GMSACredentialSpecName is the name of the GMSA credential spec to use. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
   *
   * @schema WorkflowTemplateSpecTemplatesSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

}

/**
 * EnvVar represents an environment variable present in a Container.
 *
 * @schema WorkflowTemplateSpecTemplatesSidecarsEnv
 */
export interface WorkflowTemplateSpecTemplatesSidecarsEnv {
  /**
   * Name of the environment variable. Must be a C_IDENTIFIER.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsEnv#name
   */
  readonly name: string;

  /**
   * Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
   *
   * @default .
   * @schema WorkflowTemplateSpecTemplatesSidecarsEnv#value
   */
  readonly value?: string;

  /**
   * EnvVarSource represents a source for the value of an EnvVar.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsEnv#valueFrom
   */
  readonly valueFrom?: WorkflowTemplateSpecTemplatesSidecarsEnvValueFrom;

}

/**
 * EnvFromSource represents the source of a set of ConfigMaps
 *
 * @schema WorkflowTemplateSpecTemplatesSidecarsEnvFrom
 */
export interface WorkflowTemplateSpecTemplatesSidecarsEnvFrom {
  /**
   * ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.

The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsEnvFrom#configMapRef
   */
  readonly configMapRef?: WorkflowTemplateSpecTemplatesSidecarsEnvFromConfigMapRef;

  /**
   * An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsEnvFrom#prefix
   */
  readonly prefix?: string;

  /**
   * SecretEnvSource selects a Secret to populate the environment variables with.

The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsEnvFrom#secretRef
   */
  readonly secretRef?: WorkflowTemplateSpecTemplatesSidecarsEnvFromSecretRef;

}

/**
 * Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.
 *
 * @schema WorkflowTemplateSpecTemplatesSidecarsLifecycle
 */
export interface WorkflowTemplateSpecTemplatesSidecarsLifecycle {
  /**
   * Handler defines a specific action that should be taken
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsLifecycle#postStart
   */
  readonly postStart?: WorkflowTemplateSpecTemplatesSidecarsLifecyclePostStart;

  /**
   * Handler defines a specific action that should be taken
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsLifecycle#preStop
   */
  readonly preStop?: WorkflowTemplateSpecTemplatesSidecarsLifecyclePreStop;

}

/**
 * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
 *
 * @schema WorkflowTemplateSpecTemplatesSidecarsLivenessProbe
 */
export interface WorkflowTemplateSpecTemplatesSidecarsLivenessProbe {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsLivenessProbe#exec
   */
  readonly exec?: WorkflowTemplateSpecTemplatesSidecarsLivenessProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema WorkflowTemplateSpecTemplatesSidecarsLivenessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsLivenessProbe#httpGet
   */
  readonly httpGet?: WorkflowTemplateSpecTemplatesSidecarsLivenessProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsLivenessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema WorkflowTemplateSpecTemplatesSidecarsLivenessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness. Minimum value is 1.
   * @schema WorkflowTemplateSpecTemplatesSidecarsLivenessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsLivenessProbe#tcpSocket
   */
  readonly tcpSocket?: WorkflowTemplateSpecTemplatesSidecarsLivenessProbeTcpSocket;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema WorkflowTemplateSpecTemplatesSidecarsLivenessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * ContainerPort represents a network port in a single container.
 *
 * @schema WorkflowTemplateSpecTemplatesSidecarsPorts
 */
export interface WorkflowTemplateSpecTemplatesSidecarsPorts {
  /**
   * Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsPorts#containerPort
   */
  readonly containerPort: number;

  /**
   * What host IP to bind the external port to.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsPorts#hostIP
   */
  readonly hostIP?: string;

  /**
   * Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsPorts#hostPort
   */
  readonly hostPort?: number;

  /**
   * If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsPorts#name
   */
  readonly name?: string;

  /**
   * Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
   *
   * @default TCP".
   * @schema WorkflowTemplateSpecTemplatesSidecarsPorts#protocol
   */
  readonly protocol?: string;

}

/**
 * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
 *
 * @schema WorkflowTemplateSpecTemplatesSidecarsReadinessProbe
 */
export interface WorkflowTemplateSpecTemplatesSidecarsReadinessProbe {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsReadinessProbe#exec
   */
  readonly exec?: WorkflowTemplateSpecTemplatesSidecarsReadinessProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema WorkflowTemplateSpecTemplatesSidecarsReadinessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsReadinessProbe#httpGet
   */
  readonly httpGet?: WorkflowTemplateSpecTemplatesSidecarsReadinessProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsReadinessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema WorkflowTemplateSpecTemplatesSidecarsReadinessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness. Minimum value is 1.
   * @schema WorkflowTemplateSpecTemplatesSidecarsReadinessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsReadinessProbe#tcpSocket
   */
  readonly tcpSocket?: WorkflowTemplateSpecTemplatesSidecarsReadinessProbeTcpSocket;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema WorkflowTemplateSpecTemplatesSidecarsReadinessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * ResourceRequirements describes the compute resource requirements.
 *
 * @schema WorkflowTemplateSpecTemplatesSidecarsResources
 */
export interface WorkflowTemplateSpecTemplatesSidecarsResources {
  /**
   * Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsResources#limits
   */
  readonly limits?: { [key: string]: string };

  /**
   * Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsResources#requests
   */
  readonly requests?: { [key: string]: string };

}

/**
 * SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.
 *
 * @schema WorkflowTemplateSpecTemplatesSidecarsSecurityContext
 */
export interface WorkflowTemplateSpecTemplatesSidecarsSecurityContext {
  /**
   * AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsSecurityContext#allowPrivilegeEscalation
   */
  readonly allowPrivilegeEscalation?: boolean;

  /**
   * Adds and removes POSIX capabilities from running containers.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsSecurityContext#capabilities
   */
  readonly capabilities?: WorkflowTemplateSpecTemplatesSidecarsSecurityContextCapabilities;

  /**
   * Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.
   *
   * @default false.
   * @schema WorkflowTemplateSpecTemplatesSidecarsSecurityContext#privileged
   */
  readonly privileged?: boolean;

  /**
   * procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsSecurityContext#procMount
   */
  readonly procMount?: string;

  /**
   * Whether this container has a read-only root filesystem. Default is false.
   *
   * @default false.
   * @schema WorkflowTemplateSpecTemplatesSidecarsSecurityContext#readOnlyRootFilesystem
   */
  readonly readOnlyRootFilesystem?: boolean;

  /**
   * The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @default user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   * @schema WorkflowTemplateSpecTemplatesSidecarsSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * SELinuxOptions are the labels to be applied to the container
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: WorkflowTemplateSpecTemplatesSidecarsSecurityContextSeLinuxOptions;

  /**
   * WindowsSecurityContextOptions contain Windows-specific options and credentials.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsSecurityContext#windowsOptions
   */
  readonly windowsOptions?: WorkflowTemplateSpecTemplatesSidecarsSecurityContextWindowsOptions;

}

/**
 * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
 *
 * @schema WorkflowTemplateSpecTemplatesSidecarsStartupProbe
 */
export interface WorkflowTemplateSpecTemplatesSidecarsStartupProbe {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsStartupProbe#exec
   */
  readonly exec?: WorkflowTemplateSpecTemplatesSidecarsStartupProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema WorkflowTemplateSpecTemplatesSidecarsStartupProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsStartupProbe#httpGet
   */
  readonly httpGet?: WorkflowTemplateSpecTemplatesSidecarsStartupProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsStartupProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema WorkflowTemplateSpecTemplatesSidecarsStartupProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness. Minimum value is 1.
   * @schema WorkflowTemplateSpecTemplatesSidecarsStartupProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsStartupProbe#tcpSocket
   */
  readonly tcpSocket?: WorkflowTemplateSpecTemplatesSidecarsStartupProbeTcpSocket;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema WorkflowTemplateSpecTemplatesSidecarsStartupProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * volumeDevice describes a mapping of a raw block device within a container.
 *
 * @schema WorkflowTemplateSpecTemplatesSidecarsVolumeDevices
 */
export interface WorkflowTemplateSpecTemplatesSidecarsVolumeDevices {
  /**
   * devicePath is the path inside of the container that the device will be mapped to.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsVolumeDevices#devicePath
   */
  readonly devicePath: string;

  /**
   * name must match the name of a persistentVolumeClaim in the pod
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsVolumeDevices#name
   */
  readonly name: string;

}

/**
 * VolumeMount describes a mounting of a Volume within a container.
 *
 * @schema WorkflowTemplateSpecTemplatesSidecarsVolumeMounts
 */
export interface WorkflowTemplateSpecTemplatesSidecarsVolumeMounts {
  /**
   * Path within the container at which the volume should be mounted.  Must not contain ':'.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsVolumeMounts#mountPath
   */
  readonly mountPath: string;

  /**
   * mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsVolumeMounts#mountPropagation
   */
  readonly mountPropagation?: string;

  /**
   * This must match the Name of a Volume.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsVolumeMounts#name
   */
  readonly name: string;

  /**
   * Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
   *
   * @default false.
   * @schema WorkflowTemplateSpecTemplatesSidecarsVolumeMounts#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
   *
   * @default volume's root).
   * @schema WorkflowTemplateSpecTemplatesSidecarsVolumeMounts#subPath
   */
  readonly subPath?: string;

  /**
   * Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive. This field is beta in 1.15.
   *
   * @default volume's root). SubPathExpr and SubPath are mutually exclusive. This field is beta in 1.15.
   * @schema WorkflowTemplateSpecTemplatesSidecarsVolumeMounts#subPathExpr
   */
  readonly subPathExpr?: string;

}

/**
 * Arguments to a template
 *
 * @schema WorkflowTemplateSpecTemplatesStepsArguments
 */
export interface WorkflowTemplateSpecTemplatesStepsArguments {
  /**
   * Artifacts is the list of artifacts to pass to the template or workflow
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArguments#artifacts
   */
  readonly artifacts?: WorkflowTemplateSpecTemplatesStepsArgumentsArtifacts[];

  /**
   * Parameters is the list of parameters to pass to the template or workflow
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArguments#parameters
   */
  readonly parameters?: WorkflowTemplateSpecTemplatesStepsArgumentsParameters[];

}

/**
 * ContinueOn defines if a workflow should continue even if a task or step fails/errors. It can be specified if the workflow should continue when the pod errors, fails or both.
 *
 * @schema WorkflowTemplateSpecTemplatesStepsContinueOn
 */
export interface WorkflowTemplateSpecTemplatesStepsContinueOn {
  /**
   * @schema WorkflowTemplateSpecTemplatesStepsContinueOn#error
   */
  readonly error?: boolean;

  /**
   * @schema WorkflowTemplateSpecTemplatesStepsContinueOn#failed
   */
  readonly failed?: boolean;

}

/**
 * TemplateRef is a reference of template resource.
 *
 * @schema WorkflowTemplateSpecTemplatesStepsTemplateRef
 */
export interface WorkflowTemplateSpecTemplatesStepsTemplateRef {
  /**
   * ClusterScope indicates the referred template is cluster scoped (i.e. a ClusterWorkflowTemplate).
   *
   * @schema WorkflowTemplateSpecTemplatesStepsTemplateRef#clusterScope
   */
  readonly clusterScope?: boolean;

  /**
   * Name is the resource name of the template.
   *
   * @schema WorkflowTemplateSpecTemplatesStepsTemplateRef#name
   */
  readonly name?: string;

  /**
   * RuntimeResolution skips validation at creation time. By enabling this option, you can create the referred workflow template before the actual runtime.
   *
   * @schema WorkflowTemplateSpecTemplatesStepsTemplateRef#runtimeResolution
   */
  readonly runtimeResolution?: boolean;

  /**
   * Template is the name of referred template in the resource.
   *
   * @schema WorkflowTemplateSpecTemplatesStepsTemplateRef#template
   */
  readonly template?: string;

}

/**
 * Sequence expands a workflow step into numeric range
 *
 * @schema WorkflowTemplateSpecTemplatesStepsWithSequence
 */
export interface WorkflowTemplateSpecTemplatesStepsWithSequence {
  /**
   * Count is number of elements in the sequence (default: 0). Not to be used with end
   *
   * @schema WorkflowTemplateSpecTemplatesStepsWithSequence#count
   */
  readonly count?: string;

  /**
   * Number at which to end the sequence (default: 0). Not to be used with Count
   *
   * @schema WorkflowTemplateSpecTemplatesStepsWithSequence#end
   */
  readonly end?: string;

  /**
   * Format is a printf format string to format the value in the sequence
   *
   * @schema WorkflowTemplateSpecTemplatesStepsWithSequence#format
   */
  readonly format?: string;

  /**
   * Number at which to start the sequence (default: 0)
   *
   * @schema WorkflowTemplateSpecTemplatesStepsWithSequence#start
   */
  readonly start?: string;

}

/**
 * Represents a Persistent Disk resource in AWS.

An AWS EBS disk must exist before mounting to a container. The disk must also be in the same AWS zone as the kubelet. An AWS EBS disk can only be mounted as read/write once. AWS EBS volumes support ownership management and SELinux relabeling.
 *
 * @schema WorkflowTemplateSpecTemplatesVolumesAwsElasticBlockStore
 */
export interface WorkflowTemplateSpecTemplatesVolumesAwsElasticBlockStore {
  /**
   * Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesAwsElasticBlockStore#fsType
   */
  readonly fsType?: string;

  /**
   * The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesAwsElasticBlockStore#partition
   */
  readonly partition?: number;

  /**
   * Specify "true" to force and set the ReadOnly property in VolumeMounts to "true". If omitted, the default is "false". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesAwsElasticBlockStore#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesAwsElasticBlockStore#volumeID
   */
  readonly volumeID: string;

}

/**
 * AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
 *
 * @schema WorkflowTemplateSpecTemplatesVolumesAzureDisk
 */
export interface WorkflowTemplateSpecTemplatesVolumesAzureDisk {
  /**
   * Host Caching mode: None, Read Only, Read Write.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesAzureDisk#cachingMode
   */
  readonly cachingMode?: string;

  /**
   * The Name of the data disk in the blob storage
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesAzureDisk#diskName
   */
  readonly diskName: string;

  /**
   * The URI the data disk in the blob storage
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesAzureDisk#diskURI
   */
  readonly diskURI: string;

  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesAzureDisk#fsType
   */
  readonly fsType?: string;

  /**
   * Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesAzureDisk#kind
   */
  readonly kind?: string;

  /**
   * Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema WorkflowTemplateSpecTemplatesVolumesAzureDisk#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
 *
 * @schema WorkflowTemplateSpecTemplatesVolumesAzureFile
 */
export interface WorkflowTemplateSpecTemplatesVolumesAzureFile {
  /**
   * Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema WorkflowTemplateSpecTemplatesVolumesAzureFile#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * the name of secret that contains Azure Storage Account Name and Key
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesAzureFile#secretName
   */
  readonly secretName: string;

  /**
   * Share Name
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesAzureFile#shareName
   */
  readonly shareName: string;

}

/**
 * Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling.
 *
 * @schema WorkflowTemplateSpecTemplatesVolumesCephfs
 */
export interface WorkflowTemplateSpecTemplatesVolumesCephfs {
  /**
   * Required: Monitors is a collection of Ceph monitors More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesCephfs#monitors
   */
  readonly monitors: string[];

  /**
   * Optional: Used as the mounted root, rather than the full Ceph tree, default is /
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesCephfs#path
   */
  readonly path?: string;

  /**
   * Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
   * @schema WorkflowTemplateSpecTemplatesVolumesCephfs#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesCephfs#secretFile
   */
  readonly secretFile?: string;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesCephfs#secretRef
   */
  readonly secretRef?: WorkflowTemplateSpecTemplatesVolumesCephfsSecretRef;

  /**
   * Optional: User is the rados user name, default is admin More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesCephfs#user
   */
  readonly user?: string;

}

/**
 * Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling.
 *
 * @schema WorkflowTemplateSpecTemplatesVolumesCinder
 */
export interface WorkflowTemplateSpecTemplatesVolumesCinder {
  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesCinder#fsType
   */
  readonly fsType?: string;

  /**
   * Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
   * @schema WorkflowTemplateSpecTemplatesVolumesCinder#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesCinder#secretRef
   */
  readonly secretRef?: WorkflowTemplateSpecTemplatesVolumesCinderSecretRef;

  /**
   * volume id used to identify the volume in cinder More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesCinder#volumeID
   */
  readonly volumeID: string;

}

/**
 * Adapts a ConfigMap into a volume.

The contents of the target ConfigMap's Data field will be presented in a volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. ConfigMap volumes support ownership management and SELinux relabeling.
 *
 * @schema WorkflowTemplateSpecTemplatesVolumesConfigMap
 */
export interface WorkflowTemplateSpecTemplatesVolumesConfigMap {
  /**
   * Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @default 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   * @schema WorkflowTemplateSpecTemplatesVolumesConfigMap#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesConfigMap#items
   */
  readonly items?: WorkflowTemplateSpecTemplatesVolumesConfigMapItems[];

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesConfigMap#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its keys must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Represents a source location of a volume to mount, managed by an external CSI driver
 *
 * @schema WorkflowTemplateSpecTemplatesVolumesCsi
 */
export interface WorkflowTemplateSpecTemplatesVolumesCsi {
  /**
   * Driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesCsi#driver
   */
  readonly driver: string;

  /**
   * Filesystem type to mount. Ex. "ext4", "xfs", "ntfs". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesCsi#fsType
   */
  readonly fsType?: string;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesCsi#nodePublishSecretRef
   */
  readonly nodePublishSecretRef?: WorkflowTemplateSpecTemplatesVolumesCsiNodePublishSecretRef;

  /**
   * Specifies a read-only configuration for the volume. Defaults to false (read/write).
   *
   * @default false (read/write).
   * @schema WorkflowTemplateSpecTemplatesVolumesCsi#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * VolumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesCsi#volumeAttributes
   */
  readonly volumeAttributes?: { [key: string]: string };

}

/**
 * DownwardAPIVolumeSource represents a volume containing downward API info. Downward API volumes support ownership management and SELinux relabeling.
 *
 * @schema WorkflowTemplateSpecTemplatesVolumesDownwardApi
 */
export interface WorkflowTemplateSpecTemplatesVolumesDownwardApi {
  /**
   * Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @default 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   * @schema WorkflowTemplateSpecTemplatesVolumesDownwardApi#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * Items is a list of downward API volume file
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesDownwardApi#items
   */
  readonly items?: WorkflowTemplateSpecTemplatesVolumesDownwardApiItems[];

}

/**
 * Represents an empty directory for a pod. Empty directory volumes support ownership management and SELinux relabeling.
 *
 * @schema WorkflowTemplateSpecTemplatesVolumesEmptyDir
 */
export interface WorkflowTemplateSpecTemplatesVolumesEmptyDir {
  /**
   * What type of storage medium should back this directory. The default is "" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesEmptyDir#medium
   */
  readonly medium?: string;

  /**
   * Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and Int64() accessors.

The serialization format is:

<quantity>        ::= <signedNumber><suffix>
  (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
<decimalSI>       ::= m | "" | k | M | G | T | P | E
  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
<decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  a. No precision is lost
  b. No fractional digits will be emitted
  c. The exponent (or suffix) is as large as possible.
The sign will be omitted unless the number is negative.

Examples:
  1.5 will be serialized as "1500m"
  1.5Gi will be serialized as "1536Mi"

Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.

Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesEmptyDir#sizeLimit
   */
  readonly sizeLimit?: string;

}

/**
 * Represents a Fibre Channel volume. Fibre Channel volumes can only be mounted as read/write once. Fibre Channel volumes support ownership management and SELinux relabeling.
 *
 * @schema WorkflowTemplateSpecTemplatesVolumesFc
 */
export interface WorkflowTemplateSpecTemplatesVolumesFc {
  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesFc#fsType
   */
  readonly fsType?: string;

  /**
   * Optional: FC target lun number
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesFc#lun
   */
  readonly lun?: number;

  /**
   * Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema WorkflowTemplateSpecTemplatesVolumesFc#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Optional: FC target worldwide names (WWNs)
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesFc#targetWWNs
   */
  readonly targetWWNs?: string[];

  /**
   * Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesFc#wwids
   */
  readonly wwids?: string[];

}

/**
 * FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
 *
 * @schema WorkflowTemplateSpecTemplatesVolumesFlexVolume
 */
export interface WorkflowTemplateSpecTemplatesVolumesFlexVolume {
  /**
   * Driver is the name of the driver to use for this volume.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesFlexVolume#driver
   */
  readonly driver: string;

  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesFlexVolume#fsType
   */
  readonly fsType?: string;

  /**
   * Optional: Extra command options if any.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesFlexVolume#options
   */
  readonly options?: { [key: string]: string };

  /**
   * Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema WorkflowTemplateSpecTemplatesVolumesFlexVolume#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesFlexVolume#secretRef
   */
  readonly secretRef?: WorkflowTemplateSpecTemplatesVolumesFlexVolumeSecretRef;

}

/**
 * Represents a Flocker volume mounted by the Flocker agent. One and only one of datasetName and datasetUUID should be set. Flocker volumes do not support ownership management or SELinux relabeling.
 *
 * @schema WorkflowTemplateSpecTemplatesVolumesFlocker
 */
export interface WorkflowTemplateSpecTemplatesVolumesFlocker {
  /**
   * Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesFlocker#datasetName
   */
  readonly datasetName?: string;

  /**
   * UUID of the dataset. This is unique identifier of a Flocker dataset
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesFlocker#datasetUUID
   */
  readonly datasetUUID?: string;

}

/**
 * Represents a Persistent Disk resource in Google Compute Engine.

A GCE PD must exist before mounting to a container. The disk must also be in the same GCE project and zone as the kubelet. A GCE PD can only be mounted as read/write once or read-only many times. GCE PDs support ownership management and SELinux relabeling.
 *
 * @schema WorkflowTemplateSpecTemplatesVolumesGcePersistentDisk
 */
export interface WorkflowTemplateSpecTemplatesVolumesGcePersistentDisk {
  /**
   * Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesGcePersistentDisk#fsType
   */
  readonly fsType?: string;

  /**
   * The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesGcePersistentDisk#partition
   */
  readonly partition?: number;

  /**
   * Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesGcePersistentDisk#pdName
   */
  readonly pdName: string;

  /**
   * ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
   *
   * @default false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
   * @schema WorkflowTemplateSpecTemplatesVolumesGcePersistentDisk#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Represents a volume that is populated with the contents of a git repository. Git repo volumes do not support ownership management. Git repo volumes support SELinux relabeling.

DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.
 *
 * @schema WorkflowTemplateSpecTemplatesVolumesGitRepo
 */
export interface WorkflowTemplateSpecTemplatesVolumesGitRepo {
  /**
   * Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesGitRepo#directory
   */
  readonly directory?: string;

  /**
   * Repository URL
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesGitRepo#repository
   */
  readonly repository: string;

  /**
   * Commit hash for the specified revision.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesGitRepo#revision
   */
  readonly revision?: string;

}

/**
 * Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling.
 *
 * @schema WorkflowTemplateSpecTemplatesVolumesGlusterfs
 */
export interface WorkflowTemplateSpecTemplatesVolumesGlusterfs {
  /**
   * EndpointsName is the endpoint name that details Glusterfs topology. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesGlusterfs#endpoints
   */
  readonly endpoints: string;

  /**
   * Path is the Glusterfs volume path. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesGlusterfs#path
   */
  readonly path: string;

  /**
   * ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod
   *
   * @default false. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod
   * @schema WorkflowTemplateSpecTemplatesVolumesGlusterfs#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Represents a host path mapped into a pod. Host path volumes do not support ownership management or SELinux relabeling.
 *
 * @schema WorkflowTemplateSpecTemplatesVolumesHostPath
 */
export interface WorkflowTemplateSpecTemplatesVolumesHostPath {
  /**
   * Path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesHostPath#path
   */
  readonly path: string;

  /**
   * Type for HostPath Volume Defaults to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
   *
   * @default More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
   * @schema WorkflowTemplateSpecTemplatesVolumesHostPath#type
   */
  readonly type?: string;

}

/**
 * Represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling.
 *
 * @schema WorkflowTemplateSpecTemplatesVolumesIscsi
 */
export interface WorkflowTemplateSpecTemplatesVolumesIscsi {
  /**
   * whether support iSCSI Discovery CHAP authentication
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesIscsi#chapAuthDiscovery
   */
  readonly chapAuthDiscovery?: boolean;

  /**
   * whether support iSCSI Session CHAP authentication
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesIscsi#chapAuthSession
   */
  readonly chapAuthSession?: boolean;

  /**
   * Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesIscsi#fsType
   */
  readonly fsType?: string;

  /**
   * Custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesIscsi#initiatorName
   */
  readonly initiatorName?: string;

  /**
   * Target iSCSI Qualified Name.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesIscsi#iqn
   */
  readonly iqn: string;

  /**
   * iSCSI Interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).
   *
   * @default default' (tcp).
   * @schema WorkflowTemplateSpecTemplatesVolumesIscsi#iscsiInterface
   */
  readonly iscsiInterface?: string;

  /**
   * iSCSI Target Lun number.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesIscsi#lun
   */
  readonly lun: number;

  /**
   * iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesIscsi#portals
   */
  readonly portals?: string[];

  /**
   * ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.
   *
   * @default false.
   * @schema WorkflowTemplateSpecTemplatesVolumesIscsi#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesIscsi#secretRef
   */
  readonly secretRef?: WorkflowTemplateSpecTemplatesVolumesIscsiSecretRef;

  /**
   * iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesIscsi#targetPortal
   */
  readonly targetPortal: string;

}

/**
 * Represents an NFS mount that lasts the lifetime of a pod. NFS volumes do not support ownership management or SELinux relabeling.
 *
 * @schema WorkflowTemplateSpecTemplatesVolumesNfs
 */
export interface WorkflowTemplateSpecTemplatesVolumesNfs {
  /**
   * Path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesNfs#path
   */
  readonly path: string;

  /**
   * ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
   *
   * @default false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
   * @schema WorkflowTemplateSpecTemplatesVolumesNfs#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesNfs#server
   */
  readonly server: string;

}

/**
 * PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace. This volume finds the bound PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another type of volume that is owned by someone else (the system).
 *
 * @schema WorkflowTemplateSpecTemplatesVolumesPersistentVolumeClaim
 */
export interface WorkflowTemplateSpecTemplatesVolumesPersistentVolumeClaim {
  /**
   * ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesPersistentVolumeClaim#claimName
   */
  readonly claimName: string;

  /**
   * Will force the ReadOnly setting in VolumeMounts. Default false.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesPersistentVolumeClaim#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Represents a Photon Controller persistent disk resource.
 *
 * @schema WorkflowTemplateSpecTemplatesVolumesPhotonPersistentDisk
 */
export interface WorkflowTemplateSpecTemplatesVolumesPhotonPersistentDisk {
  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesPhotonPersistentDisk#fsType
   */
  readonly fsType?: string;

  /**
   * ID that identifies Photon Controller persistent disk
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesPhotonPersistentDisk#pdID
   */
  readonly pdID: string;

}

/**
 * PortworxVolumeSource represents a Portworx volume resource.
 *
 * @schema WorkflowTemplateSpecTemplatesVolumesPortworxVolume
 */
export interface WorkflowTemplateSpecTemplatesVolumesPortworxVolume {
  /**
   * FSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesPortworxVolume#fsType
   */
  readonly fsType?: string;

  /**
   * Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema WorkflowTemplateSpecTemplatesVolumesPortworxVolume#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * VolumeID uniquely identifies a Portworx volume
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesPortworxVolume#volumeID
   */
  readonly volumeID: string;

}

/**
 * Represents a projected volume source
 *
 * @schema WorkflowTemplateSpecTemplatesVolumesProjected
 */
export interface WorkflowTemplateSpecTemplatesVolumesProjected {
  /**
   * Mode bits to use on created files by default. Must be a value between 0 and 0777. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesProjected#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * list of volume projections
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesProjected#sources
   */
  readonly sources: WorkflowTemplateSpecTemplatesVolumesProjectedSources[];

}

/**
 * Represents a Quobyte mount that lasts the lifetime of a pod. Quobyte volumes do not support ownership management or SELinux relabeling.
 *
 * @schema WorkflowTemplateSpecTemplatesVolumesQuobyte
 */
export interface WorkflowTemplateSpecTemplatesVolumesQuobyte {
  /**
   * Group to map volume access to Default is no group
   *
   * @default no group
   * @schema WorkflowTemplateSpecTemplatesVolumesQuobyte#group
   */
  readonly group?: string;

  /**
   * ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.
   *
   * @default false.
   * @schema WorkflowTemplateSpecTemplatesVolumesQuobyte#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesQuobyte#registry
   */
  readonly registry: string;

  /**
   * Tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesQuobyte#tenant
   */
  readonly tenant?: string;

  /**
   * User to map volume access to Defaults to serivceaccount user
   *
   * @default serivceaccount user
   * @schema WorkflowTemplateSpecTemplatesVolumesQuobyte#user
   */
  readonly user?: string;

  /**
   * Volume is a string that references an already created Quobyte volume by name.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesQuobyte#volume
   */
  readonly volume: string;

}

/**
 * Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling.
 *
 * @schema WorkflowTemplateSpecTemplatesVolumesRbd
 */
export interface WorkflowTemplateSpecTemplatesVolumesRbd {
  /**
   * Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesRbd#fsType
   */
  readonly fsType?: string;

  /**
   * The rados image name. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesRbd#image
   */
  readonly image: string;

  /**
   * Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   *
   * @default etc/ceph/keyring. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   * @schema WorkflowTemplateSpecTemplatesVolumesRbd#keyring
   */
  readonly keyring?: string;

  /**
   * A collection of Ceph monitors. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesRbd#monitors
   */
  readonly monitors: string[];

  /**
   * The rados pool name. Default is rbd. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   *
   * @default rbd. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   * @schema WorkflowTemplateSpecTemplatesVolumesRbd#pool
   */
  readonly pool?: string;

  /**
   * ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   *
   * @default false. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   * @schema WorkflowTemplateSpecTemplatesVolumesRbd#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesRbd#secretRef
   */
  readonly secretRef?: WorkflowTemplateSpecTemplatesVolumesRbdSecretRef;

  /**
   * The rados user name. Default is admin. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   *
   * @default admin. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   * @schema WorkflowTemplateSpecTemplatesVolumesRbd#user
   */
  readonly user?: string;

}

/**
 * ScaleIOVolumeSource represents a persistent ScaleIO volume
 *
 * @schema WorkflowTemplateSpecTemplatesVolumesScaleIo
 */
export interface WorkflowTemplateSpecTemplatesVolumesScaleIo {
  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Default is "xfs".
   *
   * @default xfs".
   * @schema WorkflowTemplateSpecTemplatesVolumesScaleIo#fsType
   */
  readonly fsType?: string;

  /**
   * The host address of the ScaleIO API Gateway.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesScaleIo#gateway
   */
  readonly gateway: string;

  /**
   * The name of the ScaleIO Protection Domain for the configured storage.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesScaleIo#protectionDomain
   */
  readonly protectionDomain?: string;

  /**
   * Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema WorkflowTemplateSpecTemplatesVolumesScaleIo#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesScaleIo#secretRef
   */
  readonly secretRef: WorkflowTemplateSpecTemplatesVolumesScaleIoSecretRef;

  /**
   * Flag to enable/disable SSL communication with Gateway, default false
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesScaleIo#sslEnabled
   */
  readonly sslEnabled?: boolean;

  /**
   * Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.
   *
   * @default ThinProvisioned.
   * @schema WorkflowTemplateSpecTemplatesVolumesScaleIo#storageMode
   */
  readonly storageMode?: string;

  /**
   * The ScaleIO Storage Pool associated with the protection domain.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesScaleIo#storagePool
   */
  readonly storagePool?: string;

  /**
   * The name of the storage system as configured in ScaleIO.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesScaleIo#system
   */
  readonly system: string;

  /**
   * The name of a volume already created in the ScaleIO system that is associated with this volume source.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesScaleIo#volumeName
   */
  readonly volumeName?: string;

}

/**
 * Adapts a Secret into a volume.

The contents of the target Secret's Data field will be presented in a volume as files using the keys in the Data field as the file names. Secret volumes support ownership management and SELinux relabeling.
 *
 * @schema WorkflowTemplateSpecTemplatesVolumesSecret
 */
export interface WorkflowTemplateSpecTemplatesVolumesSecret {
  /**
   * Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @default 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   * @schema WorkflowTemplateSpecTemplatesVolumesSecret#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesSecret#items
   */
  readonly items?: WorkflowTemplateSpecTemplatesVolumesSecretItems[];

  /**
   * Specify whether the Secret or its keys must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesSecret#optional
   */
  readonly optional?: boolean;

  /**
   * Name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesSecret#secretName
   */
  readonly secretName?: string;

}

/**
 * Represents a StorageOS persistent volume resource.
 *
 * @schema WorkflowTemplateSpecTemplatesVolumesStorageos
 */
export interface WorkflowTemplateSpecTemplatesVolumesStorageos {
  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesStorageos#fsType
   */
  readonly fsType?: string;

  /**
   * Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema WorkflowTemplateSpecTemplatesVolumesStorageos#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesStorageos#secretRef
   */
  readonly secretRef?: WorkflowTemplateSpecTemplatesVolumesStorageosSecretRef;

  /**
   * VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesStorageos#volumeName
   */
  readonly volumeName?: string;

  /**
   * VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to "default" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesStorageos#volumeNamespace
   */
  readonly volumeNamespace?: string;

}

/**
 * Represents a vSphere volume resource.
 *
 * @schema WorkflowTemplateSpecTemplatesVolumesVsphereVolume
 */
export interface WorkflowTemplateSpecTemplatesVolumesVsphereVolume {
  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesVsphereVolume#fsType
   */
  readonly fsType?: string;

  /**
   * Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesVsphereVolume#storagePolicyID
   */
  readonly storagePolicyID?: string;

  /**
   * Storage Policy Based Management (SPBM) profile name.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesVsphereVolume#storagePolicyName
   */
  readonly storagePolicyName?: string;

  /**
   * Path that identifies vSphere volume vmdk
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesVsphereVolume#volumePath
   */
  readonly volumePath: string;

}

/**
 * TypedLocalObjectReference contains enough information to let you locate the typed referenced object inside the same namespace.
 *
 * @schema WorkflowTemplateSpecVolumeClaimTemplatesSpecDataSource
 */
export interface WorkflowTemplateSpecVolumeClaimTemplatesSpecDataSource {
  /**
   * APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
   *
   * @schema WorkflowTemplateSpecVolumeClaimTemplatesSpecDataSource#apiGroup
   */
  readonly apiGroup?: string;

  /**
   * Kind is the type of resource being referenced
   *
   * @schema WorkflowTemplateSpecVolumeClaimTemplatesSpecDataSource#kind
   */
  readonly kind: string;

  /**
   * Name is the name of resource being referenced
   *
   * @schema WorkflowTemplateSpecVolumeClaimTemplatesSpecDataSource#name
   */
  readonly name: string;

}

/**
 * ResourceRequirements describes the compute resource requirements.
 *
 * @schema WorkflowTemplateSpecVolumeClaimTemplatesSpecResources
 */
export interface WorkflowTemplateSpecVolumeClaimTemplatesSpecResources {
  /**
   * Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
   *
   * @schema WorkflowTemplateSpecVolumeClaimTemplatesSpecResources#limits
   */
  readonly limits?: { [key: string]: string };

  /**
   * Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
   *
   * @schema WorkflowTemplateSpecVolumeClaimTemplatesSpecResources#requests
   */
  readonly requests?: { [key: string]: string };

}

/**
 * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
 *
 * @schema WorkflowTemplateSpecVolumeClaimTemplatesSpecSelector
 */
export interface WorkflowTemplateSpecVolumeClaimTemplatesSpecSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema WorkflowTemplateSpecVolumeClaimTemplatesSpecSelector#matchExpressions
   */
  readonly matchExpressions?: WorkflowTemplateSpecVolumeClaimTemplatesSpecSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema WorkflowTemplateSpecVolumeClaimTemplatesSpecSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * PersistentVolumeClaimCondition contails details about state of pvc
 *
 * @schema WorkflowTemplateSpecVolumeClaimTemplatesStatusConditions
 */
export interface WorkflowTemplateSpecVolumeClaimTemplatesStatusConditions {
  /**
   * Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
   *
   * @schema WorkflowTemplateSpecVolumeClaimTemplatesStatusConditions#lastProbeTime
   */
  readonly lastProbeTime?: Date;

  /**
   * Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
   *
   * @schema WorkflowTemplateSpecVolumeClaimTemplatesStatusConditions#lastTransitionTime
   */
  readonly lastTransitionTime?: Date;

  /**
   * Human-readable message indicating details about last transition.
   *
   * @schema WorkflowTemplateSpecVolumeClaimTemplatesStatusConditions#message
   */
  readonly message?: string;

  /**
   * Unique, this should be a short, machine understandable string that gives the reason for condition's last transition. If it reports "ResizeStarted" that means the underlying persistent volume is being resized.
   *
   * @schema WorkflowTemplateSpecVolumeClaimTemplatesStatusConditions#reason
   */
  readonly reason?: string;

  /**
   * @schema WorkflowTemplateSpecVolumeClaimTemplatesStatusConditions#status
   */
  readonly status: string;

  /**
   * @schema WorkflowTemplateSpecVolumeClaimTemplatesStatusConditions#type
   */
  readonly type: string;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema WorkflowTemplateSpecVolumesCephfsSecretRef
 */
export interface WorkflowTemplateSpecVolumesCephfsSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecVolumesCephfsSecretRef#name
   */
  readonly name?: string;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema WorkflowTemplateSpecVolumesCinderSecretRef
 */
export interface WorkflowTemplateSpecVolumesCinderSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecVolumesCinderSecretRef#name
   */
  readonly name?: string;

}

/**
 * Maps a string key to a path within a volume.
 *
 * @schema WorkflowTemplateSpecVolumesConfigMapItems
 */
export interface WorkflowTemplateSpecVolumesConfigMapItems {
  /**
   * The key to project.
   *
   * @schema WorkflowTemplateSpecVolumesConfigMapItems#key
   */
  readonly key: string;

  /**
   * Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema WorkflowTemplateSpecVolumesConfigMapItems#mode
   */
  readonly mode?: number;

  /**
   * The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
   *
   * @schema WorkflowTemplateSpecVolumesConfigMapItems#path
   */
  readonly path: string;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema WorkflowTemplateSpecVolumesCsiNodePublishSecretRef
 */
export interface WorkflowTemplateSpecVolumesCsiNodePublishSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecVolumesCsiNodePublishSecretRef#name
   */
  readonly name?: string;

}

/**
 * DownwardAPIVolumeFile represents information to create the file containing the pod field
 *
 * @schema WorkflowTemplateSpecVolumesDownwardApiItems
 */
export interface WorkflowTemplateSpecVolumesDownwardApiItems {
  /**
   * ObjectFieldSelector selects an APIVersioned field of an object.
   *
   * @schema WorkflowTemplateSpecVolumesDownwardApiItems#fieldRef
   */
  readonly fieldRef?: WorkflowTemplateSpecVolumesDownwardApiItemsFieldRef;

  /**
   * Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema WorkflowTemplateSpecVolumesDownwardApiItems#mode
   */
  readonly mode?: number;

  /**
   * Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
   *
   * @schema WorkflowTemplateSpecVolumesDownwardApiItems#path
   */
  readonly path: string;

  /**
   * ResourceFieldSelector represents container resources (cpu, memory) and their output format
   *
   * @schema WorkflowTemplateSpecVolumesDownwardApiItems#resourceFieldRef
   */
  readonly resourceFieldRef?: WorkflowTemplateSpecVolumesDownwardApiItemsResourceFieldRef;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema WorkflowTemplateSpecVolumesFlexVolumeSecretRef
 */
export interface WorkflowTemplateSpecVolumesFlexVolumeSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecVolumesFlexVolumeSecretRef#name
   */
  readonly name?: string;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema WorkflowTemplateSpecVolumesIscsiSecretRef
 */
export interface WorkflowTemplateSpecVolumesIscsiSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecVolumesIscsiSecretRef#name
   */
  readonly name?: string;

}

/**
 * Projection that may be projected along with other supported volume types
 *
 * @schema WorkflowTemplateSpecVolumesProjectedSources
 */
export interface WorkflowTemplateSpecVolumesProjectedSources {
  /**
   * Adapts a ConfigMap into a projected volume.

The contents of the target ConfigMap's Data field will be presented in a projected volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. Note that this is identical to a configmap volume source without the default mode.
   *
   * @schema WorkflowTemplateSpecVolumesProjectedSources#configMap
   */
  readonly configMap?: WorkflowTemplateSpecVolumesProjectedSourcesConfigMap;

  /**
   * Represents downward API info for projecting into a projected volume. Note that this is identical to a downwardAPI volume source without the default mode.
   *
   * @schema WorkflowTemplateSpecVolumesProjectedSources#downwardAPI
   */
  readonly downwardAPI?: WorkflowTemplateSpecVolumesProjectedSourcesDownwardApi;

  /**
   * Adapts a secret into a projected volume.

The contents of the target Secret's Data field will be presented in a projected volume as files using the keys in the Data field as the file names. Note that this is identical to a secret volume source without the default mode.
   *
   * @schema WorkflowTemplateSpecVolumesProjectedSources#secret
   */
  readonly secret?: WorkflowTemplateSpecVolumesProjectedSourcesSecret;

  /**
   * ServiceAccountTokenProjection represents a projected service account token volume. This projection can be used to insert a service account token into the pods runtime filesystem for use against APIs (Kubernetes API Server or otherwise).
   *
   * @schema WorkflowTemplateSpecVolumesProjectedSources#serviceAccountToken
   */
  readonly serviceAccountToken?: WorkflowTemplateSpecVolumesProjectedSourcesServiceAccountToken;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema WorkflowTemplateSpecVolumesRbdSecretRef
 */
export interface WorkflowTemplateSpecVolumesRbdSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecVolumesRbdSecretRef#name
   */
  readonly name?: string;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema WorkflowTemplateSpecVolumesScaleIoSecretRef
 */
export interface WorkflowTemplateSpecVolumesScaleIoSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecVolumesScaleIoSecretRef#name
   */
  readonly name?: string;

}

/**
 * Maps a string key to a path within a volume.
 *
 * @schema WorkflowTemplateSpecVolumesSecretItems
 */
export interface WorkflowTemplateSpecVolumesSecretItems {
  /**
   * The key to project.
   *
   * @schema WorkflowTemplateSpecVolumesSecretItems#key
   */
  readonly key: string;

  /**
   * Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema WorkflowTemplateSpecVolumesSecretItems#mode
   */
  readonly mode?: number;

  /**
   * The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
   *
   * @schema WorkflowTemplateSpecVolumesSecretItems#path
   */
  readonly path: string;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema WorkflowTemplateSpecVolumesStorageosSecretRef
 */
export interface WorkflowTemplateSpecVolumesStorageosSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecVolumesStorageosSecretRef#name
   */
  readonly name?: string;

}

/**
 * A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
 *
 * @schema WorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference
 */
export interface WorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
  /**
   * A list of node selector requirements by node's labels.
   *
   * @schema WorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference#matchExpressions
   */
  readonly matchExpressions?: WorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions[];

  /**
   * A list of node selector requirements by node's fields.
   *
   * @schema WorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference#matchFields
   */
  readonly matchFields?: WorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields[];

}

/**
 * A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
 *
 * @schema WorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms
 */
export interface WorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
  /**
   * A list of node selector requirements by node's labels.
   *
   * @schema WorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms#matchExpressions
   */
  readonly matchExpressions?: WorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions[];

  /**
   * A list of node selector requirements by node's fields.
   *
   * @schema WorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms#matchFields
   */
  readonly matchFields?: WorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields[];

}

/**
 * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
 *
 * @schema WorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm
 */
export interface WorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
  /**
   * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
   *
   * @schema WorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#labelSelector
   */
  readonly labelSelector?: WorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;

  /**
   * namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
   *
   * @schema WorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaces
   */
  readonly namespaces?: string[];

  /**
   * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
   *
   * @schema WorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
 *
 * @schema WorkflowTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector
 */
export interface WorkflowTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema WorkflowTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchExpressions
   */
  readonly matchExpressions?: WorkflowTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema WorkflowTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
 *
 * @schema WorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm
 */
export interface WorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
  /**
   * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
   *
   * @schema WorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#labelSelector
   */
  readonly labelSelector?: WorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;

  /**
   * namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
   *
   * @schema WorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaces
   */
  readonly namespaces?: string[];

  /**
   * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
   *
   * @schema WorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
 *
 * @schema WorkflowTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector
 */
export interface WorkflowTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema WorkflowTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchExpressions
   */
  readonly matchExpressions?: WorkflowTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema WorkflowTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * TarStrategy will tar and gzip the file or directory when saving
 *
 * @schema WorkflowTemplateSpecArgumentsArtifactsArchiveTar
 */
export interface WorkflowTemplateSpecArgumentsArtifactsArchiveTar {
  /**
   * CompressionLevel specifies the gzip compression level to use for the artifact. Defaults to gzip.DefaultCompression.
   *
   * @default gzip.DefaultCompression.
   * @schema WorkflowTemplateSpecArgumentsArtifactsArchiveTar#compressionLevel
   */
  readonly compressionLevel?: number;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecArgumentsArtifactsArtifactoryPasswordSecret
 */
export interface WorkflowTemplateSpecArgumentsArtifactsArtifactoryPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsArtifactoryPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsArtifactoryPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsArtifactoryPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecArgumentsArtifactsArtifactoryUsernameSecret
 */
export interface WorkflowTemplateSpecArgumentsArtifactsArtifactoryUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsArtifactoryUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsArtifactoryUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsArtifactoryUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecArgumentsArtifactsGcsServiceAccountKeySecret
 */
export interface WorkflowTemplateSpecArgumentsArtifactsGcsServiceAccountKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsGcsServiceAccountKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsGcsServiceAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsGcsServiceAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecArgumentsArtifactsGitPasswordSecret
 */
export interface WorkflowTemplateSpecArgumentsArtifactsGitPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsGitPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsGitPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsGitPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecArgumentsArtifactsGitSshPrivateKeySecret
 */
export interface WorkflowTemplateSpecArgumentsArtifactsGitSshPrivateKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsGitSshPrivateKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsGitSshPrivateKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsGitSshPrivateKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecArgumentsArtifactsGitUsernameSecret
 */
export interface WorkflowTemplateSpecArgumentsArtifactsGitUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsGitUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsGitUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsGitUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecArgumentsArtifactsHdfsKrbCCacheSecret
 */
export interface WorkflowTemplateSpecArgumentsArtifactsHdfsKrbCCacheSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsHdfsKrbCCacheSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsHdfsKrbCCacheSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsHdfsKrbCCacheSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Selects a key from a ConfigMap.
 *
 * @schema WorkflowTemplateSpecArgumentsArtifactsHdfsKrbConfigConfigMap
 */
export interface WorkflowTemplateSpecArgumentsArtifactsHdfsKrbConfigConfigMap {
  /**
   * The key to select.
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsHdfsKrbConfigConfigMap#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsHdfsKrbConfigConfigMap#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its key must be defined
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsHdfsKrbConfigConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecArgumentsArtifactsHdfsKrbKeytabSecret
 */
export interface WorkflowTemplateSpecArgumentsArtifactsHdfsKrbKeytabSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsHdfsKrbKeytabSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsHdfsKrbKeytabSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsHdfsKrbKeytabSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecArgumentsArtifactsOssAccessKeySecret
 */
export interface WorkflowTemplateSpecArgumentsArtifactsOssAccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsOssAccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsOssAccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsOssAccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecArgumentsArtifactsOssSecretKeySecret
 */
export interface WorkflowTemplateSpecArgumentsArtifactsOssSecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsOssSecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsOssSecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsOssSecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecArgumentsArtifactsS3AccessKeySecret
 */
export interface WorkflowTemplateSpecArgumentsArtifactsS3AccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsS3AccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsS3AccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsS3AccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecArgumentsArtifactsS3SecretKeySecret
 */
export interface WorkflowTemplateSpecArgumentsArtifactsS3SecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsS3SecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsS3SecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecArgumentsArtifactsS3SecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
 *
 * @schema WorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface WorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution#preference
   */
  readonly preference: WorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference;

  /**
   * Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms.
 *
 * @schema WorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface WorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * Required. A list of node selector terms. The terms are ORed.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution#nodeSelectorTerms
   */
  readonly nodeSelectorTerms: WorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms[];

}

/**
 * The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
 *
 * @schema WorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface WorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution#podAffinityTerm
   */
  readonly podAffinityTerm: WorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;

  /**
   * weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
 *
 * @schema WorkflowTemplateSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface WorkflowTemplateSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#labelSelector
   */
  readonly labelSelector?: WorkflowTemplateSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;

  /**
   * namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaces
   */
  readonly namespaces?: string[];

  /**
   * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
 *
 * @schema WorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface WorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution#podAffinityTerm
   */
  readonly podAffinityTerm: WorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;

  /**
   * weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
 *
 * @schema WorkflowTemplateSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface WorkflowTemplateSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#labelSelector
   */
  readonly labelSelector?: WorkflowTemplateSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;

  /**
   * namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaces
   */
  readonly namespaces?: string[];

  /**
   * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesArchiveLocationArtifactoryPasswordSecret
 */
export interface WorkflowTemplateSpecTemplatesArchiveLocationArtifactoryPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationArtifactoryPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationArtifactoryPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationArtifactoryPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesArchiveLocationArtifactoryUsernameSecret
 */
export interface WorkflowTemplateSpecTemplatesArchiveLocationArtifactoryUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationArtifactoryUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationArtifactoryUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationArtifactoryUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesArchiveLocationGcsServiceAccountKeySecret
 */
export interface WorkflowTemplateSpecTemplatesArchiveLocationGcsServiceAccountKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationGcsServiceAccountKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationGcsServiceAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationGcsServiceAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesArchiveLocationGitPasswordSecret
 */
export interface WorkflowTemplateSpecTemplatesArchiveLocationGitPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationGitPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationGitPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationGitPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesArchiveLocationGitSshPrivateKeySecret
 */
export interface WorkflowTemplateSpecTemplatesArchiveLocationGitSshPrivateKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationGitSshPrivateKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationGitSshPrivateKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationGitSshPrivateKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesArchiveLocationGitUsernameSecret
 */
export interface WorkflowTemplateSpecTemplatesArchiveLocationGitUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationGitUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationGitUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationGitUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesArchiveLocationHdfsKrbCCacheSecret
 */
export interface WorkflowTemplateSpecTemplatesArchiveLocationHdfsKrbCCacheSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationHdfsKrbCCacheSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationHdfsKrbCCacheSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationHdfsKrbCCacheSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Selects a key from a ConfigMap.
 *
 * @schema WorkflowTemplateSpecTemplatesArchiveLocationHdfsKrbConfigConfigMap
 */
export interface WorkflowTemplateSpecTemplatesArchiveLocationHdfsKrbConfigConfigMap {
  /**
   * The key to select.
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationHdfsKrbConfigConfigMap#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationHdfsKrbConfigConfigMap#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationHdfsKrbConfigConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesArchiveLocationHdfsKrbKeytabSecret
 */
export interface WorkflowTemplateSpecTemplatesArchiveLocationHdfsKrbKeytabSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationHdfsKrbKeytabSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationHdfsKrbKeytabSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationHdfsKrbKeytabSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesArchiveLocationOssAccessKeySecret
 */
export interface WorkflowTemplateSpecTemplatesArchiveLocationOssAccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationOssAccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationOssAccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationOssAccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesArchiveLocationOssSecretKeySecret
 */
export interface WorkflowTemplateSpecTemplatesArchiveLocationOssSecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationOssSecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationOssSecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationOssSecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesArchiveLocationS3AccessKeySecret
 */
export interface WorkflowTemplateSpecTemplatesArchiveLocationS3AccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationS3AccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationS3AccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationS3AccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesArchiveLocationS3SecretKeySecret
 */
export interface WorkflowTemplateSpecTemplatesArchiveLocationS3SecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationS3SecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationS3SecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesArchiveLocationS3SecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * ArchiveStrategy describes how to archive files/directory when saving artifacts
 *
 * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsArchive
 */
export interface WorkflowTemplateSpecTemplatesArgumentsArtifactsArchive {
  /**
   * NoneStrategy indicates to skip tar process and upload the files or directory tree as independent files. Note that if the artifact is a directory, the artifact driver must support the ability to save/load the directory appropriately.
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsArchive#none
   */
  readonly none?: any;

  /**
   * TarStrategy will tar and gzip the file or directory when saving
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsArchive#tar
   */
  readonly tar?: WorkflowTemplateSpecTemplatesArgumentsArtifactsArchiveTar;

}

/**
 * ArtifactoryArtifact is the location of an artifactory artifact
 *
 * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsArtifactory
 */
export interface WorkflowTemplateSpecTemplatesArgumentsArtifactsArtifactory {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsArtifactory#passwordSecret
   */
  readonly passwordSecret?: WorkflowTemplateSpecTemplatesArgumentsArtifactsArtifactoryPasswordSecret;

  /**
   * URL of the artifact
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsArtifactory#url
   */
  readonly url: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsArtifactory#usernameSecret
   */
  readonly usernameSecret?: WorkflowTemplateSpecTemplatesArgumentsArtifactsArtifactoryUsernameSecret;

}

/**
 * GCSArtifact is the location of a GCS artifact
 *
 * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsGcs
 */
export interface WorkflowTemplateSpecTemplatesArgumentsArtifactsGcs {
  /**
   * Bucket is the name of the bucket
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsGcs#bucket
   */
  readonly bucket: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsGcs#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsGcs#serviceAccountKeySecret
   */
  readonly serviceAccountKeySecret?: WorkflowTemplateSpecTemplatesArgumentsArtifactsGcsServiceAccountKeySecret;

}

/**
 * GitArtifact is the location of an git artifact
 *
 * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsGit
 */
export interface WorkflowTemplateSpecTemplatesArgumentsArtifactsGit {
  /**
   * Depth specifies clones/fetches should be shallow and include the given number of commits from the branch tip
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsGit#depth
   */
  readonly depth?: number;

  /**
   * Fetch specifies a number of refs that should be fetched before checkout
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsGit#fetch
   */
  readonly fetch?: string[];

  /**
   * InsecureIgnoreHostKey disables SSH strict host key checking during git clone
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsGit#insecureIgnoreHostKey
   */
  readonly insecureIgnoreHostKey?: boolean;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsGit#passwordSecret
   */
  readonly passwordSecret?: WorkflowTemplateSpecTemplatesArgumentsArtifactsGitPasswordSecret;

  /**
   * Repo is the git repository
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsGit#repo
   */
  readonly repo: string;

  /**
   * Revision is the git commit, tag, branch to checkout
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsGit#revision
   */
  readonly revision?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsGit#sshPrivateKeySecret
   */
  readonly sshPrivateKeySecret?: WorkflowTemplateSpecTemplatesArgumentsArtifactsGitSshPrivateKeySecret;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsGit#usernameSecret
   */
  readonly usernameSecret?: WorkflowTemplateSpecTemplatesArgumentsArtifactsGitUsernameSecret;

}

/**
 * HDFSArtifact is the location of an HDFS artifact
 *
 * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsHdfs
 */
export interface WorkflowTemplateSpecTemplatesArgumentsArtifactsHdfs {
  /**
   * Addresses is accessible addresses of HDFS name nodes
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsHdfs#addresses
   */
  readonly addresses: string[];

  /**
   * Force copies a file forcibly even if it exists (default: false)
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsHdfs#force
   */
  readonly force?: boolean;

  /**
   * HDFSUser is the user to access HDFS file system. It is ignored if either ccache or keytab is used.
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsHdfs#hdfsUser
   */
  readonly hdfsUser?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsHdfs#krbCCacheSecret
   */
  readonly krbCCacheSecret?: WorkflowTemplateSpecTemplatesArgumentsArtifactsHdfsKrbCCacheSecret;

  /**
   * Selects a key from a ConfigMap.
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsHdfs#krbConfigConfigMap
   */
  readonly krbConfigConfigMap?: WorkflowTemplateSpecTemplatesArgumentsArtifactsHdfsKrbConfigConfigMap;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsHdfs#krbKeytabSecret
   */
  readonly krbKeytabSecret?: WorkflowTemplateSpecTemplatesArgumentsArtifactsHdfsKrbKeytabSecret;

  /**
   * KrbRealm is the Kerberos realm used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsHdfs#krbRealm
   */
  readonly krbRealm?: string;

  /**
   * KrbServicePrincipalName is the principal name of Kerberos service It must be set if either ccache or keytab is used.
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsHdfs#krbServicePrincipalName
   */
  readonly krbServicePrincipalName?: string;

  /**
   * KrbUsername is the Kerberos username used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsHdfs#krbUsername
   */
  readonly krbUsername?: string;

  /**
   * Path is a file path in HDFS
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsHdfs#path
   */
  readonly path: string;

}

/**
 * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
 *
 * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsHttp
 */
export interface WorkflowTemplateSpecTemplatesArgumentsArtifactsHttp {
  /**
   * URL of the artifact
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsHttp#url
   */
  readonly url: string;

}

/**
 * OSSArtifact is the location of an Alibaba Cloud OSS artifact
 *
 * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsOss
 */
export interface WorkflowTemplateSpecTemplatesArgumentsArtifactsOss {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsOss#accessKeySecret
   */
  readonly accessKeySecret: WorkflowTemplateSpecTemplatesArgumentsArtifactsOssAccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsOss#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsOss#endpoint
   */
  readonly endpoint: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsOss#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsOss#secretKeySecret
   */
  readonly secretKeySecret: WorkflowTemplateSpecTemplatesArgumentsArtifactsOssSecretKeySecret;

}

/**
 * RawArtifact allows raw string content to be placed as an artifact in a container
 *
 * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsRaw
 */
export interface WorkflowTemplateSpecTemplatesArgumentsArtifactsRaw {
  /**
   * Data is the string contents of the artifact
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsRaw#data
   */
  readonly data: string;

}

/**
 * S3Artifact is the location of an S3 artifact
 *
 * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsS3
 */
export interface WorkflowTemplateSpecTemplatesArgumentsArtifactsS3 {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsS3#accessKeySecret
   */
  readonly accessKeySecret: WorkflowTemplateSpecTemplatesArgumentsArtifactsS3AccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsS3#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsS3#endpoint
   */
  readonly endpoint: string;

  /**
   * Insecure will connect to the service with TLS
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsS3#insecure
   */
  readonly insecure?: boolean;

  /**
   * Key is the key in the bucket where the artifact resides
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsS3#key
   */
  readonly key: string;

  /**
   * Region contains the optional bucket region
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsS3#region
   */
  readonly region?: string;

  /**
   * RoleARN is the Amazon Resource Name (ARN) of the role to assume.
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsS3#roleARN
   */
  readonly roleARN?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsS3#secretKeySecret
   */
  readonly secretKeySecret: WorkflowTemplateSpecTemplatesArgumentsArtifactsS3SecretKeySecret;

  /**
   * UseSDKCreds tells the driver to figure out credentials based on sdk defaults.
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsS3#useSDKCreds
   */
  readonly useSDKCreds?: boolean;

}

/**
 * ValueFrom describes a location in which to obtain the value to a parameter
 *
 * @schema WorkflowTemplateSpecTemplatesArgumentsParametersValueFrom
 */
export interface WorkflowTemplateSpecTemplatesArgumentsParametersValueFrom {
  /**
   * @schema WorkflowTemplateSpecTemplatesArgumentsParametersValueFrom#default
   */
  readonly default?: string;

  /**
   * JQFilter expression against the resource object in resource templates
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsParametersValueFrom#jqFilter
   */
  readonly jqFilter?: string;

  /**
   * JSONPath of a resource to retrieve an output parameter value from in resource templates
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsParametersValueFrom#jsonPath
   */
  readonly jsonPath?: string;

  /**
   * Parameter reference to a step or dag task in which to retrieve an output parameter value from (e.g. '{{steps.mystep.outputs.myparam}}')
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsParametersValueFrom#parameter
   */
  readonly parameter?: string;

  /**
   * Path in the container to retrieve an output parameter value from in container templates
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsParametersValueFrom#path
   */
  readonly path?: string;

}

/**
 * EnvVarSource represents a source for the value of an EnvVar.
 *
 * @schema WorkflowTemplateSpecTemplatesContainerEnvValueFrom
 */
export interface WorkflowTemplateSpecTemplatesContainerEnvValueFrom {
  /**
   * Selects a key from a ConfigMap.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerEnvValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: WorkflowTemplateSpecTemplatesContainerEnvValueFromConfigMapKeyRef;

  /**
   * ObjectFieldSelector selects an APIVersioned field of an object.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerEnvValueFrom#fieldRef
   */
  readonly fieldRef?: WorkflowTemplateSpecTemplatesContainerEnvValueFromFieldRef;

  /**
   * ResourceFieldSelector represents container resources (cpu, memory) and their output format
   *
   * @schema WorkflowTemplateSpecTemplatesContainerEnvValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: WorkflowTemplateSpecTemplatesContainerEnvValueFromResourceFieldRef;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerEnvValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: WorkflowTemplateSpecTemplatesContainerEnvValueFromSecretKeyRef;

}

/**
 * ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.

The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
 *
 * @schema WorkflowTemplateSpecTemplatesContainerEnvFromConfigMapRef
 */
export interface WorkflowTemplateSpecTemplatesContainerEnvFromConfigMapRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesContainerEnvFromConfigMapRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesContainerEnvFromConfigMapRef#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretEnvSource selects a Secret to populate the environment variables with.

The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
 *
 * @schema WorkflowTemplateSpecTemplatesContainerEnvFromSecretRef
 */
export interface WorkflowTemplateSpecTemplatesContainerEnvFromSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesContainerEnvFromSecretRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesContainerEnvFromSecretRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Handler defines a specific action that should be taken
 *
 * @schema WorkflowTemplateSpecTemplatesContainerLifecyclePostStart
 */
export interface WorkflowTemplateSpecTemplatesContainerLifecyclePostStart {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerLifecyclePostStart#exec
   */
  readonly exec?: WorkflowTemplateSpecTemplatesContainerLifecyclePostStartExec;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerLifecyclePostStart#httpGet
   */
  readonly httpGet?: WorkflowTemplateSpecTemplatesContainerLifecyclePostStartHttpGet;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema WorkflowTemplateSpecTemplatesContainerLifecyclePostStart#tcpSocket
   */
  readonly tcpSocket?: WorkflowTemplateSpecTemplatesContainerLifecyclePostStartTcpSocket;

}

/**
 * Handler defines a specific action that should be taken
 *
 * @schema WorkflowTemplateSpecTemplatesContainerLifecyclePreStop
 */
export interface WorkflowTemplateSpecTemplatesContainerLifecyclePreStop {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerLifecyclePreStop#exec
   */
  readonly exec?: WorkflowTemplateSpecTemplatesContainerLifecyclePreStopExec;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerLifecyclePreStop#httpGet
   */
  readonly httpGet?: WorkflowTemplateSpecTemplatesContainerLifecyclePreStopHttpGet;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema WorkflowTemplateSpecTemplatesContainerLifecyclePreStop#tcpSocket
   */
  readonly tcpSocket?: WorkflowTemplateSpecTemplatesContainerLifecyclePreStopTcpSocket;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema WorkflowTemplateSpecTemplatesContainerLivenessProbeExec
 */
export interface WorkflowTemplateSpecTemplatesContainerLivenessProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerLivenessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema WorkflowTemplateSpecTemplatesContainerLivenessProbeHttpGet
 */
export interface WorkflowTemplateSpecTemplatesContainerLivenessProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerLivenessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerLivenessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: WorkflowTemplateSpecTemplatesContainerLivenessProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerLivenessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema WorkflowTemplateSpecTemplatesContainerLivenessProbeHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema WorkflowTemplateSpecTemplatesContainerLivenessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema WorkflowTemplateSpecTemplatesContainerLivenessProbeTcpSocket
 */
export interface WorkflowTemplateSpecTemplatesContainerLivenessProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerLivenessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema WorkflowTemplateSpecTemplatesContainerLivenessProbeTcpSocket#port
   */
  readonly port: string;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema WorkflowTemplateSpecTemplatesContainerReadinessProbeExec
 */
export interface WorkflowTemplateSpecTemplatesContainerReadinessProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerReadinessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema WorkflowTemplateSpecTemplatesContainerReadinessProbeHttpGet
 */
export interface WorkflowTemplateSpecTemplatesContainerReadinessProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerReadinessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerReadinessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: WorkflowTemplateSpecTemplatesContainerReadinessProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerReadinessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema WorkflowTemplateSpecTemplatesContainerReadinessProbeHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema WorkflowTemplateSpecTemplatesContainerReadinessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema WorkflowTemplateSpecTemplatesContainerReadinessProbeTcpSocket
 */
export interface WorkflowTemplateSpecTemplatesContainerReadinessProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerReadinessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema WorkflowTemplateSpecTemplatesContainerReadinessProbeTcpSocket#port
   */
  readonly port: string;

}

/**
 * Adds and removes POSIX capabilities from running containers.
 *
 * @schema WorkflowTemplateSpecTemplatesContainerSecurityContextCapabilities
 */
export interface WorkflowTemplateSpecTemplatesContainerSecurityContextCapabilities {
  /**
   * Added capabilities
   *
   * @schema WorkflowTemplateSpecTemplatesContainerSecurityContextCapabilities#add
   */
  readonly add?: string[];

  /**
   * Removed capabilities
   *
   * @schema WorkflowTemplateSpecTemplatesContainerSecurityContextCapabilities#drop
   */
  readonly drop?: string[];

}

/**
 * SELinuxOptions are the labels to be applied to the container
 *
 * @schema WorkflowTemplateSpecTemplatesContainerSecurityContextSeLinuxOptions
 */
export interface WorkflowTemplateSpecTemplatesContainerSecurityContextSeLinuxOptions {
  /**
   * Level is SELinux level label that applies to the container.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * Role is a SELinux role label that applies to the container.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * Type is a SELinux type label that applies to the container.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * User is a SELinux user label that applies to the container.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * WindowsSecurityContextOptions contain Windows-specific options and credentials.
 *
 * @schema WorkflowTemplateSpecTemplatesContainerSecurityContextWindowsOptions
 */
export interface WorkflowTemplateSpecTemplatesContainerSecurityContextWindowsOptions {
  /**
   * GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * GMSACredentialSpecName is the name of the GMSA credential spec to use. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

}

/**
 * Arguments to a template
 *
 * @schema WorkflowTemplateSpecTemplatesDagTasksArguments
 */
export interface WorkflowTemplateSpecTemplatesDagTasksArguments {
  /**
   * Artifacts is the list of artifacts to pass to the template or workflow
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArguments#artifacts
   */
  readonly artifacts?: WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifacts[];

  /**
   * Parameters is the list of parameters to pass to the template or workflow
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArguments#parameters
   */
  readonly parameters?: WorkflowTemplateSpecTemplatesDagTasksArgumentsParameters[];

}

/**
 * ContinueOn defines if a workflow should continue even if a task or step fails/errors. It can be specified if the workflow should continue when the pod errors, fails or both.
 *
 * @schema WorkflowTemplateSpecTemplatesDagTasksContinueOn
 */
export interface WorkflowTemplateSpecTemplatesDagTasksContinueOn {
  /**
   * @schema WorkflowTemplateSpecTemplatesDagTasksContinueOn#error
   */
  readonly error?: boolean;

  /**
   * @schema WorkflowTemplateSpecTemplatesDagTasksContinueOn#failed
   */
  readonly failed?: boolean;

}

/**
 * TemplateRef is a reference of template resource.
 *
 * @schema WorkflowTemplateSpecTemplatesDagTasksTemplateRef
 */
export interface WorkflowTemplateSpecTemplatesDagTasksTemplateRef {
  /**
   * ClusterScope indicates the referred template is cluster scoped (i.e. a ClusterWorkflowTemplate).
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksTemplateRef#clusterScope
   */
  readonly clusterScope?: boolean;

  /**
   * Name is the resource name of the template.
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksTemplateRef#name
   */
  readonly name?: string;

  /**
   * RuntimeResolution skips validation at creation time. By enabling this option, you can create the referred workflow template before the actual runtime.
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksTemplateRef#runtimeResolution
   */
  readonly runtimeResolution?: boolean;

  /**
   * Template is the name of referred template in the resource.
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksTemplateRef#template
   */
  readonly template?: string;

}

/**
 * Sequence expands a workflow step into numeric range
 *
 * @schema WorkflowTemplateSpecTemplatesDagTasksWithSequence
 */
export interface WorkflowTemplateSpecTemplatesDagTasksWithSequence {
  /**
   * Count is number of elements in the sequence (default: 0). Not to be used with end
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksWithSequence#count
   */
  readonly count?: string;

  /**
   * Number at which to end the sequence (default: 0). Not to be used with Count
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksWithSequence#end
   */
  readonly end?: string;

  /**
   * Format is a printf format string to format the value in the sequence
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksWithSequence#format
   */
  readonly format?: string;

  /**
   * Number at which to start the sequence (default: 0)
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksWithSequence#start
   */
  readonly start?: string;

}

/**
 * EnvVarSource represents a source for the value of an EnvVar.
 *
 * @schema WorkflowTemplateSpecTemplatesInitContainersEnvValueFrom
 */
export interface WorkflowTemplateSpecTemplatesInitContainersEnvValueFrom {
  /**
   * Selects a key from a ConfigMap.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersEnvValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: WorkflowTemplateSpecTemplatesInitContainersEnvValueFromConfigMapKeyRef;

  /**
   * ObjectFieldSelector selects an APIVersioned field of an object.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersEnvValueFrom#fieldRef
   */
  readonly fieldRef?: WorkflowTemplateSpecTemplatesInitContainersEnvValueFromFieldRef;

  /**
   * ResourceFieldSelector represents container resources (cpu, memory) and their output format
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersEnvValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: WorkflowTemplateSpecTemplatesInitContainersEnvValueFromResourceFieldRef;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersEnvValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: WorkflowTemplateSpecTemplatesInitContainersEnvValueFromSecretKeyRef;

}

/**
 * ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.

The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
 *
 * @schema WorkflowTemplateSpecTemplatesInitContainersEnvFromConfigMapRef
 */
export interface WorkflowTemplateSpecTemplatesInitContainersEnvFromConfigMapRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersEnvFromConfigMapRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersEnvFromConfigMapRef#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretEnvSource selects a Secret to populate the environment variables with.

The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
 *
 * @schema WorkflowTemplateSpecTemplatesInitContainersEnvFromSecretRef
 */
export interface WorkflowTemplateSpecTemplatesInitContainersEnvFromSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersEnvFromSecretRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersEnvFromSecretRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Handler defines a specific action that should be taken
 *
 * @schema WorkflowTemplateSpecTemplatesInitContainersLifecyclePostStart
 */
export interface WorkflowTemplateSpecTemplatesInitContainersLifecyclePostStart {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersLifecyclePostStart#exec
   */
  readonly exec?: WorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartExec;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersLifecyclePostStart#httpGet
   */
  readonly httpGet?: WorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartHttpGet;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersLifecyclePostStart#tcpSocket
   */
  readonly tcpSocket?: WorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartTcpSocket;

}

/**
 * Handler defines a specific action that should be taken
 *
 * @schema WorkflowTemplateSpecTemplatesInitContainersLifecyclePreStop
 */
export interface WorkflowTemplateSpecTemplatesInitContainersLifecyclePreStop {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersLifecyclePreStop#exec
   */
  readonly exec?: WorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopExec;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersLifecyclePreStop#httpGet
   */
  readonly httpGet?: WorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopHttpGet;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersLifecyclePreStop#tcpSocket
   */
  readonly tcpSocket?: WorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopTcpSocket;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema WorkflowTemplateSpecTemplatesInitContainersLivenessProbeExec
 */
export interface WorkflowTemplateSpecTemplatesInitContainersLivenessProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersLivenessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema WorkflowTemplateSpecTemplatesInitContainersLivenessProbeHttpGet
 */
export interface WorkflowTemplateSpecTemplatesInitContainersLivenessProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersLivenessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersLivenessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: WorkflowTemplateSpecTemplatesInitContainersLivenessProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersLivenessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema WorkflowTemplateSpecTemplatesInitContainersLivenessProbeHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema WorkflowTemplateSpecTemplatesInitContainersLivenessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema WorkflowTemplateSpecTemplatesInitContainersLivenessProbeTcpSocket
 */
export interface WorkflowTemplateSpecTemplatesInitContainersLivenessProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersLivenessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema WorkflowTemplateSpecTemplatesInitContainersLivenessProbeTcpSocket#port
   */
  readonly port: string;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema WorkflowTemplateSpecTemplatesInitContainersReadinessProbeExec
 */
export interface WorkflowTemplateSpecTemplatesInitContainersReadinessProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersReadinessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema WorkflowTemplateSpecTemplatesInitContainersReadinessProbeHttpGet
 */
export interface WorkflowTemplateSpecTemplatesInitContainersReadinessProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersReadinessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersReadinessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: WorkflowTemplateSpecTemplatesInitContainersReadinessProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersReadinessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema WorkflowTemplateSpecTemplatesInitContainersReadinessProbeHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema WorkflowTemplateSpecTemplatesInitContainersReadinessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema WorkflowTemplateSpecTemplatesInitContainersReadinessProbeTcpSocket
 */
export interface WorkflowTemplateSpecTemplatesInitContainersReadinessProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersReadinessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema WorkflowTemplateSpecTemplatesInitContainersReadinessProbeTcpSocket#port
   */
  readonly port: string;

}

/**
 * Adds and removes POSIX capabilities from running containers.
 *
 * @schema WorkflowTemplateSpecTemplatesInitContainersSecurityContextCapabilities
 */
export interface WorkflowTemplateSpecTemplatesInitContainersSecurityContextCapabilities {
  /**
   * Added capabilities
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersSecurityContextCapabilities#add
   */
  readonly add?: string[];

  /**
   * Removed capabilities
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersSecurityContextCapabilities#drop
   */
  readonly drop?: string[];

}

/**
 * SELinuxOptions are the labels to be applied to the container
 *
 * @schema WorkflowTemplateSpecTemplatesInitContainersSecurityContextSeLinuxOptions
 */
export interface WorkflowTemplateSpecTemplatesInitContainersSecurityContextSeLinuxOptions {
  /**
   * Level is SELinux level label that applies to the container.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * Role is a SELinux role label that applies to the container.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * Type is a SELinux type label that applies to the container.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * User is a SELinux user label that applies to the container.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * WindowsSecurityContextOptions contain Windows-specific options and credentials.
 *
 * @schema WorkflowTemplateSpecTemplatesInitContainersSecurityContextWindowsOptions
 */
export interface WorkflowTemplateSpecTemplatesInitContainersSecurityContextWindowsOptions {
  /**
   * GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * GMSACredentialSpecName is the name of the GMSA credential spec to use. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema WorkflowTemplateSpecTemplatesInitContainersStartupProbeExec
 */
export interface WorkflowTemplateSpecTemplatesInitContainersStartupProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersStartupProbeExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema WorkflowTemplateSpecTemplatesInitContainersStartupProbeHttpGet
 */
export interface WorkflowTemplateSpecTemplatesInitContainersStartupProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersStartupProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersStartupProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: WorkflowTemplateSpecTemplatesInitContainersStartupProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersStartupProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema WorkflowTemplateSpecTemplatesInitContainersStartupProbeHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema WorkflowTemplateSpecTemplatesInitContainersStartupProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema WorkflowTemplateSpecTemplatesInitContainersStartupProbeTcpSocket
 */
export interface WorkflowTemplateSpecTemplatesInitContainersStartupProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersStartupProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema WorkflowTemplateSpecTemplatesInitContainersStartupProbeTcpSocket#port
   */
  readonly port: string;

}

/**
 * ArchiveStrategy describes how to archive files/directory when saving artifacts
 *
 * @schema WorkflowTemplateSpecTemplatesInputsArtifactsArchive
 */
export interface WorkflowTemplateSpecTemplatesInputsArtifactsArchive {
  /**
   * NoneStrategy indicates to skip tar process and upload the files or directory tree as independent files. Note that if the artifact is a directory, the artifact driver must support the ability to save/load the directory appropriately.
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsArchive#none
   */
  readonly none?: any;

  /**
   * TarStrategy will tar and gzip the file or directory when saving
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsArchive#tar
   */
  readonly tar?: WorkflowTemplateSpecTemplatesInputsArtifactsArchiveTar;

}

/**
 * ArtifactoryArtifact is the location of an artifactory artifact
 *
 * @schema WorkflowTemplateSpecTemplatesInputsArtifactsArtifactory
 */
export interface WorkflowTemplateSpecTemplatesInputsArtifactsArtifactory {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsArtifactory#passwordSecret
   */
  readonly passwordSecret?: WorkflowTemplateSpecTemplatesInputsArtifactsArtifactoryPasswordSecret;

  /**
   * URL of the artifact
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsArtifactory#url
   */
  readonly url: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsArtifactory#usernameSecret
   */
  readonly usernameSecret?: WorkflowTemplateSpecTemplatesInputsArtifactsArtifactoryUsernameSecret;

}

/**
 * GCSArtifact is the location of a GCS artifact
 *
 * @schema WorkflowTemplateSpecTemplatesInputsArtifactsGcs
 */
export interface WorkflowTemplateSpecTemplatesInputsArtifactsGcs {
  /**
   * Bucket is the name of the bucket
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsGcs#bucket
   */
  readonly bucket: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsGcs#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsGcs#serviceAccountKeySecret
   */
  readonly serviceAccountKeySecret?: WorkflowTemplateSpecTemplatesInputsArtifactsGcsServiceAccountKeySecret;

}

/**
 * GitArtifact is the location of an git artifact
 *
 * @schema WorkflowTemplateSpecTemplatesInputsArtifactsGit
 */
export interface WorkflowTemplateSpecTemplatesInputsArtifactsGit {
  /**
   * Depth specifies clones/fetches should be shallow and include the given number of commits from the branch tip
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsGit#depth
   */
  readonly depth?: number;

  /**
   * Fetch specifies a number of refs that should be fetched before checkout
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsGit#fetch
   */
  readonly fetch?: string[];

  /**
   * InsecureIgnoreHostKey disables SSH strict host key checking during git clone
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsGit#insecureIgnoreHostKey
   */
  readonly insecureIgnoreHostKey?: boolean;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsGit#passwordSecret
   */
  readonly passwordSecret?: WorkflowTemplateSpecTemplatesInputsArtifactsGitPasswordSecret;

  /**
   * Repo is the git repository
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsGit#repo
   */
  readonly repo: string;

  /**
   * Revision is the git commit, tag, branch to checkout
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsGit#revision
   */
  readonly revision?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsGit#sshPrivateKeySecret
   */
  readonly sshPrivateKeySecret?: WorkflowTemplateSpecTemplatesInputsArtifactsGitSshPrivateKeySecret;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsGit#usernameSecret
   */
  readonly usernameSecret?: WorkflowTemplateSpecTemplatesInputsArtifactsGitUsernameSecret;

}

/**
 * HDFSArtifact is the location of an HDFS artifact
 *
 * @schema WorkflowTemplateSpecTemplatesInputsArtifactsHdfs
 */
export interface WorkflowTemplateSpecTemplatesInputsArtifactsHdfs {
  /**
   * Addresses is accessible addresses of HDFS name nodes
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsHdfs#addresses
   */
  readonly addresses: string[];

  /**
   * Force copies a file forcibly even if it exists (default: false)
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsHdfs#force
   */
  readonly force?: boolean;

  /**
   * HDFSUser is the user to access HDFS file system. It is ignored if either ccache or keytab is used.
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsHdfs#hdfsUser
   */
  readonly hdfsUser?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsHdfs#krbCCacheSecret
   */
  readonly krbCCacheSecret?: WorkflowTemplateSpecTemplatesInputsArtifactsHdfsKrbCCacheSecret;

  /**
   * Selects a key from a ConfigMap.
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsHdfs#krbConfigConfigMap
   */
  readonly krbConfigConfigMap?: WorkflowTemplateSpecTemplatesInputsArtifactsHdfsKrbConfigConfigMap;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsHdfs#krbKeytabSecret
   */
  readonly krbKeytabSecret?: WorkflowTemplateSpecTemplatesInputsArtifactsHdfsKrbKeytabSecret;

  /**
   * KrbRealm is the Kerberos realm used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsHdfs#krbRealm
   */
  readonly krbRealm?: string;

  /**
   * KrbServicePrincipalName is the principal name of Kerberos service It must be set if either ccache or keytab is used.
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsHdfs#krbServicePrincipalName
   */
  readonly krbServicePrincipalName?: string;

  /**
   * KrbUsername is the Kerberos username used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsHdfs#krbUsername
   */
  readonly krbUsername?: string;

  /**
   * Path is a file path in HDFS
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsHdfs#path
   */
  readonly path: string;

}

/**
 * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
 *
 * @schema WorkflowTemplateSpecTemplatesInputsArtifactsHttp
 */
export interface WorkflowTemplateSpecTemplatesInputsArtifactsHttp {
  /**
   * URL of the artifact
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsHttp#url
   */
  readonly url: string;

}

/**
 * OSSArtifact is the location of an Alibaba Cloud OSS artifact
 *
 * @schema WorkflowTemplateSpecTemplatesInputsArtifactsOss
 */
export interface WorkflowTemplateSpecTemplatesInputsArtifactsOss {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsOss#accessKeySecret
   */
  readonly accessKeySecret: WorkflowTemplateSpecTemplatesInputsArtifactsOssAccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsOss#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsOss#endpoint
   */
  readonly endpoint: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsOss#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsOss#secretKeySecret
   */
  readonly secretKeySecret: WorkflowTemplateSpecTemplatesInputsArtifactsOssSecretKeySecret;

}

/**
 * RawArtifact allows raw string content to be placed as an artifact in a container
 *
 * @schema WorkflowTemplateSpecTemplatesInputsArtifactsRaw
 */
export interface WorkflowTemplateSpecTemplatesInputsArtifactsRaw {
  /**
   * Data is the string contents of the artifact
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsRaw#data
   */
  readonly data: string;

}

/**
 * S3Artifact is the location of an S3 artifact
 *
 * @schema WorkflowTemplateSpecTemplatesInputsArtifactsS3
 */
export interface WorkflowTemplateSpecTemplatesInputsArtifactsS3 {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsS3#accessKeySecret
   */
  readonly accessKeySecret: WorkflowTemplateSpecTemplatesInputsArtifactsS3AccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsS3#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsS3#endpoint
   */
  readonly endpoint: string;

  /**
   * Insecure will connect to the service with TLS
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsS3#insecure
   */
  readonly insecure?: boolean;

  /**
   * Key is the key in the bucket where the artifact resides
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsS3#key
   */
  readonly key: string;

  /**
   * Region contains the optional bucket region
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsS3#region
   */
  readonly region?: string;

  /**
   * RoleARN is the Amazon Resource Name (ARN) of the role to assume.
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsS3#roleARN
   */
  readonly roleARN?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsS3#secretKeySecret
   */
  readonly secretKeySecret: WorkflowTemplateSpecTemplatesInputsArtifactsS3SecretKeySecret;

  /**
   * UseSDKCreds tells the driver to figure out credentials based on sdk defaults.
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsS3#useSDKCreds
   */
  readonly useSDKCreds?: boolean;

}

/**
 * ValueFrom describes a location in which to obtain the value to a parameter
 *
 * @schema WorkflowTemplateSpecTemplatesInputsParametersValueFrom
 */
export interface WorkflowTemplateSpecTemplatesInputsParametersValueFrom {
  /**
   * @schema WorkflowTemplateSpecTemplatesInputsParametersValueFrom#default
   */
  readonly default?: string;

  /**
   * JQFilter expression against the resource object in resource templates
   *
   * @schema WorkflowTemplateSpecTemplatesInputsParametersValueFrom#jqFilter
   */
  readonly jqFilter?: string;

  /**
   * JSONPath of a resource to retrieve an output parameter value from in resource templates
   *
   * @schema WorkflowTemplateSpecTemplatesInputsParametersValueFrom#jsonPath
   */
  readonly jsonPath?: string;

  /**
   * Parameter reference to a step or dag task in which to retrieve an output parameter value from (e.g. '{{steps.mystep.outputs.myparam}}')
   *
   * @schema WorkflowTemplateSpecTemplatesInputsParametersValueFrom#parameter
   */
  readonly parameter?: string;

  /**
   * Path in the container to retrieve an output parameter value from in container templates
   *
   * @schema WorkflowTemplateSpecTemplatesInputsParametersValueFrom#path
   */
  readonly path?: string;

}

/**
 * Counter is a Counter prometheus metric
 *
 * @schema WorkflowTemplateSpecTemplatesMetricsPrometheusCounter
 */
export interface WorkflowTemplateSpecTemplatesMetricsPrometheusCounter {
  /**
   * Value is the value of the metric
   *
   * @schema WorkflowTemplateSpecTemplatesMetricsPrometheusCounter#value
   */
  readonly value: string;

}

/**
 * Gauge is a Gauge prometheus metric
 *
 * @schema WorkflowTemplateSpecTemplatesMetricsPrometheusGauge
 */
export interface WorkflowTemplateSpecTemplatesMetricsPrometheusGauge {
  /**
   * Realtime emits this metric in real time if applicable
   *
   * @schema WorkflowTemplateSpecTemplatesMetricsPrometheusGauge#realtime
   */
  readonly realtime: boolean;

  /**
   * Value is the value of the metric
   *
   * @schema WorkflowTemplateSpecTemplatesMetricsPrometheusGauge#value
   */
  readonly value: string;

}

/**
 * Histogram is a Histogram prometheus metric
 *
 * @schema WorkflowTemplateSpecTemplatesMetricsPrometheusHistogram
 */
export interface WorkflowTemplateSpecTemplatesMetricsPrometheusHistogram {
  /**
   * Buckets is a list of bucket divisors for the histogram
   *
   * @schema WorkflowTemplateSpecTemplatesMetricsPrometheusHistogram#buckets
   */
  readonly buckets: number[];

  /**
   * Value is the value of the metric
   *
   * @schema WorkflowTemplateSpecTemplatesMetricsPrometheusHistogram#value
   */
  readonly value: string;

}

/**
 * MetricLabel is a single label for a prometheus metric
 *
 * @schema WorkflowTemplateSpecTemplatesMetricsPrometheusLabels
 */
export interface WorkflowTemplateSpecTemplatesMetricsPrometheusLabels {
  /**
   * @schema WorkflowTemplateSpecTemplatesMetricsPrometheusLabels#key
   */
  readonly key: string;

  /**
   * @schema WorkflowTemplateSpecTemplatesMetricsPrometheusLabels#value
   */
  readonly value: string;

}

/**
 * ArchiveStrategy describes how to archive files/directory when saving artifacts
 *
 * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsArchive
 */
export interface WorkflowTemplateSpecTemplatesOutputsArtifactsArchive {
  /**
   * NoneStrategy indicates to skip tar process and upload the files or directory tree as independent files. Note that if the artifact is a directory, the artifact driver must support the ability to save/load the directory appropriately.
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsArchive#none
   */
  readonly none?: any;

  /**
   * TarStrategy will tar and gzip the file or directory when saving
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsArchive#tar
   */
  readonly tar?: WorkflowTemplateSpecTemplatesOutputsArtifactsArchiveTar;

}

/**
 * ArtifactoryArtifact is the location of an artifactory artifact
 *
 * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsArtifactory
 */
export interface WorkflowTemplateSpecTemplatesOutputsArtifactsArtifactory {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsArtifactory#passwordSecret
   */
  readonly passwordSecret?: WorkflowTemplateSpecTemplatesOutputsArtifactsArtifactoryPasswordSecret;

  /**
   * URL of the artifact
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsArtifactory#url
   */
  readonly url: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsArtifactory#usernameSecret
   */
  readonly usernameSecret?: WorkflowTemplateSpecTemplatesOutputsArtifactsArtifactoryUsernameSecret;

}

/**
 * GCSArtifact is the location of a GCS artifact
 *
 * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsGcs
 */
export interface WorkflowTemplateSpecTemplatesOutputsArtifactsGcs {
  /**
   * Bucket is the name of the bucket
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsGcs#bucket
   */
  readonly bucket: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsGcs#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsGcs#serviceAccountKeySecret
   */
  readonly serviceAccountKeySecret?: WorkflowTemplateSpecTemplatesOutputsArtifactsGcsServiceAccountKeySecret;

}

/**
 * GitArtifact is the location of an git artifact
 *
 * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsGit
 */
export interface WorkflowTemplateSpecTemplatesOutputsArtifactsGit {
  /**
   * Depth specifies clones/fetches should be shallow and include the given number of commits from the branch tip
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsGit#depth
   */
  readonly depth?: number;

  /**
   * Fetch specifies a number of refs that should be fetched before checkout
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsGit#fetch
   */
  readonly fetch?: string[];

  /**
   * InsecureIgnoreHostKey disables SSH strict host key checking during git clone
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsGit#insecureIgnoreHostKey
   */
  readonly insecureIgnoreHostKey?: boolean;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsGit#passwordSecret
   */
  readonly passwordSecret?: WorkflowTemplateSpecTemplatesOutputsArtifactsGitPasswordSecret;

  /**
   * Repo is the git repository
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsGit#repo
   */
  readonly repo: string;

  /**
   * Revision is the git commit, tag, branch to checkout
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsGit#revision
   */
  readonly revision?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsGit#sshPrivateKeySecret
   */
  readonly sshPrivateKeySecret?: WorkflowTemplateSpecTemplatesOutputsArtifactsGitSshPrivateKeySecret;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsGit#usernameSecret
   */
  readonly usernameSecret?: WorkflowTemplateSpecTemplatesOutputsArtifactsGitUsernameSecret;

}

/**
 * HDFSArtifact is the location of an HDFS artifact
 *
 * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsHdfs
 */
export interface WorkflowTemplateSpecTemplatesOutputsArtifactsHdfs {
  /**
   * Addresses is accessible addresses of HDFS name nodes
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsHdfs#addresses
   */
  readonly addresses: string[];

  /**
   * Force copies a file forcibly even if it exists (default: false)
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsHdfs#force
   */
  readonly force?: boolean;

  /**
   * HDFSUser is the user to access HDFS file system. It is ignored if either ccache or keytab is used.
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsHdfs#hdfsUser
   */
  readonly hdfsUser?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsHdfs#krbCCacheSecret
   */
  readonly krbCCacheSecret?: WorkflowTemplateSpecTemplatesOutputsArtifactsHdfsKrbCCacheSecret;

  /**
   * Selects a key from a ConfigMap.
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsHdfs#krbConfigConfigMap
   */
  readonly krbConfigConfigMap?: WorkflowTemplateSpecTemplatesOutputsArtifactsHdfsKrbConfigConfigMap;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsHdfs#krbKeytabSecret
   */
  readonly krbKeytabSecret?: WorkflowTemplateSpecTemplatesOutputsArtifactsHdfsKrbKeytabSecret;

  /**
   * KrbRealm is the Kerberos realm used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsHdfs#krbRealm
   */
  readonly krbRealm?: string;

  /**
   * KrbServicePrincipalName is the principal name of Kerberos service It must be set if either ccache or keytab is used.
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsHdfs#krbServicePrincipalName
   */
  readonly krbServicePrincipalName?: string;

  /**
   * KrbUsername is the Kerberos username used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsHdfs#krbUsername
   */
  readonly krbUsername?: string;

  /**
   * Path is a file path in HDFS
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsHdfs#path
   */
  readonly path: string;

}

/**
 * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
 *
 * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsHttp
 */
export interface WorkflowTemplateSpecTemplatesOutputsArtifactsHttp {
  /**
   * URL of the artifact
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsHttp#url
   */
  readonly url: string;

}

/**
 * OSSArtifact is the location of an Alibaba Cloud OSS artifact
 *
 * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsOss
 */
export interface WorkflowTemplateSpecTemplatesOutputsArtifactsOss {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsOss#accessKeySecret
   */
  readonly accessKeySecret: WorkflowTemplateSpecTemplatesOutputsArtifactsOssAccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsOss#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsOss#endpoint
   */
  readonly endpoint: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsOss#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsOss#secretKeySecret
   */
  readonly secretKeySecret: WorkflowTemplateSpecTemplatesOutputsArtifactsOssSecretKeySecret;

}

/**
 * RawArtifact allows raw string content to be placed as an artifact in a container
 *
 * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsRaw
 */
export interface WorkflowTemplateSpecTemplatesOutputsArtifactsRaw {
  /**
   * Data is the string contents of the artifact
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsRaw#data
   */
  readonly data: string;

}

/**
 * S3Artifact is the location of an S3 artifact
 *
 * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsS3
 */
export interface WorkflowTemplateSpecTemplatesOutputsArtifactsS3 {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsS3#accessKeySecret
   */
  readonly accessKeySecret: WorkflowTemplateSpecTemplatesOutputsArtifactsS3AccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsS3#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsS3#endpoint
   */
  readonly endpoint: string;

  /**
   * Insecure will connect to the service with TLS
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsS3#insecure
   */
  readonly insecure?: boolean;

  /**
   * Key is the key in the bucket where the artifact resides
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsS3#key
   */
  readonly key: string;

  /**
   * Region contains the optional bucket region
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsS3#region
   */
  readonly region?: string;

  /**
   * RoleARN is the Amazon Resource Name (ARN) of the role to assume.
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsS3#roleARN
   */
  readonly roleARN?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsS3#secretKeySecret
   */
  readonly secretKeySecret: WorkflowTemplateSpecTemplatesOutputsArtifactsS3SecretKeySecret;

  /**
   * UseSDKCreds tells the driver to figure out credentials based on sdk defaults.
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsS3#useSDKCreds
   */
  readonly useSDKCreds?: boolean;

}

/**
 * ValueFrom describes a location in which to obtain the value to a parameter
 *
 * @schema WorkflowTemplateSpecTemplatesOutputsParametersValueFrom
 */
export interface WorkflowTemplateSpecTemplatesOutputsParametersValueFrom {
  /**
   * @schema WorkflowTemplateSpecTemplatesOutputsParametersValueFrom#default
   */
  readonly default?: string;

  /**
   * JQFilter expression against the resource object in resource templates
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsParametersValueFrom#jqFilter
   */
  readonly jqFilter?: string;

  /**
   * JSONPath of a resource to retrieve an output parameter value from in resource templates
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsParametersValueFrom#jsonPath
   */
  readonly jsonPath?: string;

  /**
   * Parameter reference to a step or dag task in which to retrieve an output parameter value from (e.g. '{{steps.mystep.outputs.myparam}}')
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsParametersValueFrom#parameter
   */
  readonly parameter?: string;

  /**
   * Path in the container to retrieve an output parameter value from in container templates
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsParametersValueFrom#path
   */
  readonly path?: string;

}

/**
 * EnvVarSource represents a source for the value of an EnvVar.
 *
 * @schema WorkflowTemplateSpecTemplatesScriptEnvValueFrom
 */
export interface WorkflowTemplateSpecTemplatesScriptEnvValueFrom {
  /**
   * Selects a key from a ConfigMap.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptEnvValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: WorkflowTemplateSpecTemplatesScriptEnvValueFromConfigMapKeyRef;

  /**
   * ObjectFieldSelector selects an APIVersioned field of an object.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptEnvValueFrom#fieldRef
   */
  readonly fieldRef?: WorkflowTemplateSpecTemplatesScriptEnvValueFromFieldRef;

  /**
   * ResourceFieldSelector represents container resources (cpu, memory) and their output format
   *
   * @schema WorkflowTemplateSpecTemplatesScriptEnvValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: WorkflowTemplateSpecTemplatesScriptEnvValueFromResourceFieldRef;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptEnvValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: WorkflowTemplateSpecTemplatesScriptEnvValueFromSecretKeyRef;

}

/**
 * ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.

The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
 *
 * @schema WorkflowTemplateSpecTemplatesScriptEnvFromConfigMapRef
 */
export interface WorkflowTemplateSpecTemplatesScriptEnvFromConfigMapRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesScriptEnvFromConfigMapRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesScriptEnvFromConfigMapRef#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretEnvSource selects a Secret to populate the environment variables with.

The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
 *
 * @schema WorkflowTemplateSpecTemplatesScriptEnvFromSecretRef
 */
export interface WorkflowTemplateSpecTemplatesScriptEnvFromSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesScriptEnvFromSecretRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesScriptEnvFromSecretRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Handler defines a specific action that should be taken
 *
 * @schema WorkflowTemplateSpecTemplatesScriptLifecyclePostStart
 */
export interface WorkflowTemplateSpecTemplatesScriptLifecyclePostStart {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptLifecyclePostStart#exec
   */
  readonly exec?: WorkflowTemplateSpecTemplatesScriptLifecyclePostStartExec;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptLifecyclePostStart#httpGet
   */
  readonly httpGet?: WorkflowTemplateSpecTemplatesScriptLifecyclePostStartHttpGet;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema WorkflowTemplateSpecTemplatesScriptLifecyclePostStart#tcpSocket
   */
  readonly tcpSocket?: WorkflowTemplateSpecTemplatesScriptLifecyclePostStartTcpSocket;

}

/**
 * Handler defines a specific action that should be taken
 *
 * @schema WorkflowTemplateSpecTemplatesScriptLifecyclePreStop
 */
export interface WorkflowTemplateSpecTemplatesScriptLifecyclePreStop {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptLifecyclePreStop#exec
   */
  readonly exec?: WorkflowTemplateSpecTemplatesScriptLifecyclePreStopExec;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptLifecyclePreStop#httpGet
   */
  readonly httpGet?: WorkflowTemplateSpecTemplatesScriptLifecyclePreStopHttpGet;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema WorkflowTemplateSpecTemplatesScriptLifecyclePreStop#tcpSocket
   */
  readonly tcpSocket?: WorkflowTemplateSpecTemplatesScriptLifecyclePreStopTcpSocket;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema WorkflowTemplateSpecTemplatesScriptLivenessProbeExec
 */
export interface WorkflowTemplateSpecTemplatesScriptLivenessProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptLivenessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema WorkflowTemplateSpecTemplatesScriptLivenessProbeHttpGet
 */
export interface WorkflowTemplateSpecTemplatesScriptLivenessProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptLivenessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptLivenessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: WorkflowTemplateSpecTemplatesScriptLivenessProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptLivenessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema WorkflowTemplateSpecTemplatesScriptLivenessProbeHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema WorkflowTemplateSpecTemplatesScriptLivenessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema WorkflowTemplateSpecTemplatesScriptLivenessProbeTcpSocket
 */
export interface WorkflowTemplateSpecTemplatesScriptLivenessProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptLivenessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema WorkflowTemplateSpecTemplatesScriptLivenessProbeTcpSocket#port
   */
  readonly port: string;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema WorkflowTemplateSpecTemplatesScriptReadinessProbeExec
 */
export interface WorkflowTemplateSpecTemplatesScriptReadinessProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptReadinessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema WorkflowTemplateSpecTemplatesScriptReadinessProbeHttpGet
 */
export interface WorkflowTemplateSpecTemplatesScriptReadinessProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptReadinessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptReadinessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: WorkflowTemplateSpecTemplatesScriptReadinessProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptReadinessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema WorkflowTemplateSpecTemplatesScriptReadinessProbeHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema WorkflowTemplateSpecTemplatesScriptReadinessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema WorkflowTemplateSpecTemplatesScriptReadinessProbeTcpSocket
 */
export interface WorkflowTemplateSpecTemplatesScriptReadinessProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptReadinessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema WorkflowTemplateSpecTemplatesScriptReadinessProbeTcpSocket#port
   */
  readonly port: string;

}

/**
 * Adds and removes POSIX capabilities from running containers.
 *
 * @schema WorkflowTemplateSpecTemplatesScriptSecurityContextCapabilities
 */
export interface WorkflowTemplateSpecTemplatesScriptSecurityContextCapabilities {
  /**
   * Added capabilities
   *
   * @schema WorkflowTemplateSpecTemplatesScriptSecurityContextCapabilities#add
   */
  readonly add?: string[];

  /**
   * Removed capabilities
   *
   * @schema WorkflowTemplateSpecTemplatesScriptSecurityContextCapabilities#drop
   */
  readonly drop?: string[];

}

/**
 * SELinuxOptions are the labels to be applied to the container
 *
 * @schema WorkflowTemplateSpecTemplatesScriptSecurityContextSeLinuxOptions
 */
export interface WorkflowTemplateSpecTemplatesScriptSecurityContextSeLinuxOptions {
  /**
   * Level is SELinux level label that applies to the container.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * Role is a SELinux role label that applies to the container.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * Type is a SELinux type label that applies to the container.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * User is a SELinux user label that applies to the container.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * WindowsSecurityContextOptions contain Windows-specific options and credentials.
 *
 * @schema WorkflowTemplateSpecTemplatesScriptSecurityContextWindowsOptions
 */
export interface WorkflowTemplateSpecTemplatesScriptSecurityContextWindowsOptions {
  /**
   * GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * GMSACredentialSpecName is the name of the GMSA credential spec to use. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema WorkflowTemplateSpecTemplatesScriptStartupProbeExec
 */
export interface WorkflowTemplateSpecTemplatesScriptStartupProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptStartupProbeExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema WorkflowTemplateSpecTemplatesScriptStartupProbeHttpGet
 */
export interface WorkflowTemplateSpecTemplatesScriptStartupProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptStartupProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptStartupProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: WorkflowTemplateSpecTemplatesScriptStartupProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptStartupProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema WorkflowTemplateSpecTemplatesScriptStartupProbeHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema WorkflowTemplateSpecTemplatesScriptStartupProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema WorkflowTemplateSpecTemplatesScriptStartupProbeTcpSocket
 */
export interface WorkflowTemplateSpecTemplatesScriptStartupProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptStartupProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema WorkflowTemplateSpecTemplatesScriptStartupProbeTcpSocket#port
   */
  readonly port: string;

}

/**
 * EnvVarSource represents a source for the value of an EnvVar.
 *
 * @schema WorkflowTemplateSpecTemplatesSidecarsEnvValueFrom
 */
export interface WorkflowTemplateSpecTemplatesSidecarsEnvValueFrom {
  /**
   * Selects a key from a ConfigMap.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsEnvValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: WorkflowTemplateSpecTemplatesSidecarsEnvValueFromConfigMapKeyRef;

  /**
   * ObjectFieldSelector selects an APIVersioned field of an object.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsEnvValueFrom#fieldRef
   */
  readonly fieldRef?: WorkflowTemplateSpecTemplatesSidecarsEnvValueFromFieldRef;

  /**
   * ResourceFieldSelector represents container resources (cpu, memory) and their output format
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsEnvValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: WorkflowTemplateSpecTemplatesSidecarsEnvValueFromResourceFieldRef;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsEnvValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: WorkflowTemplateSpecTemplatesSidecarsEnvValueFromSecretKeyRef;

}

/**
 * ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.

The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
 *
 * @schema WorkflowTemplateSpecTemplatesSidecarsEnvFromConfigMapRef
 */
export interface WorkflowTemplateSpecTemplatesSidecarsEnvFromConfigMapRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsEnvFromConfigMapRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsEnvFromConfigMapRef#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretEnvSource selects a Secret to populate the environment variables with.

The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
 *
 * @schema WorkflowTemplateSpecTemplatesSidecarsEnvFromSecretRef
 */
export interface WorkflowTemplateSpecTemplatesSidecarsEnvFromSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsEnvFromSecretRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsEnvFromSecretRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Handler defines a specific action that should be taken
 *
 * @schema WorkflowTemplateSpecTemplatesSidecarsLifecyclePostStart
 */
export interface WorkflowTemplateSpecTemplatesSidecarsLifecyclePostStart {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsLifecyclePostStart#exec
   */
  readonly exec?: WorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartExec;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsLifecyclePostStart#httpGet
   */
  readonly httpGet?: WorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartHttpGet;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsLifecyclePostStart#tcpSocket
   */
  readonly tcpSocket?: WorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartTcpSocket;

}

/**
 * Handler defines a specific action that should be taken
 *
 * @schema WorkflowTemplateSpecTemplatesSidecarsLifecyclePreStop
 */
export interface WorkflowTemplateSpecTemplatesSidecarsLifecyclePreStop {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsLifecyclePreStop#exec
   */
  readonly exec?: WorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopExec;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsLifecyclePreStop#httpGet
   */
  readonly httpGet?: WorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopHttpGet;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsLifecyclePreStop#tcpSocket
   */
  readonly tcpSocket?: WorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopTcpSocket;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema WorkflowTemplateSpecTemplatesSidecarsLivenessProbeExec
 */
export interface WorkflowTemplateSpecTemplatesSidecarsLivenessProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsLivenessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema WorkflowTemplateSpecTemplatesSidecarsLivenessProbeHttpGet
 */
export interface WorkflowTemplateSpecTemplatesSidecarsLivenessProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsLivenessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsLivenessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: WorkflowTemplateSpecTemplatesSidecarsLivenessProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsLivenessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema WorkflowTemplateSpecTemplatesSidecarsLivenessProbeHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema WorkflowTemplateSpecTemplatesSidecarsLivenessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema WorkflowTemplateSpecTemplatesSidecarsLivenessProbeTcpSocket
 */
export interface WorkflowTemplateSpecTemplatesSidecarsLivenessProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsLivenessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema WorkflowTemplateSpecTemplatesSidecarsLivenessProbeTcpSocket#port
   */
  readonly port: string;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema WorkflowTemplateSpecTemplatesSidecarsReadinessProbeExec
 */
export interface WorkflowTemplateSpecTemplatesSidecarsReadinessProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsReadinessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema WorkflowTemplateSpecTemplatesSidecarsReadinessProbeHttpGet
 */
export interface WorkflowTemplateSpecTemplatesSidecarsReadinessProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsReadinessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsReadinessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: WorkflowTemplateSpecTemplatesSidecarsReadinessProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsReadinessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema WorkflowTemplateSpecTemplatesSidecarsReadinessProbeHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema WorkflowTemplateSpecTemplatesSidecarsReadinessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema WorkflowTemplateSpecTemplatesSidecarsReadinessProbeTcpSocket
 */
export interface WorkflowTemplateSpecTemplatesSidecarsReadinessProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsReadinessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema WorkflowTemplateSpecTemplatesSidecarsReadinessProbeTcpSocket#port
   */
  readonly port: string;

}

/**
 * Adds and removes POSIX capabilities from running containers.
 *
 * @schema WorkflowTemplateSpecTemplatesSidecarsSecurityContextCapabilities
 */
export interface WorkflowTemplateSpecTemplatesSidecarsSecurityContextCapabilities {
  /**
   * Added capabilities
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsSecurityContextCapabilities#add
   */
  readonly add?: string[];

  /**
   * Removed capabilities
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsSecurityContextCapabilities#drop
   */
  readonly drop?: string[];

}

/**
 * SELinuxOptions are the labels to be applied to the container
 *
 * @schema WorkflowTemplateSpecTemplatesSidecarsSecurityContextSeLinuxOptions
 */
export interface WorkflowTemplateSpecTemplatesSidecarsSecurityContextSeLinuxOptions {
  /**
   * Level is SELinux level label that applies to the container.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * Role is a SELinux role label that applies to the container.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * Type is a SELinux type label that applies to the container.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * User is a SELinux user label that applies to the container.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * WindowsSecurityContextOptions contain Windows-specific options and credentials.
 *
 * @schema WorkflowTemplateSpecTemplatesSidecarsSecurityContextWindowsOptions
 */
export interface WorkflowTemplateSpecTemplatesSidecarsSecurityContextWindowsOptions {
  /**
   * GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * GMSACredentialSpecName is the name of the GMSA credential spec to use. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema WorkflowTemplateSpecTemplatesSidecarsStartupProbeExec
 */
export interface WorkflowTemplateSpecTemplatesSidecarsStartupProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsStartupProbeExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema WorkflowTemplateSpecTemplatesSidecarsStartupProbeHttpGet
 */
export interface WorkflowTemplateSpecTemplatesSidecarsStartupProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsStartupProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsStartupProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: WorkflowTemplateSpecTemplatesSidecarsStartupProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsStartupProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema WorkflowTemplateSpecTemplatesSidecarsStartupProbeHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema WorkflowTemplateSpecTemplatesSidecarsStartupProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema WorkflowTemplateSpecTemplatesSidecarsStartupProbeTcpSocket
 */
export interface WorkflowTemplateSpecTemplatesSidecarsStartupProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsStartupProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema WorkflowTemplateSpecTemplatesSidecarsStartupProbeTcpSocket#port
   */
  readonly port: string;

}

/**
 * Artifact indicates an artifact to place at a specified path
 *
 * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifacts
 */
export interface WorkflowTemplateSpecTemplatesStepsArgumentsArtifacts {
  /**
   * ArchiveStrategy describes how to archive files/directory when saving artifacts
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifacts#archive
   */
  readonly archive?: WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsArchive;

  /**
   * ArchiveLogs indicates if the container logs should be archived
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifacts#archiveLogs
   */
  readonly archiveLogs?: boolean;

  /**
   * ArtifactoryArtifact is the location of an artifactory artifact
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifacts#artifactory
   */
  readonly artifactory?: WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsArtifactory;

  /**
   * From allows an artifact to reference an artifact from a previous step
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifacts#from
   */
  readonly from?: string;

  /**
   * GCSArtifact is the location of a GCS artifact
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifacts#gcs
   */
  readonly gcs?: WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGcs;

  /**
   * GitArtifact is the location of an git artifact
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifacts#git
   */
  readonly git?: WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGit;

  /**
   * GlobalName exports an output artifact to the global scope, making it available as '{{io.argoproj.workflow.v1alpha1.outputs.artifacts.XXXX}} and in workflow.status.outputs.artifacts
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifacts#globalName
   */
  readonly globalName?: string;

  /**
   * HDFSArtifact is the location of an HDFS artifact
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifacts#hdfs
   */
  readonly hdfs?: WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfs;

  /**
   * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifacts#http
   */
  readonly http?: WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHttp;

  /**
   * mode bits to use on this file, must be a value between 0 and 0777 set when loading input artifacts.
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifacts#mode
   */
  readonly mode?: number;

  /**
   * name of the artifact. must be unique within a template's inputs/outputs.
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifacts#name
   */
  readonly name: string;

  /**
   * Make Artifacts optional, if Artifacts doesn't generate or exist
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifacts#optional
   */
  readonly optional?: boolean;

  /**
   * OSSArtifact is the location of an Alibaba Cloud OSS artifact
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifacts#oss
   */
  readonly oss?: WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsOss;

  /**
   * Path is the container path to the artifact
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifacts#path
   */
  readonly path?: string;

  /**
   * RawArtifact allows raw string content to be placed as an artifact in a container
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifacts#raw
   */
  readonly raw?: WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsRaw;

  /**
   * S3Artifact is the location of an S3 artifact
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifacts#s3
   */
  readonly s3?: WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsS3;

}

/**
 * Parameter indicate a passed string parameter to a service template with an optional default value
 *
 * @schema WorkflowTemplateSpecTemplatesStepsArgumentsParameters
 */
export interface WorkflowTemplateSpecTemplatesStepsArgumentsParameters {
  /**
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsParameters#default
   */
  readonly default?: string;

  /**
   * GlobalName exports an output parameter to the global scope, making it available as '{{io.argoproj.workflow.v1alpha1.outputs.parameters.XXXX}} and in workflow.status.outputs.parameters
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsParameters#globalName
   */
  readonly globalName?: string;

  /**
   * Name is the parameter name
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsParameters#name
   */
  readonly name: string;

  /**
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsParameters#value
   */
  readonly value?: string;

  /**
   * ValueFrom describes a location in which to obtain the value to a parameter
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsParameters#valueFrom
   */
  readonly valueFrom?: WorkflowTemplateSpecTemplatesStepsArgumentsParametersValueFrom;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema WorkflowTemplateSpecTemplatesVolumesCephfsSecretRef
 */
export interface WorkflowTemplateSpecTemplatesVolumesCephfsSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesCephfsSecretRef#name
   */
  readonly name?: string;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema WorkflowTemplateSpecTemplatesVolumesCinderSecretRef
 */
export interface WorkflowTemplateSpecTemplatesVolumesCinderSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesCinderSecretRef#name
   */
  readonly name?: string;

}

/**
 * Maps a string key to a path within a volume.
 *
 * @schema WorkflowTemplateSpecTemplatesVolumesConfigMapItems
 */
export interface WorkflowTemplateSpecTemplatesVolumesConfigMapItems {
  /**
   * The key to project.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesConfigMapItems#key
   */
  readonly key: string;

  /**
   * Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesConfigMapItems#mode
   */
  readonly mode?: number;

  /**
   * The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesConfigMapItems#path
   */
  readonly path: string;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema WorkflowTemplateSpecTemplatesVolumesCsiNodePublishSecretRef
 */
export interface WorkflowTemplateSpecTemplatesVolumesCsiNodePublishSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesCsiNodePublishSecretRef#name
   */
  readonly name?: string;

}

/**
 * DownwardAPIVolumeFile represents information to create the file containing the pod field
 *
 * @schema WorkflowTemplateSpecTemplatesVolumesDownwardApiItems
 */
export interface WorkflowTemplateSpecTemplatesVolumesDownwardApiItems {
  /**
   * ObjectFieldSelector selects an APIVersioned field of an object.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesDownwardApiItems#fieldRef
   */
  readonly fieldRef?: WorkflowTemplateSpecTemplatesVolumesDownwardApiItemsFieldRef;

  /**
   * Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesDownwardApiItems#mode
   */
  readonly mode?: number;

  /**
   * Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesDownwardApiItems#path
   */
  readonly path: string;

  /**
   * ResourceFieldSelector represents container resources (cpu, memory) and their output format
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesDownwardApiItems#resourceFieldRef
   */
  readonly resourceFieldRef?: WorkflowTemplateSpecTemplatesVolumesDownwardApiItemsResourceFieldRef;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema WorkflowTemplateSpecTemplatesVolumesFlexVolumeSecretRef
 */
export interface WorkflowTemplateSpecTemplatesVolumesFlexVolumeSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesFlexVolumeSecretRef#name
   */
  readonly name?: string;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema WorkflowTemplateSpecTemplatesVolumesIscsiSecretRef
 */
export interface WorkflowTemplateSpecTemplatesVolumesIscsiSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesIscsiSecretRef#name
   */
  readonly name?: string;

}

/**
 * Projection that may be projected along with other supported volume types
 *
 * @schema WorkflowTemplateSpecTemplatesVolumesProjectedSources
 */
export interface WorkflowTemplateSpecTemplatesVolumesProjectedSources {
  /**
   * Adapts a ConfigMap into a projected volume.

The contents of the target ConfigMap's Data field will be presented in a projected volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. Note that this is identical to a configmap volume source without the default mode.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesProjectedSources#configMap
   */
  readonly configMap?: WorkflowTemplateSpecTemplatesVolumesProjectedSourcesConfigMap;

  /**
   * Represents downward API info for projecting into a projected volume. Note that this is identical to a downwardAPI volume source without the default mode.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesProjectedSources#downwardAPI
   */
  readonly downwardAPI?: WorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardApi;

  /**
   * Adapts a secret into a projected volume.

The contents of the target Secret's Data field will be presented in a projected volume as files using the keys in the Data field as the file names. Note that this is identical to a secret volume source without the default mode.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesProjectedSources#secret
   */
  readonly secret?: WorkflowTemplateSpecTemplatesVolumesProjectedSourcesSecret;

  /**
   * ServiceAccountTokenProjection represents a projected service account token volume. This projection can be used to insert a service account token into the pods runtime filesystem for use against APIs (Kubernetes API Server or otherwise).
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesProjectedSources#serviceAccountToken
   */
  readonly serviceAccountToken?: WorkflowTemplateSpecTemplatesVolumesProjectedSourcesServiceAccountToken;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema WorkflowTemplateSpecTemplatesVolumesRbdSecretRef
 */
export interface WorkflowTemplateSpecTemplatesVolumesRbdSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesRbdSecretRef#name
   */
  readonly name?: string;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema WorkflowTemplateSpecTemplatesVolumesScaleIoSecretRef
 */
export interface WorkflowTemplateSpecTemplatesVolumesScaleIoSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesScaleIoSecretRef#name
   */
  readonly name?: string;

}

/**
 * Maps a string key to a path within a volume.
 *
 * @schema WorkflowTemplateSpecTemplatesVolumesSecretItems
 */
export interface WorkflowTemplateSpecTemplatesVolumesSecretItems {
  /**
   * The key to project.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesSecretItems#key
   */
  readonly key: string;

  /**
   * Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesSecretItems#mode
   */
  readonly mode?: number;

  /**
   * The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesSecretItems#path
   */
  readonly path: string;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema WorkflowTemplateSpecTemplatesVolumesStorageosSecretRef
 */
export interface WorkflowTemplateSpecTemplatesVolumesStorageosSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesStorageosSecretRef#name
   */
  readonly name?: string;

}

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema WorkflowTemplateSpecVolumeClaimTemplatesSpecSelectorMatchExpressions
 */
export interface WorkflowTemplateSpecVolumeClaimTemplatesSpecSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema WorkflowTemplateSpecVolumeClaimTemplatesSpecSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema WorkflowTemplateSpecVolumeClaimTemplatesSpecSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   *
   * @schema WorkflowTemplateSpecVolumeClaimTemplatesSpecSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * ObjectFieldSelector selects an APIVersioned field of an object.
 *
 * @schema WorkflowTemplateSpecVolumesDownwardApiItemsFieldRef
 */
export interface WorkflowTemplateSpecVolumesDownwardApiItemsFieldRef {
  /**
   * Version of the schema the FieldPath is written in terms of, defaults to "v1".
   *
   * @schema WorkflowTemplateSpecVolumesDownwardApiItemsFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * Path of the field to select in the specified API version.
   *
   * @schema WorkflowTemplateSpecVolumesDownwardApiItemsFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * ResourceFieldSelector represents container resources (cpu, memory) and their output format
 *
 * @schema WorkflowTemplateSpecVolumesDownwardApiItemsResourceFieldRef
 */
export interface WorkflowTemplateSpecVolumesDownwardApiItemsResourceFieldRef {
  /**
   * Container name: required for volumes, optional for env vars
   *
   * @schema WorkflowTemplateSpecVolumesDownwardApiItemsResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and Int64() accessors.

The serialization format is:

<quantity>        ::= <signedNumber><suffix>
  (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
<decimalSI>       ::= m | "" | k | M | G | T | P | E
  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
<decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  a. No precision is lost
  b. No fractional digits will be emitted
  c. The exponent (or suffix) is as large as possible.
The sign will be omitted unless the number is negative.

Examples:
  1.5 will be serialized as "1500m"
  1.5Gi will be serialized as "1536Mi"

Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.

Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
   *
   * @schema WorkflowTemplateSpecVolumesDownwardApiItemsResourceFieldRef#divisor
   */
  readonly divisor?: string;

  /**
   * Required: resource to select
   *
   * @schema WorkflowTemplateSpecVolumesDownwardApiItemsResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Adapts a ConfigMap into a projected volume.

The contents of the target ConfigMap's Data field will be presented in a projected volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. Note that this is identical to a configmap volume source without the default mode.
 *
 * @schema WorkflowTemplateSpecVolumesProjectedSourcesConfigMap
 */
export interface WorkflowTemplateSpecVolumesProjectedSourcesConfigMap {
  /**
   * If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
   *
   * @schema WorkflowTemplateSpecVolumesProjectedSourcesConfigMap#items
   */
  readonly items?: WorkflowTemplateSpecVolumesProjectedSourcesConfigMapItems[];

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecVolumesProjectedSourcesConfigMap#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its keys must be defined
   *
   * @schema WorkflowTemplateSpecVolumesProjectedSourcesConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Represents downward API info for projecting into a projected volume. Note that this is identical to a downwardAPI volume source without the default mode.
 *
 * @schema WorkflowTemplateSpecVolumesProjectedSourcesDownwardApi
 */
export interface WorkflowTemplateSpecVolumesProjectedSourcesDownwardApi {
  /**
   * Items is a list of DownwardAPIVolume file
   *
   * @schema WorkflowTemplateSpecVolumesProjectedSourcesDownwardApi#items
   */
  readonly items?: WorkflowTemplateSpecVolumesProjectedSourcesDownwardApiItems[];

}

/**
 * Adapts a secret into a projected volume.

The contents of the target Secret's Data field will be presented in a projected volume as files using the keys in the Data field as the file names. Note that this is identical to a secret volume source without the default mode.
 *
 * @schema WorkflowTemplateSpecVolumesProjectedSourcesSecret
 */
export interface WorkflowTemplateSpecVolumesProjectedSourcesSecret {
  /**
   * If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
   *
   * @schema WorkflowTemplateSpecVolumesProjectedSourcesSecret#items
   */
  readonly items?: WorkflowTemplateSpecVolumesProjectedSourcesSecretItems[];

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecVolumesProjectedSourcesSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecVolumesProjectedSourcesSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * ServiceAccountTokenProjection represents a projected service account token volume. This projection can be used to insert a service account token into the pods runtime filesystem for use against APIs (Kubernetes API Server or otherwise).
 *
 * @schema WorkflowTemplateSpecVolumesProjectedSourcesServiceAccountToken
 */
export interface WorkflowTemplateSpecVolumesProjectedSourcesServiceAccountToken {
  /**
   * Audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.
   *
   * @schema WorkflowTemplateSpecVolumesProjectedSourcesServiceAccountToken#audience
   */
  readonly audience?: string;

  /**
   * ExpirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.
   *
   * @default 1 hour and must be at least 10 minutes.
   * @schema WorkflowTemplateSpecVolumesProjectedSourcesServiceAccountToken#expirationSeconds
   */
  readonly expirationSeconds?: number;

  /**
   * Path is the path relative to the mount point of the file to project the token into.
   *
   * @schema WorkflowTemplateSpecVolumesProjectedSourcesServiceAccountToken#path
   */
  readonly path: string;

}

/**
 * A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema WorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions
 */
export interface WorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
  /**
   * The label key that the selector applies to.
   *
   * @schema WorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#key
   */
  readonly key: string;

  /**
   * Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
   *
   * @schema WorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
   *
   * @schema WorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema WorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields
 */
export interface WorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
  /**
   * The label key that the selector applies to.
   *
   * @schema WorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#key
   */
  readonly key: string;

  /**
   * Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
   *
   * @schema WorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#operator
   */
  readonly operator: string;

  /**
   * An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
   *
   * @schema WorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#values
   */
  readonly values?: string[];

}

/**
 * A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema WorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions
 */
export interface WorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
  /**
   * The label key that the selector applies to.
   *
   * @schema WorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#key
   */
  readonly key: string;

  /**
   * Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
   *
   * @schema WorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
   *
   * @schema WorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema WorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields
 */
export interface WorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
  /**
   * The label key that the selector applies to.
   *
   * @schema WorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#key
   */
  readonly key: string;

  /**
   * Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
   *
   * @schema WorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#operator
   */
  readonly operator: string;

  /**
   * An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
   *
   * @schema WorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#values
   */
  readonly values?: string[];

}

/**
 * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
 *
 * @schema WorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector
 */
export interface WorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema WorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchExpressions
   */
  readonly matchExpressions?: WorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema WorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema WorkflowTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions
 */
export interface WorkflowTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema WorkflowTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema WorkflowTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   *
   * @schema WorkflowTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
 *
 * @schema WorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector
 */
export interface WorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema WorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchExpressions
   */
  readonly matchExpressions?: WorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema WorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema WorkflowTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions
 */
export interface WorkflowTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema WorkflowTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema WorkflowTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   *
   * @schema WorkflowTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
 *
 * @schema WorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference
 */
export interface WorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
  /**
   * A list of node selector requirements by node's labels.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference#matchExpressions
   */
  readonly matchExpressions?: WorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions[];

  /**
   * A list of node selector requirements by node's fields.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference#matchFields
   */
  readonly matchFields?: WorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields[];

}

/**
 * A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
 *
 * @schema WorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms
 */
export interface WorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
  /**
   * A list of node selector requirements by node's labels.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms#matchExpressions
   */
  readonly matchExpressions?: WorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions[];

  /**
   * A list of node selector requirements by node's fields.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms#matchFields
   */
  readonly matchFields?: WorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields[];

}

/**
 * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
 *
 * @schema WorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm
 */
export interface WorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
  /**
   * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#labelSelector
   */
  readonly labelSelector?: WorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;

  /**
   * namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaces
   */
  readonly namespaces?: string[];

  /**
   * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
 *
 * @schema WorkflowTemplateSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector
 */
export interface WorkflowTemplateSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchExpressions
   */
  readonly matchExpressions?: WorkflowTemplateSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
 *
 * @schema WorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm
 */
export interface WorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
  /**
   * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#labelSelector
   */
  readonly labelSelector?: WorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;

  /**
   * namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaces
   */
  readonly namespaces?: string[];

  /**
   * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
 *
 * @schema WorkflowTemplateSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector
 */
export interface WorkflowTemplateSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchExpressions
   */
  readonly matchExpressions?: WorkflowTemplateSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * TarStrategy will tar and gzip the file or directory when saving
 *
 * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsArchiveTar
 */
export interface WorkflowTemplateSpecTemplatesArgumentsArtifactsArchiveTar {
  /**
   * CompressionLevel specifies the gzip compression level to use for the artifact. Defaults to gzip.DefaultCompression.
   *
   * @default gzip.DefaultCompression.
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsArchiveTar#compressionLevel
   */
  readonly compressionLevel?: number;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsArtifactoryPasswordSecret
 */
export interface WorkflowTemplateSpecTemplatesArgumentsArtifactsArtifactoryPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsArtifactoryPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsArtifactoryPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsArtifactoryPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsArtifactoryUsernameSecret
 */
export interface WorkflowTemplateSpecTemplatesArgumentsArtifactsArtifactoryUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsArtifactoryUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsArtifactoryUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsArtifactoryUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsGcsServiceAccountKeySecret
 */
export interface WorkflowTemplateSpecTemplatesArgumentsArtifactsGcsServiceAccountKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsGcsServiceAccountKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsGcsServiceAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsGcsServiceAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsGitPasswordSecret
 */
export interface WorkflowTemplateSpecTemplatesArgumentsArtifactsGitPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsGitPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsGitPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsGitPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsGitSshPrivateKeySecret
 */
export interface WorkflowTemplateSpecTemplatesArgumentsArtifactsGitSshPrivateKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsGitSshPrivateKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsGitSshPrivateKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsGitSshPrivateKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsGitUsernameSecret
 */
export interface WorkflowTemplateSpecTemplatesArgumentsArtifactsGitUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsGitUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsGitUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsGitUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsHdfsKrbCCacheSecret
 */
export interface WorkflowTemplateSpecTemplatesArgumentsArtifactsHdfsKrbCCacheSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsHdfsKrbCCacheSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsHdfsKrbCCacheSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsHdfsKrbCCacheSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Selects a key from a ConfigMap.
 *
 * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsHdfsKrbConfigConfigMap
 */
export interface WorkflowTemplateSpecTemplatesArgumentsArtifactsHdfsKrbConfigConfigMap {
  /**
   * The key to select.
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsHdfsKrbConfigConfigMap#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsHdfsKrbConfigConfigMap#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsHdfsKrbConfigConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsHdfsKrbKeytabSecret
 */
export interface WorkflowTemplateSpecTemplatesArgumentsArtifactsHdfsKrbKeytabSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsHdfsKrbKeytabSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsHdfsKrbKeytabSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsHdfsKrbKeytabSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsOssAccessKeySecret
 */
export interface WorkflowTemplateSpecTemplatesArgumentsArtifactsOssAccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsOssAccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsOssAccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsOssAccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsOssSecretKeySecret
 */
export interface WorkflowTemplateSpecTemplatesArgumentsArtifactsOssSecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsOssSecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsOssSecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsOssSecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsS3AccessKeySecret
 */
export interface WorkflowTemplateSpecTemplatesArgumentsArtifactsS3AccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsS3AccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsS3AccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsS3AccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsS3SecretKeySecret
 */
export interface WorkflowTemplateSpecTemplatesArgumentsArtifactsS3SecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsS3SecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsS3SecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesArgumentsArtifactsS3SecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Selects a key from a ConfigMap.
 *
 * @schema WorkflowTemplateSpecTemplatesContainerEnvValueFromConfigMapKeyRef
 */
export interface WorkflowTemplateSpecTemplatesContainerEnvValueFromConfigMapKeyRef {
  /**
   * The key to select.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerEnvValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesContainerEnvValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesContainerEnvValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * ObjectFieldSelector selects an APIVersioned field of an object.
 *
 * @schema WorkflowTemplateSpecTemplatesContainerEnvValueFromFieldRef
 */
export interface WorkflowTemplateSpecTemplatesContainerEnvValueFromFieldRef {
  /**
   * Version of the schema the FieldPath is written in terms of, defaults to "v1".
   *
   * @schema WorkflowTemplateSpecTemplatesContainerEnvValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * Path of the field to select in the specified API version.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerEnvValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * ResourceFieldSelector represents container resources (cpu, memory) and their output format
 *
 * @schema WorkflowTemplateSpecTemplatesContainerEnvValueFromResourceFieldRef
 */
export interface WorkflowTemplateSpecTemplatesContainerEnvValueFromResourceFieldRef {
  /**
   * Container name: required for volumes, optional for env vars
   *
   * @schema WorkflowTemplateSpecTemplatesContainerEnvValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and Int64() accessors.

The serialization format is:

<quantity>        ::= <signedNumber><suffix>
  (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
<decimalSI>       ::= m | "" | k | M | G | T | P | E
  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
<decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  a. No precision is lost
  b. No fractional digits will be emitted
  c. The exponent (or suffix) is as large as possible.
The sign will be omitted unless the number is negative.

Examples:
  1.5 will be serialized as "1500m"
  1.5Gi will be serialized as "1536Mi"

Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.

Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerEnvValueFromResourceFieldRef#divisor
   */
  readonly divisor?: string;

  /**
   * Required: resource to select
   *
   * @schema WorkflowTemplateSpecTemplatesContainerEnvValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesContainerEnvValueFromSecretKeyRef
 */
export interface WorkflowTemplateSpecTemplatesContainerEnvValueFromSecretKeyRef {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerEnvValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesContainerEnvValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesContainerEnvValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema WorkflowTemplateSpecTemplatesContainerLifecyclePostStartExec
 */
export interface WorkflowTemplateSpecTemplatesContainerLifecyclePostStartExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerLifecyclePostStartExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema WorkflowTemplateSpecTemplatesContainerLifecyclePostStartHttpGet
 */
export interface WorkflowTemplateSpecTemplatesContainerLifecyclePostStartHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerLifecyclePostStartHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerLifecyclePostStartHttpGet#httpHeaders
   */
  readonly httpHeaders?: WorkflowTemplateSpecTemplatesContainerLifecyclePostStartHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerLifecyclePostStartHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema WorkflowTemplateSpecTemplatesContainerLifecyclePostStartHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema WorkflowTemplateSpecTemplatesContainerLifecyclePostStartHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema WorkflowTemplateSpecTemplatesContainerLifecyclePostStartTcpSocket
 */
export interface WorkflowTemplateSpecTemplatesContainerLifecyclePostStartTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerLifecyclePostStartTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema WorkflowTemplateSpecTemplatesContainerLifecyclePostStartTcpSocket#port
   */
  readonly port: string;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema WorkflowTemplateSpecTemplatesContainerLifecyclePreStopExec
 */
export interface WorkflowTemplateSpecTemplatesContainerLifecyclePreStopExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerLifecyclePreStopExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema WorkflowTemplateSpecTemplatesContainerLifecyclePreStopHttpGet
 */
export interface WorkflowTemplateSpecTemplatesContainerLifecyclePreStopHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerLifecyclePreStopHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerLifecyclePreStopHttpGet#httpHeaders
   */
  readonly httpHeaders?: WorkflowTemplateSpecTemplatesContainerLifecyclePreStopHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerLifecyclePreStopHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema WorkflowTemplateSpecTemplatesContainerLifecyclePreStopHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema WorkflowTemplateSpecTemplatesContainerLifecyclePreStopHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema WorkflowTemplateSpecTemplatesContainerLifecyclePreStopTcpSocket
 */
export interface WorkflowTemplateSpecTemplatesContainerLifecyclePreStopTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema WorkflowTemplateSpecTemplatesContainerLifecyclePreStopTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema WorkflowTemplateSpecTemplatesContainerLifecyclePreStopTcpSocket#port
   */
  readonly port: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema WorkflowTemplateSpecTemplatesContainerLivenessProbeHttpGetHttpHeaders
 */
export interface WorkflowTemplateSpecTemplatesContainerLivenessProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema WorkflowTemplateSpecTemplatesContainerLivenessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema WorkflowTemplateSpecTemplatesContainerLivenessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema WorkflowTemplateSpecTemplatesContainerReadinessProbeHttpGetHttpHeaders
 */
export interface WorkflowTemplateSpecTemplatesContainerReadinessProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema WorkflowTemplateSpecTemplatesContainerReadinessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema WorkflowTemplateSpecTemplatesContainerReadinessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Artifact indicates an artifact to place at a specified path
 *
 * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifacts
 */
export interface WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifacts {
  /**
   * ArchiveStrategy describes how to archive files/directory when saving artifacts
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifacts#archive
   */
  readonly archive?: WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArchive;

  /**
   * ArchiveLogs indicates if the container logs should be archived
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifacts#archiveLogs
   */
  readonly archiveLogs?: boolean;

  /**
   * ArtifactoryArtifact is the location of an artifactory artifact
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifacts#artifactory
   */
  readonly artifactory?: WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArtifactory;

  /**
   * From allows an artifact to reference an artifact from a previous step
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifacts#from
   */
  readonly from?: string;

  /**
   * GCSArtifact is the location of a GCS artifact
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifacts#gcs
   */
  readonly gcs?: WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGcs;

  /**
   * GitArtifact is the location of an git artifact
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifacts#git
   */
  readonly git?: WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGit;

  /**
   * GlobalName exports an output artifact to the global scope, making it available as '{{io.argoproj.workflow.v1alpha1.outputs.artifacts.XXXX}} and in workflow.status.outputs.artifacts
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifacts#globalName
   */
  readonly globalName?: string;

  /**
   * HDFSArtifact is the location of an HDFS artifact
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifacts#hdfs
   */
  readonly hdfs?: WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfs;

  /**
   * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifacts#http
   */
  readonly http?: WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHttp;

  /**
   * mode bits to use on this file, must be a value between 0 and 0777 set when loading input artifacts.
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifacts#mode
   */
  readonly mode?: number;

  /**
   * name of the artifact. must be unique within a template's inputs/outputs.
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifacts#name
   */
  readonly name: string;

  /**
   * Make Artifacts optional, if Artifacts doesn't generate or exist
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifacts#optional
   */
  readonly optional?: boolean;

  /**
   * OSSArtifact is the location of an Alibaba Cloud OSS artifact
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifacts#oss
   */
  readonly oss?: WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOss;

  /**
   * Path is the container path to the artifact
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifacts#path
   */
  readonly path?: string;

  /**
   * RawArtifact allows raw string content to be placed as an artifact in a container
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifacts#raw
   */
  readonly raw?: WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsRaw;

  /**
   * S3Artifact is the location of an S3 artifact
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifacts#s3
   */
  readonly s3?: WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3;

}

/**
 * Parameter indicate a passed string parameter to a service template with an optional default value
 *
 * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsParameters
 */
export interface WorkflowTemplateSpecTemplatesDagTasksArgumentsParameters {
  /**
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsParameters#default
   */
  readonly default?: string;

  /**
   * GlobalName exports an output parameter to the global scope, making it available as '{{io.argoproj.workflow.v1alpha1.outputs.parameters.XXXX}} and in workflow.status.outputs.parameters
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsParameters#globalName
   */
  readonly globalName?: string;

  /**
   * Name is the parameter name
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsParameters#name
   */
  readonly name: string;

  /**
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsParameters#value
   */
  readonly value?: string;

  /**
   * ValueFrom describes a location in which to obtain the value to a parameter
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsParameters#valueFrom
   */
  readonly valueFrom?: WorkflowTemplateSpecTemplatesDagTasksArgumentsParametersValueFrom;

}

/**
 * Selects a key from a ConfigMap.
 *
 * @schema WorkflowTemplateSpecTemplatesInitContainersEnvValueFromConfigMapKeyRef
 */
export interface WorkflowTemplateSpecTemplatesInitContainersEnvValueFromConfigMapKeyRef {
  /**
   * The key to select.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersEnvValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersEnvValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersEnvValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * ObjectFieldSelector selects an APIVersioned field of an object.
 *
 * @schema WorkflowTemplateSpecTemplatesInitContainersEnvValueFromFieldRef
 */
export interface WorkflowTemplateSpecTemplatesInitContainersEnvValueFromFieldRef {
  /**
   * Version of the schema the FieldPath is written in terms of, defaults to "v1".
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersEnvValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * Path of the field to select in the specified API version.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersEnvValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * ResourceFieldSelector represents container resources (cpu, memory) and their output format
 *
 * @schema WorkflowTemplateSpecTemplatesInitContainersEnvValueFromResourceFieldRef
 */
export interface WorkflowTemplateSpecTemplatesInitContainersEnvValueFromResourceFieldRef {
  /**
   * Container name: required for volumes, optional for env vars
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersEnvValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and Int64() accessors.

The serialization format is:

<quantity>        ::= <signedNumber><suffix>
  (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
<decimalSI>       ::= m | "" | k | M | G | T | P | E
  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
<decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  a. No precision is lost
  b. No fractional digits will be emitted
  c. The exponent (or suffix) is as large as possible.
The sign will be omitted unless the number is negative.

Examples:
  1.5 will be serialized as "1500m"
  1.5Gi will be serialized as "1536Mi"

Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.

Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersEnvValueFromResourceFieldRef#divisor
   */
  readonly divisor?: string;

  /**
   * Required: resource to select
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersEnvValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesInitContainersEnvValueFromSecretKeyRef
 */
export interface WorkflowTemplateSpecTemplatesInitContainersEnvValueFromSecretKeyRef {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersEnvValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersEnvValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersEnvValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema WorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartExec
 */
export interface WorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema WorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartHttpGet
 */
export interface WorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartHttpGet#httpHeaders
   */
  readonly httpHeaders?: WorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema WorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema WorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema WorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartTcpSocket
 */
export interface WorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema WorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartTcpSocket#port
   */
  readonly port: string;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema WorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopExec
 */
export interface WorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema WorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopHttpGet
 */
export interface WorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopHttpGet#httpHeaders
   */
  readonly httpHeaders?: WorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema WorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema WorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema WorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopTcpSocket
 */
export interface WorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema WorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopTcpSocket#port
   */
  readonly port: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema WorkflowTemplateSpecTemplatesInitContainersLivenessProbeHttpGetHttpHeaders
 */
export interface WorkflowTemplateSpecTemplatesInitContainersLivenessProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersLivenessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersLivenessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema WorkflowTemplateSpecTemplatesInitContainersReadinessProbeHttpGetHttpHeaders
 */
export interface WorkflowTemplateSpecTemplatesInitContainersReadinessProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersReadinessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersReadinessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema WorkflowTemplateSpecTemplatesInitContainersStartupProbeHttpGetHttpHeaders
 */
export interface WorkflowTemplateSpecTemplatesInitContainersStartupProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersStartupProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersStartupProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * TarStrategy will tar and gzip the file or directory when saving
 *
 * @schema WorkflowTemplateSpecTemplatesInputsArtifactsArchiveTar
 */
export interface WorkflowTemplateSpecTemplatesInputsArtifactsArchiveTar {
  /**
   * CompressionLevel specifies the gzip compression level to use for the artifact. Defaults to gzip.DefaultCompression.
   *
   * @default gzip.DefaultCompression.
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsArchiveTar#compressionLevel
   */
  readonly compressionLevel?: number;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesInputsArtifactsArtifactoryPasswordSecret
 */
export interface WorkflowTemplateSpecTemplatesInputsArtifactsArtifactoryPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsArtifactoryPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsArtifactoryPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsArtifactoryPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesInputsArtifactsArtifactoryUsernameSecret
 */
export interface WorkflowTemplateSpecTemplatesInputsArtifactsArtifactoryUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsArtifactoryUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsArtifactoryUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsArtifactoryUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesInputsArtifactsGcsServiceAccountKeySecret
 */
export interface WorkflowTemplateSpecTemplatesInputsArtifactsGcsServiceAccountKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsGcsServiceAccountKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsGcsServiceAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsGcsServiceAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesInputsArtifactsGitPasswordSecret
 */
export interface WorkflowTemplateSpecTemplatesInputsArtifactsGitPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsGitPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsGitPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsGitPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesInputsArtifactsGitSshPrivateKeySecret
 */
export interface WorkflowTemplateSpecTemplatesInputsArtifactsGitSshPrivateKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsGitSshPrivateKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsGitSshPrivateKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsGitSshPrivateKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesInputsArtifactsGitUsernameSecret
 */
export interface WorkflowTemplateSpecTemplatesInputsArtifactsGitUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsGitUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsGitUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsGitUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesInputsArtifactsHdfsKrbCCacheSecret
 */
export interface WorkflowTemplateSpecTemplatesInputsArtifactsHdfsKrbCCacheSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsHdfsKrbCCacheSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsHdfsKrbCCacheSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsHdfsKrbCCacheSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Selects a key from a ConfigMap.
 *
 * @schema WorkflowTemplateSpecTemplatesInputsArtifactsHdfsKrbConfigConfigMap
 */
export interface WorkflowTemplateSpecTemplatesInputsArtifactsHdfsKrbConfigConfigMap {
  /**
   * The key to select.
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsHdfsKrbConfigConfigMap#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsHdfsKrbConfigConfigMap#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsHdfsKrbConfigConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesInputsArtifactsHdfsKrbKeytabSecret
 */
export interface WorkflowTemplateSpecTemplatesInputsArtifactsHdfsKrbKeytabSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsHdfsKrbKeytabSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsHdfsKrbKeytabSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsHdfsKrbKeytabSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesInputsArtifactsOssAccessKeySecret
 */
export interface WorkflowTemplateSpecTemplatesInputsArtifactsOssAccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsOssAccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsOssAccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsOssAccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesInputsArtifactsOssSecretKeySecret
 */
export interface WorkflowTemplateSpecTemplatesInputsArtifactsOssSecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsOssSecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsOssSecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsOssSecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesInputsArtifactsS3AccessKeySecret
 */
export interface WorkflowTemplateSpecTemplatesInputsArtifactsS3AccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsS3AccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsS3AccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsS3AccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesInputsArtifactsS3SecretKeySecret
 */
export interface WorkflowTemplateSpecTemplatesInputsArtifactsS3SecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsS3SecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsS3SecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesInputsArtifactsS3SecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * TarStrategy will tar and gzip the file or directory when saving
 *
 * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsArchiveTar
 */
export interface WorkflowTemplateSpecTemplatesOutputsArtifactsArchiveTar {
  /**
   * CompressionLevel specifies the gzip compression level to use for the artifact. Defaults to gzip.DefaultCompression.
   *
   * @default gzip.DefaultCompression.
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsArchiveTar#compressionLevel
   */
  readonly compressionLevel?: number;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsArtifactoryPasswordSecret
 */
export interface WorkflowTemplateSpecTemplatesOutputsArtifactsArtifactoryPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsArtifactoryPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsArtifactoryPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsArtifactoryPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsArtifactoryUsernameSecret
 */
export interface WorkflowTemplateSpecTemplatesOutputsArtifactsArtifactoryUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsArtifactoryUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsArtifactoryUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsArtifactoryUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsGcsServiceAccountKeySecret
 */
export interface WorkflowTemplateSpecTemplatesOutputsArtifactsGcsServiceAccountKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsGcsServiceAccountKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsGcsServiceAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsGcsServiceAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsGitPasswordSecret
 */
export interface WorkflowTemplateSpecTemplatesOutputsArtifactsGitPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsGitPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsGitPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsGitPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsGitSshPrivateKeySecret
 */
export interface WorkflowTemplateSpecTemplatesOutputsArtifactsGitSshPrivateKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsGitSshPrivateKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsGitSshPrivateKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsGitSshPrivateKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsGitUsernameSecret
 */
export interface WorkflowTemplateSpecTemplatesOutputsArtifactsGitUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsGitUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsGitUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsGitUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsHdfsKrbCCacheSecret
 */
export interface WorkflowTemplateSpecTemplatesOutputsArtifactsHdfsKrbCCacheSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsHdfsKrbCCacheSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsHdfsKrbCCacheSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsHdfsKrbCCacheSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Selects a key from a ConfigMap.
 *
 * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsHdfsKrbConfigConfigMap
 */
export interface WorkflowTemplateSpecTemplatesOutputsArtifactsHdfsKrbConfigConfigMap {
  /**
   * The key to select.
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsHdfsKrbConfigConfigMap#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsHdfsKrbConfigConfigMap#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsHdfsKrbConfigConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsHdfsKrbKeytabSecret
 */
export interface WorkflowTemplateSpecTemplatesOutputsArtifactsHdfsKrbKeytabSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsHdfsKrbKeytabSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsHdfsKrbKeytabSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsHdfsKrbKeytabSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsOssAccessKeySecret
 */
export interface WorkflowTemplateSpecTemplatesOutputsArtifactsOssAccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsOssAccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsOssAccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsOssAccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsOssSecretKeySecret
 */
export interface WorkflowTemplateSpecTemplatesOutputsArtifactsOssSecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsOssSecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsOssSecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsOssSecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsS3AccessKeySecret
 */
export interface WorkflowTemplateSpecTemplatesOutputsArtifactsS3AccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsS3AccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsS3AccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsS3AccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsS3SecretKeySecret
 */
export interface WorkflowTemplateSpecTemplatesOutputsArtifactsS3SecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsS3SecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsS3SecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesOutputsArtifactsS3SecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Selects a key from a ConfigMap.
 *
 * @schema WorkflowTemplateSpecTemplatesScriptEnvValueFromConfigMapKeyRef
 */
export interface WorkflowTemplateSpecTemplatesScriptEnvValueFromConfigMapKeyRef {
  /**
   * The key to select.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptEnvValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesScriptEnvValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesScriptEnvValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * ObjectFieldSelector selects an APIVersioned field of an object.
 *
 * @schema WorkflowTemplateSpecTemplatesScriptEnvValueFromFieldRef
 */
export interface WorkflowTemplateSpecTemplatesScriptEnvValueFromFieldRef {
  /**
   * Version of the schema the FieldPath is written in terms of, defaults to "v1".
   *
   * @schema WorkflowTemplateSpecTemplatesScriptEnvValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * Path of the field to select in the specified API version.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptEnvValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * ResourceFieldSelector represents container resources (cpu, memory) and their output format
 *
 * @schema WorkflowTemplateSpecTemplatesScriptEnvValueFromResourceFieldRef
 */
export interface WorkflowTemplateSpecTemplatesScriptEnvValueFromResourceFieldRef {
  /**
   * Container name: required for volumes, optional for env vars
   *
   * @schema WorkflowTemplateSpecTemplatesScriptEnvValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and Int64() accessors.

The serialization format is:

<quantity>        ::= <signedNumber><suffix>
  (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
<decimalSI>       ::= m | "" | k | M | G | T | P | E
  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
<decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  a. No precision is lost
  b. No fractional digits will be emitted
  c. The exponent (or suffix) is as large as possible.
The sign will be omitted unless the number is negative.

Examples:
  1.5 will be serialized as "1500m"
  1.5Gi will be serialized as "1536Mi"

Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.

Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptEnvValueFromResourceFieldRef#divisor
   */
  readonly divisor?: string;

  /**
   * Required: resource to select
   *
   * @schema WorkflowTemplateSpecTemplatesScriptEnvValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesScriptEnvValueFromSecretKeyRef
 */
export interface WorkflowTemplateSpecTemplatesScriptEnvValueFromSecretKeyRef {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptEnvValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesScriptEnvValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesScriptEnvValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema WorkflowTemplateSpecTemplatesScriptLifecyclePostStartExec
 */
export interface WorkflowTemplateSpecTemplatesScriptLifecyclePostStartExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptLifecyclePostStartExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema WorkflowTemplateSpecTemplatesScriptLifecyclePostStartHttpGet
 */
export interface WorkflowTemplateSpecTemplatesScriptLifecyclePostStartHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptLifecyclePostStartHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptLifecyclePostStartHttpGet#httpHeaders
   */
  readonly httpHeaders?: WorkflowTemplateSpecTemplatesScriptLifecyclePostStartHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptLifecyclePostStartHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema WorkflowTemplateSpecTemplatesScriptLifecyclePostStartHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema WorkflowTemplateSpecTemplatesScriptLifecyclePostStartHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema WorkflowTemplateSpecTemplatesScriptLifecyclePostStartTcpSocket
 */
export interface WorkflowTemplateSpecTemplatesScriptLifecyclePostStartTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptLifecyclePostStartTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema WorkflowTemplateSpecTemplatesScriptLifecyclePostStartTcpSocket#port
   */
  readonly port: string;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema WorkflowTemplateSpecTemplatesScriptLifecyclePreStopExec
 */
export interface WorkflowTemplateSpecTemplatesScriptLifecyclePreStopExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptLifecyclePreStopExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema WorkflowTemplateSpecTemplatesScriptLifecyclePreStopHttpGet
 */
export interface WorkflowTemplateSpecTemplatesScriptLifecyclePreStopHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptLifecyclePreStopHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptLifecyclePreStopHttpGet#httpHeaders
   */
  readonly httpHeaders?: WorkflowTemplateSpecTemplatesScriptLifecyclePreStopHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptLifecyclePreStopHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema WorkflowTemplateSpecTemplatesScriptLifecyclePreStopHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema WorkflowTemplateSpecTemplatesScriptLifecyclePreStopHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema WorkflowTemplateSpecTemplatesScriptLifecyclePreStopTcpSocket
 */
export interface WorkflowTemplateSpecTemplatesScriptLifecyclePreStopTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema WorkflowTemplateSpecTemplatesScriptLifecyclePreStopTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema WorkflowTemplateSpecTemplatesScriptLifecyclePreStopTcpSocket#port
   */
  readonly port: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema WorkflowTemplateSpecTemplatesScriptLivenessProbeHttpGetHttpHeaders
 */
export interface WorkflowTemplateSpecTemplatesScriptLivenessProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema WorkflowTemplateSpecTemplatesScriptLivenessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema WorkflowTemplateSpecTemplatesScriptLivenessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema WorkflowTemplateSpecTemplatesScriptReadinessProbeHttpGetHttpHeaders
 */
export interface WorkflowTemplateSpecTemplatesScriptReadinessProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema WorkflowTemplateSpecTemplatesScriptReadinessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema WorkflowTemplateSpecTemplatesScriptReadinessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema WorkflowTemplateSpecTemplatesScriptStartupProbeHttpGetHttpHeaders
 */
export interface WorkflowTemplateSpecTemplatesScriptStartupProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema WorkflowTemplateSpecTemplatesScriptStartupProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema WorkflowTemplateSpecTemplatesScriptStartupProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Selects a key from a ConfigMap.
 *
 * @schema WorkflowTemplateSpecTemplatesSidecarsEnvValueFromConfigMapKeyRef
 */
export interface WorkflowTemplateSpecTemplatesSidecarsEnvValueFromConfigMapKeyRef {
  /**
   * The key to select.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsEnvValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsEnvValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsEnvValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * ObjectFieldSelector selects an APIVersioned field of an object.
 *
 * @schema WorkflowTemplateSpecTemplatesSidecarsEnvValueFromFieldRef
 */
export interface WorkflowTemplateSpecTemplatesSidecarsEnvValueFromFieldRef {
  /**
   * Version of the schema the FieldPath is written in terms of, defaults to "v1".
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsEnvValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * Path of the field to select in the specified API version.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsEnvValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * ResourceFieldSelector represents container resources (cpu, memory) and their output format
 *
 * @schema WorkflowTemplateSpecTemplatesSidecarsEnvValueFromResourceFieldRef
 */
export interface WorkflowTemplateSpecTemplatesSidecarsEnvValueFromResourceFieldRef {
  /**
   * Container name: required for volumes, optional for env vars
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsEnvValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and Int64() accessors.

The serialization format is:

<quantity>        ::= <signedNumber><suffix>
  (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
<decimalSI>       ::= m | "" | k | M | G | T | P | E
  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
<decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  a. No precision is lost
  b. No fractional digits will be emitted
  c. The exponent (or suffix) is as large as possible.
The sign will be omitted unless the number is negative.

Examples:
  1.5 will be serialized as "1500m"
  1.5Gi will be serialized as "1536Mi"

Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.

Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsEnvValueFromResourceFieldRef#divisor
   */
  readonly divisor?: string;

  /**
   * Required: resource to select
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsEnvValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesSidecarsEnvValueFromSecretKeyRef
 */
export interface WorkflowTemplateSpecTemplatesSidecarsEnvValueFromSecretKeyRef {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsEnvValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsEnvValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsEnvValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema WorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartExec
 */
export interface WorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema WorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartHttpGet
 */
export interface WorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartHttpGet#httpHeaders
   */
  readonly httpHeaders?: WorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema WorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema WorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema WorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartTcpSocket
 */
export interface WorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema WorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartTcpSocket#port
   */
  readonly port: string;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema WorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopExec
 */
export interface WorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema WorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopHttpGet
 */
export interface WorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopHttpGet#httpHeaders
   */
  readonly httpHeaders?: WorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema WorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema WorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema WorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopTcpSocket
 */
export interface WorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema WorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopTcpSocket#port
   */
  readonly port: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema WorkflowTemplateSpecTemplatesSidecarsLivenessProbeHttpGetHttpHeaders
 */
export interface WorkflowTemplateSpecTemplatesSidecarsLivenessProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsLivenessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsLivenessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema WorkflowTemplateSpecTemplatesSidecarsReadinessProbeHttpGetHttpHeaders
 */
export interface WorkflowTemplateSpecTemplatesSidecarsReadinessProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsReadinessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsReadinessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema WorkflowTemplateSpecTemplatesSidecarsStartupProbeHttpGetHttpHeaders
 */
export interface WorkflowTemplateSpecTemplatesSidecarsStartupProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsStartupProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsStartupProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * ArchiveStrategy describes how to archive files/directory when saving artifacts
 *
 * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsArchive
 */
export interface WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsArchive {
  /**
   * NoneStrategy indicates to skip tar process and upload the files or directory tree as independent files. Note that if the artifact is a directory, the artifact driver must support the ability to save/load the directory appropriately.
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsArchive#none
   */
  readonly none?: any;

  /**
   * TarStrategy will tar and gzip the file or directory when saving
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsArchive#tar
   */
  readonly tar?: WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsArchiveTar;

}

/**
 * ArtifactoryArtifact is the location of an artifactory artifact
 *
 * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsArtifactory
 */
export interface WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsArtifactory {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsArtifactory#passwordSecret
   */
  readonly passwordSecret?: WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsArtifactoryPasswordSecret;

  /**
   * URL of the artifact
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsArtifactory#url
   */
  readonly url: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsArtifactory#usernameSecret
   */
  readonly usernameSecret?: WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsArtifactoryUsernameSecret;

}

/**
 * GCSArtifact is the location of a GCS artifact
 *
 * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGcs
 */
export interface WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGcs {
  /**
   * Bucket is the name of the bucket
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGcs#bucket
   */
  readonly bucket: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGcs#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGcs#serviceAccountKeySecret
   */
  readonly serviceAccountKeySecret?: WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGcsServiceAccountKeySecret;

}

/**
 * GitArtifact is the location of an git artifact
 *
 * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGit
 */
export interface WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGit {
  /**
   * Depth specifies clones/fetches should be shallow and include the given number of commits from the branch tip
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGit#depth
   */
  readonly depth?: number;

  /**
   * Fetch specifies a number of refs that should be fetched before checkout
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGit#fetch
   */
  readonly fetch?: string[];

  /**
   * InsecureIgnoreHostKey disables SSH strict host key checking during git clone
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGit#insecureIgnoreHostKey
   */
  readonly insecureIgnoreHostKey?: boolean;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGit#passwordSecret
   */
  readonly passwordSecret?: WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGitPasswordSecret;

  /**
   * Repo is the git repository
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGit#repo
   */
  readonly repo: string;

  /**
   * Revision is the git commit, tag, branch to checkout
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGit#revision
   */
  readonly revision?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGit#sshPrivateKeySecret
   */
  readonly sshPrivateKeySecret?: WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGitSshPrivateKeySecret;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGit#usernameSecret
   */
  readonly usernameSecret?: WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGitUsernameSecret;

}

/**
 * HDFSArtifact is the location of an HDFS artifact
 *
 * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfs
 */
export interface WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfs {
  /**
   * Addresses is accessible addresses of HDFS name nodes
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfs#addresses
   */
  readonly addresses: string[];

  /**
   * Force copies a file forcibly even if it exists (default: false)
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfs#force
   */
  readonly force?: boolean;

  /**
   * HDFSUser is the user to access HDFS file system. It is ignored if either ccache or keytab is used.
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfs#hdfsUser
   */
  readonly hdfsUser?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfs#krbCCacheSecret
   */
  readonly krbCCacheSecret?: WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfsKrbCCacheSecret;

  /**
   * Selects a key from a ConfigMap.
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfs#krbConfigConfigMap
   */
  readonly krbConfigConfigMap?: WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfsKrbConfigConfigMap;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfs#krbKeytabSecret
   */
  readonly krbKeytabSecret?: WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfsKrbKeytabSecret;

  /**
   * KrbRealm is the Kerberos realm used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfs#krbRealm
   */
  readonly krbRealm?: string;

  /**
   * KrbServicePrincipalName is the principal name of Kerberos service It must be set if either ccache or keytab is used.
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfs#krbServicePrincipalName
   */
  readonly krbServicePrincipalName?: string;

  /**
   * KrbUsername is the Kerberos username used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfs#krbUsername
   */
  readonly krbUsername?: string;

  /**
   * Path is a file path in HDFS
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfs#path
   */
  readonly path: string;

}

/**
 * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
 *
 * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHttp
 */
export interface WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHttp {
  /**
   * URL of the artifact
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHttp#url
   */
  readonly url: string;

}

/**
 * OSSArtifact is the location of an Alibaba Cloud OSS artifact
 *
 * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsOss
 */
export interface WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsOss {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsOss#accessKeySecret
   */
  readonly accessKeySecret: WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsOssAccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsOss#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsOss#endpoint
   */
  readonly endpoint: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsOss#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsOss#secretKeySecret
   */
  readonly secretKeySecret: WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsOssSecretKeySecret;

}

/**
 * RawArtifact allows raw string content to be placed as an artifact in a container
 *
 * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsRaw
 */
export interface WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsRaw {
  /**
   * Data is the string contents of the artifact
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsRaw#data
   */
  readonly data: string;

}

/**
 * S3Artifact is the location of an S3 artifact
 *
 * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsS3
 */
export interface WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsS3 {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsS3#accessKeySecret
   */
  readonly accessKeySecret: WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsS3AccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsS3#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsS3#endpoint
   */
  readonly endpoint: string;

  /**
   * Insecure will connect to the service with TLS
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsS3#insecure
   */
  readonly insecure?: boolean;

  /**
   * Key is the key in the bucket where the artifact resides
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsS3#key
   */
  readonly key: string;

  /**
   * Region contains the optional bucket region
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsS3#region
   */
  readonly region?: string;

  /**
   * RoleARN is the Amazon Resource Name (ARN) of the role to assume.
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsS3#roleARN
   */
  readonly roleARN?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsS3#secretKeySecret
   */
  readonly secretKeySecret: WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsS3SecretKeySecret;

  /**
   * UseSDKCreds tells the driver to figure out credentials based on sdk defaults.
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsS3#useSDKCreds
   */
  readonly useSDKCreds?: boolean;

}

/**
 * ValueFrom describes a location in which to obtain the value to a parameter
 *
 * @schema WorkflowTemplateSpecTemplatesStepsArgumentsParametersValueFrom
 */
export interface WorkflowTemplateSpecTemplatesStepsArgumentsParametersValueFrom {
  /**
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsParametersValueFrom#default
   */
  readonly default?: string;

  /**
   * JQFilter expression against the resource object in resource templates
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsParametersValueFrom#jqFilter
   */
  readonly jqFilter?: string;

  /**
   * JSONPath of a resource to retrieve an output parameter value from in resource templates
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsParametersValueFrom#jsonPath
   */
  readonly jsonPath?: string;

  /**
   * Parameter reference to a step or dag task in which to retrieve an output parameter value from (e.g. '{{steps.mystep.outputs.myparam}}')
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsParametersValueFrom#parameter
   */
  readonly parameter?: string;

  /**
   * Path in the container to retrieve an output parameter value from in container templates
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsParametersValueFrom#path
   */
  readonly path?: string;

}

/**
 * ObjectFieldSelector selects an APIVersioned field of an object.
 *
 * @schema WorkflowTemplateSpecTemplatesVolumesDownwardApiItemsFieldRef
 */
export interface WorkflowTemplateSpecTemplatesVolumesDownwardApiItemsFieldRef {
  /**
   * Version of the schema the FieldPath is written in terms of, defaults to "v1".
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesDownwardApiItemsFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * Path of the field to select in the specified API version.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesDownwardApiItemsFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * ResourceFieldSelector represents container resources (cpu, memory) and their output format
 *
 * @schema WorkflowTemplateSpecTemplatesVolumesDownwardApiItemsResourceFieldRef
 */
export interface WorkflowTemplateSpecTemplatesVolumesDownwardApiItemsResourceFieldRef {
  /**
   * Container name: required for volumes, optional for env vars
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesDownwardApiItemsResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and Int64() accessors.

The serialization format is:

<quantity>        ::= <signedNumber><suffix>
  (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
<decimalSI>       ::= m | "" | k | M | G | T | P | E
  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
<decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  a. No precision is lost
  b. No fractional digits will be emitted
  c. The exponent (or suffix) is as large as possible.
The sign will be omitted unless the number is negative.

Examples:
  1.5 will be serialized as "1500m"
  1.5Gi will be serialized as "1536Mi"

Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.

Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesDownwardApiItemsResourceFieldRef#divisor
   */
  readonly divisor?: string;

  /**
   * Required: resource to select
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesDownwardApiItemsResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Adapts a ConfigMap into a projected volume.

The contents of the target ConfigMap's Data field will be presented in a projected volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. Note that this is identical to a configmap volume source without the default mode.
 *
 * @schema WorkflowTemplateSpecTemplatesVolumesProjectedSourcesConfigMap
 */
export interface WorkflowTemplateSpecTemplatesVolumesProjectedSourcesConfigMap {
  /**
   * If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesProjectedSourcesConfigMap#items
   */
  readonly items?: WorkflowTemplateSpecTemplatesVolumesProjectedSourcesConfigMapItems[];

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesProjectedSourcesConfigMap#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its keys must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesProjectedSourcesConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Represents downward API info for projecting into a projected volume. Note that this is identical to a downwardAPI volume source without the default mode.
 *
 * @schema WorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardApi
 */
export interface WorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardApi {
  /**
   * Items is a list of DownwardAPIVolume file
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardApi#items
   */
  readonly items?: WorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardApiItems[];

}

/**
 * Adapts a secret into a projected volume.

The contents of the target Secret's Data field will be presented in a projected volume as files using the keys in the Data field as the file names. Note that this is identical to a secret volume source without the default mode.
 *
 * @schema WorkflowTemplateSpecTemplatesVolumesProjectedSourcesSecret
 */
export interface WorkflowTemplateSpecTemplatesVolumesProjectedSourcesSecret {
  /**
   * If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesProjectedSourcesSecret#items
   */
  readonly items?: WorkflowTemplateSpecTemplatesVolumesProjectedSourcesSecretItems[];

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesProjectedSourcesSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesProjectedSourcesSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * ServiceAccountTokenProjection represents a projected service account token volume. This projection can be used to insert a service account token into the pods runtime filesystem for use against APIs (Kubernetes API Server or otherwise).
 *
 * @schema WorkflowTemplateSpecTemplatesVolumesProjectedSourcesServiceAccountToken
 */
export interface WorkflowTemplateSpecTemplatesVolumesProjectedSourcesServiceAccountToken {
  /**
   * Audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesProjectedSourcesServiceAccountToken#audience
   */
  readonly audience?: string;

  /**
   * ExpirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.
   *
   * @default 1 hour and must be at least 10 minutes.
   * @schema WorkflowTemplateSpecTemplatesVolumesProjectedSourcesServiceAccountToken#expirationSeconds
   */
  readonly expirationSeconds?: number;

  /**
   * Path is the path relative to the mount point of the file to project the token into.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesProjectedSourcesServiceAccountToken#path
   */
  readonly path: string;

}

/**
 * Maps a string key to a path within a volume.
 *
 * @schema WorkflowTemplateSpecVolumesProjectedSourcesConfigMapItems
 */
export interface WorkflowTemplateSpecVolumesProjectedSourcesConfigMapItems {
  /**
   * The key to project.
   *
   * @schema WorkflowTemplateSpecVolumesProjectedSourcesConfigMapItems#key
   */
  readonly key: string;

  /**
   * Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema WorkflowTemplateSpecVolumesProjectedSourcesConfigMapItems#mode
   */
  readonly mode?: number;

  /**
   * The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
   *
   * @schema WorkflowTemplateSpecVolumesProjectedSourcesConfigMapItems#path
   */
  readonly path: string;

}

/**
 * DownwardAPIVolumeFile represents information to create the file containing the pod field
 *
 * @schema WorkflowTemplateSpecVolumesProjectedSourcesDownwardApiItems
 */
export interface WorkflowTemplateSpecVolumesProjectedSourcesDownwardApiItems {
  /**
   * ObjectFieldSelector selects an APIVersioned field of an object.
   *
   * @schema WorkflowTemplateSpecVolumesProjectedSourcesDownwardApiItems#fieldRef
   */
  readonly fieldRef?: WorkflowTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRef;

  /**
   * Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema WorkflowTemplateSpecVolumesProjectedSourcesDownwardApiItems#mode
   */
  readonly mode?: number;

  /**
   * Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
   *
   * @schema WorkflowTemplateSpecVolumesProjectedSourcesDownwardApiItems#path
   */
  readonly path: string;

  /**
   * ResourceFieldSelector represents container resources (cpu, memory) and their output format
   *
   * @schema WorkflowTemplateSpecVolumesProjectedSourcesDownwardApiItems#resourceFieldRef
   */
  readonly resourceFieldRef?: WorkflowTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef;

}

/**
 * Maps a string key to a path within a volume.
 *
 * @schema WorkflowTemplateSpecVolumesProjectedSourcesSecretItems
 */
export interface WorkflowTemplateSpecVolumesProjectedSourcesSecretItems {
  /**
   * The key to project.
   *
   * @schema WorkflowTemplateSpecVolumesProjectedSourcesSecretItems#key
   */
  readonly key: string;

  /**
   * Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema WorkflowTemplateSpecVolumesProjectedSourcesSecretItems#mode
   */
  readonly mode?: number;

  /**
   * The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
   *
   * @schema WorkflowTemplateSpecVolumesProjectedSourcesSecretItems#path
   */
  readonly path: string;

}

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema WorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions
 */
export interface WorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema WorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema WorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   *
   * @schema WorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema WorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions
 */
export interface WorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema WorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema WorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   *
   * @schema WorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema WorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions
 */
export interface WorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
  /**
   * The label key that the selector applies to.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#key
   */
  readonly key: string;

  /**
   * Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema WorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields
 */
export interface WorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
  /**
   * The label key that the selector applies to.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#key
   */
  readonly key: string;

  /**
   * Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#operator
   */
  readonly operator: string;

  /**
   * An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#values
   */
  readonly values?: string[];

}

/**
 * A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema WorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions
 */
export interface WorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
  /**
   * The label key that the selector applies to.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#key
   */
  readonly key: string;

  /**
   * Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema WorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields
 */
export interface WorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
  /**
   * The label key that the selector applies to.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#key
   */
  readonly key: string;

  /**
   * Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#operator
   */
  readonly operator: string;

  /**
   * An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#values
   */
  readonly values?: string[];

}

/**
 * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
 *
 * @schema WorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector
 */
export interface WorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchExpressions
   */
  readonly matchExpressions?: WorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema WorkflowTemplateSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions
 */
export interface WorkflowTemplateSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
 *
 * @schema WorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector
 */
export interface WorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchExpressions
   */
  readonly matchExpressions?: WorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema WorkflowTemplateSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions
 */
export interface WorkflowTemplateSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema WorkflowTemplateSpecTemplatesContainerLifecyclePostStartHttpGetHttpHeaders
 */
export interface WorkflowTemplateSpecTemplatesContainerLifecyclePostStartHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema WorkflowTemplateSpecTemplatesContainerLifecyclePostStartHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema WorkflowTemplateSpecTemplatesContainerLifecyclePostStartHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema WorkflowTemplateSpecTemplatesContainerLifecyclePreStopHttpGetHttpHeaders
 */
export interface WorkflowTemplateSpecTemplatesContainerLifecyclePreStopHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema WorkflowTemplateSpecTemplatesContainerLifecyclePreStopHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema WorkflowTemplateSpecTemplatesContainerLifecyclePreStopHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * ArchiveStrategy describes how to archive files/directory when saving artifacts
 *
 * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArchive
 */
export interface WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArchive {
  /**
   * NoneStrategy indicates to skip tar process and upload the files or directory tree as independent files. Note that if the artifact is a directory, the artifact driver must support the ability to save/load the directory appropriately.
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArchive#none
   */
  readonly none?: any;

  /**
   * TarStrategy will tar and gzip the file or directory when saving
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArchive#tar
   */
  readonly tar?: WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArchiveTar;

}

/**
 * ArtifactoryArtifact is the location of an artifactory artifact
 *
 * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArtifactory
 */
export interface WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArtifactory {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArtifactory#passwordSecret
   */
  readonly passwordSecret?: WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArtifactoryPasswordSecret;

  /**
   * URL of the artifact
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArtifactory#url
   */
  readonly url: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArtifactory#usernameSecret
   */
  readonly usernameSecret?: WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArtifactoryUsernameSecret;

}

/**
 * GCSArtifact is the location of a GCS artifact
 *
 * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGcs
 */
export interface WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGcs {
  /**
   * Bucket is the name of the bucket
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGcs#bucket
   */
  readonly bucket: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGcs#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGcs#serviceAccountKeySecret
   */
  readonly serviceAccountKeySecret?: WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGcsServiceAccountKeySecret;

}

/**
 * GitArtifact is the location of an git artifact
 *
 * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGit
 */
export interface WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGit {
  /**
   * Depth specifies clones/fetches should be shallow and include the given number of commits from the branch tip
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGit#depth
   */
  readonly depth?: number;

  /**
   * Fetch specifies a number of refs that should be fetched before checkout
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGit#fetch
   */
  readonly fetch?: string[];

  /**
   * InsecureIgnoreHostKey disables SSH strict host key checking during git clone
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGit#insecureIgnoreHostKey
   */
  readonly insecureIgnoreHostKey?: boolean;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGit#passwordSecret
   */
  readonly passwordSecret?: WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGitPasswordSecret;

  /**
   * Repo is the git repository
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGit#repo
   */
  readonly repo: string;

  /**
   * Revision is the git commit, tag, branch to checkout
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGit#revision
   */
  readonly revision?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGit#sshPrivateKeySecret
   */
  readonly sshPrivateKeySecret?: WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGitSshPrivateKeySecret;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGit#usernameSecret
   */
  readonly usernameSecret?: WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGitUsernameSecret;

}

/**
 * HDFSArtifact is the location of an HDFS artifact
 *
 * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfs
 */
export interface WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfs {
  /**
   * Addresses is accessible addresses of HDFS name nodes
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfs#addresses
   */
  readonly addresses: string[];

  /**
   * Force copies a file forcibly even if it exists (default: false)
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfs#force
   */
  readonly force?: boolean;

  /**
   * HDFSUser is the user to access HDFS file system. It is ignored if either ccache or keytab is used.
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfs#hdfsUser
   */
  readonly hdfsUser?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfs#krbCCacheSecret
   */
  readonly krbCCacheSecret?: WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbCCacheSecret;

  /**
   * Selects a key from a ConfigMap.
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfs#krbConfigConfigMap
   */
  readonly krbConfigConfigMap?: WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfs#krbKeytabSecret
   */
  readonly krbKeytabSecret?: WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbKeytabSecret;

  /**
   * KrbRealm is the Kerberos realm used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfs#krbRealm
   */
  readonly krbRealm?: string;

  /**
   * KrbServicePrincipalName is the principal name of Kerberos service It must be set if either ccache or keytab is used.
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfs#krbServicePrincipalName
   */
  readonly krbServicePrincipalName?: string;

  /**
   * KrbUsername is the Kerberos username used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfs#krbUsername
   */
  readonly krbUsername?: string;

  /**
   * Path is a file path in HDFS
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfs#path
   */
  readonly path: string;

}

/**
 * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
 *
 * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHttp
 */
export interface WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHttp {
  /**
   * URL of the artifact
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHttp#url
   */
  readonly url: string;

}

/**
 * OSSArtifact is the location of an Alibaba Cloud OSS artifact
 *
 * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOss
 */
export interface WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOss {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOss#accessKeySecret
   */
  readonly accessKeySecret: WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOssAccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOss#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOss#endpoint
   */
  readonly endpoint: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOss#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOss#secretKeySecret
   */
  readonly secretKeySecret: WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOssSecretKeySecret;

}

/**
 * RawArtifact allows raw string content to be placed as an artifact in a container
 *
 * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsRaw
 */
export interface WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsRaw {
  /**
   * Data is the string contents of the artifact
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsRaw#data
   */
  readonly data: string;

}

/**
 * S3Artifact is the location of an S3 artifact
 *
 * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3
 */
export interface WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3 {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3#accessKeySecret
   */
  readonly accessKeySecret: WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3AccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3#endpoint
   */
  readonly endpoint: string;

  /**
   * Insecure will connect to the service with TLS
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3#insecure
   */
  readonly insecure?: boolean;

  /**
   * Key is the key in the bucket where the artifact resides
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3#key
   */
  readonly key: string;

  /**
   * Region contains the optional bucket region
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3#region
   */
  readonly region?: string;

  /**
   * RoleARN is the Amazon Resource Name (ARN) of the role to assume.
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3#roleARN
   */
  readonly roleARN?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3#secretKeySecret
   */
  readonly secretKeySecret: WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3SecretKeySecret;

  /**
   * UseSDKCreds tells the driver to figure out credentials based on sdk defaults.
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3#useSDKCreds
   */
  readonly useSDKCreds?: boolean;

}

/**
 * ValueFrom describes a location in which to obtain the value to a parameter
 *
 * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsParametersValueFrom
 */
export interface WorkflowTemplateSpecTemplatesDagTasksArgumentsParametersValueFrom {
  /**
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsParametersValueFrom#default
   */
  readonly default?: string;

  /**
   * JQFilter expression against the resource object in resource templates
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsParametersValueFrom#jqFilter
   */
  readonly jqFilter?: string;

  /**
   * JSONPath of a resource to retrieve an output parameter value from in resource templates
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsParametersValueFrom#jsonPath
   */
  readonly jsonPath?: string;

  /**
   * Parameter reference to a step or dag task in which to retrieve an output parameter value from (e.g. '{{steps.mystep.outputs.myparam}}')
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsParametersValueFrom#parameter
   */
  readonly parameter?: string;

  /**
   * Path in the container to retrieve an output parameter value from in container templates
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsParametersValueFrom#path
   */
  readonly path?: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema WorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartHttpGetHttpHeaders
 */
export interface WorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema WorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopHttpGetHttpHeaders
 */
export interface WorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema WorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema WorkflowTemplateSpecTemplatesScriptLifecyclePostStartHttpGetHttpHeaders
 */
export interface WorkflowTemplateSpecTemplatesScriptLifecyclePostStartHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema WorkflowTemplateSpecTemplatesScriptLifecyclePostStartHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema WorkflowTemplateSpecTemplatesScriptLifecyclePostStartHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema WorkflowTemplateSpecTemplatesScriptLifecyclePreStopHttpGetHttpHeaders
 */
export interface WorkflowTemplateSpecTemplatesScriptLifecyclePreStopHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema WorkflowTemplateSpecTemplatesScriptLifecyclePreStopHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema WorkflowTemplateSpecTemplatesScriptLifecyclePreStopHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema WorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartHttpGetHttpHeaders
 */
export interface WorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema WorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopHttpGetHttpHeaders
 */
export interface WorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema WorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * TarStrategy will tar and gzip the file or directory when saving
 *
 * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsArchiveTar
 */
export interface WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsArchiveTar {
  /**
   * CompressionLevel specifies the gzip compression level to use for the artifact. Defaults to gzip.DefaultCompression.
   *
   * @default gzip.DefaultCompression.
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsArchiveTar#compressionLevel
   */
  readonly compressionLevel?: number;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsArtifactoryPasswordSecret
 */
export interface WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsArtifactoryPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsArtifactoryPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsArtifactoryPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsArtifactoryPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsArtifactoryUsernameSecret
 */
export interface WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsArtifactoryUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsArtifactoryUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsArtifactoryUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsArtifactoryUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGcsServiceAccountKeySecret
 */
export interface WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGcsServiceAccountKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGcsServiceAccountKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGcsServiceAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGcsServiceAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGitPasswordSecret
 */
export interface WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGitPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGitPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGitPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGitPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGitSshPrivateKeySecret
 */
export interface WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGitSshPrivateKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGitSshPrivateKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGitSshPrivateKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGitSshPrivateKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGitUsernameSecret
 */
export interface WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGitUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGitUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGitUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGitUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfsKrbCCacheSecret
 */
export interface WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfsKrbCCacheSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfsKrbCCacheSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfsKrbCCacheSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfsKrbCCacheSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Selects a key from a ConfigMap.
 *
 * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfsKrbConfigConfigMap
 */
export interface WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfsKrbConfigConfigMap {
  /**
   * The key to select.
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfsKrbConfigConfigMap#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfsKrbConfigConfigMap#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfsKrbConfigConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfsKrbKeytabSecret
 */
export interface WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfsKrbKeytabSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfsKrbKeytabSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfsKrbKeytabSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfsKrbKeytabSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsOssAccessKeySecret
 */
export interface WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsOssAccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsOssAccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsOssAccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsOssAccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsOssSecretKeySecret
 */
export interface WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsOssSecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsOssSecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsOssSecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsOssSecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsS3AccessKeySecret
 */
export interface WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsS3AccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsS3AccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsS3AccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsS3AccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsS3SecretKeySecret
 */
export interface WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsS3SecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsS3SecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsS3SecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesStepsArgumentsArtifactsS3SecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Maps a string key to a path within a volume.
 *
 * @schema WorkflowTemplateSpecTemplatesVolumesProjectedSourcesConfigMapItems
 */
export interface WorkflowTemplateSpecTemplatesVolumesProjectedSourcesConfigMapItems {
  /**
   * The key to project.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesProjectedSourcesConfigMapItems#key
   */
  readonly key: string;

  /**
   * Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesProjectedSourcesConfigMapItems#mode
   */
  readonly mode?: number;

  /**
   * The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesProjectedSourcesConfigMapItems#path
   */
  readonly path: string;

}

/**
 * DownwardAPIVolumeFile represents information to create the file containing the pod field
 *
 * @schema WorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardApiItems
 */
export interface WorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardApiItems {
  /**
   * ObjectFieldSelector selects an APIVersioned field of an object.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardApiItems#fieldRef
   */
  readonly fieldRef?: WorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardApiItemsFieldRef;

  /**
   * Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardApiItems#mode
   */
  readonly mode?: number;

  /**
   * Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardApiItems#path
   */
  readonly path: string;

  /**
   * ResourceFieldSelector represents container resources (cpu, memory) and their output format
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardApiItems#resourceFieldRef
   */
  readonly resourceFieldRef?: WorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardApiItemsResourceFieldRef;

}

/**
 * Maps a string key to a path within a volume.
 *
 * @schema WorkflowTemplateSpecTemplatesVolumesProjectedSourcesSecretItems
 */
export interface WorkflowTemplateSpecTemplatesVolumesProjectedSourcesSecretItems {
  /**
   * The key to project.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesProjectedSourcesSecretItems#key
   */
  readonly key: string;

  /**
   * Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesProjectedSourcesSecretItems#mode
   */
  readonly mode?: number;

  /**
   * The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesProjectedSourcesSecretItems#path
   */
  readonly path: string;

}

/**
 * ObjectFieldSelector selects an APIVersioned field of an object.
 *
 * @schema WorkflowTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRef
 */
export interface WorkflowTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRef {
  /**
   * Version of the schema the FieldPath is written in terms of, defaults to "v1".
   *
   * @schema WorkflowTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * Path of the field to select in the specified API version.
   *
   * @schema WorkflowTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * ResourceFieldSelector represents container resources (cpu, memory) and their output format
 *
 * @schema WorkflowTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef
 */
export interface WorkflowTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef {
  /**
   * Container name: required for volumes, optional for env vars
   *
   * @schema WorkflowTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and Int64() accessors.

The serialization format is:

<quantity>        ::= <signedNumber><suffix>
  (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
<decimalSI>       ::= m | "" | k | M | G | T | P | E
  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
<decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  a. No precision is lost
  b. No fractional digits will be emitted
  c. The exponent (or suffix) is as large as possible.
The sign will be omitted unless the number is negative.

Examples:
  1.5 will be serialized as "1500m"
  1.5Gi will be serialized as "1536Mi"

Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.

Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
   *
   * @schema WorkflowTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#divisor
   */
  readonly divisor?: string;

  /**
   * Required: resource to select
   *
   * @schema WorkflowTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema WorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions
 */
export interface WorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema WorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions
 */
export interface WorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   *
   * @schema WorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * TarStrategy will tar and gzip the file or directory when saving
 *
 * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArchiveTar
 */
export interface WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArchiveTar {
  /**
   * CompressionLevel specifies the gzip compression level to use for the artifact. Defaults to gzip.DefaultCompression.
   *
   * @default gzip.DefaultCompression.
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArchiveTar#compressionLevel
   */
  readonly compressionLevel?: number;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArtifactoryPasswordSecret
 */
export interface WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArtifactoryPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArtifactoryPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArtifactoryPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArtifactoryPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArtifactoryUsernameSecret
 */
export interface WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArtifactoryUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArtifactoryUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArtifactoryUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArtifactoryUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGcsServiceAccountKeySecret
 */
export interface WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGcsServiceAccountKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGcsServiceAccountKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGcsServiceAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGcsServiceAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGitPasswordSecret
 */
export interface WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGitPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGitPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGitPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGitPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGitSshPrivateKeySecret
 */
export interface WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGitSshPrivateKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGitSshPrivateKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGitSshPrivateKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGitSshPrivateKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGitUsernameSecret
 */
export interface WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGitUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGitUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGitUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGitUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbCCacheSecret
 */
export interface WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbCCacheSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbCCacheSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbCCacheSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbCCacheSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Selects a key from a ConfigMap.
 *
 * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap
 */
export interface WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap {
  /**
   * The key to select.
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbKeytabSecret
 */
export interface WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbKeytabSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbKeytabSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbKeytabSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbKeytabSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOssAccessKeySecret
 */
export interface WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOssAccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOssAccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOssAccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOssAccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOssSecretKeySecret
 */
export interface WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOssSecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOssSecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOssSecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOssSecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3AccessKeySecret
 */
export interface WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3AccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3AccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3AccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3AccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3SecretKeySecret
 */
export interface WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3SecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3SecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3SecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3SecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * ObjectFieldSelector selects an APIVersioned field of an object.
 *
 * @schema WorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardApiItemsFieldRef
 */
export interface WorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardApiItemsFieldRef {
  /**
   * Version of the schema the FieldPath is written in terms of, defaults to "v1".
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardApiItemsFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * Path of the field to select in the specified API version.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardApiItemsFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * ResourceFieldSelector represents container resources (cpu, memory) and their output format
 *
 * @schema WorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardApiItemsResourceFieldRef
 */
export interface WorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardApiItemsResourceFieldRef {
  /**
   * Container name: required for volumes, optional for env vars
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and Int64() accessors.

The serialization format is:

<quantity>        ::= <signedNumber><suffix>
  (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
<decimalSI>       ::= m | "" | k | M | G | T | P | E
  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
<decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  a. No precision is lost
  b. No fractional digits will be emitted
  c. The exponent (or suffix) is as large as possible.
The sign will be omitted unless the number is negative.

Examples:
  1.5 will be serialized as "1500m"
  1.5Gi will be serialized as "1536Mi"

Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.

Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#divisor
   */
  readonly divisor?: string;

  /**
   * Required: resource to select
   *
   * @schema WorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#resource
   */
  readonly resource: string;

}

