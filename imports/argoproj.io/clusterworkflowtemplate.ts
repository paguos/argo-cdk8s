// generated by cdk8s
import { ApiObject } from 'cdk8s';
import { Construct } from 'constructs';

/**
 * ClusterWorkflowTemplate is the definition of a workflow template resource in cluster scope
 *
 * @schema ClusterWorkflowTemplate
 */
export class ClusterWorkflowTemplate extends ApiObject {
  /**
   * Defines a "ClusterWorkflowTemplate" API object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: ClusterWorkflowTemplateOptions) {
    super(scope, name, {
      ...options,
      kind: 'ClusterWorkflowTemplate',
      apiVersion: 'argoproj.io/v1alpha1',
    });
  }
}

/**
 * ClusterWorkflowTemplate is the definition of a workflow template resource in cluster scope
 *
 * @schema ClusterWorkflowTemplate
 */
export interface ClusterWorkflowTemplateOptions {
  /**
   * @schema ClusterWorkflowTemplate#metadata
   */
  readonly metadata: any;

  /**
   * WorkflowTemplateSpec is a spec of WorkflowTemplate.
   *
   * @schema ClusterWorkflowTemplate#spec
   */
  readonly spec: ClusterWorkflowTemplateSpec;

}

/**
 * WorkflowTemplateSpec is a spec of WorkflowTemplate.
 *
 * @schema ClusterWorkflowTemplateSpec
 */
export interface ClusterWorkflowTemplateSpec {
  /**
   * Optional duration in seconds relative to the workflow start time which the workflow is allowed to run before the controller terminates the io.argoproj.workflow.v1alpha1. A value of zero is used to terminate a Running workflow
   *
   * @schema ClusterWorkflowTemplateSpec#activeDeadlineSeconds
   */
  readonly activeDeadlineSeconds?: number;

  /**
   * Affinity is a group of affinity scheduling rules.
   *
   * @schema ClusterWorkflowTemplateSpec#affinity
   */
  readonly affinity?: ClusterWorkflowTemplateSpecAffinity;

  /**
   * Arguments to a template
   *
   * @schema ClusterWorkflowTemplateSpec#arguments
   */
  readonly arguments?: ClusterWorkflowTemplateSpecArguments;

  /**
   * @schema ClusterWorkflowTemplateSpec#artifactRepositoryRef
   */
  readonly artifactRepositoryRef?: ClusterWorkflowTemplateSpecArtifactRepositoryRef;

  /**
   * AutomountServiceAccountToken indicates whether a service account token should be automatically mounted in pods. ServiceAccountName of ExecutorConfig must be specified if this value is false.
   *
   * @schema ClusterWorkflowTemplateSpec#automountServiceAccountToken
   */
  readonly automountServiceAccountToken?: boolean;

  /**
   * PodDNSConfig defines the DNS parameters of a pod in addition to those generated from DNSPolicy.
   *
   * @schema ClusterWorkflowTemplateSpec#dnsConfig
   */
  readonly dnsConfig?: ClusterWorkflowTemplateSpecDnsConfig;

  /**
   * Set DNS policy for the pod. Defaults to "ClusterFirst". Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'.
   *
   * @default ClusterFirst". Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'.
   * @schema ClusterWorkflowTemplateSpec#dnsPolicy
   */
  readonly dnsPolicy?: string;

  /**
   * Entrypoint is a template reference to the starting point of the io.argoproj.workflow.v1alpha1.
   *
   * @schema ClusterWorkflowTemplateSpec#entrypoint
   */
  readonly entrypoint?: string;

  /**
   * ExecutorConfig holds configurations of an executor container.
   *
   * @schema ClusterWorkflowTemplateSpec#executor
   */
  readonly executor?: ClusterWorkflowTemplateSpecExecutor;

  /**
   * @schema ClusterWorkflowTemplateSpec#hostAliases
   */
  readonly hostAliases?: ClusterWorkflowTemplateSpecHostAliases[];

  /**
   * Host networking requested for this workflow pod. Default to false.
   *
   * @default false.
   * @schema ClusterWorkflowTemplateSpec#hostNetwork
   */
  readonly hostNetwork?: boolean;

  /**
   * ImagePullSecrets is a list of references to secrets in the same namespace to use for pulling any images in pods that reference this ServiceAccount. ImagePullSecrets are distinct from Secrets because Secrets can be mounted in the pod, but ImagePullSecrets are only accessed by the kubelet. More info: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
   *
   * @schema ClusterWorkflowTemplateSpec#imagePullSecrets
   */
  readonly imagePullSecrets?: ClusterWorkflowTemplateSpecImagePullSecrets[];

  /**
   * Metrics are a list of metrics emitted from a Workflow/Template
   *
   * @schema ClusterWorkflowTemplateSpec#metrics
   */
  readonly metrics?: ClusterWorkflowTemplateSpecMetrics;

  /**
   * NodeSelector is a selector which will result in all pods of the workflow to be scheduled on the selected node(s). This is able to be overridden by a nodeSelector specified in the template.
   *
   * @schema ClusterWorkflowTemplateSpec#nodeSelector
   */
  readonly nodeSelector?: { [key: string]: string };

  /**
   * OnExit is a template reference which is invoked at the end of the workflow, irrespective of the success, failure, or error of the primary io.argoproj.workflow.v1alpha1.
   *
   * @schema ClusterWorkflowTemplateSpec#onExit
   */
  readonly onExit?: string;

  /**
   * Parallelism limits the max total parallel pods that can execute at the same time in a workflow
   *
   * @schema ClusterWorkflowTemplateSpec#parallelism
   */
  readonly parallelism?: number;

  /**
   * PodDisruptionBudgetSpec is a description of a PodDisruptionBudget.
   *
   * @schema ClusterWorkflowTemplateSpec#podDisruptionBudget
   */
  readonly podDisruptionBudget?: ClusterWorkflowTemplateSpecPodDisruptionBudget;

  /**
   * PodGC describes how to delete completed pods as they complete
   *
   * @schema ClusterWorkflowTemplateSpec#podGC
   */
  readonly podGC?: ClusterWorkflowTemplateSpecPodGc;

  /**
   * Priority to apply to workflow pods.
   *
   * @schema ClusterWorkflowTemplateSpec#podPriority
   */
  readonly podPriority?: number;

  /**
   * PriorityClassName to apply to workflow pods.
   *
   * @schema ClusterWorkflowTemplateSpec#podPriorityClassName
   */
  readonly podPriorityClassName?: string;

  /**
   * PodSpecPatch holds strategic merge patch to apply against the pod spec. Allows parameterization of container fields which are not strings (e.g. resource limits).
   *
   * @schema ClusterWorkflowTemplateSpec#podSpecPatch
   */
  readonly podSpecPatch?: string;

  /**
   * Priority is used if controller is configured to process limited number of workflows in parallel. Workflows with higher priority are processed first.
   *
   * @schema ClusterWorkflowTemplateSpec#priority
   */
  readonly priority?: number;

  /**
   * Set scheduler name for all pods. Will be overridden if container/script template's scheduler name is set. Default scheduler will be used if neither specified.
   *
   * @schema ClusterWorkflowTemplateSpec#schedulerName
   */
  readonly schedulerName?: string;

  /**
   * PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext.
   *
   * @schema ClusterWorkflowTemplateSpec#securityContext
   */
  readonly securityContext?: ClusterWorkflowTemplateSpecSecurityContext;

  /**
   * ServiceAccountName is the name of the ServiceAccount to run all pods of the workflow as.
   *
   * @schema ClusterWorkflowTemplateSpec#serviceAccountName
   */
  readonly serviceAccountName?: string;

  /**
   * Shutdown will shutdown the workflow according to its ShutdownStrategy
   *
   * @schema ClusterWorkflowTemplateSpec#shutdown
   */
  readonly shutdown?: string;

  /**
   * Suspend will suspend the workflow and prevent execution of any future steps in the workflow
   *
   * @schema ClusterWorkflowTemplateSpec#suspend
   */
  readonly suspend?: boolean;

  /**
   * Templates is a list of workflow templates used in a workflow
   *
   * @schema ClusterWorkflowTemplateSpec#templates
   */
  readonly templates?: ClusterWorkflowTemplateSpecTemplates[];

  /**
   * Tolerations to apply to workflow pods.
   *
   * @schema ClusterWorkflowTemplateSpec#tolerations
   */
  readonly tolerations?: ClusterWorkflowTemplateSpecTolerations[];

  /**
   * TTLSecondsAfterFinished limits the lifetime of a Workflow that has finished execution (Succeeded, Failed, Error). If this field is set, once the Workflow finishes, it will be deleted after ttlSecondsAfterFinished expires. If this field is unset, ttlSecondsAfterFinished will not expire. If this field is set to zero, ttlSecondsAfterFinished expires immediately after the Workflow finishes. DEPRECATED: Use TTLStrategy.SecondsAfterCompletion instead.
   *
   * @schema ClusterWorkflowTemplateSpec#ttlSecondsAfterFinished
   */
  readonly ttlSecondsAfterFinished?: number;

  /**
   * TTLStrategy is the strategy for the time to live depending on if the workflow succeeded or failed
   *
   * @schema ClusterWorkflowTemplateSpec#ttlStrategy
   */
  readonly ttlStrategy?: ClusterWorkflowTemplateSpecTtlStrategy;

  /**
   * VolumeClaimTemplates is a list of claims that containers are allowed to reference. The Workflow controller will create the claims at the beginning of the workflow and delete the claims upon completion of the workflow
   *
   * @schema ClusterWorkflowTemplateSpec#volumeClaimTemplates
   */
  readonly volumeClaimTemplates?: ClusterWorkflowTemplateSpecVolumeClaimTemplates[];

  /**
   * Volumes is a list of volumes that can be mounted by containers in a io.argoproj.workflow.v1alpha1.
   *
   * @schema ClusterWorkflowTemplateSpec#volumes
   */
  readonly volumes?: ClusterWorkflowTemplateSpecVolumes[];

  /**
   * WorkflowTemplateRef is a reference to a WorkflowTemplate resource.
   *
   * @schema ClusterWorkflowTemplateSpec#workflowTemplateRef
   */
  readonly workflowTemplateRef?: ClusterWorkflowTemplateSpecWorkflowTemplateRef;

}

/**
 * Affinity is a group of affinity scheduling rules.
 *
 * @schema ClusterWorkflowTemplateSpecAffinity
 */
export interface ClusterWorkflowTemplateSpecAffinity {
  /**
   * Node affinity is a group of node affinity scheduling rules.
   *
   * @schema ClusterWorkflowTemplateSpecAffinity#nodeAffinity
   */
  readonly nodeAffinity?: ClusterWorkflowTemplateSpecAffinityNodeAffinity;

  /**
   * Pod affinity is a group of inter pod affinity scheduling rules.
   *
   * @schema ClusterWorkflowTemplateSpecAffinity#podAffinity
   */
  readonly podAffinity?: ClusterWorkflowTemplateSpecAffinityPodAffinity;

  /**
   * Pod anti affinity is a group of inter pod anti affinity scheduling rules.
   *
   * @schema ClusterWorkflowTemplateSpecAffinity#podAntiAffinity
   */
  readonly podAntiAffinity?: ClusterWorkflowTemplateSpecAffinityPodAntiAffinity;

}

/**
 * Arguments to a template
 *
 * @schema ClusterWorkflowTemplateSpecArguments
 */
export interface ClusterWorkflowTemplateSpecArguments {
  /**
   * Artifacts is the list of artifacts to pass to the template or workflow
   *
   * @schema ClusterWorkflowTemplateSpecArguments#artifacts
   */
  readonly artifacts?: ClusterWorkflowTemplateSpecArgumentsArtifacts[];

  /**
   * Parameters is the list of parameters to pass to the template or workflow
   *
   * @schema ClusterWorkflowTemplateSpecArguments#parameters
   */
  readonly parameters?: ClusterWorkflowTemplateSpecArgumentsParameters[];

}

/**
 * @schema ClusterWorkflowTemplateSpecArtifactRepositoryRef
 */
export interface ClusterWorkflowTemplateSpecArtifactRepositoryRef {
  /**
   * @schema ClusterWorkflowTemplateSpecArtifactRepositoryRef#configMap
   */
  readonly configMap?: string;

  /**
   * @schema ClusterWorkflowTemplateSpecArtifactRepositoryRef#key
   */
  readonly key?: string;

}

/**
 * PodDNSConfig defines the DNS parameters of a pod in addition to those generated from DNSPolicy.
 *
 * @schema ClusterWorkflowTemplateSpecDnsConfig
 */
export interface ClusterWorkflowTemplateSpecDnsConfig {
  /**
   * A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.
   *
   * @schema ClusterWorkflowTemplateSpecDnsConfig#nameservers
   */
  readonly nameservers?: string[];

  /**
   * A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.
   *
   * @schema ClusterWorkflowTemplateSpecDnsConfig#options
   */
  readonly options?: ClusterWorkflowTemplateSpecDnsConfigOptions[];

  /**
   * A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.
   *
   * @schema ClusterWorkflowTemplateSpecDnsConfig#searches
   */
  readonly searches?: string[];

}

/**
 * ExecutorConfig holds configurations of an executor container.
 *
 * @schema ClusterWorkflowTemplateSpecExecutor
 */
export interface ClusterWorkflowTemplateSpecExecutor {
  /**
   * ServiceAccountName specifies the service account name of the executor container.
   *
   * @schema ClusterWorkflowTemplateSpecExecutor#serviceAccountName
   */
  readonly serviceAccountName?: string;

}

/**
 * HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the pod's hosts file.
 *
 * @schema ClusterWorkflowTemplateSpecHostAliases
 */
export interface ClusterWorkflowTemplateSpecHostAliases {
  /**
   * Hostnames for the above IP address.
   *
   * @schema ClusterWorkflowTemplateSpecHostAliases#hostnames
   */
  readonly hostnames?: string[];

  /**
   * IP address of the host file entry.
   *
   * @schema ClusterWorkflowTemplateSpecHostAliases#ip
   */
  readonly ip?: string;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema ClusterWorkflowTemplateSpecImagePullSecrets
 */
export interface ClusterWorkflowTemplateSpecImagePullSecrets {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecImagePullSecrets#name
   */
  readonly name?: string;

}

/**
 * Metrics are a list of metrics emitted from a Workflow/Template
 *
 * @schema ClusterWorkflowTemplateSpecMetrics
 */
export interface ClusterWorkflowTemplateSpecMetrics {
  /**
   * Prometheus is a list of prometheus metrics to be emitted
   *
   * @schema ClusterWorkflowTemplateSpecMetrics#prometheus
   */
  readonly prometheus: ClusterWorkflowTemplateSpecMetricsPrometheus[];

}

/**
 * PodDisruptionBudgetSpec is a description of a PodDisruptionBudget.
 *
 * @schema ClusterWorkflowTemplateSpecPodDisruptionBudget
 */
export interface ClusterWorkflowTemplateSpecPodDisruptionBudget {
  /**
   * @schema ClusterWorkflowTemplateSpecPodDisruptionBudget#maxUnavailable
   */
  readonly maxUnavailable?: string;

  /**
   * @schema ClusterWorkflowTemplateSpecPodDisruptionBudget#minAvailable
   */
  readonly minAvailable?: string;

  /**
   * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
   *
   * @schema ClusterWorkflowTemplateSpecPodDisruptionBudget#selector
   */
  readonly selector?: ClusterWorkflowTemplateSpecPodDisruptionBudgetSelector;

}

/**
 * PodGC describes how to delete completed pods as they complete
 *
 * @schema ClusterWorkflowTemplateSpecPodGc
 */
export interface ClusterWorkflowTemplateSpecPodGc {
  /**
   * Strategy is the strategy to use. One of "OnPodCompletion", "OnPodSuccess", "OnWorkflowCompletion", "OnWorkflowSuccess"
   *
   * @schema ClusterWorkflowTemplateSpecPodGc#strategy
   */
  readonly strategy?: string;

}

/**
 * PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext.
 *
 * @schema ClusterWorkflowTemplateSpecSecurityContext
 */
export interface ClusterWorkflowTemplateSpecSecurityContext {
  /**
   * A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:

1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----

If unset, the Kubelet will not modify the ownership and permissions of any volume.
   *
   * @schema ClusterWorkflowTemplateSpecSecurityContext#fsGroup
   */
  readonly fsGroup?: number;

  /**
   * The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
   *
   * @schema ClusterWorkflowTemplateSpecSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema ClusterWorkflowTemplateSpecSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
   *
   * @default user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
   * @schema ClusterWorkflowTemplateSpecSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * SELinuxOptions are the labels to be applied to the container
   *
   * @schema ClusterWorkflowTemplateSpecSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: ClusterWorkflowTemplateSpecSecurityContextSeLinuxOptions;

  /**
   * A list of groups applied to the first process run in each container, in addition to the container's primary GID.  If unspecified, no groups will be added to any container.
   *
   * @schema ClusterWorkflowTemplateSpecSecurityContext#supplementalGroups
   */
  readonly supplementalGroups?: number[];

  /**
   * Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch.
   *
   * @schema ClusterWorkflowTemplateSpecSecurityContext#sysctls
   */
  readonly sysctls?: ClusterWorkflowTemplateSpecSecurityContextSysctls[];

  /**
   * WindowsSecurityContextOptions contain Windows-specific options and credentials.
   *
   * @schema ClusterWorkflowTemplateSpecSecurityContext#windowsOptions
   */
  readonly windowsOptions?: ClusterWorkflowTemplateSpecSecurityContextWindowsOptions;

}

/**
 * Template is a reusable and composable unit of execution in a workflow
 *
 * @schema ClusterWorkflowTemplateSpecTemplates
 */
export interface ClusterWorkflowTemplateSpecTemplates {
  /**
   * Optional duration in seconds relative to the StartTime that the pod may be active on a node before the system actively tries to terminate the pod; value must be positive integer This field is only applicable to container and script templates.
   *
   * @schema ClusterWorkflowTemplateSpecTemplates#activeDeadlineSeconds
   */
  readonly activeDeadlineSeconds?: number;

  /**
   * Affinity is a group of affinity scheduling rules.
   *
   * @schema ClusterWorkflowTemplateSpecTemplates#affinity
   */
  readonly affinity?: ClusterWorkflowTemplateSpecTemplatesAffinity;

  /**
   * ArtifactLocation describes a location for a single or multiple artifacts. It is used as single artifact in the context of inputs/outputs (e.g. outputs.artifacts.artname). It is also used to describe the location of multiple artifacts such as the archive location of a single workflow step, which the executor will use as a default location to store its files.
   *
   * @schema ClusterWorkflowTemplateSpecTemplates#archiveLocation
   */
  readonly archiveLocation?: ClusterWorkflowTemplateSpecTemplatesArchiveLocation;

  /**
   * Arguments to a template
   *
   * @schema ClusterWorkflowTemplateSpecTemplates#arguments
   */
  readonly arguments?: ClusterWorkflowTemplateSpecTemplatesArguments;

  /**
   * AutomountServiceAccountToken indicates whether a service account token should be automatically mounted in pods. ServiceAccountName of ExecutorConfig must be specified if this value is false.
   *
   * @schema ClusterWorkflowTemplateSpecTemplates#automountServiceAccountToken
   */
  readonly automountServiceAccountToken?: boolean;

  /**
   * A single application container that you want to run within a pod.
   *
   * @schema ClusterWorkflowTemplateSpecTemplates#container
   */
  readonly container?: ClusterWorkflowTemplateSpecTemplatesContainer;

  /**
   * Deamon will allow a workflow to proceed to the next step so long as the container reaches readiness
   *
   * @schema ClusterWorkflowTemplateSpecTemplates#daemon
   */
  readonly daemon?: boolean;

  /**
   * DAGTemplate is a template subtype for directed acyclic graph templates
   *
   * @schema ClusterWorkflowTemplateSpecTemplates#dag
   */
  readonly dag?: ClusterWorkflowTemplateSpecTemplatesDag;

  /**
   * ExecutorConfig holds configurations of an executor container.
   *
   * @schema ClusterWorkflowTemplateSpecTemplates#executor
   */
  readonly executor?: ClusterWorkflowTemplateSpecTemplatesExecutor;

  /**
   * HostAliases is an optional list of hosts and IPs that will be injected into the pod spec
   *
   * @schema ClusterWorkflowTemplateSpecTemplates#hostAliases
   */
  readonly hostAliases?: ClusterWorkflowTemplateSpecTemplatesHostAliases[];

  /**
   * InitContainers is a list of containers which run before the main container.
   *
   * @schema ClusterWorkflowTemplateSpecTemplates#initContainers
   */
  readonly initContainers?: ClusterWorkflowTemplateSpecTemplatesInitContainers[];

  /**
   * Inputs are the mechanism for passing parameters, artifacts, volumes from one template to another
   *
   * @schema ClusterWorkflowTemplateSpecTemplates#inputs
   */
  readonly inputs?: ClusterWorkflowTemplateSpecTemplatesInputs;

  /**
   * Pod metdata
   *
   * @schema ClusterWorkflowTemplateSpecTemplates#metadata
   */
  readonly metadata?: ClusterWorkflowTemplateSpecTemplatesMetadata;

  /**
   * Metrics are a list of metrics emitted from a Workflow/Template
   *
   * @schema ClusterWorkflowTemplateSpecTemplates#metrics
   */
  readonly metrics?: ClusterWorkflowTemplateSpecTemplatesMetrics;

  /**
   * Name is the name of the template
   *
   * @schema ClusterWorkflowTemplateSpecTemplates#name
   */
  readonly name: string;

  /**
   * NodeSelector is a selector to schedule this step of the workflow to be run on the selected node(s). Overrides the selector set at the workflow level.
   *
   * @schema ClusterWorkflowTemplateSpecTemplates#nodeSelector
   */
  readonly nodeSelector?: { [key: string]: string };

  /**
   * Outputs hold parameters, artifacts, and results from a step
   *
   * @schema ClusterWorkflowTemplateSpecTemplates#outputs
   */
  readonly outputs?: ClusterWorkflowTemplateSpecTemplatesOutputs;

  /**
   * Parallelism limits the max total parallel pods that can execute at the same time within the boundaries of this template invocation. If additional steps/dag templates are invoked, the pods created by those templates will not be counted towards this total.
   *
   * @schema ClusterWorkflowTemplateSpecTemplates#parallelism
   */
  readonly parallelism?: number;

  /**
   * PodSpecPatch holds strategic merge patch to apply against the pod spec. Allows parameterization of container fields which are not strings (e.g. resource limits).
   *
   * @schema ClusterWorkflowTemplateSpecTemplates#podSpecPatch
   */
  readonly podSpecPatch?: string;

  /**
   * Priority to apply to workflow pods.
   *
   * @schema ClusterWorkflowTemplateSpecTemplates#priority
   */
  readonly priority?: number;

  /**
   * PriorityClassName to apply to workflow pods.
   *
   * @schema ClusterWorkflowTemplateSpecTemplates#priorityClassName
   */
  readonly priorityClassName?: string;

  /**
   * ResourceTemplate is a template subtype to manipulate kubernetes resources
   *
   * @schema ClusterWorkflowTemplateSpecTemplates#resource
   */
  readonly resource?: ClusterWorkflowTemplateSpecTemplatesResource;

  /**
   * ResubmitPendingPods is a flag to enable resubmitting pods that remain Pending after initial submission
   *
   * @schema ClusterWorkflowTemplateSpecTemplates#resubmitPendingPods
   */
  readonly resubmitPendingPods?: boolean;

  /**
   * RetryStrategy provides controls on how to retry a workflow step
   *
   * @schema ClusterWorkflowTemplateSpecTemplates#retryStrategy
   */
  readonly retryStrategy?: ClusterWorkflowTemplateSpecTemplatesRetryStrategy;

  /**
   * If specified, the pod will be dispatched by specified scheduler. Or it will be dispatched by workflow scope scheduler if specified. If neither specified, the pod will be dispatched by default scheduler.
   *
   * @schema ClusterWorkflowTemplateSpecTemplates#schedulerName
   */
  readonly schedulerName?: string;

  /**
   * ScriptTemplate is a template subtype to enable scripting through code steps
   *
   * @schema ClusterWorkflowTemplateSpecTemplates#script
   */
  readonly script?: ClusterWorkflowTemplateSpecTemplatesScript;

  /**
   * PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext.
   *
   * @schema ClusterWorkflowTemplateSpecTemplates#securityContext
   */
  readonly securityContext?: ClusterWorkflowTemplateSpecTemplatesSecurityContext;

  /**
   * ServiceAccountName to apply to workflow pods
   *
   * @schema ClusterWorkflowTemplateSpecTemplates#serviceAccountName
   */
  readonly serviceAccountName?: string;

  /**
   * Sidecars is a list of containers which run alongside the main container Sidecars are automatically killed when the main container completes
   *
   * @schema ClusterWorkflowTemplateSpecTemplates#sidecars
   */
  readonly sidecars?: ClusterWorkflowTemplateSpecTemplatesSidecars[];

  /**
   * Steps define a series of sequential/parallel workflow steps
   *
   * @schema ClusterWorkflowTemplateSpecTemplates#steps
   */
  readonly steps?: ClusterWorkflowTemplateSpecTemplatesSteps[][];

  /**
   * SuspendTemplate is a template subtype to suspend a workflow at a predetermined point in time
   *
   * @schema ClusterWorkflowTemplateSpecTemplates#suspend
   */
  readonly suspend?: ClusterWorkflowTemplateSpecTemplatesSuspend;

  /**
   * Template is the name of the template which is used as the base of this template. DEPRECATED: This field is not used.
   *
   * @schema ClusterWorkflowTemplateSpecTemplates#template
   */
  readonly template?: string;

  /**
   * TemplateRef is a reference of template resource.
   *
   * @schema ClusterWorkflowTemplateSpecTemplates#templateRef
   */
  readonly templateRef?: ClusterWorkflowTemplateSpecTemplatesTemplateRef;

  /**
   * Tolerations to apply to workflow pods.
   *
   * @schema ClusterWorkflowTemplateSpecTemplates#tolerations
   */
  readonly tolerations?: ClusterWorkflowTemplateSpecTemplatesTolerations[];

  /**
   * Volumes is a list of volumes that can be mounted by containers in a template.
   *
   * @schema ClusterWorkflowTemplateSpecTemplates#volumes
   */
  readonly volumes?: ClusterWorkflowTemplateSpecTemplatesVolumes[];

}

/**
 * The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
 *
 * @schema ClusterWorkflowTemplateSpecTolerations
 */
export interface ClusterWorkflowTemplateSpecTolerations {
  /**
   * Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
   *
   * @schema ClusterWorkflowTemplateSpecTolerations#effect
   */
  readonly effect?: string;

  /**
   * Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
   *
   * @schema ClusterWorkflowTemplateSpecTolerations#key
   */
  readonly key?: string;

  /**
   * Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
   *
   * @default Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
   * @schema ClusterWorkflowTemplateSpecTolerations#operator
   */
  readonly operator?: string;

  /**
   * TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
   *
   * @schema ClusterWorkflowTemplateSpecTolerations#tolerationSeconds
   */
  readonly tolerationSeconds?: number;

  /**
   * Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
   *
   * @schema ClusterWorkflowTemplateSpecTolerations#value
   */
  readonly value?: string;

}

/**
 * TTLStrategy is the strategy for the time to live depending on if the workflow succeeded or failed
 *
 * @schema ClusterWorkflowTemplateSpecTtlStrategy
 */
export interface ClusterWorkflowTemplateSpecTtlStrategy {
  /**
   * SecondsAfterCompletion is the number of seconds to live after completion
   *
   * @schema ClusterWorkflowTemplateSpecTtlStrategy#secondsAfterCompletion
   */
  readonly secondsAfterCompletion?: number;

  /**
   * SecondsAfterFailure is the number of seconds to live after failure
   *
   * @schema ClusterWorkflowTemplateSpecTtlStrategy#secondsAfterFailure
   */
  readonly secondsAfterFailure?: number;

  /**
   * SecondsAfterSuccess is the number of seconds to live after success
   *
   * @schema ClusterWorkflowTemplateSpecTtlStrategy#secondsAfterSuccess
   */
  readonly secondsAfterSuccess?: number;

}

/**
 * PersistentVolumeClaim is a user's request for and claim to a persistent volume
 *
 * @schema ClusterWorkflowTemplateSpecVolumeClaimTemplates
 */
export interface ClusterWorkflowTemplateSpecVolumeClaimTemplates {
  /**
   * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   *
   * @schema ClusterWorkflowTemplateSpecVolumeClaimTemplates#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   *
   * @schema ClusterWorkflowTemplateSpecVolumeClaimTemplates#kind
   */
  readonly kind?: string;

  /**
   * @schema ClusterWorkflowTemplateSpecVolumeClaimTemplates#metadata
   */
  readonly metadata?: any;

  /**
   * PersistentVolumeClaimSpec describes the common attributes of storage devices and allows a Source for provider-specific attributes
   *
   * @schema ClusterWorkflowTemplateSpecVolumeClaimTemplates#spec
   */
  readonly spec?: ClusterWorkflowTemplateSpecVolumeClaimTemplatesSpec;

  /**
   * PersistentVolumeClaimStatus is the current status of a persistent volume claim.
   *
   * @schema ClusterWorkflowTemplateSpecVolumeClaimTemplates#status
   */
  readonly status?: ClusterWorkflowTemplateSpecVolumeClaimTemplatesStatus;

}

/**
 * Volume represents a named volume in a pod that may be accessed by any container in the pod.
 *
 * @schema ClusterWorkflowTemplateSpecVolumes
 */
export interface ClusterWorkflowTemplateSpecVolumes {
  /**
   * Represents a Persistent Disk resource in AWS.

An AWS EBS disk must exist before mounting to a container. The disk must also be in the same AWS zone as the kubelet. An AWS EBS disk can only be mounted as read/write once. AWS EBS volumes support ownership management and SELinux relabeling.
   *
   * @schema ClusterWorkflowTemplateSpecVolumes#awsElasticBlockStore
   */
  readonly awsElasticBlockStore?: ClusterWorkflowTemplateSpecVolumesAwsElasticBlockStore;

  /**
   * AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
   *
   * @schema ClusterWorkflowTemplateSpecVolumes#azureDisk
   */
  readonly azureDisk?: ClusterWorkflowTemplateSpecVolumesAzureDisk;

  /**
   * AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
   *
   * @schema ClusterWorkflowTemplateSpecVolumes#azureFile
   */
  readonly azureFile?: ClusterWorkflowTemplateSpecVolumesAzureFile;

  /**
   * Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling.
   *
   * @schema ClusterWorkflowTemplateSpecVolumes#cephfs
   */
  readonly cephfs?: ClusterWorkflowTemplateSpecVolumesCephfs;

  /**
   * Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling.
   *
   * @schema ClusterWorkflowTemplateSpecVolumes#cinder
   */
  readonly cinder?: ClusterWorkflowTemplateSpecVolumesCinder;

  /**
   * Adapts a ConfigMap into a volume.

The contents of the target ConfigMap's Data field will be presented in a volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. ConfigMap volumes support ownership management and SELinux relabeling.
   *
   * @schema ClusterWorkflowTemplateSpecVolumes#configMap
   */
  readonly configMap?: ClusterWorkflowTemplateSpecVolumesConfigMap;

  /**
   * Represents a source location of a volume to mount, managed by an external CSI driver
   *
   * @schema ClusterWorkflowTemplateSpecVolumes#csi
   */
  readonly csi?: ClusterWorkflowTemplateSpecVolumesCsi;

  /**
   * DownwardAPIVolumeSource represents a volume containing downward API info. Downward API volumes support ownership management and SELinux relabeling.
   *
   * @schema ClusterWorkflowTemplateSpecVolumes#downwardAPI
   */
  readonly downwardAPI?: ClusterWorkflowTemplateSpecVolumesDownwardApi;

  /**
   * Represents an empty directory for a pod. Empty directory volumes support ownership management and SELinux relabeling.
   *
   * @schema ClusterWorkflowTemplateSpecVolumes#emptyDir
   */
  readonly emptyDir?: ClusterWorkflowTemplateSpecVolumesEmptyDir;

  /**
   * Represents a Fibre Channel volume. Fibre Channel volumes can only be mounted as read/write once. Fibre Channel volumes support ownership management and SELinux relabeling.
   *
   * @schema ClusterWorkflowTemplateSpecVolumes#fc
   */
  readonly fc?: ClusterWorkflowTemplateSpecVolumesFc;

  /**
   * FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
   *
   * @schema ClusterWorkflowTemplateSpecVolumes#flexVolume
   */
  readonly flexVolume?: ClusterWorkflowTemplateSpecVolumesFlexVolume;

  /**
   * Represents a Flocker volume mounted by the Flocker agent. One and only one of datasetName and datasetUUID should be set. Flocker volumes do not support ownership management or SELinux relabeling.
   *
   * @schema ClusterWorkflowTemplateSpecVolumes#flocker
   */
  readonly flocker?: ClusterWorkflowTemplateSpecVolumesFlocker;

  /**
   * Represents a Persistent Disk resource in Google Compute Engine.

A GCE PD must exist before mounting to a container. The disk must also be in the same GCE project and zone as the kubelet. A GCE PD can only be mounted as read/write once or read-only many times. GCE PDs support ownership management and SELinux relabeling.
   *
   * @schema ClusterWorkflowTemplateSpecVolumes#gcePersistentDisk
   */
  readonly gcePersistentDisk?: ClusterWorkflowTemplateSpecVolumesGcePersistentDisk;

  /**
   * Represents a volume that is populated with the contents of a git repository. Git repo volumes do not support ownership management. Git repo volumes support SELinux relabeling.

DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.
   *
   * @schema ClusterWorkflowTemplateSpecVolumes#gitRepo
   */
  readonly gitRepo?: ClusterWorkflowTemplateSpecVolumesGitRepo;

  /**
   * Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling.
   *
   * @schema ClusterWorkflowTemplateSpecVolumes#glusterfs
   */
  readonly glusterfs?: ClusterWorkflowTemplateSpecVolumesGlusterfs;

  /**
   * Represents a host path mapped into a pod. Host path volumes do not support ownership management or SELinux relabeling.
   *
   * @schema ClusterWorkflowTemplateSpecVolumes#hostPath
   */
  readonly hostPath?: ClusterWorkflowTemplateSpecVolumesHostPath;

  /**
   * Represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling.
   *
   * @schema ClusterWorkflowTemplateSpecVolumes#iscsi
   */
  readonly iscsi?: ClusterWorkflowTemplateSpecVolumesIscsi;

  /**
   * Volume's name. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecVolumes#name
   */
  readonly name: string;

  /**
   * Represents an NFS mount that lasts the lifetime of a pod. NFS volumes do not support ownership management or SELinux relabeling.
   *
   * @schema ClusterWorkflowTemplateSpecVolumes#nfs
   */
  readonly nfs?: ClusterWorkflowTemplateSpecVolumesNfs;

  /**
   * PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace. This volume finds the bound PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another type of volume that is owned by someone else (the system).
   *
   * @schema ClusterWorkflowTemplateSpecVolumes#persistentVolumeClaim
   */
  readonly persistentVolumeClaim?: ClusterWorkflowTemplateSpecVolumesPersistentVolumeClaim;

  /**
   * Represents a Photon Controller persistent disk resource.
   *
   * @schema ClusterWorkflowTemplateSpecVolumes#photonPersistentDisk
   */
  readonly photonPersistentDisk?: ClusterWorkflowTemplateSpecVolumesPhotonPersistentDisk;

  /**
   * PortworxVolumeSource represents a Portworx volume resource.
   *
   * @schema ClusterWorkflowTemplateSpecVolumes#portworxVolume
   */
  readonly portworxVolume?: ClusterWorkflowTemplateSpecVolumesPortworxVolume;

  /**
   * Represents a projected volume source
   *
   * @schema ClusterWorkflowTemplateSpecVolumes#projected
   */
  readonly projected?: ClusterWorkflowTemplateSpecVolumesProjected;

  /**
   * Represents a Quobyte mount that lasts the lifetime of a pod. Quobyte volumes do not support ownership management or SELinux relabeling.
   *
   * @schema ClusterWorkflowTemplateSpecVolumes#quobyte
   */
  readonly quobyte?: ClusterWorkflowTemplateSpecVolumesQuobyte;

  /**
   * Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling.
   *
   * @schema ClusterWorkflowTemplateSpecVolumes#rbd
   */
  readonly rbd?: ClusterWorkflowTemplateSpecVolumesRbd;

  /**
   * ScaleIOVolumeSource represents a persistent ScaleIO volume
   *
   * @schema ClusterWorkflowTemplateSpecVolumes#scaleIO
   */
  readonly scaleIO?: ClusterWorkflowTemplateSpecVolumesScaleIo;

  /**
   * Adapts a Secret into a volume.

The contents of the target Secret's Data field will be presented in a volume as files using the keys in the Data field as the file names. Secret volumes support ownership management and SELinux relabeling.
   *
   * @schema ClusterWorkflowTemplateSpecVolumes#secret
   */
  readonly secret?: ClusterWorkflowTemplateSpecVolumesSecret;

  /**
   * Represents a StorageOS persistent volume resource.
   *
   * @schema ClusterWorkflowTemplateSpecVolumes#storageos
   */
  readonly storageos?: ClusterWorkflowTemplateSpecVolumesStorageos;

  /**
   * Represents a vSphere volume resource.
   *
   * @schema ClusterWorkflowTemplateSpecVolumes#vsphereVolume
   */
  readonly vsphereVolume?: ClusterWorkflowTemplateSpecVolumesVsphereVolume;

}

/**
 * WorkflowTemplateRef is a reference to a WorkflowTemplate resource.
 *
 * @schema ClusterWorkflowTemplateSpecWorkflowTemplateRef
 */
export interface ClusterWorkflowTemplateSpecWorkflowTemplateRef {
  /**
   * ClusterScope indicates the referred template is cluster scoped (i.e. a ClusterWorkflowTemplate).
   *
   * @schema ClusterWorkflowTemplateSpecWorkflowTemplateRef#clusterScope
   */
  readonly clusterScope?: boolean;

  /**
   * Name is the resource name of the workflow template.
   *
   * @schema ClusterWorkflowTemplateSpecWorkflowTemplateRef#name
   */
  readonly name?: string;

}

/**
 * Node affinity is a group of node affinity scheduling rules.
 *
 * @schema ClusterWorkflowTemplateSpecAffinityNodeAffinity
 */
export interface ClusterWorkflowTemplateSpecAffinityNodeAffinity {
  /**
   * The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
   *
   * @schema ClusterWorkflowTemplateSpecAffinityNodeAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: ClusterWorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms.
   *
   * @schema ClusterWorkflowTemplateSpecAffinityNodeAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: ClusterWorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution;

}

/**
 * Pod affinity is a group of inter pod affinity scheduling rules.
 *
 * @schema ClusterWorkflowTemplateSpecAffinityPodAffinity
 */
export interface ClusterWorkflowTemplateSpecAffinityPodAffinity {
  /**
   * The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
   *
   * @schema ClusterWorkflowTemplateSpecAffinityPodAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: ClusterWorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
   *
   * @schema ClusterWorkflowTemplateSpecAffinityPodAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: ClusterWorkflowTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution[];

}

/**
 * Pod anti affinity is a group of inter pod anti affinity scheduling rules.
 *
 * @schema ClusterWorkflowTemplateSpecAffinityPodAntiAffinity
 */
export interface ClusterWorkflowTemplateSpecAffinityPodAntiAffinity {
  /**
   * The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
   *
   * @schema ClusterWorkflowTemplateSpecAffinityPodAntiAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: ClusterWorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
   *
   * @schema ClusterWorkflowTemplateSpecAffinityPodAntiAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: ClusterWorkflowTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution[];

}

/**
 * Artifact indicates an artifact to place at a specified path
 *
 * @schema ClusterWorkflowTemplateSpecArgumentsArtifacts
 */
export interface ClusterWorkflowTemplateSpecArgumentsArtifacts {
  /**
   * ArchiveStrategy describes how to archive files/directory when saving artifacts
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifacts#archive
   */
  readonly archive?: ClusterWorkflowTemplateSpecArgumentsArtifactsArchive;

  /**
   * ArchiveLogs indicates if the container logs should be archived
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifacts#archiveLogs
   */
  readonly archiveLogs?: boolean;

  /**
   * ArtifactoryArtifact is the location of an artifactory artifact
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifacts#artifactory
   */
  readonly artifactory?: ClusterWorkflowTemplateSpecArgumentsArtifactsArtifactory;

  /**
   * From allows an artifact to reference an artifact from a previous step
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifacts#from
   */
  readonly from?: string;

  /**
   * GCSArtifact is the location of a GCS artifact
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifacts#gcs
   */
  readonly gcs?: ClusterWorkflowTemplateSpecArgumentsArtifactsGcs;

  /**
   * GitArtifact is the location of an git artifact
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifacts#git
   */
  readonly git?: ClusterWorkflowTemplateSpecArgumentsArtifactsGit;

  /**
   * GlobalName exports an output artifact to the global scope, making it available as '{{io.argoproj.workflow.v1alpha1.outputs.artifacts.XXXX}} and in workflow.status.outputs.artifacts
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifacts#globalName
   */
  readonly globalName?: string;

  /**
   * HDFSArtifact is the location of an HDFS artifact
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifacts#hdfs
   */
  readonly hdfs?: ClusterWorkflowTemplateSpecArgumentsArtifactsHdfs;

  /**
   * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifacts#http
   */
  readonly http?: ClusterWorkflowTemplateSpecArgumentsArtifactsHttp;

  /**
   * mode bits to use on this file, must be a value between 0 and 0777 set when loading input artifacts.
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifacts#mode
   */
  readonly mode?: number;

  /**
   * name of the artifact. must be unique within a template's inputs/outputs.
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifacts#name
   */
  readonly name: string;

  /**
   * Make Artifacts optional, if Artifacts doesn't generate or exist
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifacts#optional
   */
  readonly optional?: boolean;

  /**
   * OSSArtifact is the location of an Alibaba Cloud OSS artifact
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifacts#oss
   */
  readonly oss?: ClusterWorkflowTemplateSpecArgumentsArtifactsOss;

  /**
   * Path is the container path to the artifact
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifacts#path
   */
  readonly path?: string;

  /**
   * RawArtifact allows raw string content to be placed as an artifact in a container
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifacts#raw
   */
  readonly raw?: ClusterWorkflowTemplateSpecArgumentsArtifactsRaw;

  /**
   * S3Artifact is the location of an S3 artifact
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifacts#s3
   */
  readonly s3?: ClusterWorkflowTemplateSpecArgumentsArtifactsS3;

}

/**
 * Parameter indicate a passed string parameter to a service template with an optional default value
 *
 * @schema ClusterWorkflowTemplateSpecArgumentsParameters
 */
export interface ClusterWorkflowTemplateSpecArgumentsParameters {
  /**
   * @schema ClusterWorkflowTemplateSpecArgumentsParameters#default
   */
  readonly default?: string;

  /**
   * GlobalName exports an output parameter to the global scope, making it available as '{{io.argoproj.workflow.v1alpha1.outputs.parameters.XXXX}} and in workflow.status.outputs.parameters
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsParameters#globalName
   */
  readonly globalName?: string;

  /**
   * Name is the parameter name
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsParameters#name
   */
  readonly name: string;

  /**
   * @schema ClusterWorkflowTemplateSpecArgumentsParameters#value
   */
  readonly value?: string;

  /**
   * ValueFrom describes a location in which to obtain the value to a parameter
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsParameters#valueFrom
   */
  readonly valueFrom?: ClusterWorkflowTemplateSpecArgumentsParametersValueFrom;

}

/**
 * PodDNSConfigOption defines DNS resolver options of a pod.
 *
 * @schema ClusterWorkflowTemplateSpecDnsConfigOptions
 */
export interface ClusterWorkflowTemplateSpecDnsConfigOptions {
  /**
   * Required.
   *
   * @schema ClusterWorkflowTemplateSpecDnsConfigOptions#name
   */
  readonly name?: string;

  /**
   * @schema ClusterWorkflowTemplateSpecDnsConfigOptions#value
   */
  readonly value?: string;

}

/**
 * Prometheus is a prometheus metric to be emitted
 *
 * @schema ClusterWorkflowTemplateSpecMetricsPrometheus
 */
export interface ClusterWorkflowTemplateSpecMetricsPrometheus {
  /**
   * Counter is a Counter prometheus metric
   *
   * @schema ClusterWorkflowTemplateSpecMetricsPrometheus#counter
   */
  readonly counter?: ClusterWorkflowTemplateSpecMetricsPrometheusCounter;

  /**
   * Gauge is a Gauge prometheus metric
   *
   * @schema ClusterWorkflowTemplateSpecMetricsPrometheus#gauge
   */
  readonly gauge?: ClusterWorkflowTemplateSpecMetricsPrometheusGauge;

  /**
   * Help is a string that describes the metric
   *
   * @schema ClusterWorkflowTemplateSpecMetricsPrometheus#help
   */
  readonly help: string;

  /**
   * Histogram is a Histogram prometheus metric
   *
   * @schema ClusterWorkflowTemplateSpecMetricsPrometheus#histogram
   */
  readonly histogram?: ClusterWorkflowTemplateSpecMetricsPrometheusHistogram;

  /**
   * Labels is a list of metric labels
   *
   * @schema ClusterWorkflowTemplateSpecMetricsPrometheus#labels
   */
  readonly labels?: ClusterWorkflowTemplateSpecMetricsPrometheusLabels[];

  /**
   * Name is the name of the metric
   *
   * @schema ClusterWorkflowTemplateSpecMetricsPrometheus#name
   */
  readonly name: string;

  /**
   * When is a conditional statement that decides when to emit the metric
   *
   * @schema ClusterWorkflowTemplateSpecMetricsPrometheus#when
   */
  readonly when?: string;

}

/**
 * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
 *
 * @schema ClusterWorkflowTemplateSpecPodDisruptionBudgetSelector
 */
export interface ClusterWorkflowTemplateSpecPodDisruptionBudgetSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema ClusterWorkflowTemplateSpecPodDisruptionBudgetSelector#matchExpressions
   */
  readonly matchExpressions?: ClusterWorkflowTemplateSpecPodDisruptionBudgetSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema ClusterWorkflowTemplateSpecPodDisruptionBudgetSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * SELinuxOptions are the labels to be applied to the container
 *
 * @schema ClusterWorkflowTemplateSpecSecurityContextSeLinuxOptions
 */
export interface ClusterWorkflowTemplateSpecSecurityContextSeLinuxOptions {
  /**
   * Level is SELinux level label that applies to the container.
   *
   * @schema ClusterWorkflowTemplateSpecSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * Role is a SELinux role label that applies to the container.
   *
   * @schema ClusterWorkflowTemplateSpecSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * Type is a SELinux type label that applies to the container.
   *
   * @schema ClusterWorkflowTemplateSpecSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * User is a SELinux user label that applies to the container.
   *
   * @schema ClusterWorkflowTemplateSpecSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * Sysctl defines a kernel parameter to be set
 *
 * @schema ClusterWorkflowTemplateSpecSecurityContextSysctls
 */
export interface ClusterWorkflowTemplateSpecSecurityContextSysctls {
  /**
   * Name of a property to set
   *
   * @schema ClusterWorkflowTemplateSpecSecurityContextSysctls#name
   */
  readonly name: string;

  /**
   * Value of a property to set
   *
   * @schema ClusterWorkflowTemplateSpecSecurityContextSysctls#value
   */
  readonly value: string;

}

/**
 * WindowsSecurityContextOptions contain Windows-specific options and credentials.
 *
 * @schema ClusterWorkflowTemplateSpecSecurityContextWindowsOptions
 */
export interface ClusterWorkflowTemplateSpecSecurityContextWindowsOptions {
  /**
   * GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
   *
   * @schema ClusterWorkflowTemplateSpecSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * GMSACredentialSpecName is the name of the GMSA credential spec to use. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
   *
   * @schema ClusterWorkflowTemplateSpecSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

}

/**
 * Affinity is a group of affinity scheduling rules.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesAffinity
 */
export interface ClusterWorkflowTemplateSpecTemplatesAffinity {
  /**
   * Node affinity is a group of node affinity scheduling rules.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinity#nodeAffinity
   */
  readonly nodeAffinity?: ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinity;

  /**
   * Pod affinity is a group of inter pod affinity scheduling rules.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinity#podAffinity
   */
  readonly podAffinity?: ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinity;

  /**
   * Pod anti affinity is a group of inter pod anti affinity scheduling rules.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinity#podAntiAffinity
   */
  readonly podAntiAffinity?: ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinity;

}

/**
 * ArtifactLocation describes a location for a single or multiple artifacts. It is used as single artifact in the context of inputs/outputs (e.g. outputs.artifacts.artname). It is also used to describe the location of multiple artifacts such as the archive location of a single workflow step, which the executor will use as a default location to store its files.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocation
 */
export interface ClusterWorkflowTemplateSpecTemplatesArchiveLocation {
  /**
   * ArchiveLogs indicates if the container logs should be archived
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocation#archiveLogs
   */
  readonly archiveLogs?: boolean;

  /**
   * ArtifactoryArtifact is the location of an artifactory artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocation#artifactory
   */
  readonly artifactory?: ClusterWorkflowTemplateSpecTemplatesArchiveLocationArtifactory;

  /**
   * GCSArtifact is the location of a GCS artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocation#gcs
   */
  readonly gcs?: ClusterWorkflowTemplateSpecTemplatesArchiveLocationGcs;

  /**
   * GitArtifact is the location of an git artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocation#git
   */
  readonly git?: ClusterWorkflowTemplateSpecTemplatesArchiveLocationGit;

  /**
   * HDFSArtifact is the location of an HDFS artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocation#hdfs
   */
  readonly hdfs?: ClusterWorkflowTemplateSpecTemplatesArchiveLocationHdfs;

  /**
   * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocation#http
   */
  readonly http?: ClusterWorkflowTemplateSpecTemplatesArchiveLocationHttp;

  /**
   * OSSArtifact is the location of an Alibaba Cloud OSS artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocation#oss
   */
  readonly oss?: ClusterWorkflowTemplateSpecTemplatesArchiveLocationOss;

  /**
   * RawArtifact allows raw string content to be placed as an artifact in a container
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocation#raw
   */
  readonly raw?: ClusterWorkflowTemplateSpecTemplatesArchiveLocationRaw;

  /**
   * S3Artifact is the location of an S3 artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocation#s3
   */
  readonly s3?: ClusterWorkflowTemplateSpecTemplatesArchiveLocationS3;

}

/**
 * Arguments to a template
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesArguments
 */
export interface ClusterWorkflowTemplateSpecTemplatesArguments {
  /**
   * Artifacts is the list of artifacts to pass to the template or workflow
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArguments#artifacts
   */
  readonly artifacts?: ClusterWorkflowTemplateSpecTemplatesArgumentsArtifacts[];

  /**
   * Parameters is the list of parameters to pass to the template or workflow
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArguments#parameters
   */
  readonly parameters?: ClusterWorkflowTemplateSpecTemplatesArgumentsParameters[];

}

/**
 * A single application container that you want to run within a pod.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesContainer
 */
export interface ClusterWorkflowTemplateSpecTemplatesContainer {
  /**
   * Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainer#args
   */
  readonly args?: string[];

  /**
   * Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainer#command
   */
  readonly command?: string[];

  /**
   * List of environment variables to set in the container. Cannot be updated.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainer#env
   */
  readonly env?: ClusterWorkflowTemplateSpecTemplatesContainerEnv[];

  /**
   * List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainer#envFrom
   */
  readonly envFrom?: ClusterWorkflowTemplateSpecTemplatesContainerEnvFrom[];

  /**
   * Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainer#image
   */
  readonly image?: string;

  /**
   * Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
   *
   * @default Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
   * @schema ClusterWorkflowTemplateSpecTemplatesContainer#imagePullPolicy
   */
  readonly imagePullPolicy?: string;

  /**
   * Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainer#lifecycle
   */
  readonly lifecycle?: ClusterWorkflowTemplateSpecTemplatesContainerLifecycle;

  /**
   * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainer#livenessProbe
   */
  readonly livenessProbe?: ClusterWorkflowTemplateSpecTemplatesContainerLivenessProbe;

  /**
   * Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainer#name
   */
  readonly name?: string;

  /**
   * List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Cannot be updated.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainer#ports
   */
  readonly ports?: ClusterWorkflowTemplateSpecTemplatesContainerPorts[];

  /**
   * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainer#readinessProbe
   */
  readonly readinessProbe?: ClusterWorkflowTemplateSpecTemplatesContainerReadinessProbe;

  /**
   * ResourceRequirements describes the compute resource requirements.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainer#resources
   */
  readonly resources?: ClusterWorkflowTemplateSpecTemplatesContainerResources;

  /**
   * SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainer#securityContext
   */
  readonly securityContext?: ClusterWorkflowTemplateSpecTemplatesContainerSecurityContext;

  /**
   * Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
   *
   * @default false.
   * @schema ClusterWorkflowTemplateSpecTemplatesContainer#stdin
   */
  readonly stdin?: boolean;

  /**
   * Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
   *
   * @default false
   * @schema ClusterWorkflowTemplateSpecTemplatesContainer#stdinOnce
   */
  readonly stdinOnce?: boolean;

  /**
   * Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.
   *
   * @default dev/termination-log. Cannot be updated.
   * @schema ClusterWorkflowTemplateSpecTemplatesContainer#terminationMessagePath
   */
  readonly terminationMessagePath?: string;

  /**
   * Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
   *
   * @default File. Cannot be updated.
   * @schema ClusterWorkflowTemplateSpecTemplatesContainer#terminationMessagePolicy
   */
  readonly terminationMessagePolicy?: string;

  /**
   * Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
   *
   * @default false.
   * @schema ClusterWorkflowTemplateSpecTemplatesContainer#tty
   */
  readonly tty?: boolean;

  /**
   * volumeDevices is the list of block devices to be used by the container. This is a beta feature.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainer#volumeDevices
   */
  readonly volumeDevices?: ClusterWorkflowTemplateSpecTemplatesContainerVolumeDevices[];

  /**
   * Pod volumes to mount into the container's filesystem. Cannot be updated.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainer#volumeMounts
   */
  readonly volumeMounts?: ClusterWorkflowTemplateSpecTemplatesContainerVolumeMounts[];

  /**
   * Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainer#workingDir
   */
  readonly workingDir?: string;

}

/**
 * DAGTemplate is a template subtype for directed acyclic graph templates
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesDag
 */
export interface ClusterWorkflowTemplateSpecTemplatesDag {
  /**
   * This flag is for DAG logic. The DAG logic has a built-in "fail fast" feature to stop scheduling new steps, as soon as it detects that one of the DAG nodes is failed. Then it waits until all DAG nodes are completed before failing the DAG itself. The FailFast flag default is true,  if set to false, it will allow a DAG to run all branches of the DAG to completion (either success or failure), regardless of the failed outcomes of branches in the DAG. More info and example about this feature at https://github.com/argoproj/argo/issues/1442
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDag#failFast
   */
  readonly failFast?: boolean;

  /**
   * Target are one or more names of targets to execute in a DAG
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDag#target
   */
  readonly target?: string;

  /**
   * Tasks are a list of DAG tasks
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDag#tasks
   */
  readonly tasks: ClusterWorkflowTemplateSpecTemplatesDagTasks[];

}

/**
 * ExecutorConfig holds configurations of an executor container.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesExecutor
 */
export interface ClusterWorkflowTemplateSpecTemplatesExecutor {
  /**
   * ServiceAccountName specifies the service account name of the executor container.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesExecutor#serviceAccountName
   */
  readonly serviceAccountName?: string;

}

/**
 * HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the pod's hosts file.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesHostAliases
 */
export interface ClusterWorkflowTemplateSpecTemplatesHostAliases {
  /**
   * Hostnames for the above IP address.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesHostAliases#hostnames
   */
  readonly hostnames?: string[];

  /**
   * IP address of the host file entry.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesHostAliases#ip
   */
  readonly ip?: string;

}

/**
 * UserContainer is a container specified by a user.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInitContainers
 */
export interface ClusterWorkflowTemplateSpecTemplatesInitContainers {
  /**
   * Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainers#args
   */
  readonly args?: string[];

  /**
   * Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainers#command
   */
  readonly command?: string[];

  /**
   * List of environment variables to set in the container. Cannot be updated.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainers#env
   */
  readonly env?: ClusterWorkflowTemplateSpecTemplatesInitContainersEnv[];

  /**
   * List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainers#envFrom
   */
  readonly envFrom?: ClusterWorkflowTemplateSpecTemplatesInitContainersEnvFrom[];

  /**
   * Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainers#image
   */
  readonly image?: string;

  /**
   * Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
   *
   * @default Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainers#imagePullPolicy
   */
  readonly imagePullPolicy?: string;

  /**
   * Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainers#lifecycle
   */
  readonly lifecycle?: ClusterWorkflowTemplateSpecTemplatesInitContainersLifecycle;

  /**
   * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainers#livenessProbe
   */
  readonly livenessProbe?: ClusterWorkflowTemplateSpecTemplatesInitContainersLivenessProbe;

  /**
   * MirrorVolumeMounts will mount the same volumes specified in the main container to the container (including artifacts), at the same mountPaths. This enables dind daemon to partially see the same filesystem as the main container in order to use features such as docker volume binding
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainers#mirrorVolumeMounts
   */
  readonly mirrorVolumeMounts?: boolean;

  /**
   * Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainers#name
   */
  readonly name: string;

  /**
   * List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Cannot be updated.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainers#ports
   */
  readonly ports?: ClusterWorkflowTemplateSpecTemplatesInitContainersPorts[];

  /**
   * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainers#readinessProbe
   */
  readonly readinessProbe?: ClusterWorkflowTemplateSpecTemplatesInitContainersReadinessProbe;

  /**
   * ResourceRequirements describes the compute resource requirements.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainers#resources
   */
  readonly resources?: ClusterWorkflowTemplateSpecTemplatesInitContainersResources;

  /**
   * SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainers#securityContext
   */
  readonly securityContext?: ClusterWorkflowTemplateSpecTemplatesInitContainersSecurityContext;

  /**
   * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainers#startupProbe
   */
  readonly startupProbe?: ClusterWorkflowTemplateSpecTemplatesInitContainersStartupProbe;

  /**
   * Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
   *
   * @default false.
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainers#stdin
   */
  readonly stdin?: boolean;

  /**
   * Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
   *
   * @default false
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainers#stdinOnce
   */
  readonly stdinOnce?: boolean;

  /**
   * Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.
   *
   * @default dev/termination-log. Cannot be updated.
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainers#terminationMessagePath
   */
  readonly terminationMessagePath?: string;

  /**
   * Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
   *
   * @default File. Cannot be updated.
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainers#terminationMessagePolicy
   */
  readonly terminationMessagePolicy?: string;

  /**
   * Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
   *
   * @default false.
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainers#tty
   */
  readonly tty?: boolean;

  /**
   * volumeDevices is the list of block devices to be used by the container. This is a beta feature.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainers#volumeDevices
   */
  readonly volumeDevices?: ClusterWorkflowTemplateSpecTemplatesInitContainersVolumeDevices[];

  /**
   * Pod volumes to mount into the container's filesystem. Cannot be updated.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainers#volumeMounts
   */
  readonly volumeMounts?: ClusterWorkflowTemplateSpecTemplatesInitContainersVolumeMounts[];

  /**
   * Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainers#workingDir
   */
  readonly workingDir?: string;

}

/**
 * Inputs are the mechanism for passing parameters, artifacts, volumes from one template to another
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInputs
 */
export interface ClusterWorkflowTemplateSpecTemplatesInputs {
  /**
   * Artifact are a list of artifacts passed as inputs
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputs#artifacts
   */
  readonly artifacts?: ClusterWorkflowTemplateSpecTemplatesInputsArtifacts[];

  /**
   * Parameters are a list of parameters passed as inputs
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputs#parameters
   */
  readonly parameters?: ClusterWorkflowTemplateSpecTemplatesInputsParameters[];

}

/**
 * Pod metdata
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesMetadata
 */
export interface ClusterWorkflowTemplateSpecTemplatesMetadata {
  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesMetadata#annotations
   */
  readonly annotations?: { [key: string]: string };

  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesMetadata#labels
   */
  readonly labels?: { [key: string]: string };

}

/**
 * Metrics are a list of metrics emitted from a Workflow/Template
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesMetrics
 */
export interface ClusterWorkflowTemplateSpecTemplatesMetrics {
  /**
   * Prometheus is a list of prometheus metrics to be emitted
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesMetrics#prometheus
   */
  readonly prometheus: ClusterWorkflowTemplateSpecTemplatesMetricsPrometheus[];

}

/**
 * Outputs hold parameters, artifacts, and results from a step
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesOutputs
 */
export interface ClusterWorkflowTemplateSpecTemplatesOutputs {
  /**
   * Artifacts holds the list of output artifacts produced by a step
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputs#artifacts
   */
  readonly artifacts?: ClusterWorkflowTemplateSpecTemplatesOutputsArtifacts[];

  /**
   * ExitCode holds the exit code of a script template
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputs#exitCode
   */
  readonly exitCode?: string;

  /**
   * Parameters holds the list of output parameters produced by a step
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputs#parameters
   */
  readonly parameters?: ClusterWorkflowTemplateSpecTemplatesOutputsParameters[];

  /**
   * Result holds the result (stdout) of a script template
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputs#result
   */
  readonly result?: string;

}

/**
 * ResourceTemplate is a template subtype to manipulate kubernetes resources
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesResource
 */
export interface ClusterWorkflowTemplateSpecTemplatesResource {
  /**
   * Action is the action to perform to the resource. Must be one of: get, create, apply, delete, replace, patch
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesResource#action
   */
  readonly action: string;

  /**
   * FailureCondition is a label selector expression which describes the conditions of the k8s resource in which the step was considered failed
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesResource#failureCondition
   */
  readonly failureCondition?: string;

  /**
   * Flags is a set of additional options passed to kubectl before submitting a resource I.e. to disable resource validation: flags: [
	"--validate=false"  # disable resource validation
]
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesResource#flags
   */
  readonly flags?: string[];

  /**
   * Manifest contains the kubernetes manifest
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesResource#manifest
   */
  readonly manifest?: string;

  /**
   * MergeStrategy is the strategy used to merge a patch. It defaults to "strategic" Must be one of: strategic, merge, json
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesResource#mergeStrategy
   */
  readonly mergeStrategy?: string;

  /**
   * SetOwnerReference sets the reference to the workflow on the OwnerReference of generated resource.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesResource#setOwnerReference
   */
  readonly setOwnerReference?: boolean;

  /**
   * SuccessCondition is a label selector expression which describes the conditions of the k8s resource in which it is acceptable to proceed to the following step
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesResource#successCondition
   */
  readonly successCondition?: string;

}

/**
 * RetryStrategy provides controls on how to retry a workflow step
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesRetryStrategy
 */
export interface ClusterWorkflowTemplateSpecTemplatesRetryStrategy {
  /**
   * Backoff is a backoff strategy to use within retryStrategy
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesRetryStrategy#backoff
   */
  readonly backoff?: ClusterWorkflowTemplateSpecTemplatesRetryStrategyBackoff;

  /**
   * Limit is the maximum number of attempts when retrying a container
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesRetryStrategy#limit
   */
  readonly limit?: number;

  /**
   * RetryPolicy is a policy of NodePhase statuses that will be retried
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesRetryStrategy#retryPolicy
   */
  readonly retryPolicy?: string;

}

/**
 * ScriptTemplate is a template subtype to enable scripting through code steps
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesScript
 */
export interface ClusterWorkflowTemplateSpecTemplatesScript {
  /**
   * Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScript#args
   */
  readonly args?: string[];

  /**
   * Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScript#command
   */
  readonly command?: string[];

  /**
   * List of environment variables to set in the container. Cannot be updated.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScript#env
   */
  readonly env?: ClusterWorkflowTemplateSpecTemplatesScriptEnv[];

  /**
   * List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScript#envFrom
   */
  readonly envFrom?: ClusterWorkflowTemplateSpecTemplatesScriptEnvFrom[];

  /**
   * Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScript#image
   */
  readonly image?: string;

  /**
   * Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
   *
   * @default Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
   * @schema ClusterWorkflowTemplateSpecTemplatesScript#imagePullPolicy
   */
  readonly imagePullPolicy?: string;

  /**
   * Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScript#lifecycle
   */
  readonly lifecycle?: ClusterWorkflowTemplateSpecTemplatesScriptLifecycle;

  /**
   * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScript#livenessProbe
   */
  readonly livenessProbe?: ClusterWorkflowTemplateSpecTemplatesScriptLivenessProbe;

  /**
   * Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScript#name
   */
  readonly name?: string;

  /**
   * List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Cannot be updated.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScript#ports
   */
  readonly ports?: ClusterWorkflowTemplateSpecTemplatesScriptPorts[];

  /**
   * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScript#readinessProbe
   */
  readonly readinessProbe?: ClusterWorkflowTemplateSpecTemplatesScriptReadinessProbe;

  /**
   * ResourceRequirements describes the compute resource requirements.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScript#resources
   */
  readonly resources?: ClusterWorkflowTemplateSpecTemplatesScriptResources;

  /**
   * SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScript#securityContext
   */
  readonly securityContext?: ClusterWorkflowTemplateSpecTemplatesScriptSecurityContext;

  /**
   * Source contains the source code of the script to execute
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScript#source
   */
  readonly source: string;

  /**
   * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScript#startupProbe
   */
  readonly startupProbe?: ClusterWorkflowTemplateSpecTemplatesScriptStartupProbe;

  /**
   * Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
   *
   * @default false.
   * @schema ClusterWorkflowTemplateSpecTemplatesScript#stdin
   */
  readonly stdin?: boolean;

  /**
   * Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
   *
   * @default false
   * @schema ClusterWorkflowTemplateSpecTemplatesScript#stdinOnce
   */
  readonly stdinOnce?: boolean;

  /**
   * Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.
   *
   * @default dev/termination-log. Cannot be updated.
   * @schema ClusterWorkflowTemplateSpecTemplatesScript#terminationMessagePath
   */
  readonly terminationMessagePath?: string;

  /**
   * Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
   *
   * @default File. Cannot be updated.
   * @schema ClusterWorkflowTemplateSpecTemplatesScript#terminationMessagePolicy
   */
  readonly terminationMessagePolicy?: string;

  /**
   * Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
   *
   * @default false.
   * @schema ClusterWorkflowTemplateSpecTemplatesScript#tty
   */
  readonly tty?: boolean;

  /**
   * volumeDevices is the list of block devices to be used by the container. This is a beta feature.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScript#volumeDevices
   */
  readonly volumeDevices?: ClusterWorkflowTemplateSpecTemplatesScriptVolumeDevices[];

  /**
   * Pod volumes to mount into the container's filesystem. Cannot be updated.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScript#volumeMounts
   */
  readonly volumeMounts?: ClusterWorkflowTemplateSpecTemplatesScriptVolumeMounts[];

  /**
   * Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScript#workingDir
   */
  readonly workingDir?: string;

}

/**
 * PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesSecurityContext
 */
export interface ClusterWorkflowTemplateSpecTemplatesSecurityContext {
  /**
   * A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:

1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----

If unset, the Kubelet will not modify the ownership and permissions of any volume.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSecurityContext#fsGroup
   */
  readonly fsGroup?: number;

  /**
   * The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
   *
   * @default user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
   * @schema ClusterWorkflowTemplateSpecTemplatesSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * SELinuxOptions are the labels to be applied to the container
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: ClusterWorkflowTemplateSpecTemplatesSecurityContextSeLinuxOptions;

  /**
   * A list of groups applied to the first process run in each container, in addition to the container's primary GID.  If unspecified, no groups will be added to any container.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSecurityContext#supplementalGroups
   */
  readonly supplementalGroups?: number[];

  /**
   * Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSecurityContext#sysctls
   */
  readonly sysctls?: ClusterWorkflowTemplateSpecTemplatesSecurityContextSysctls[];

  /**
   * WindowsSecurityContextOptions contain Windows-specific options and credentials.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSecurityContext#windowsOptions
   */
  readonly windowsOptions?: ClusterWorkflowTemplateSpecTemplatesSecurityContextWindowsOptions;

}

/**
 * UserContainer is a container specified by a user.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesSidecars
 */
export interface ClusterWorkflowTemplateSpecTemplatesSidecars {
  /**
   * Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecars#args
   */
  readonly args?: string[];

  /**
   * Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecars#command
   */
  readonly command?: string[];

  /**
   * List of environment variables to set in the container. Cannot be updated.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecars#env
   */
  readonly env?: ClusterWorkflowTemplateSpecTemplatesSidecarsEnv[];

  /**
   * List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecars#envFrom
   */
  readonly envFrom?: ClusterWorkflowTemplateSpecTemplatesSidecarsEnvFrom[];

  /**
   * Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecars#image
   */
  readonly image?: string;

  /**
   * Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
   *
   * @default Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecars#imagePullPolicy
   */
  readonly imagePullPolicy?: string;

  /**
   * Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecars#lifecycle
   */
  readonly lifecycle?: ClusterWorkflowTemplateSpecTemplatesSidecarsLifecycle;

  /**
   * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecars#livenessProbe
   */
  readonly livenessProbe?: ClusterWorkflowTemplateSpecTemplatesSidecarsLivenessProbe;

  /**
   * MirrorVolumeMounts will mount the same volumes specified in the main container to the container (including artifacts), at the same mountPaths. This enables dind daemon to partially see the same filesystem as the main container in order to use features such as docker volume binding
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecars#mirrorVolumeMounts
   */
  readonly mirrorVolumeMounts?: boolean;

  /**
   * Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecars#name
   */
  readonly name: string;

  /**
   * List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Cannot be updated.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecars#ports
   */
  readonly ports?: ClusterWorkflowTemplateSpecTemplatesSidecarsPorts[];

  /**
   * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecars#readinessProbe
   */
  readonly readinessProbe?: ClusterWorkflowTemplateSpecTemplatesSidecarsReadinessProbe;

  /**
   * ResourceRequirements describes the compute resource requirements.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecars#resources
   */
  readonly resources?: ClusterWorkflowTemplateSpecTemplatesSidecarsResources;

  /**
   * SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecars#securityContext
   */
  readonly securityContext?: ClusterWorkflowTemplateSpecTemplatesSidecarsSecurityContext;

  /**
   * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecars#startupProbe
   */
  readonly startupProbe?: ClusterWorkflowTemplateSpecTemplatesSidecarsStartupProbe;

  /**
   * Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
   *
   * @default false.
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecars#stdin
   */
  readonly stdin?: boolean;

  /**
   * Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
   *
   * @default false
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecars#stdinOnce
   */
  readonly stdinOnce?: boolean;

  /**
   * Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.
   *
   * @default dev/termination-log. Cannot be updated.
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecars#terminationMessagePath
   */
  readonly terminationMessagePath?: string;

  /**
   * Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
   *
   * @default File. Cannot be updated.
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecars#terminationMessagePolicy
   */
  readonly terminationMessagePolicy?: string;

  /**
   * Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
   *
   * @default false.
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecars#tty
   */
  readonly tty?: boolean;

  /**
   * volumeDevices is the list of block devices to be used by the container. This is a beta feature.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecars#volumeDevices
   */
  readonly volumeDevices?: ClusterWorkflowTemplateSpecTemplatesSidecarsVolumeDevices[];

  /**
   * Pod volumes to mount into the container's filesystem. Cannot be updated.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecars#volumeMounts
   */
  readonly volumeMounts?: ClusterWorkflowTemplateSpecTemplatesSidecarsVolumeMounts[];

  /**
   * Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecars#workingDir
   */
  readonly workingDir?: string;

}

/**
 * WorkflowStep is a reference to a template to execute in a series of step
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesSteps
 */
export interface ClusterWorkflowTemplateSpecTemplatesSteps {
  /**
   * Arguments to a template
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSteps#arguments
   */
  readonly arguments?: ClusterWorkflowTemplateSpecTemplatesStepsArguments;

  /**
   * ContinueOn defines if a workflow should continue even if a task or step fails/errors. It can be specified if the workflow should continue when the pod errors, fails or both.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSteps#continueOn
   */
  readonly continueOn?: ClusterWorkflowTemplateSpecTemplatesStepsContinueOn;

  /**
   * Name of the step
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSteps#name
   */
  readonly name?: string;

  /**
   * OnExit is a template reference which is invoked at the end of the template, irrespective of the success, failure, or error of the primary template.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSteps#onExit
   */
  readonly onExit?: string;

  /**
   * Template is the name of the template to execute as the step
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSteps#template
   */
  readonly template?: string;

  /**
   * TemplateRef is a reference of template resource.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSteps#templateRef
   */
  readonly templateRef?: ClusterWorkflowTemplateSpecTemplatesStepsTemplateRef;

  /**
   * When is an expression in which the step should conditionally execute
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSteps#when
   */
  readonly when?: string;

  /**
   * WithItems expands a step into multiple parallel steps from the items in the list
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSteps#withItems
   */
  readonly withItems?: string[];

  /**
   * WithParam expands a step into multiple parallel steps from the value in the parameter, which is expected to be a JSON list.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSteps#withParam
   */
  readonly withParam?: string;

  /**
   * Sequence expands a workflow step into numeric range
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSteps#withSequence
   */
  readonly withSequence?: ClusterWorkflowTemplateSpecTemplatesStepsWithSequence;

}

/**
 * SuspendTemplate is a template subtype to suspend a workflow at a predetermined point in time
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesSuspend
 */
export interface ClusterWorkflowTemplateSpecTemplatesSuspend {
  /**
   * Duration is the seconds to wait before automatically resuming a template
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSuspend#duration
   */
  readonly duration?: string;

}

/**
 * TemplateRef is a reference of template resource.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesTemplateRef
 */
export interface ClusterWorkflowTemplateSpecTemplatesTemplateRef {
  /**
   * ClusterScope indicates the referred template is cluster scoped (i.e. a ClusterWorkflowTemplate).
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesTemplateRef#clusterScope
   */
  readonly clusterScope?: boolean;

  /**
   * Name is the resource name of the template.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesTemplateRef#name
   */
  readonly name?: string;

  /**
   * RuntimeResolution skips validation at creation time. By enabling this option, you can create the referred workflow template before the actual runtime.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesTemplateRef#runtimeResolution
   */
  readonly runtimeResolution?: boolean;

  /**
   * Template is the name of referred template in the resource.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesTemplateRef#template
   */
  readonly template?: string;

}

/**
 * The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesTolerations
 */
export interface ClusterWorkflowTemplateSpecTemplatesTolerations {
  /**
   * Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesTolerations#effect
   */
  readonly effect?: string;

  /**
   * Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesTolerations#key
   */
  readonly key?: string;

  /**
   * Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
   *
   * @default Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
   * @schema ClusterWorkflowTemplateSpecTemplatesTolerations#operator
   */
  readonly operator?: string;

  /**
   * TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesTolerations#tolerationSeconds
   */
  readonly tolerationSeconds?: number;

  /**
   * Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesTolerations#value
   */
  readonly value?: string;

}

/**
 * Volume represents a named volume in a pod that may be accessed by any container in the pod.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesVolumes
 */
export interface ClusterWorkflowTemplateSpecTemplatesVolumes {
  /**
   * Represents a Persistent Disk resource in AWS.

An AWS EBS disk must exist before mounting to a container. The disk must also be in the same AWS zone as the kubelet. An AWS EBS disk can only be mounted as read/write once. AWS EBS volumes support ownership management and SELinux relabeling.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumes#awsElasticBlockStore
   */
  readonly awsElasticBlockStore?: ClusterWorkflowTemplateSpecTemplatesVolumesAwsElasticBlockStore;

  /**
   * AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumes#azureDisk
   */
  readonly azureDisk?: ClusterWorkflowTemplateSpecTemplatesVolumesAzureDisk;

  /**
   * AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumes#azureFile
   */
  readonly azureFile?: ClusterWorkflowTemplateSpecTemplatesVolumesAzureFile;

  /**
   * Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumes#cephfs
   */
  readonly cephfs?: ClusterWorkflowTemplateSpecTemplatesVolumesCephfs;

  /**
   * Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumes#cinder
   */
  readonly cinder?: ClusterWorkflowTemplateSpecTemplatesVolumesCinder;

  /**
   * Adapts a ConfigMap into a volume.

The contents of the target ConfigMap's Data field will be presented in a volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. ConfigMap volumes support ownership management and SELinux relabeling.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumes#configMap
   */
  readonly configMap?: ClusterWorkflowTemplateSpecTemplatesVolumesConfigMap;

  /**
   * Represents a source location of a volume to mount, managed by an external CSI driver
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumes#csi
   */
  readonly csi?: ClusterWorkflowTemplateSpecTemplatesVolumesCsi;

  /**
   * DownwardAPIVolumeSource represents a volume containing downward API info. Downward API volumes support ownership management and SELinux relabeling.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumes#downwardAPI
   */
  readonly downwardAPI?: ClusterWorkflowTemplateSpecTemplatesVolumesDownwardApi;

  /**
   * Represents an empty directory for a pod. Empty directory volumes support ownership management and SELinux relabeling.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumes#emptyDir
   */
  readonly emptyDir?: ClusterWorkflowTemplateSpecTemplatesVolumesEmptyDir;

  /**
   * Represents a Fibre Channel volume. Fibre Channel volumes can only be mounted as read/write once. Fibre Channel volumes support ownership management and SELinux relabeling.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumes#fc
   */
  readonly fc?: ClusterWorkflowTemplateSpecTemplatesVolumesFc;

  /**
   * FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumes#flexVolume
   */
  readonly flexVolume?: ClusterWorkflowTemplateSpecTemplatesVolumesFlexVolume;

  /**
   * Represents a Flocker volume mounted by the Flocker agent. One and only one of datasetName and datasetUUID should be set. Flocker volumes do not support ownership management or SELinux relabeling.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumes#flocker
   */
  readonly flocker?: ClusterWorkflowTemplateSpecTemplatesVolumesFlocker;

  /**
   * Represents a Persistent Disk resource in Google Compute Engine.

A GCE PD must exist before mounting to a container. The disk must also be in the same GCE project and zone as the kubelet. A GCE PD can only be mounted as read/write once or read-only many times. GCE PDs support ownership management and SELinux relabeling.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumes#gcePersistentDisk
   */
  readonly gcePersistentDisk?: ClusterWorkflowTemplateSpecTemplatesVolumesGcePersistentDisk;

  /**
   * Represents a volume that is populated with the contents of a git repository. Git repo volumes do not support ownership management. Git repo volumes support SELinux relabeling.

DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumes#gitRepo
   */
  readonly gitRepo?: ClusterWorkflowTemplateSpecTemplatesVolumesGitRepo;

  /**
   * Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumes#glusterfs
   */
  readonly glusterfs?: ClusterWorkflowTemplateSpecTemplatesVolumesGlusterfs;

  /**
   * Represents a host path mapped into a pod. Host path volumes do not support ownership management or SELinux relabeling.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumes#hostPath
   */
  readonly hostPath?: ClusterWorkflowTemplateSpecTemplatesVolumesHostPath;

  /**
   * Represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumes#iscsi
   */
  readonly iscsi?: ClusterWorkflowTemplateSpecTemplatesVolumesIscsi;

  /**
   * Volume's name. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumes#name
   */
  readonly name: string;

  /**
   * Represents an NFS mount that lasts the lifetime of a pod. NFS volumes do not support ownership management or SELinux relabeling.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumes#nfs
   */
  readonly nfs?: ClusterWorkflowTemplateSpecTemplatesVolumesNfs;

  /**
   * PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace. This volume finds the bound PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another type of volume that is owned by someone else (the system).
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumes#persistentVolumeClaim
   */
  readonly persistentVolumeClaim?: ClusterWorkflowTemplateSpecTemplatesVolumesPersistentVolumeClaim;

  /**
   * Represents a Photon Controller persistent disk resource.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumes#photonPersistentDisk
   */
  readonly photonPersistentDisk?: ClusterWorkflowTemplateSpecTemplatesVolumesPhotonPersistentDisk;

  /**
   * PortworxVolumeSource represents a Portworx volume resource.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumes#portworxVolume
   */
  readonly portworxVolume?: ClusterWorkflowTemplateSpecTemplatesVolumesPortworxVolume;

  /**
   * Represents a projected volume source
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumes#projected
   */
  readonly projected?: ClusterWorkflowTemplateSpecTemplatesVolumesProjected;

  /**
   * Represents a Quobyte mount that lasts the lifetime of a pod. Quobyte volumes do not support ownership management or SELinux relabeling.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumes#quobyte
   */
  readonly quobyte?: ClusterWorkflowTemplateSpecTemplatesVolumesQuobyte;

  /**
   * Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumes#rbd
   */
  readonly rbd?: ClusterWorkflowTemplateSpecTemplatesVolumesRbd;

  /**
   * ScaleIOVolumeSource represents a persistent ScaleIO volume
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumes#scaleIO
   */
  readonly scaleIO?: ClusterWorkflowTemplateSpecTemplatesVolumesScaleIo;

  /**
   * Adapts a Secret into a volume.

The contents of the target Secret's Data field will be presented in a volume as files using the keys in the Data field as the file names. Secret volumes support ownership management and SELinux relabeling.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumes#secret
   */
  readonly secret?: ClusterWorkflowTemplateSpecTemplatesVolumesSecret;

  /**
   * Represents a StorageOS persistent volume resource.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumes#storageos
   */
  readonly storageos?: ClusterWorkflowTemplateSpecTemplatesVolumesStorageos;

  /**
   * Represents a vSphere volume resource.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumes#vsphereVolume
   */
  readonly vsphereVolume?: ClusterWorkflowTemplateSpecTemplatesVolumesVsphereVolume;

}

/**
 * PersistentVolumeClaimSpec describes the common attributes of storage devices and allows a Source for provider-specific attributes
 *
 * @schema ClusterWorkflowTemplateSpecVolumeClaimTemplatesSpec
 */
export interface ClusterWorkflowTemplateSpecVolumeClaimTemplatesSpec {
  /**
   * AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
   *
   * @schema ClusterWorkflowTemplateSpecVolumeClaimTemplatesSpec#accessModes
   */
  readonly accessModes?: string[];

  /**
   * TypedLocalObjectReference contains enough information to let you locate the typed referenced object inside the same namespace.
   *
   * @schema ClusterWorkflowTemplateSpecVolumeClaimTemplatesSpec#dataSource
   */
  readonly dataSource?: ClusterWorkflowTemplateSpecVolumeClaimTemplatesSpecDataSource;

  /**
   * ResourceRequirements describes the compute resource requirements.
   *
   * @schema ClusterWorkflowTemplateSpecVolumeClaimTemplatesSpec#resources
   */
  readonly resources?: ClusterWorkflowTemplateSpecVolumeClaimTemplatesSpecResources;

  /**
   * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
   *
   * @schema ClusterWorkflowTemplateSpecVolumeClaimTemplatesSpec#selector
   */
  readonly selector?: ClusterWorkflowTemplateSpecVolumeClaimTemplatesSpecSelector;

  /**
   * Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
   *
   * @schema ClusterWorkflowTemplateSpecVolumeClaimTemplatesSpec#storageClassName
   */
  readonly storageClassName?: string;

  /**
   * volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is a beta feature.
   *
   * @schema ClusterWorkflowTemplateSpecVolumeClaimTemplatesSpec#volumeMode
   */
  readonly volumeMode?: string;

  /**
   * VolumeName is the binding reference to the PersistentVolume backing this claim.
   *
   * @schema ClusterWorkflowTemplateSpecVolumeClaimTemplatesSpec#volumeName
   */
  readonly volumeName?: string;

}

/**
 * PersistentVolumeClaimStatus is the current status of a persistent volume claim.
 *
 * @schema ClusterWorkflowTemplateSpecVolumeClaimTemplatesStatus
 */
export interface ClusterWorkflowTemplateSpecVolumeClaimTemplatesStatus {
  /**
   * AccessModes contains the actual access modes the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
   *
   * @schema ClusterWorkflowTemplateSpecVolumeClaimTemplatesStatus#accessModes
   */
  readonly accessModes?: string[];

  /**
   * Represents the actual resources of the underlying volume.
   *
   * @schema ClusterWorkflowTemplateSpecVolumeClaimTemplatesStatus#capacity
   */
  readonly capacity?: { [key: string]: string };

  /**
   * Current Condition of persistent volume claim. If underlying persistent volume is being resized then the Condition will be set to 'ResizeStarted'.
   *
   * @schema ClusterWorkflowTemplateSpecVolumeClaimTemplatesStatus#conditions
   */
  readonly conditions?: ClusterWorkflowTemplateSpecVolumeClaimTemplatesStatusConditions[];

  /**
   * Phase represents the current phase of PersistentVolumeClaim.
   *
   * @schema ClusterWorkflowTemplateSpecVolumeClaimTemplatesStatus#phase
   */
  readonly phase?: string;

}

/**
 * Represents a Persistent Disk resource in AWS.

An AWS EBS disk must exist before mounting to a container. The disk must also be in the same AWS zone as the kubelet. An AWS EBS disk can only be mounted as read/write once. AWS EBS volumes support ownership management and SELinux relabeling.
 *
 * @schema ClusterWorkflowTemplateSpecVolumesAwsElasticBlockStore
 */
export interface ClusterWorkflowTemplateSpecVolumesAwsElasticBlockStore {
  /**
   * Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
   *
   * @schema ClusterWorkflowTemplateSpecVolumesAwsElasticBlockStore#fsType
   */
  readonly fsType?: string;

  /**
   * The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
   *
   * @schema ClusterWorkflowTemplateSpecVolumesAwsElasticBlockStore#partition
   */
  readonly partition?: number;

  /**
   * Specify "true" to force and set the ReadOnly property in VolumeMounts to "true". If omitted, the default is "false". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
   *
   * @schema ClusterWorkflowTemplateSpecVolumesAwsElasticBlockStore#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
   *
   * @schema ClusterWorkflowTemplateSpecVolumesAwsElasticBlockStore#volumeID
   */
  readonly volumeID: string;

}

/**
 * AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
 *
 * @schema ClusterWorkflowTemplateSpecVolumesAzureDisk
 */
export interface ClusterWorkflowTemplateSpecVolumesAzureDisk {
  /**
   * Host Caching mode: None, Read Only, Read Write.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesAzureDisk#cachingMode
   */
  readonly cachingMode?: string;

  /**
   * The Name of the data disk in the blob storage
   *
   * @schema ClusterWorkflowTemplateSpecVolumesAzureDisk#diskName
   */
  readonly diskName: string;

  /**
   * The URI the data disk in the blob storage
   *
   * @schema ClusterWorkflowTemplateSpecVolumesAzureDisk#diskURI
   */
  readonly diskURI: string;

  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesAzureDisk#fsType
   */
  readonly fsType?: string;

  /**
   * Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared
   *
   * @schema ClusterWorkflowTemplateSpecVolumesAzureDisk#kind
   */
  readonly kind?: string;

  /**
   * Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema ClusterWorkflowTemplateSpecVolumesAzureDisk#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
 *
 * @schema ClusterWorkflowTemplateSpecVolumesAzureFile
 */
export interface ClusterWorkflowTemplateSpecVolumesAzureFile {
  /**
   * Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema ClusterWorkflowTemplateSpecVolumesAzureFile#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * the name of secret that contains Azure Storage Account Name and Key
   *
   * @schema ClusterWorkflowTemplateSpecVolumesAzureFile#secretName
   */
  readonly secretName: string;

  /**
   * Share Name
   *
   * @schema ClusterWorkflowTemplateSpecVolumesAzureFile#shareName
   */
  readonly shareName: string;

}

/**
 * Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling.
 *
 * @schema ClusterWorkflowTemplateSpecVolumesCephfs
 */
export interface ClusterWorkflowTemplateSpecVolumesCephfs {
  /**
   * Required: Monitors is a collection of Ceph monitors More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
   *
   * @schema ClusterWorkflowTemplateSpecVolumesCephfs#monitors
   */
  readonly monitors: string[];

  /**
   * Optional: Used as the mounted root, rather than the full Ceph tree, default is /
   *
   * @schema ClusterWorkflowTemplateSpecVolumesCephfs#path
   */
  readonly path?: string;

  /**
   * Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
   * @schema ClusterWorkflowTemplateSpecVolumesCephfs#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
   *
   * @schema ClusterWorkflowTemplateSpecVolumesCephfs#secretFile
   */
  readonly secretFile?: string;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesCephfs#secretRef
   */
  readonly secretRef?: ClusterWorkflowTemplateSpecVolumesCephfsSecretRef;

  /**
   * Optional: User is the rados user name, default is admin More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
   *
   * @schema ClusterWorkflowTemplateSpecVolumesCephfs#user
   */
  readonly user?: string;

}

/**
 * Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling.
 *
 * @schema ClusterWorkflowTemplateSpecVolumesCinder
 */
export interface ClusterWorkflowTemplateSpecVolumesCinder {
  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
   *
   * @schema ClusterWorkflowTemplateSpecVolumesCinder#fsType
   */
  readonly fsType?: string;

  /**
   * Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
   * @schema ClusterWorkflowTemplateSpecVolumesCinder#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesCinder#secretRef
   */
  readonly secretRef?: ClusterWorkflowTemplateSpecVolumesCinderSecretRef;

  /**
   * volume id used to identify the volume in cinder More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
   *
   * @schema ClusterWorkflowTemplateSpecVolumesCinder#volumeID
   */
  readonly volumeID: string;

}

/**
 * Adapts a ConfigMap into a volume.

The contents of the target ConfigMap's Data field will be presented in a volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. ConfigMap volumes support ownership management and SELinux relabeling.
 *
 * @schema ClusterWorkflowTemplateSpecVolumesConfigMap
 */
export interface ClusterWorkflowTemplateSpecVolumesConfigMap {
  /**
   * Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @default 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   * @schema ClusterWorkflowTemplateSpecVolumesConfigMap#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesConfigMap#items
   */
  readonly items?: ClusterWorkflowTemplateSpecVolumesConfigMapItems[];

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecVolumesConfigMap#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its keys must be defined
   *
   * @schema ClusterWorkflowTemplateSpecVolumesConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Represents a source location of a volume to mount, managed by an external CSI driver
 *
 * @schema ClusterWorkflowTemplateSpecVolumesCsi
 */
export interface ClusterWorkflowTemplateSpecVolumesCsi {
  /**
   * Driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesCsi#driver
   */
  readonly driver: string;

  /**
   * Filesystem type to mount. Ex. "ext4", "xfs", "ntfs". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesCsi#fsType
   */
  readonly fsType?: string;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesCsi#nodePublishSecretRef
   */
  readonly nodePublishSecretRef?: ClusterWorkflowTemplateSpecVolumesCsiNodePublishSecretRef;

  /**
   * Specifies a read-only configuration for the volume. Defaults to false (read/write).
   *
   * @default false (read/write).
   * @schema ClusterWorkflowTemplateSpecVolumesCsi#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * VolumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesCsi#volumeAttributes
   */
  readonly volumeAttributes?: { [key: string]: string };

}

/**
 * DownwardAPIVolumeSource represents a volume containing downward API info. Downward API volumes support ownership management and SELinux relabeling.
 *
 * @schema ClusterWorkflowTemplateSpecVolumesDownwardApi
 */
export interface ClusterWorkflowTemplateSpecVolumesDownwardApi {
  /**
   * Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @default 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   * @schema ClusterWorkflowTemplateSpecVolumesDownwardApi#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * Items is a list of downward API volume file
   *
   * @schema ClusterWorkflowTemplateSpecVolumesDownwardApi#items
   */
  readonly items?: ClusterWorkflowTemplateSpecVolumesDownwardApiItems[];

}

/**
 * Represents an empty directory for a pod. Empty directory volumes support ownership management and SELinux relabeling.
 *
 * @schema ClusterWorkflowTemplateSpecVolumesEmptyDir
 */
export interface ClusterWorkflowTemplateSpecVolumesEmptyDir {
  /**
   * What type of storage medium should back this directory. The default is "" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
   *
   * @schema ClusterWorkflowTemplateSpecVolumesEmptyDir#medium
   */
  readonly medium?: string;

  /**
   * Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and Int64() accessors.

The serialization format is:

<quantity>        ::= <signedNumber><suffix>
  (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
<decimalSI>       ::= m | "" | k | M | G | T | P | E
  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
<decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  a. No precision is lost
  b. No fractional digits will be emitted
  c. The exponent (or suffix) is as large as possible.
The sign will be omitted unless the number is negative.

Examples:
  1.5 will be serialized as "1500m"
  1.5Gi will be serialized as "1536Mi"

Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.

Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesEmptyDir#sizeLimit
   */
  readonly sizeLimit?: string;

}

/**
 * Represents a Fibre Channel volume. Fibre Channel volumes can only be mounted as read/write once. Fibre Channel volumes support ownership management and SELinux relabeling.
 *
 * @schema ClusterWorkflowTemplateSpecVolumesFc
 */
export interface ClusterWorkflowTemplateSpecVolumesFc {
  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesFc#fsType
   */
  readonly fsType?: string;

  /**
   * Optional: FC target lun number
   *
   * @schema ClusterWorkflowTemplateSpecVolumesFc#lun
   */
  readonly lun?: number;

  /**
   * Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema ClusterWorkflowTemplateSpecVolumesFc#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Optional: FC target worldwide names (WWNs)
   *
   * @schema ClusterWorkflowTemplateSpecVolumesFc#targetWWNs
   */
  readonly targetWWNs?: string[];

  /**
   * Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesFc#wwids
   */
  readonly wwids?: string[];

}

/**
 * FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
 *
 * @schema ClusterWorkflowTemplateSpecVolumesFlexVolume
 */
export interface ClusterWorkflowTemplateSpecVolumesFlexVolume {
  /**
   * Driver is the name of the driver to use for this volume.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesFlexVolume#driver
   */
  readonly driver: string;

  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesFlexVolume#fsType
   */
  readonly fsType?: string;

  /**
   * Optional: Extra command options if any.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesFlexVolume#options
   */
  readonly options?: { [key: string]: string };

  /**
   * Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema ClusterWorkflowTemplateSpecVolumesFlexVolume#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesFlexVolume#secretRef
   */
  readonly secretRef?: ClusterWorkflowTemplateSpecVolumesFlexVolumeSecretRef;

}

/**
 * Represents a Flocker volume mounted by the Flocker agent. One and only one of datasetName and datasetUUID should be set. Flocker volumes do not support ownership management or SELinux relabeling.
 *
 * @schema ClusterWorkflowTemplateSpecVolumesFlocker
 */
export interface ClusterWorkflowTemplateSpecVolumesFlocker {
  /**
   * Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated
   *
   * @schema ClusterWorkflowTemplateSpecVolumesFlocker#datasetName
   */
  readonly datasetName?: string;

  /**
   * UUID of the dataset. This is unique identifier of a Flocker dataset
   *
   * @schema ClusterWorkflowTemplateSpecVolumesFlocker#datasetUUID
   */
  readonly datasetUUID?: string;

}

/**
 * Represents a Persistent Disk resource in Google Compute Engine.

A GCE PD must exist before mounting to a container. The disk must also be in the same GCE project and zone as the kubelet. A GCE PD can only be mounted as read/write once or read-only many times. GCE PDs support ownership management and SELinux relabeling.
 *
 * @schema ClusterWorkflowTemplateSpecVolumesGcePersistentDisk
 */
export interface ClusterWorkflowTemplateSpecVolumesGcePersistentDisk {
  /**
   * Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
   *
   * @schema ClusterWorkflowTemplateSpecVolumesGcePersistentDisk#fsType
   */
  readonly fsType?: string;

  /**
   * The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
   *
   * @schema ClusterWorkflowTemplateSpecVolumesGcePersistentDisk#partition
   */
  readonly partition?: number;

  /**
   * Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
   *
   * @schema ClusterWorkflowTemplateSpecVolumesGcePersistentDisk#pdName
   */
  readonly pdName: string;

  /**
   * ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
   *
   * @default false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
   * @schema ClusterWorkflowTemplateSpecVolumesGcePersistentDisk#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Represents a volume that is populated with the contents of a git repository. Git repo volumes do not support ownership management. Git repo volumes support SELinux relabeling.

DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.
 *
 * @schema ClusterWorkflowTemplateSpecVolumesGitRepo
 */
export interface ClusterWorkflowTemplateSpecVolumesGitRepo {
  /**
   * Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesGitRepo#directory
   */
  readonly directory?: string;

  /**
   * Repository URL
   *
   * @schema ClusterWorkflowTemplateSpecVolumesGitRepo#repository
   */
  readonly repository: string;

  /**
   * Commit hash for the specified revision.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesGitRepo#revision
   */
  readonly revision?: string;

}

/**
 * Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling.
 *
 * @schema ClusterWorkflowTemplateSpecVolumesGlusterfs
 */
export interface ClusterWorkflowTemplateSpecVolumesGlusterfs {
  /**
   * EndpointsName is the endpoint name that details Glusterfs topology. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod
   *
   * @schema ClusterWorkflowTemplateSpecVolumesGlusterfs#endpoints
   */
  readonly endpoints: string;

  /**
   * Path is the Glusterfs volume path. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod
   *
   * @schema ClusterWorkflowTemplateSpecVolumesGlusterfs#path
   */
  readonly path: string;

  /**
   * ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod
   *
   * @default false. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod
   * @schema ClusterWorkflowTemplateSpecVolumesGlusterfs#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Represents a host path mapped into a pod. Host path volumes do not support ownership management or SELinux relabeling.
 *
 * @schema ClusterWorkflowTemplateSpecVolumesHostPath
 */
export interface ClusterWorkflowTemplateSpecVolumesHostPath {
  /**
   * Path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
   *
   * @schema ClusterWorkflowTemplateSpecVolumesHostPath#path
   */
  readonly path: string;

  /**
   * Type for HostPath Volume Defaults to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
   *
   * @default More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
   * @schema ClusterWorkflowTemplateSpecVolumesHostPath#type
   */
  readonly type?: string;

}

/**
 * Represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling.
 *
 * @schema ClusterWorkflowTemplateSpecVolumesIscsi
 */
export interface ClusterWorkflowTemplateSpecVolumesIscsi {
  /**
   * whether support iSCSI Discovery CHAP authentication
   *
   * @schema ClusterWorkflowTemplateSpecVolumesIscsi#chapAuthDiscovery
   */
  readonly chapAuthDiscovery?: boolean;

  /**
   * whether support iSCSI Session CHAP authentication
   *
   * @schema ClusterWorkflowTemplateSpecVolumesIscsi#chapAuthSession
   */
  readonly chapAuthSession?: boolean;

  /**
   * Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
   *
   * @schema ClusterWorkflowTemplateSpecVolumesIscsi#fsType
   */
  readonly fsType?: string;

  /**
   * Custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesIscsi#initiatorName
   */
  readonly initiatorName?: string;

  /**
   * Target iSCSI Qualified Name.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesIscsi#iqn
   */
  readonly iqn: string;

  /**
   * iSCSI Interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).
   *
   * @default default' (tcp).
   * @schema ClusterWorkflowTemplateSpecVolumesIscsi#iscsiInterface
   */
  readonly iscsiInterface?: string;

  /**
   * iSCSI Target Lun number.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesIscsi#lun
   */
  readonly lun: number;

  /**
   * iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
   *
   * @schema ClusterWorkflowTemplateSpecVolumesIscsi#portals
   */
  readonly portals?: string[];

  /**
   * ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.
   *
   * @default false.
   * @schema ClusterWorkflowTemplateSpecVolumesIscsi#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesIscsi#secretRef
   */
  readonly secretRef?: ClusterWorkflowTemplateSpecVolumesIscsiSecretRef;

  /**
   * iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
   *
   * @schema ClusterWorkflowTemplateSpecVolumesIscsi#targetPortal
   */
  readonly targetPortal: string;

}

/**
 * Represents an NFS mount that lasts the lifetime of a pod. NFS volumes do not support ownership management or SELinux relabeling.
 *
 * @schema ClusterWorkflowTemplateSpecVolumesNfs
 */
export interface ClusterWorkflowTemplateSpecVolumesNfs {
  /**
   * Path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
   *
   * @schema ClusterWorkflowTemplateSpecVolumesNfs#path
   */
  readonly path: string;

  /**
   * ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
   *
   * @default false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
   * @schema ClusterWorkflowTemplateSpecVolumesNfs#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
   *
   * @schema ClusterWorkflowTemplateSpecVolumesNfs#server
   */
  readonly server: string;

}

/**
 * PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace. This volume finds the bound PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another type of volume that is owned by someone else (the system).
 *
 * @schema ClusterWorkflowTemplateSpecVolumesPersistentVolumeClaim
 */
export interface ClusterWorkflowTemplateSpecVolumesPersistentVolumeClaim {
  /**
   * ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
   *
   * @schema ClusterWorkflowTemplateSpecVolumesPersistentVolumeClaim#claimName
   */
  readonly claimName: string;

  /**
   * Will force the ReadOnly setting in VolumeMounts. Default false.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesPersistentVolumeClaim#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Represents a Photon Controller persistent disk resource.
 *
 * @schema ClusterWorkflowTemplateSpecVolumesPhotonPersistentDisk
 */
export interface ClusterWorkflowTemplateSpecVolumesPhotonPersistentDisk {
  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesPhotonPersistentDisk#fsType
   */
  readonly fsType?: string;

  /**
   * ID that identifies Photon Controller persistent disk
   *
   * @schema ClusterWorkflowTemplateSpecVolumesPhotonPersistentDisk#pdID
   */
  readonly pdID: string;

}

/**
 * PortworxVolumeSource represents a Portworx volume resource.
 *
 * @schema ClusterWorkflowTemplateSpecVolumesPortworxVolume
 */
export interface ClusterWorkflowTemplateSpecVolumesPortworxVolume {
  /**
   * FSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesPortworxVolume#fsType
   */
  readonly fsType?: string;

  /**
   * Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema ClusterWorkflowTemplateSpecVolumesPortworxVolume#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * VolumeID uniquely identifies a Portworx volume
   *
   * @schema ClusterWorkflowTemplateSpecVolumesPortworxVolume#volumeID
   */
  readonly volumeID: string;

}

/**
 * Represents a projected volume source
 *
 * @schema ClusterWorkflowTemplateSpecVolumesProjected
 */
export interface ClusterWorkflowTemplateSpecVolumesProjected {
  /**
   * Mode bits to use on created files by default. Must be a value between 0 and 0777. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesProjected#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * list of volume projections
   *
   * @schema ClusterWorkflowTemplateSpecVolumesProjected#sources
   */
  readonly sources: ClusterWorkflowTemplateSpecVolumesProjectedSources[];

}

/**
 * Represents a Quobyte mount that lasts the lifetime of a pod. Quobyte volumes do not support ownership management or SELinux relabeling.
 *
 * @schema ClusterWorkflowTemplateSpecVolumesQuobyte
 */
export interface ClusterWorkflowTemplateSpecVolumesQuobyte {
  /**
   * Group to map volume access to Default is no group
   *
   * @default no group
   * @schema ClusterWorkflowTemplateSpecVolumesQuobyte#group
   */
  readonly group?: string;

  /**
   * ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.
   *
   * @default false.
   * @schema ClusterWorkflowTemplateSpecVolumesQuobyte#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes
   *
   * @schema ClusterWorkflowTemplateSpecVolumesQuobyte#registry
   */
  readonly registry: string;

  /**
   * Tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin
   *
   * @schema ClusterWorkflowTemplateSpecVolumesQuobyte#tenant
   */
  readonly tenant?: string;

  /**
   * User to map volume access to Defaults to serivceaccount user
   *
   * @default serivceaccount user
   * @schema ClusterWorkflowTemplateSpecVolumesQuobyte#user
   */
  readonly user?: string;

  /**
   * Volume is a string that references an already created Quobyte volume by name.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesQuobyte#volume
   */
  readonly volume: string;

}

/**
 * Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling.
 *
 * @schema ClusterWorkflowTemplateSpecVolumesRbd
 */
export interface ClusterWorkflowTemplateSpecVolumesRbd {
  /**
   * Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
   *
   * @schema ClusterWorkflowTemplateSpecVolumesRbd#fsType
   */
  readonly fsType?: string;

  /**
   * The rados image name. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   *
   * @schema ClusterWorkflowTemplateSpecVolumesRbd#image
   */
  readonly image: string;

  /**
   * Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   *
   * @default etc/ceph/keyring. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   * @schema ClusterWorkflowTemplateSpecVolumesRbd#keyring
   */
  readonly keyring?: string;

  /**
   * A collection of Ceph monitors. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   *
   * @schema ClusterWorkflowTemplateSpecVolumesRbd#monitors
   */
  readonly monitors: string[];

  /**
   * The rados pool name. Default is rbd. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   *
   * @default rbd. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   * @schema ClusterWorkflowTemplateSpecVolumesRbd#pool
   */
  readonly pool?: string;

  /**
   * ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   *
   * @default false. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   * @schema ClusterWorkflowTemplateSpecVolumesRbd#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesRbd#secretRef
   */
  readonly secretRef?: ClusterWorkflowTemplateSpecVolumesRbdSecretRef;

  /**
   * The rados user name. Default is admin. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   *
   * @default admin. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   * @schema ClusterWorkflowTemplateSpecVolumesRbd#user
   */
  readonly user?: string;

}

/**
 * ScaleIOVolumeSource represents a persistent ScaleIO volume
 *
 * @schema ClusterWorkflowTemplateSpecVolumesScaleIo
 */
export interface ClusterWorkflowTemplateSpecVolumesScaleIo {
  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Default is "xfs".
   *
   * @default xfs".
   * @schema ClusterWorkflowTemplateSpecVolumesScaleIo#fsType
   */
  readonly fsType?: string;

  /**
   * The host address of the ScaleIO API Gateway.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesScaleIo#gateway
   */
  readonly gateway: string;

  /**
   * The name of the ScaleIO Protection Domain for the configured storage.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesScaleIo#protectionDomain
   */
  readonly protectionDomain?: string;

  /**
   * Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema ClusterWorkflowTemplateSpecVolumesScaleIo#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesScaleIo#secretRef
   */
  readonly secretRef: ClusterWorkflowTemplateSpecVolumesScaleIoSecretRef;

  /**
   * Flag to enable/disable SSL communication with Gateway, default false
   *
   * @schema ClusterWorkflowTemplateSpecVolumesScaleIo#sslEnabled
   */
  readonly sslEnabled?: boolean;

  /**
   * Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.
   *
   * @default ThinProvisioned.
   * @schema ClusterWorkflowTemplateSpecVolumesScaleIo#storageMode
   */
  readonly storageMode?: string;

  /**
   * The ScaleIO Storage Pool associated with the protection domain.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesScaleIo#storagePool
   */
  readonly storagePool?: string;

  /**
   * The name of the storage system as configured in ScaleIO.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesScaleIo#system
   */
  readonly system: string;

  /**
   * The name of a volume already created in the ScaleIO system that is associated with this volume source.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesScaleIo#volumeName
   */
  readonly volumeName?: string;

}

/**
 * Adapts a Secret into a volume.

The contents of the target Secret's Data field will be presented in a volume as files using the keys in the Data field as the file names. Secret volumes support ownership management and SELinux relabeling.
 *
 * @schema ClusterWorkflowTemplateSpecVolumesSecret
 */
export interface ClusterWorkflowTemplateSpecVolumesSecret {
  /**
   * Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @default 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   * @schema ClusterWorkflowTemplateSpecVolumesSecret#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesSecret#items
   */
  readonly items?: ClusterWorkflowTemplateSpecVolumesSecretItems[];

  /**
   * Specify whether the Secret or its keys must be defined
   *
   * @schema ClusterWorkflowTemplateSpecVolumesSecret#optional
   */
  readonly optional?: boolean;

  /**
   * Name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
   *
   * @schema ClusterWorkflowTemplateSpecVolumesSecret#secretName
   */
  readonly secretName?: string;

}

/**
 * Represents a StorageOS persistent volume resource.
 *
 * @schema ClusterWorkflowTemplateSpecVolumesStorageos
 */
export interface ClusterWorkflowTemplateSpecVolumesStorageos {
  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesStorageos#fsType
   */
  readonly fsType?: string;

  /**
   * Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema ClusterWorkflowTemplateSpecVolumesStorageos#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesStorageos#secretRef
   */
  readonly secretRef?: ClusterWorkflowTemplateSpecVolumesStorageosSecretRef;

  /**
   * VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesStorageos#volumeName
   */
  readonly volumeName?: string;

  /**
   * VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to "default" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesStorageos#volumeNamespace
   */
  readonly volumeNamespace?: string;

}

/**
 * Represents a vSphere volume resource.
 *
 * @schema ClusterWorkflowTemplateSpecVolumesVsphereVolume
 */
export interface ClusterWorkflowTemplateSpecVolumesVsphereVolume {
  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesVsphereVolume#fsType
   */
  readonly fsType?: string;

  /**
   * Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesVsphereVolume#storagePolicyID
   */
  readonly storagePolicyID?: string;

  /**
   * Storage Policy Based Management (SPBM) profile name.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesVsphereVolume#storagePolicyName
   */
  readonly storagePolicyName?: string;

  /**
   * Path that identifies vSphere volume vmdk
   *
   * @schema ClusterWorkflowTemplateSpecVolumesVsphereVolume#volumePath
   */
  readonly volumePath: string;

}

/**
 * An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
 *
 * @schema ClusterWorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface ClusterWorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
   *
   * @schema ClusterWorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution#preference
   */
  readonly preference: ClusterWorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference;

  /**
   * Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
   *
   * @schema ClusterWorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms.
 *
 * @schema ClusterWorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface ClusterWorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * Required. A list of node selector terms. The terms are ORed.
   *
   * @schema ClusterWorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution#nodeSelectorTerms
   */
  readonly nodeSelectorTerms: ClusterWorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms[];

}

/**
 * The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
 *
 * @schema ClusterWorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface ClusterWorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
   *
   * @schema ClusterWorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution#podAffinityTerm
   */
  readonly podAffinityTerm: ClusterWorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;

  /**
   * weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
   *
   * @schema ClusterWorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
 *
 * @schema ClusterWorkflowTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface ClusterWorkflowTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
   *
   * @schema ClusterWorkflowTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#labelSelector
   */
  readonly labelSelector?: ClusterWorkflowTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;

  /**
   * namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
   *
   * @schema ClusterWorkflowTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaces
   */
  readonly namespaces?: string[];

  /**
   * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
   *
   * @schema ClusterWorkflowTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
 *
 * @schema ClusterWorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface ClusterWorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
   *
   * @schema ClusterWorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution#podAffinityTerm
   */
  readonly podAffinityTerm: ClusterWorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;

  /**
   * weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
   *
   * @schema ClusterWorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
 *
 * @schema ClusterWorkflowTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface ClusterWorkflowTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
   *
   * @schema ClusterWorkflowTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#labelSelector
   */
  readonly labelSelector?: ClusterWorkflowTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;

  /**
   * namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
   *
   * @schema ClusterWorkflowTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaces
   */
  readonly namespaces?: string[];

  /**
   * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
   *
   * @schema ClusterWorkflowTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * ArchiveStrategy describes how to archive files/directory when saving artifacts
 *
 * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsArchive
 */
export interface ClusterWorkflowTemplateSpecArgumentsArtifactsArchive {
  /**
   * NoneStrategy indicates to skip tar process and upload the files or directory tree as independent files. Note that if the artifact is a directory, the artifact driver must support the ability to save/load the directory appropriately.
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsArchive#none
   */
  readonly none?: any;

  /**
   * TarStrategy will tar and gzip the file or directory when saving
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsArchive#tar
   */
  readonly tar?: ClusterWorkflowTemplateSpecArgumentsArtifactsArchiveTar;

}

/**
 * ArtifactoryArtifact is the location of an artifactory artifact
 *
 * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsArtifactory
 */
export interface ClusterWorkflowTemplateSpecArgumentsArtifactsArtifactory {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsArtifactory#passwordSecret
   */
  readonly passwordSecret?: ClusterWorkflowTemplateSpecArgumentsArtifactsArtifactoryPasswordSecret;

  /**
   * URL of the artifact
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsArtifactory#url
   */
  readonly url: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsArtifactory#usernameSecret
   */
  readonly usernameSecret?: ClusterWorkflowTemplateSpecArgumentsArtifactsArtifactoryUsernameSecret;

}

/**
 * GCSArtifact is the location of a GCS artifact
 *
 * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsGcs
 */
export interface ClusterWorkflowTemplateSpecArgumentsArtifactsGcs {
  /**
   * Bucket is the name of the bucket
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsGcs#bucket
   */
  readonly bucket: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsGcs#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsGcs#serviceAccountKeySecret
   */
  readonly serviceAccountKeySecret?: ClusterWorkflowTemplateSpecArgumentsArtifactsGcsServiceAccountKeySecret;

}

/**
 * GitArtifact is the location of an git artifact
 *
 * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsGit
 */
export interface ClusterWorkflowTemplateSpecArgumentsArtifactsGit {
  /**
   * Depth specifies clones/fetches should be shallow and include the given number of commits from the branch tip
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsGit#depth
   */
  readonly depth?: number;

  /**
   * Fetch specifies a number of refs that should be fetched before checkout
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsGit#fetch
   */
  readonly fetch?: string[];

  /**
   * InsecureIgnoreHostKey disables SSH strict host key checking during git clone
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsGit#insecureIgnoreHostKey
   */
  readonly insecureIgnoreHostKey?: boolean;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsGit#passwordSecret
   */
  readonly passwordSecret?: ClusterWorkflowTemplateSpecArgumentsArtifactsGitPasswordSecret;

  /**
   * Repo is the git repository
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsGit#repo
   */
  readonly repo: string;

  /**
   * Revision is the git commit, tag, branch to checkout
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsGit#revision
   */
  readonly revision?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsGit#sshPrivateKeySecret
   */
  readonly sshPrivateKeySecret?: ClusterWorkflowTemplateSpecArgumentsArtifactsGitSshPrivateKeySecret;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsGit#usernameSecret
   */
  readonly usernameSecret?: ClusterWorkflowTemplateSpecArgumentsArtifactsGitUsernameSecret;

}

/**
 * HDFSArtifact is the location of an HDFS artifact
 *
 * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsHdfs
 */
export interface ClusterWorkflowTemplateSpecArgumentsArtifactsHdfs {
  /**
   * Addresses is accessible addresses of HDFS name nodes
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsHdfs#addresses
   */
  readonly addresses: string[];

  /**
   * Force copies a file forcibly even if it exists (default: false)
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsHdfs#force
   */
  readonly force?: boolean;

  /**
   * HDFSUser is the user to access HDFS file system. It is ignored if either ccache or keytab is used.
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsHdfs#hdfsUser
   */
  readonly hdfsUser?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsHdfs#krbCCacheSecret
   */
  readonly krbCCacheSecret?: ClusterWorkflowTemplateSpecArgumentsArtifactsHdfsKrbCCacheSecret;

  /**
   * Selects a key from a ConfigMap.
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsHdfs#krbConfigConfigMap
   */
  readonly krbConfigConfigMap?: ClusterWorkflowTemplateSpecArgumentsArtifactsHdfsKrbConfigConfigMap;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsHdfs#krbKeytabSecret
   */
  readonly krbKeytabSecret?: ClusterWorkflowTemplateSpecArgumentsArtifactsHdfsKrbKeytabSecret;

  /**
   * KrbRealm is the Kerberos realm used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsHdfs#krbRealm
   */
  readonly krbRealm?: string;

  /**
   * KrbServicePrincipalName is the principal name of Kerberos service It must be set if either ccache or keytab is used.
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsHdfs#krbServicePrincipalName
   */
  readonly krbServicePrincipalName?: string;

  /**
   * KrbUsername is the Kerberos username used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsHdfs#krbUsername
   */
  readonly krbUsername?: string;

  /**
   * Path is a file path in HDFS
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsHdfs#path
   */
  readonly path: string;

}

/**
 * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
 *
 * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsHttp
 */
export interface ClusterWorkflowTemplateSpecArgumentsArtifactsHttp {
  /**
   * URL of the artifact
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsHttp#url
   */
  readonly url: string;

}

/**
 * OSSArtifact is the location of an Alibaba Cloud OSS artifact
 *
 * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsOss
 */
export interface ClusterWorkflowTemplateSpecArgumentsArtifactsOss {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsOss#accessKeySecret
   */
  readonly accessKeySecret: ClusterWorkflowTemplateSpecArgumentsArtifactsOssAccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsOss#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsOss#endpoint
   */
  readonly endpoint: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsOss#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsOss#secretKeySecret
   */
  readonly secretKeySecret: ClusterWorkflowTemplateSpecArgumentsArtifactsOssSecretKeySecret;

}

/**
 * RawArtifact allows raw string content to be placed as an artifact in a container
 *
 * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsRaw
 */
export interface ClusterWorkflowTemplateSpecArgumentsArtifactsRaw {
  /**
   * Data is the string contents of the artifact
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsRaw#data
   */
  readonly data: string;

}

/**
 * S3Artifact is the location of an S3 artifact
 *
 * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsS3
 */
export interface ClusterWorkflowTemplateSpecArgumentsArtifactsS3 {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsS3#accessKeySecret
   */
  readonly accessKeySecret: ClusterWorkflowTemplateSpecArgumentsArtifactsS3AccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsS3#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsS3#endpoint
   */
  readonly endpoint: string;

  /**
   * Insecure will connect to the service with TLS
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsS3#insecure
   */
  readonly insecure?: boolean;

  /**
   * Key is the key in the bucket where the artifact resides
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsS3#key
   */
  readonly key: string;

  /**
   * Region contains the optional bucket region
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsS3#region
   */
  readonly region?: string;

  /**
   * RoleARN is the Amazon Resource Name (ARN) of the role to assume.
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsS3#roleARN
   */
  readonly roleARN?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsS3#secretKeySecret
   */
  readonly secretKeySecret: ClusterWorkflowTemplateSpecArgumentsArtifactsS3SecretKeySecret;

  /**
   * UseSDKCreds tells the driver to figure out credentials based on sdk defaults.
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsS3#useSDKCreds
   */
  readonly useSDKCreds?: boolean;

}

/**
 * ValueFrom describes a location in which to obtain the value to a parameter
 *
 * @schema ClusterWorkflowTemplateSpecArgumentsParametersValueFrom
 */
export interface ClusterWorkflowTemplateSpecArgumentsParametersValueFrom {
  /**
   * @schema ClusterWorkflowTemplateSpecArgumentsParametersValueFrom#default
   */
  readonly default?: string;

  /**
   * JQFilter expression against the resource object in resource templates
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsParametersValueFrom#jqFilter
   */
  readonly jqFilter?: string;

  /**
   * JSONPath of a resource to retrieve an output parameter value from in resource templates
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsParametersValueFrom#jsonPath
   */
  readonly jsonPath?: string;

  /**
   * Parameter reference to a step or dag task in which to retrieve an output parameter value from (e.g. '{{steps.mystep.outputs.myparam}}')
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsParametersValueFrom#parameter
   */
  readonly parameter?: string;

  /**
   * Path in the container to retrieve an output parameter value from in container templates
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsParametersValueFrom#path
   */
  readonly path?: string;

}

/**
 * Counter is a Counter prometheus metric
 *
 * @schema ClusterWorkflowTemplateSpecMetricsPrometheusCounter
 */
export interface ClusterWorkflowTemplateSpecMetricsPrometheusCounter {
  /**
   * Value is the value of the metric
   *
   * @schema ClusterWorkflowTemplateSpecMetricsPrometheusCounter#value
   */
  readonly value: string;

}

/**
 * Gauge is a Gauge prometheus metric
 *
 * @schema ClusterWorkflowTemplateSpecMetricsPrometheusGauge
 */
export interface ClusterWorkflowTemplateSpecMetricsPrometheusGauge {
  /**
   * Realtime emits this metric in real time if applicable
   *
   * @schema ClusterWorkflowTemplateSpecMetricsPrometheusGauge#realtime
   */
  readonly realtime: boolean;

  /**
   * Value is the value of the metric
   *
   * @schema ClusterWorkflowTemplateSpecMetricsPrometheusGauge#value
   */
  readonly value: string;

}

/**
 * Histogram is a Histogram prometheus metric
 *
 * @schema ClusterWorkflowTemplateSpecMetricsPrometheusHistogram
 */
export interface ClusterWorkflowTemplateSpecMetricsPrometheusHistogram {
  /**
   * Buckets is a list of bucket divisors for the histogram
   *
   * @schema ClusterWorkflowTemplateSpecMetricsPrometheusHistogram#buckets
   */
  readonly buckets: number[];

  /**
   * Value is the value of the metric
   *
   * @schema ClusterWorkflowTemplateSpecMetricsPrometheusHistogram#value
   */
  readonly value: string;

}

/**
 * MetricLabel is a single label for a prometheus metric
 *
 * @schema ClusterWorkflowTemplateSpecMetricsPrometheusLabels
 */
export interface ClusterWorkflowTemplateSpecMetricsPrometheusLabels {
  /**
   * @schema ClusterWorkflowTemplateSpecMetricsPrometheusLabels#key
   */
  readonly key: string;

  /**
   * @schema ClusterWorkflowTemplateSpecMetricsPrometheusLabels#value
   */
  readonly value: string;

}

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema ClusterWorkflowTemplateSpecPodDisruptionBudgetSelectorMatchExpressions
 */
export interface ClusterWorkflowTemplateSpecPodDisruptionBudgetSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema ClusterWorkflowTemplateSpecPodDisruptionBudgetSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema ClusterWorkflowTemplateSpecPodDisruptionBudgetSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   *
   * @schema ClusterWorkflowTemplateSpecPodDisruptionBudgetSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Node affinity is a group of node affinity scheduling rules.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinity
 */
export interface ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinity {
  /**
   * The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution;

}

/**
 * Pod affinity is a group of inter pod affinity scheduling rules.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinity
 */
export interface ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinity {
  /**
   * The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution[];

}

/**
 * Pod anti affinity is a group of inter pod anti affinity scheduling rules.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinity
 */
export interface ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinity {
  /**
   * The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution[];

}

/**
 * ArtifactoryArtifact is the location of an artifactory artifact
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationArtifactory
 */
export interface ClusterWorkflowTemplateSpecTemplatesArchiveLocationArtifactory {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationArtifactory#passwordSecret
   */
  readonly passwordSecret?: ClusterWorkflowTemplateSpecTemplatesArchiveLocationArtifactoryPasswordSecret;

  /**
   * URL of the artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationArtifactory#url
   */
  readonly url: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationArtifactory#usernameSecret
   */
  readonly usernameSecret?: ClusterWorkflowTemplateSpecTemplatesArchiveLocationArtifactoryUsernameSecret;

}

/**
 * GCSArtifact is the location of a GCS artifact
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationGcs
 */
export interface ClusterWorkflowTemplateSpecTemplatesArchiveLocationGcs {
  /**
   * Bucket is the name of the bucket
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationGcs#bucket
   */
  readonly bucket: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationGcs#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationGcs#serviceAccountKeySecret
   */
  readonly serviceAccountKeySecret?: ClusterWorkflowTemplateSpecTemplatesArchiveLocationGcsServiceAccountKeySecret;

}

/**
 * GitArtifact is the location of an git artifact
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationGit
 */
export interface ClusterWorkflowTemplateSpecTemplatesArchiveLocationGit {
  /**
   * Depth specifies clones/fetches should be shallow and include the given number of commits from the branch tip
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationGit#depth
   */
  readonly depth?: number;

  /**
   * Fetch specifies a number of refs that should be fetched before checkout
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationGit#fetch
   */
  readonly fetch?: string[];

  /**
   * InsecureIgnoreHostKey disables SSH strict host key checking during git clone
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationGit#insecureIgnoreHostKey
   */
  readonly insecureIgnoreHostKey?: boolean;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationGit#passwordSecret
   */
  readonly passwordSecret?: ClusterWorkflowTemplateSpecTemplatesArchiveLocationGitPasswordSecret;

  /**
   * Repo is the git repository
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationGit#repo
   */
  readonly repo: string;

  /**
   * Revision is the git commit, tag, branch to checkout
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationGit#revision
   */
  readonly revision?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationGit#sshPrivateKeySecret
   */
  readonly sshPrivateKeySecret?: ClusterWorkflowTemplateSpecTemplatesArchiveLocationGitSshPrivateKeySecret;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationGit#usernameSecret
   */
  readonly usernameSecret?: ClusterWorkflowTemplateSpecTemplatesArchiveLocationGitUsernameSecret;

}

/**
 * HDFSArtifact is the location of an HDFS artifact
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationHdfs
 */
export interface ClusterWorkflowTemplateSpecTemplatesArchiveLocationHdfs {
  /**
   * Addresses is accessible addresses of HDFS name nodes
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationHdfs#addresses
   */
  readonly addresses: string[];

  /**
   * Force copies a file forcibly even if it exists (default: false)
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationHdfs#force
   */
  readonly force?: boolean;

  /**
   * HDFSUser is the user to access HDFS file system. It is ignored if either ccache or keytab is used.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationHdfs#hdfsUser
   */
  readonly hdfsUser?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationHdfs#krbCCacheSecret
   */
  readonly krbCCacheSecret?: ClusterWorkflowTemplateSpecTemplatesArchiveLocationHdfsKrbCCacheSecret;

  /**
   * Selects a key from a ConfigMap.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationHdfs#krbConfigConfigMap
   */
  readonly krbConfigConfigMap?: ClusterWorkflowTemplateSpecTemplatesArchiveLocationHdfsKrbConfigConfigMap;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationHdfs#krbKeytabSecret
   */
  readonly krbKeytabSecret?: ClusterWorkflowTemplateSpecTemplatesArchiveLocationHdfsKrbKeytabSecret;

  /**
   * KrbRealm is the Kerberos realm used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationHdfs#krbRealm
   */
  readonly krbRealm?: string;

  /**
   * KrbServicePrincipalName is the principal name of Kerberos service It must be set if either ccache or keytab is used.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationHdfs#krbServicePrincipalName
   */
  readonly krbServicePrincipalName?: string;

  /**
   * KrbUsername is the Kerberos username used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationHdfs#krbUsername
   */
  readonly krbUsername?: string;

  /**
   * Path is a file path in HDFS
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationHdfs#path
   */
  readonly path: string;

}

/**
 * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationHttp
 */
export interface ClusterWorkflowTemplateSpecTemplatesArchiveLocationHttp {
  /**
   * URL of the artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationHttp#url
   */
  readonly url: string;

}

/**
 * OSSArtifact is the location of an Alibaba Cloud OSS artifact
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationOss
 */
export interface ClusterWorkflowTemplateSpecTemplatesArchiveLocationOss {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationOss#accessKeySecret
   */
  readonly accessKeySecret: ClusterWorkflowTemplateSpecTemplatesArchiveLocationOssAccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationOss#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationOss#endpoint
   */
  readonly endpoint: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationOss#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationOss#secretKeySecret
   */
  readonly secretKeySecret: ClusterWorkflowTemplateSpecTemplatesArchiveLocationOssSecretKeySecret;

}

/**
 * RawArtifact allows raw string content to be placed as an artifact in a container
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationRaw
 */
export interface ClusterWorkflowTemplateSpecTemplatesArchiveLocationRaw {
  /**
   * Data is the string contents of the artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationRaw#data
   */
  readonly data: string;

}

/**
 * S3Artifact is the location of an S3 artifact
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationS3
 */
export interface ClusterWorkflowTemplateSpecTemplatesArchiveLocationS3 {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationS3#accessKeySecret
   */
  readonly accessKeySecret: ClusterWorkflowTemplateSpecTemplatesArchiveLocationS3AccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationS3#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationS3#endpoint
   */
  readonly endpoint: string;

  /**
   * Insecure will connect to the service with TLS
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationS3#insecure
   */
  readonly insecure?: boolean;

  /**
   * Key is the key in the bucket where the artifact resides
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationS3#key
   */
  readonly key: string;

  /**
   * Region contains the optional bucket region
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationS3#region
   */
  readonly region?: string;

  /**
   * RoleARN is the Amazon Resource Name (ARN) of the role to assume.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationS3#roleARN
   */
  readonly roleARN?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationS3#secretKeySecret
   */
  readonly secretKeySecret: ClusterWorkflowTemplateSpecTemplatesArchiveLocationS3SecretKeySecret;

  /**
   * UseSDKCreds tells the driver to figure out credentials based on sdk defaults.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationS3#useSDKCreds
   */
  readonly useSDKCreds?: boolean;

}

/**
 * Artifact indicates an artifact to place at a specified path
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifacts
 */
export interface ClusterWorkflowTemplateSpecTemplatesArgumentsArtifacts {
  /**
   * ArchiveStrategy describes how to archive files/directory when saving artifacts
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifacts#archive
   */
  readonly archive?: ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsArchive;

  /**
   * ArchiveLogs indicates if the container logs should be archived
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifacts#archiveLogs
   */
  readonly archiveLogs?: boolean;

  /**
   * ArtifactoryArtifact is the location of an artifactory artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifacts#artifactory
   */
  readonly artifactory?: ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsArtifactory;

  /**
   * From allows an artifact to reference an artifact from a previous step
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifacts#from
   */
  readonly from?: string;

  /**
   * GCSArtifact is the location of a GCS artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifacts#gcs
   */
  readonly gcs?: ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsGcs;

  /**
   * GitArtifact is the location of an git artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifacts#git
   */
  readonly git?: ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsGit;

  /**
   * GlobalName exports an output artifact to the global scope, making it available as '{{io.argoproj.workflow.v1alpha1.outputs.artifacts.XXXX}} and in workflow.status.outputs.artifacts
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifacts#globalName
   */
  readonly globalName?: string;

  /**
   * HDFSArtifact is the location of an HDFS artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifacts#hdfs
   */
  readonly hdfs?: ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsHdfs;

  /**
   * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifacts#http
   */
  readonly http?: ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsHttp;

  /**
   * mode bits to use on this file, must be a value between 0 and 0777 set when loading input artifacts.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifacts#mode
   */
  readonly mode?: number;

  /**
   * name of the artifact. must be unique within a template's inputs/outputs.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifacts#name
   */
  readonly name: string;

  /**
   * Make Artifacts optional, if Artifacts doesn't generate or exist
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifacts#optional
   */
  readonly optional?: boolean;

  /**
   * OSSArtifact is the location of an Alibaba Cloud OSS artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifacts#oss
   */
  readonly oss?: ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsOss;

  /**
   * Path is the container path to the artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifacts#path
   */
  readonly path?: string;

  /**
   * RawArtifact allows raw string content to be placed as an artifact in a container
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifacts#raw
   */
  readonly raw?: ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsRaw;

  /**
   * S3Artifact is the location of an S3 artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifacts#s3
   */
  readonly s3?: ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsS3;

}

/**
 * Parameter indicate a passed string parameter to a service template with an optional default value
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsParameters
 */
export interface ClusterWorkflowTemplateSpecTemplatesArgumentsParameters {
  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsParameters#default
   */
  readonly default?: string;

  /**
   * GlobalName exports an output parameter to the global scope, making it available as '{{io.argoproj.workflow.v1alpha1.outputs.parameters.XXXX}} and in workflow.status.outputs.parameters
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsParameters#globalName
   */
  readonly globalName?: string;

  /**
   * Name is the parameter name
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsParameters#name
   */
  readonly name: string;

  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsParameters#value
   */
  readonly value?: string;

  /**
   * ValueFrom describes a location in which to obtain the value to a parameter
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsParameters#valueFrom
   */
  readonly valueFrom?: ClusterWorkflowTemplateSpecTemplatesArgumentsParametersValueFrom;

}

/**
 * EnvVar represents an environment variable present in a Container.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesContainerEnv
 */
export interface ClusterWorkflowTemplateSpecTemplatesContainerEnv {
  /**
   * Name of the environment variable. Must be a C_IDENTIFIER.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerEnv#name
   */
  readonly name: string;

  /**
   * Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
   *
   * @default .
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerEnv#value
   */
  readonly value?: string;

  /**
   * EnvVarSource represents a source for the value of an EnvVar.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerEnv#valueFrom
   */
  readonly valueFrom?: ClusterWorkflowTemplateSpecTemplatesContainerEnvValueFrom;

}

/**
 * EnvFromSource represents the source of a set of ConfigMaps
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesContainerEnvFrom
 */
export interface ClusterWorkflowTemplateSpecTemplatesContainerEnvFrom {
  /**
   * ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.

The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerEnvFrom#configMapRef
   */
  readonly configMapRef?: ClusterWorkflowTemplateSpecTemplatesContainerEnvFromConfigMapRef;

  /**
   * An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerEnvFrom#prefix
   */
  readonly prefix?: string;

  /**
   * SecretEnvSource selects a Secret to populate the environment variables with.

The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerEnvFrom#secretRef
   */
  readonly secretRef?: ClusterWorkflowTemplateSpecTemplatesContainerEnvFromSecretRef;

}

/**
 * Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesContainerLifecycle
 */
export interface ClusterWorkflowTemplateSpecTemplatesContainerLifecycle {
  /**
   * Handler defines a specific action that should be taken
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerLifecycle#postStart
   */
  readonly postStart?: ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePostStart;

  /**
   * Handler defines a specific action that should be taken
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerLifecycle#preStop
   */
  readonly preStop?: ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePreStop;

}

/**
 * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesContainerLivenessProbe
 */
export interface ClusterWorkflowTemplateSpecTemplatesContainerLivenessProbe {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerLivenessProbe#exec
   */
  readonly exec?: ClusterWorkflowTemplateSpecTemplatesContainerLivenessProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerLivenessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerLivenessProbe#httpGet
   */
  readonly httpGet?: ClusterWorkflowTemplateSpecTemplatesContainerLivenessProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerLivenessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerLivenessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness. Minimum value is 1.
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerLivenessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerLivenessProbe#tcpSocket
   */
  readonly tcpSocket?: ClusterWorkflowTemplateSpecTemplatesContainerLivenessProbeTcpSocket;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerLivenessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * ContainerPort represents a network port in a single container.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesContainerPorts
 */
export interface ClusterWorkflowTemplateSpecTemplatesContainerPorts {
  /**
   * Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerPorts#containerPort
   */
  readonly containerPort: number;

  /**
   * What host IP to bind the external port to.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerPorts#hostIP
   */
  readonly hostIP?: string;

  /**
   * Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerPorts#hostPort
   */
  readonly hostPort?: number;

  /**
   * If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerPorts#name
   */
  readonly name?: string;

  /**
   * Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
   *
   * @default TCP".
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerPorts#protocol
   */
  readonly protocol?: string;

}

/**
 * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesContainerReadinessProbe
 */
export interface ClusterWorkflowTemplateSpecTemplatesContainerReadinessProbe {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerReadinessProbe#exec
   */
  readonly exec?: ClusterWorkflowTemplateSpecTemplatesContainerReadinessProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerReadinessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerReadinessProbe#httpGet
   */
  readonly httpGet?: ClusterWorkflowTemplateSpecTemplatesContainerReadinessProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerReadinessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerReadinessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness. Minimum value is 1.
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerReadinessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerReadinessProbe#tcpSocket
   */
  readonly tcpSocket?: ClusterWorkflowTemplateSpecTemplatesContainerReadinessProbeTcpSocket;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerReadinessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * ResourceRequirements describes the compute resource requirements.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesContainerResources
 */
export interface ClusterWorkflowTemplateSpecTemplatesContainerResources {
  /**
   * Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerResources#limits
   */
  readonly limits?: { [key: string]: string };

  /**
   * Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerResources#requests
   */
  readonly requests?: { [key: string]: string };

}

/**
 * SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesContainerSecurityContext
 */
export interface ClusterWorkflowTemplateSpecTemplatesContainerSecurityContext {
  /**
   * AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerSecurityContext#allowPrivilegeEscalation
   */
  readonly allowPrivilegeEscalation?: boolean;

  /**
   * Adds and removes POSIX capabilities from running containers.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerSecurityContext#capabilities
   */
  readonly capabilities?: ClusterWorkflowTemplateSpecTemplatesContainerSecurityContextCapabilities;

  /**
   * Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.
   *
   * @default false.
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerSecurityContext#privileged
   */
  readonly privileged?: boolean;

  /**
   * procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerSecurityContext#procMount
   */
  readonly procMount?: string;

  /**
   * Whether this container has a read-only root filesystem. Default is false.
   *
   * @default false.
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerSecurityContext#readOnlyRootFilesystem
   */
  readonly readOnlyRootFilesystem?: boolean;

  /**
   * The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @default user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * SELinuxOptions are the labels to be applied to the container
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: ClusterWorkflowTemplateSpecTemplatesContainerSecurityContextSeLinuxOptions;

  /**
   * WindowsSecurityContextOptions contain Windows-specific options and credentials.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerSecurityContext#windowsOptions
   */
  readonly windowsOptions?: ClusterWorkflowTemplateSpecTemplatesContainerSecurityContextWindowsOptions;

}

/**
 * volumeDevice describes a mapping of a raw block device within a container.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesContainerVolumeDevices
 */
export interface ClusterWorkflowTemplateSpecTemplatesContainerVolumeDevices {
  /**
   * devicePath is the path inside of the container that the device will be mapped to.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerVolumeDevices#devicePath
   */
  readonly devicePath: string;

  /**
   * name must match the name of a persistentVolumeClaim in the pod
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerVolumeDevices#name
   */
  readonly name: string;

}

/**
 * VolumeMount describes a mounting of a Volume within a container.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesContainerVolumeMounts
 */
export interface ClusterWorkflowTemplateSpecTemplatesContainerVolumeMounts {
  /**
   * Path within the container at which the volume should be mounted.  Must not contain ':'.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerVolumeMounts#mountPath
   */
  readonly mountPath: string;

  /**
   * mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerVolumeMounts#mountPropagation
   */
  readonly mountPropagation?: string;

  /**
   * This must match the Name of a Volume.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerVolumeMounts#name
   */
  readonly name: string;

  /**
   * Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
   *
   * @default false.
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerVolumeMounts#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
   *
   * @default volume's root).
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerVolumeMounts#subPath
   */
  readonly subPath?: string;

  /**
   * Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive. This field is beta in 1.15.
   *
   * @default volume's root). SubPathExpr and SubPath are mutually exclusive. This field is beta in 1.15.
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerVolumeMounts#subPathExpr
   */
  readonly subPathExpr?: string;

}

/**
 * DAGTask represents a node in the graph during DAG execution
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesDagTasks
 */
export interface ClusterWorkflowTemplateSpecTemplatesDagTasks {
  /**
   * Arguments to a template
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasks#arguments
   */
  readonly arguments?: ClusterWorkflowTemplateSpecTemplatesDagTasksArguments;

  /**
   * ContinueOn defines if a workflow should continue even if a task or step fails/errors. It can be specified if the workflow should continue when the pod errors, fails or both.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasks#continueOn
   */
  readonly continueOn?: ClusterWorkflowTemplateSpecTemplatesDagTasksContinueOn;

  /**
   * Dependencies are name of other targets which this depends on
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasks#dependencies
   */
  readonly dependencies?: string[];

  /**
   * Depends are name of other targets which this depends on
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasks#depends
   */
  readonly depends?: string;

  /**
   * Name is the name of the target
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasks#name
   */
  readonly name: string;

  /**
   * OnExit is a template reference which is invoked at the end of the template, irrespective of the success, failure, or error of the primary template.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasks#onExit
   */
  readonly onExit?: string;

  /**
   * Name of template to execute
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasks#template
   */
  readonly template: string;

  /**
   * TemplateRef is a reference of template resource.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasks#templateRef
   */
  readonly templateRef?: ClusterWorkflowTemplateSpecTemplatesDagTasksTemplateRef;

  /**
   * When is an expression in which the task should conditionally execute
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasks#when
   */
  readonly when?: string;

  /**
   * WithItems expands a task into multiple parallel tasks from the items in the list
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasks#withItems
   */
  readonly withItems?: string[];

  /**
   * WithParam expands a task into multiple parallel tasks from the value in the parameter, which is expected to be a JSON list.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasks#withParam
   */
  readonly withParam?: string;

  /**
   * Sequence expands a workflow step into numeric range
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasks#withSequence
   */
  readonly withSequence?: ClusterWorkflowTemplateSpecTemplatesDagTasksWithSequence;

}

/**
 * EnvVar represents an environment variable present in a Container.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersEnv
 */
export interface ClusterWorkflowTemplateSpecTemplatesInitContainersEnv {
  /**
   * Name of the environment variable. Must be a C_IDENTIFIER.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersEnv#name
   */
  readonly name: string;

  /**
   * Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
   *
   * @default .
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersEnv#value
   */
  readonly value?: string;

  /**
   * EnvVarSource represents a source for the value of an EnvVar.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersEnv#valueFrom
   */
  readonly valueFrom?: ClusterWorkflowTemplateSpecTemplatesInitContainersEnvValueFrom;

}

/**
 * EnvFromSource represents the source of a set of ConfigMaps
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersEnvFrom
 */
export interface ClusterWorkflowTemplateSpecTemplatesInitContainersEnvFrom {
  /**
   * ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.

The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersEnvFrom#configMapRef
   */
  readonly configMapRef?: ClusterWorkflowTemplateSpecTemplatesInitContainersEnvFromConfigMapRef;

  /**
   * An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersEnvFrom#prefix
   */
  readonly prefix?: string;

  /**
   * SecretEnvSource selects a Secret to populate the environment variables with.

The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersEnvFrom#secretRef
   */
  readonly secretRef?: ClusterWorkflowTemplateSpecTemplatesInitContainersEnvFromSecretRef;

}

/**
 * Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLifecycle
 */
export interface ClusterWorkflowTemplateSpecTemplatesInitContainersLifecycle {
  /**
   * Handler defines a specific action that should be taken
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLifecycle#postStart
   */
  readonly postStart?: ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStart;

  /**
   * Handler defines a specific action that should be taken
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLifecycle#preStop
   */
  readonly preStop?: ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStop;

}

/**
 * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLivenessProbe
 */
export interface ClusterWorkflowTemplateSpecTemplatesInitContainersLivenessProbe {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLivenessProbe#exec
   */
  readonly exec?: ClusterWorkflowTemplateSpecTemplatesInitContainersLivenessProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLivenessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLivenessProbe#httpGet
   */
  readonly httpGet?: ClusterWorkflowTemplateSpecTemplatesInitContainersLivenessProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLivenessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLivenessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness. Minimum value is 1.
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLivenessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLivenessProbe#tcpSocket
   */
  readonly tcpSocket?: ClusterWorkflowTemplateSpecTemplatesInitContainersLivenessProbeTcpSocket;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLivenessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * ContainerPort represents a network port in a single container.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersPorts
 */
export interface ClusterWorkflowTemplateSpecTemplatesInitContainersPorts {
  /**
   * Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersPorts#containerPort
   */
  readonly containerPort: number;

  /**
   * What host IP to bind the external port to.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersPorts#hostIP
   */
  readonly hostIP?: string;

  /**
   * Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersPorts#hostPort
   */
  readonly hostPort?: number;

  /**
   * If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersPorts#name
   */
  readonly name?: string;

  /**
   * Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
   *
   * @default TCP".
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersPorts#protocol
   */
  readonly protocol?: string;

}

/**
 * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersReadinessProbe
 */
export interface ClusterWorkflowTemplateSpecTemplatesInitContainersReadinessProbe {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersReadinessProbe#exec
   */
  readonly exec?: ClusterWorkflowTemplateSpecTemplatesInitContainersReadinessProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersReadinessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersReadinessProbe#httpGet
   */
  readonly httpGet?: ClusterWorkflowTemplateSpecTemplatesInitContainersReadinessProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersReadinessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersReadinessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness. Minimum value is 1.
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersReadinessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersReadinessProbe#tcpSocket
   */
  readonly tcpSocket?: ClusterWorkflowTemplateSpecTemplatesInitContainersReadinessProbeTcpSocket;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersReadinessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * ResourceRequirements describes the compute resource requirements.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersResources
 */
export interface ClusterWorkflowTemplateSpecTemplatesInitContainersResources {
  /**
   * Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersResources#limits
   */
  readonly limits?: { [key: string]: string };

  /**
   * Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersResources#requests
   */
  readonly requests?: { [key: string]: string };

}

/**
 * SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersSecurityContext
 */
export interface ClusterWorkflowTemplateSpecTemplatesInitContainersSecurityContext {
  /**
   * AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersSecurityContext#allowPrivilegeEscalation
   */
  readonly allowPrivilegeEscalation?: boolean;

  /**
   * Adds and removes POSIX capabilities from running containers.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersSecurityContext#capabilities
   */
  readonly capabilities?: ClusterWorkflowTemplateSpecTemplatesInitContainersSecurityContextCapabilities;

  /**
   * Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.
   *
   * @default false.
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersSecurityContext#privileged
   */
  readonly privileged?: boolean;

  /**
   * procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersSecurityContext#procMount
   */
  readonly procMount?: string;

  /**
   * Whether this container has a read-only root filesystem. Default is false.
   *
   * @default false.
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersSecurityContext#readOnlyRootFilesystem
   */
  readonly readOnlyRootFilesystem?: boolean;

  /**
   * The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @default user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * SELinuxOptions are the labels to be applied to the container
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: ClusterWorkflowTemplateSpecTemplatesInitContainersSecurityContextSeLinuxOptions;

  /**
   * WindowsSecurityContextOptions contain Windows-specific options and credentials.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersSecurityContext#windowsOptions
   */
  readonly windowsOptions?: ClusterWorkflowTemplateSpecTemplatesInitContainersSecurityContextWindowsOptions;

}

/**
 * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersStartupProbe
 */
export interface ClusterWorkflowTemplateSpecTemplatesInitContainersStartupProbe {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersStartupProbe#exec
   */
  readonly exec?: ClusterWorkflowTemplateSpecTemplatesInitContainersStartupProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersStartupProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersStartupProbe#httpGet
   */
  readonly httpGet?: ClusterWorkflowTemplateSpecTemplatesInitContainersStartupProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersStartupProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersStartupProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness. Minimum value is 1.
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersStartupProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersStartupProbe#tcpSocket
   */
  readonly tcpSocket?: ClusterWorkflowTemplateSpecTemplatesInitContainersStartupProbeTcpSocket;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersStartupProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * volumeDevice describes a mapping of a raw block device within a container.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersVolumeDevices
 */
export interface ClusterWorkflowTemplateSpecTemplatesInitContainersVolumeDevices {
  /**
   * devicePath is the path inside of the container that the device will be mapped to.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersVolumeDevices#devicePath
   */
  readonly devicePath: string;

  /**
   * name must match the name of a persistentVolumeClaim in the pod
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersVolumeDevices#name
   */
  readonly name: string;

}

/**
 * VolumeMount describes a mounting of a Volume within a container.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersVolumeMounts
 */
export interface ClusterWorkflowTemplateSpecTemplatesInitContainersVolumeMounts {
  /**
   * Path within the container at which the volume should be mounted.  Must not contain ':'.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersVolumeMounts#mountPath
   */
  readonly mountPath: string;

  /**
   * mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersVolumeMounts#mountPropagation
   */
  readonly mountPropagation?: string;

  /**
   * This must match the Name of a Volume.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersVolumeMounts#name
   */
  readonly name: string;

  /**
   * Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
   *
   * @default false.
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersVolumeMounts#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
   *
   * @default volume's root).
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersVolumeMounts#subPath
   */
  readonly subPath?: string;

  /**
   * Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive. This field is beta in 1.15.
   *
   * @default volume's root). SubPathExpr and SubPath are mutually exclusive. This field is beta in 1.15.
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersVolumeMounts#subPathExpr
   */
  readonly subPathExpr?: string;

}

/**
 * Artifact indicates an artifact to place at a specified path
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifacts
 */
export interface ClusterWorkflowTemplateSpecTemplatesInputsArtifacts {
  /**
   * ArchiveStrategy describes how to archive files/directory when saving artifacts
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifacts#archive
   */
  readonly archive?: ClusterWorkflowTemplateSpecTemplatesInputsArtifactsArchive;

  /**
   * ArchiveLogs indicates if the container logs should be archived
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifacts#archiveLogs
   */
  readonly archiveLogs?: boolean;

  /**
   * ArtifactoryArtifact is the location of an artifactory artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifacts#artifactory
   */
  readonly artifactory?: ClusterWorkflowTemplateSpecTemplatesInputsArtifactsArtifactory;

  /**
   * From allows an artifact to reference an artifact from a previous step
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifacts#from
   */
  readonly from?: string;

  /**
   * GCSArtifact is the location of a GCS artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifacts#gcs
   */
  readonly gcs?: ClusterWorkflowTemplateSpecTemplatesInputsArtifactsGcs;

  /**
   * GitArtifact is the location of an git artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifacts#git
   */
  readonly git?: ClusterWorkflowTemplateSpecTemplatesInputsArtifactsGit;

  /**
   * GlobalName exports an output artifact to the global scope, making it available as '{{io.argoproj.workflow.v1alpha1.outputs.artifacts.XXXX}} and in workflow.status.outputs.artifacts
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifacts#globalName
   */
  readonly globalName?: string;

  /**
   * HDFSArtifact is the location of an HDFS artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifacts#hdfs
   */
  readonly hdfs?: ClusterWorkflowTemplateSpecTemplatesInputsArtifactsHdfs;

  /**
   * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifacts#http
   */
  readonly http?: ClusterWorkflowTemplateSpecTemplatesInputsArtifactsHttp;

  /**
   * mode bits to use on this file, must be a value between 0 and 0777 set when loading input artifacts.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifacts#mode
   */
  readonly mode?: number;

  /**
   * name of the artifact. must be unique within a template's inputs/outputs.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifacts#name
   */
  readonly name: string;

  /**
   * Make Artifacts optional, if Artifacts doesn't generate or exist
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifacts#optional
   */
  readonly optional?: boolean;

  /**
   * OSSArtifact is the location of an Alibaba Cloud OSS artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifacts#oss
   */
  readonly oss?: ClusterWorkflowTemplateSpecTemplatesInputsArtifactsOss;

  /**
   * Path is the container path to the artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifacts#path
   */
  readonly path?: string;

  /**
   * RawArtifact allows raw string content to be placed as an artifact in a container
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifacts#raw
   */
  readonly raw?: ClusterWorkflowTemplateSpecTemplatesInputsArtifactsRaw;

  /**
   * S3Artifact is the location of an S3 artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifacts#s3
   */
  readonly s3?: ClusterWorkflowTemplateSpecTemplatesInputsArtifactsS3;

}

/**
 * Parameter indicate a passed string parameter to a service template with an optional default value
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInputsParameters
 */
export interface ClusterWorkflowTemplateSpecTemplatesInputsParameters {
  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsParameters#default
   */
  readonly default?: string;

  /**
   * GlobalName exports an output parameter to the global scope, making it available as '{{io.argoproj.workflow.v1alpha1.outputs.parameters.XXXX}} and in workflow.status.outputs.parameters
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsParameters#globalName
   */
  readonly globalName?: string;

  /**
   * Name is the parameter name
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsParameters#name
   */
  readonly name: string;

  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsParameters#value
   */
  readonly value?: string;

  /**
   * ValueFrom describes a location in which to obtain the value to a parameter
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsParameters#valueFrom
   */
  readonly valueFrom?: ClusterWorkflowTemplateSpecTemplatesInputsParametersValueFrom;

}

/**
 * Prometheus is a prometheus metric to be emitted
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesMetricsPrometheus
 */
export interface ClusterWorkflowTemplateSpecTemplatesMetricsPrometheus {
  /**
   * Counter is a Counter prometheus metric
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesMetricsPrometheus#counter
   */
  readonly counter?: ClusterWorkflowTemplateSpecTemplatesMetricsPrometheusCounter;

  /**
   * Gauge is a Gauge prometheus metric
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesMetricsPrometheus#gauge
   */
  readonly gauge?: ClusterWorkflowTemplateSpecTemplatesMetricsPrometheusGauge;

  /**
   * Help is a string that describes the metric
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesMetricsPrometheus#help
   */
  readonly help: string;

  /**
   * Histogram is a Histogram prometheus metric
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesMetricsPrometheus#histogram
   */
  readonly histogram?: ClusterWorkflowTemplateSpecTemplatesMetricsPrometheusHistogram;

  /**
   * Labels is a list of metric labels
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesMetricsPrometheus#labels
   */
  readonly labels?: ClusterWorkflowTemplateSpecTemplatesMetricsPrometheusLabels[];

  /**
   * Name is the name of the metric
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesMetricsPrometheus#name
   */
  readonly name: string;

  /**
   * When is a conditional statement that decides when to emit the metric
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesMetricsPrometheus#when
   */
  readonly when?: string;

}

/**
 * Artifact indicates an artifact to place at a specified path
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifacts
 */
export interface ClusterWorkflowTemplateSpecTemplatesOutputsArtifacts {
  /**
   * ArchiveStrategy describes how to archive files/directory when saving artifacts
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifacts#archive
   */
  readonly archive?: ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsArchive;

  /**
   * ArchiveLogs indicates if the container logs should be archived
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifacts#archiveLogs
   */
  readonly archiveLogs?: boolean;

  /**
   * ArtifactoryArtifact is the location of an artifactory artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifacts#artifactory
   */
  readonly artifactory?: ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsArtifactory;

  /**
   * From allows an artifact to reference an artifact from a previous step
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifacts#from
   */
  readonly from?: string;

  /**
   * GCSArtifact is the location of a GCS artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifacts#gcs
   */
  readonly gcs?: ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsGcs;

  /**
   * GitArtifact is the location of an git artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifacts#git
   */
  readonly git?: ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsGit;

  /**
   * GlobalName exports an output artifact to the global scope, making it available as '{{io.argoproj.workflow.v1alpha1.outputs.artifacts.XXXX}} and in workflow.status.outputs.artifacts
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifacts#globalName
   */
  readonly globalName?: string;

  /**
   * HDFSArtifact is the location of an HDFS artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifacts#hdfs
   */
  readonly hdfs?: ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsHdfs;

  /**
   * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifacts#http
   */
  readonly http?: ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsHttp;

  /**
   * mode bits to use on this file, must be a value between 0 and 0777 set when loading input artifacts.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifacts#mode
   */
  readonly mode?: number;

  /**
   * name of the artifact. must be unique within a template's inputs/outputs.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifacts#name
   */
  readonly name: string;

  /**
   * Make Artifacts optional, if Artifacts doesn't generate or exist
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifacts#optional
   */
  readonly optional?: boolean;

  /**
   * OSSArtifact is the location of an Alibaba Cloud OSS artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifacts#oss
   */
  readonly oss?: ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsOss;

  /**
   * Path is the container path to the artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifacts#path
   */
  readonly path?: string;

  /**
   * RawArtifact allows raw string content to be placed as an artifact in a container
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifacts#raw
   */
  readonly raw?: ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsRaw;

  /**
   * S3Artifact is the location of an S3 artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifacts#s3
   */
  readonly s3?: ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsS3;

}

/**
 * Parameter indicate a passed string parameter to a service template with an optional default value
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesOutputsParameters
 */
export interface ClusterWorkflowTemplateSpecTemplatesOutputsParameters {
  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsParameters#default
   */
  readonly default?: string;

  /**
   * GlobalName exports an output parameter to the global scope, making it available as '{{io.argoproj.workflow.v1alpha1.outputs.parameters.XXXX}} and in workflow.status.outputs.parameters
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsParameters#globalName
   */
  readonly globalName?: string;

  /**
   * Name is the parameter name
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsParameters#name
   */
  readonly name: string;

  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsParameters#value
   */
  readonly value?: string;

  /**
   * ValueFrom describes a location in which to obtain the value to a parameter
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsParameters#valueFrom
   */
  readonly valueFrom?: ClusterWorkflowTemplateSpecTemplatesOutputsParametersValueFrom;

}

/**
 * Backoff is a backoff strategy to use within retryStrategy
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesRetryStrategyBackoff
 */
export interface ClusterWorkflowTemplateSpecTemplatesRetryStrategyBackoff {
  /**
   * Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesRetryStrategyBackoff#duration
   */
  readonly duration?: string;

  /**
   * Factor is a factor to multiply the base duration after each failed retry
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesRetryStrategyBackoff#factor
   */
  readonly factor?: number;

  /**
   * MaxDuration is the maximum amount of time allowed for the backoff strategy
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesRetryStrategyBackoff#maxDuration
   */
  readonly maxDuration?: string;

}

/**
 * EnvVar represents an environment variable present in a Container.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesScriptEnv
 */
export interface ClusterWorkflowTemplateSpecTemplatesScriptEnv {
  /**
   * Name of the environment variable. Must be a C_IDENTIFIER.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptEnv#name
   */
  readonly name: string;

  /**
   * Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
   *
   * @default .
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptEnv#value
   */
  readonly value?: string;

  /**
   * EnvVarSource represents a source for the value of an EnvVar.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptEnv#valueFrom
   */
  readonly valueFrom?: ClusterWorkflowTemplateSpecTemplatesScriptEnvValueFrom;

}

/**
 * EnvFromSource represents the source of a set of ConfigMaps
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesScriptEnvFrom
 */
export interface ClusterWorkflowTemplateSpecTemplatesScriptEnvFrom {
  /**
   * ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.

The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptEnvFrom#configMapRef
   */
  readonly configMapRef?: ClusterWorkflowTemplateSpecTemplatesScriptEnvFromConfigMapRef;

  /**
   * An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptEnvFrom#prefix
   */
  readonly prefix?: string;

  /**
   * SecretEnvSource selects a Secret to populate the environment variables with.

The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptEnvFrom#secretRef
   */
  readonly secretRef?: ClusterWorkflowTemplateSpecTemplatesScriptEnvFromSecretRef;

}

/**
 * Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesScriptLifecycle
 */
export interface ClusterWorkflowTemplateSpecTemplatesScriptLifecycle {
  /**
   * Handler defines a specific action that should be taken
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptLifecycle#postStart
   */
  readonly postStart?: ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePostStart;

  /**
   * Handler defines a specific action that should be taken
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptLifecycle#preStop
   */
  readonly preStop?: ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePreStop;

}

/**
 * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesScriptLivenessProbe
 */
export interface ClusterWorkflowTemplateSpecTemplatesScriptLivenessProbe {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptLivenessProbe#exec
   */
  readonly exec?: ClusterWorkflowTemplateSpecTemplatesScriptLivenessProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptLivenessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptLivenessProbe#httpGet
   */
  readonly httpGet?: ClusterWorkflowTemplateSpecTemplatesScriptLivenessProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptLivenessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptLivenessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness. Minimum value is 1.
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptLivenessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptLivenessProbe#tcpSocket
   */
  readonly tcpSocket?: ClusterWorkflowTemplateSpecTemplatesScriptLivenessProbeTcpSocket;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptLivenessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * ContainerPort represents a network port in a single container.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesScriptPorts
 */
export interface ClusterWorkflowTemplateSpecTemplatesScriptPorts {
  /**
   * Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptPorts#containerPort
   */
  readonly containerPort: number;

  /**
   * What host IP to bind the external port to.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptPorts#hostIP
   */
  readonly hostIP?: string;

  /**
   * Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptPorts#hostPort
   */
  readonly hostPort?: number;

  /**
   * If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptPorts#name
   */
  readonly name?: string;

  /**
   * Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
   *
   * @default TCP".
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptPorts#protocol
   */
  readonly protocol?: string;

}

/**
 * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesScriptReadinessProbe
 */
export interface ClusterWorkflowTemplateSpecTemplatesScriptReadinessProbe {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptReadinessProbe#exec
   */
  readonly exec?: ClusterWorkflowTemplateSpecTemplatesScriptReadinessProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptReadinessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptReadinessProbe#httpGet
   */
  readonly httpGet?: ClusterWorkflowTemplateSpecTemplatesScriptReadinessProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptReadinessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptReadinessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness. Minimum value is 1.
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptReadinessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptReadinessProbe#tcpSocket
   */
  readonly tcpSocket?: ClusterWorkflowTemplateSpecTemplatesScriptReadinessProbeTcpSocket;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptReadinessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * ResourceRequirements describes the compute resource requirements.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesScriptResources
 */
export interface ClusterWorkflowTemplateSpecTemplatesScriptResources {
  /**
   * Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptResources#limits
   */
  readonly limits?: { [key: string]: string };

  /**
   * Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptResources#requests
   */
  readonly requests?: { [key: string]: string };

}

/**
 * SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesScriptSecurityContext
 */
export interface ClusterWorkflowTemplateSpecTemplatesScriptSecurityContext {
  /**
   * AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptSecurityContext#allowPrivilegeEscalation
   */
  readonly allowPrivilegeEscalation?: boolean;

  /**
   * Adds and removes POSIX capabilities from running containers.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptSecurityContext#capabilities
   */
  readonly capabilities?: ClusterWorkflowTemplateSpecTemplatesScriptSecurityContextCapabilities;

  /**
   * Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.
   *
   * @default false.
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptSecurityContext#privileged
   */
  readonly privileged?: boolean;

  /**
   * procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptSecurityContext#procMount
   */
  readonly procMount?: string;

  /**
   * Whether this container has a read-only root filesystem. Default is false.
   *
   * @default false.
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptSecurityContext#readOnlyRootFilesystem
   */
  readonly readOnlyRootFilesystem?: boolean;

  /**
   * The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @default user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * SELinuxOptions are the labels to be applied to the container
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: ClusterWorkflowTemplateSpecTemplatesScriptSecurityContextSeLinuxOptions;

  /**
   * WindowsSecurityContextOptions contain Windows-specific options and credentials.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptSecurityContext#windowsOptions
   */
  readonly windowsOptions?: ClusterWorkflowTemplateSpecTemplatesScriptSecurityContextWindowsOptions;

}

/**
 * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesScriptStartupProbe
 */
export interface ClusterWorkflowTemplateSpecTemplatesScriptStartupProbe {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptStartupProbe#exec
   */
  readonly exec?: ClusterWorkflowTemplateSpecTemplatesScriptStartupProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptStartupProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptStartupProbe#httpGet
   */
  readonly httpGet?: ClusterWorkflowTemplateSpecTemplatesScriptStartupProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptStartupProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptStartupProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness. Minimum value is 1.
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptStartupProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptStartupProbe#tcpSocket
   */
  readonly tcpSocket?: ClusterWorkflowTemplateSpecTemplatesScriptStartupProbeTcpSocket;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptStartupProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * volumeDevice describes a mapping of a raw block device within a container.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesScriptVolumeDevices
 */
export interface ClusterWorkflowTemplateSpecTemplatesScriptVolumeDevices {
  /**
   * devicePath is the path inside of the container that the device will be mapped to.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptVolumeDevices#devicePath
   */
  readonly devicePath: string;

  /**
   * name must match the name of a persistentVolumeClaim in the pod
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptVolumeDevices#name
   */
  readonly name: string;

}

/**
 * VolumeMount describes a mounting of a Volume within a container.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesScriptVolumeMounts
 */
export interface ClusterWorkflowTemplateSpecTemplatesScriptVolumeMounts {
  /**
   * Path within the container at which the volume should be mounted.  Must not contain ':'.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptVolumeMounts#mountPath
   */
  readonly mountPath: string;

  /**
   * mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptVolumeMounts#mountPropagation
   */
  readonly mountPropagation?: string;

  /**
   * This must match the Name of a Volume.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptVolumeMounts#name
   */
  readonly name: string;

  /**
   * Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
   *
   * @default false.
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptVolumeMounts#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
   *
   * @default volume's root).
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptVolumeMounts#subPath
   */
  readonly subPath?: string;

  /**
   * Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive. This field is beta in 1.15.
   *
   * @default volume's root). SubPathExpr and SubPath are mutually exclusive. This field is beta in 1.15.
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptVolumeMounts#subPathExpr
   */
  readonly subPathExpr?: string;

}

/**
 * SELinuxOptions are the labels to be applied to the container
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesSecurityContextSeLinuxOptions
 */
export interface ClusterWorkflowTemplateSpecTemplatesSecurityContextSeLinuxOptions {
  /**
   * Level is SELinux level label that applies to the container.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * Role is a SELinux role label that applies to the container.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * Type is a SELinux type label that applies to the container.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * User is a SELinux user label that applies to the container.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * Sysctl defines a kernel parameter to be set
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesSecurityContextSysctls
 */
export interface ClusterWorkflowTemplateSpecTemplatesSecurityContextSysctls {
  /**
   * Name of a property to set
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSecurityContextSysctls#name
   */
  readonly name: string;

  /**
   * Value of a property to set
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSecurityContextSysctls#value
   */
  readonly value: string;

}

/**
 * WindowsSecurityContextOptions contain Windows-specific options and credentials.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesSecurityContextWindowsOptions
 */
export interface ClusterWorkflowTemplateSpecTemplatesSecurityContextWindowsOptions {
  /**
   * GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * GMSACredentialSpecName is the name of the GMSA credential spec to use. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

}

/**
 * EnvVar represents an environment variable present in a Container.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsEnv
 */
export interface ClusterWorkflowTemplateSpecTemplatesSidecarsEnv {
  /**
   * Name of the environment variable. Must be a C_IDENTIFIER.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsEnv#name
   */
  readonly name: string;

  /**
   * Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
   *
   * @default .
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsEnv#value
   */
  readonly value?: string;

  /**
   * EnvVarSource represents a source for the value of an EnvVar.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsEnv#valueFrom
   */
  readonly valueFrom?: ClusterWorkflowTemplateSpecTemplatesSidecarsEnvValueFrom;

}

/**
 * EnvFromSource represents the source of a set of ConfigMaps
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsEnvFrom
 */
export interface ClusterWorkflowTemplateSpecTemplatesSidecarsEnvFrom {
  /**
   * ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.

The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsEnvFrom#configMapRef
   */
  readonly configMapRef?: ClusterWorkflowTemplateSpecTemplatesSidecarsEnvFromConfigMapRef;

  /**
   * An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsEnvFrom#prefix
   */
  readonly prefix?: string;

  /**
   * SecretEnvSource selects a Secret to populate the environment variables with.

The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsEnvFrom#secretRef
   */
  readonly secretRef?: ClusterWorkflowTemplateSpecTemplatesSidecarsEnvFromSecretRef;

}

/**
 * Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLifecycle
 */
export interface ClusterWorkflowTemplateSpecTemplatesSidecarsLifecycle {
  /**
   * Handler defines a specific action that should be taken
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLifecycle#postStart
   */
  readonly postStart?: ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStart;

  /**
   * Handler defines a specific action that should be taken
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLifecycle#preStop
   */
  readonly preStop?: ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStop;

}

/**
 * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLivenessProbe
 */
export interface ClusterWorkflowTemplateSpecTemplatesSidecarsLivenessProbe {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLivenessProbe#exec
   */
  readonly exec?: ClusterWorkflowTemplateSpecTemplatesSidecarsLivenessProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLivenessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLivenessProbe#httpGet
   */
  readonly httpGet?: ClusterWorkflowTemplateSpecTemplatesSidecarsLivenessProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLivenessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLivenessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness. Minimum value is 1.
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLivenessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLivenessProbe#tcpSocket
   */
  readonly tcpSocket?: ClusterWorkflowTemplateSpecTemplatesSidecarsLivenessProbeTcpSocket;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLivenessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * ContainerPort represents a network port in a single container.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsPorts
 */
export interface ClusterWorkflowTemplateSpecTemplatesSidecarsPorts {
  /**
   * Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsPorts#containerPort
   */
  readonly containerPort: number;

  /**
   * What host IP to bind the external port to.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsPorts#hostIP
   */
  readonly hostIP?: string;

  /**
   * Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsPorts#hostPort
   */
  readonly hostPort?: number;

  /**
   * If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsPorts#name
   */
  readonly name?: string;

  /**
   * Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
   *
   * @default TCP".
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsPorts#protocol
   */
  readonly protocol?: string;

}

/**
 * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsReadinessProbe
 */
export interface ClusterWorkflowTemplateSpecTemplatesSidecarsReadinessProbe {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsReadinessProbe#exec
   */
  readonly exec?: ClusterWorkflowTemplateSpecTemplatesSidecarsReadinessProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsReadinessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsReadinessProbe#httpGet
   */
  readonly httpGet?: ClusterWorkflowTemplateSpecTemplatesSidecarsReadinessProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsReadinessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsReadinessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness. Minimum value is 1.
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsReadinessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsReadinessProbe#tcpSocket
   */
  readonly tcpSocket?: ClusterWorkflowTemplateSpecTemplatesSidecarsReadinessProbeTcpSocket;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsReadinessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * ResourceRequirements describes the compute resource requirements.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsResources
 */
export interface ClusterWorkflowTemplateSpecTemplatesSidecarsResources {
  /**
   * Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsResources#limits
   */
  readonly limits?: { [key: string]: string };

  /**
   * Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsResources#requests
   */
  readonly requests?: { [key: string]: string };

}

/**
 * SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsSecurityContext
 */
export interface ClusterWorkflowTemplateSpecTemplatesSidecarsSecurityContext {
  /**
   * AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsSecurityContext#allowPrivilegeEscalation
   */
  readonly allowPrivilegeEscalation?: boolean;

  /**
   * Adds and removes POSIX capabilities from running containers.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsSecurityContext#capabilities
   */
  readonly capabilities?: ClusterWorkflowTemplateSpecTemplatesSidecarsSecurityContextCapabilities;

  /**
   * Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.
   *
   * @default false.
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsSecurityContext#privileged
   */
  readonly privileged?: boolean;

  /**
   * procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsSecurityContext#procMount
   */
  readonly procMount?: string;

  /**
   * Whether this container has a read-only root filesystem. Default is false.
   *
   * @default false.
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsSecurityContext#readOnlyRootFilesystem
   */
  readonly readOnlyRootFilesystem?: boolean;

  /**
   * The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @default user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * SELinuxOptions are the labels to be applied to the container
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: ClusterWorkflowTemplateSpecTemplatesSidecarsSecurityContextSeLinuxOptions;

  /**
   * WindowsSecurityContextOptions contain Windows-specific options and credentials.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsSecurityContext#windowsOptions
   */
  readonly windowsOptions?: ClusterWorkflowTemplateSpecTemplatesSidecarsSecurityContextWindowsOptions;

}

/**
 * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsStartupProbe
 */
export interface ClusterWorkflowTemplateSpecTemplatesSidecarsStartupProbe {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsStartupProbe#exec
   */
  readonly exec?: ClusterWorkflowTemplateSpecTemplatesSidecarsStartupProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsStartupProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsStartupProbe#httpGet
   */
  readonly httpGet?: ClusterWorkflowTemplateSpecTemplatesSidecarsStartupProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsStartupProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsStartupProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness. Minimum value is 1.
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsStartupProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsStartupProbe#tcpSocket
   */
  readonly tcpSocket?: ClusterWorkflowTemplateSpecTemplatesSidecarsStartupProbeTcpSocket;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsStartupProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * volumeDevice describes a mapping of a raw block device within a container.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsVolumeDevices
 */
export interface ClusterWorkflowTemplateSpecTemplatesSidecarsVolumeDevices {
  /**
   * devicePath is the path inside of the container that the device will be mapped to.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsVolumeDevices#devicePath
   */
  readonly devicePath: string;

  /**
   * name must match the name of a persistentVolumeClaim in the pod
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsVolumeDevices#name
   */
  readonly name: string;

}

/**
 * VolumeMount describes a mounting of a Volume within a container.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsVolumeMounts
 */
export interface ClusterWorkflowTemplateSpecTemplatesSidecarsVolumeMounts {
  /**
   * Path within the container at which the volume should be mounted.  Must not contain ':'.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsVolumeMounts#mountPath
   */
  readonly mountPath: string;

  /**
   * mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsVolumeMounts#mountPropagation
   */
  readonly mountPropagation?: string;

  /**
   * This must match the Name of a Volume.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsVolumeMounts#name
   */
  readonly name: string;

  /**
   * Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
   *
   * @default false.
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsVolumeMounts#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
   *
   * @default volume's root).
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsVolumeMounts#subPath
   */
  readonly subPath?: string;

  /**
   * Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive. This field is beta in 1.15.
   *
   * @default volume's root). SubPathExpr and SubPath are mutually exclusive. This field is beta in 1.15.
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsVolumeMounts#subPathExpr
   */
  readonly subPathExpr?: string;

}

/**
 * Arguments to a template
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesStepsArguments
 */
export interface ClusterWorkflowTemplateSpecTemplatesStepsArguments {
  /**
   * Artifacts is the list of artifacts to pass to the template or workflow
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArguments#artifacts
   */
  readonly artifacts?: ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifacts[];

  /**
   * Parameters is the list of parameters to pass to the template or workflow
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArguments#parameters
   */
  readonly parameters?: ClusterWorkflowTemplateSpecTemplatesStepsArgumentsParameters[];

}

/**
 * ContinueOn defines if a workflow should continue even if a task or step fails/errors. It can be specified if the workflow should continue when the pod errors, fails or both.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesStepsContinueOn
 */
export interface ClusterWorkflowTemplateSpecTemplatesStepsContinueOn {
  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsContinueOn#error
   */
  readonly error?: boolean;

  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsContinueOn#failed
   */
  readonly failed?: boolean;

}

/**
 * TemplateRef is a reference of template resource.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesStepsTemplateRef
 */
export interface ClusterWorkflowTemplateSpecTemplatesStepsTemplateRef {
  /**
   * ClusterScope indicates the referred template is cluster scoped (i.e. a ClusterWorkflowTemplate).
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsTemplateRef#clusterScope
   */
  readonly clusterScope?: boolean;

  /**
   * Name is the resource name of the template.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsTemplateRef#name
   */
  readonly name?: string;

  /**
   * RuntimeResolution skips validation at creation time. By enabling this option, you can create the referred workflow template before the actual runtime.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsTemplateRef#runtimeResolution
   */
  readonly runtimeResolution?: boolean;

  /**
   * Template is the name of referred template in the resource.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsTemplateRef#template
   */
  readonly template?: string;

}

/**
 * Sequence expands a workflow step into numeric range
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesStepsWithSequence
 */
export interface ClusterWorkflowTemplateSpecTemplatesStepsWithSequence {
  /**
   * Count is number of elements in the sequence (default: 0). Not to be used with end
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsWithSequence#count
   */
  readonly count?: string;

  /**
   * Number at which to end the sequence (default: 0). Not to be used with Count
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsWithSequence#end
   */
  readonly end?: string;

  /**
   * Format is a printf format string to format the value in the sequence
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsWithSequence#format
   */
  readonly format?: string;

  /**
   * Number at which to start the sequence (default: 0)
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsWithSequence#start
   */
  readonly start?: string;

}

/**
 * Represents a Persistent Disk resource in AWS.

An AWS EBS disk must exist before mounting to a container. The disk must also be in the same AWS zone as the kubelet. An AWS EBS disk can only be mounted as read/write once. AWS EBS volumes support ownership management and SELinux relabeling.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesVolumesAwsElasticBlockStore
 */
export interface ClusterWorkflowTemplateSpecTemplatesVolumesAwsElasticBlockStore {
  /**
   * Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesAwsElasticBlockStore#fsType
   */
  readonly fsType?: string;

  /**
   * The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesAwsElasticBlockStore#partition
   */
  readonly partition?: number;

  /**
   * Specify "true" to force and set the ReadOnly property in VolumeMounts to "true". If omitted, the default is "false". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesAwsElasticBlockStore#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesAwsElasticBlockStore#volumeID
   */
  readonly volumeID: string;

}

/**
 * AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesVolumesAzureDisk
 */
export interface ClusterWorkflowTemplateSpecTemplatesVolumesAzureDisk {
  /**
   * Host Caching mode: None, Read Only, Read Write.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesAzureDisk#cachingMode
   */
  readonly cachingMode?: string;

  /**
   * The Name of the data disk in the blob storage
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesAzureDisk#diskName
   */
  readonly diskName: string;

  /**
   * The URI the data disk in the blob storage
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesAzureDisk#diskURI
   */
  readonly diskURI: string;

  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesAzureDisk#fsType
   */
  readonly fsType?: string;

  /**
   * Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesAzureDisk#kind
   */
  readonly kind?: string;

  /**
   * Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesAzureDisk#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesVolumesAzureFile
 */
export interface ClusterWorkflowTemplateSpecTemplatesVolumesAzureFile {
  /**
   * Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesAzureFile#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * the name of secret that contains Azure Storage Account Name and Key
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesAzureFile#secretName
   */
  readonly secretName: string;

  /**
   * Share Name
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesAzureFile#shareName
   */
  readonly shareName: string;

}

/**
 * Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesVolumesCephfs
 */
export interface ClusterWorkflowTemplateSpecTemplatesVolumesCephfs {
  /**
   * Required: Monitors is a collection of Ceph monitors More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesCephfs#monitors
   */
  readonly monitors: string[];

  /**
   * Optional: Used as the mounted root, rather than the full Ceph tree, default is /
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesCephfs#path
   */
  readonly path?: string;

  /**
   * Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesCephfs#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesCephfs#secretFile
   */
  readonly secretFile?: string;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesCephfs#secretRef
   */
  readonly secretRef?: ClusterWorkflowTemplateSpecTemplatesVolumesCephfsSecretRef;

  /**
   * Optional: User is the rados user name, default is admin More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesCephfs#user
   */
  readonly user?: string;

}

/**
 * Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesVolumesCinder
 */
export interface ClusterWorkflowTemplateSpecTemplatesVolumesCinder {
  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesCinder#fsType
   */
  readonly fsType?: string;

  /**
   * Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesCinder#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesCinder#secretRef
   */
  readonly secretRef?: ClusterWorkflowTemplateSpecTemplatesVolumesCinderSecretRef;

  /**
   * volume id used to identify the volume in cinder More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesCinder#volumeID
   */
  readonly volumeID: string;

}

/**
 * Adapts a ConfigMap into a volume.

The contents of the target ConfigMap's Data field will be presented in a volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. ConfigMap volumes support ownership management and SELinux relabeling.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesVolumesConfigMap
 */
export interface ClusterWorkflowTemplateSpecTemplatesVolumesConfigMap {
  /**
   * Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @default 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesConfigMap#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesConfigMap#items
   */
  readonly items?: ClusterWorkflowTemplateSpecTemplatesVolumesConfigMapItems[];

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesConfigMap#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its keys must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Represents a source location of a volume to mount, managed by an external CSI driver
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesVolumesCsi
 */
export interface ClusterWorkflowTemplateSpecTemplatesVolumesCsi {
  /**
   * Driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesCsi#driver
   */
  readonly driver: string;

  /**
   * Filesystem type to mount. Ex. "ext4", "xfs", "ntfs". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesCsi#fsType
   */
  readonly fsType?: string;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesCsi#nodePublishSecretRef
   */
  readonly nodePublishSecretRef?: ClusterWorkflowTemplateSpecTemplatesVolumesCsiNodePublishSecretRef;

  /**
   * Specifies a read-only configuration for the volume. Defaults to false (read/write).
   *
   * @default false (read/write).
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesCsi#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * VolumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesCsi#volumeAttributes
   */
  readonly volumeAttributes?: { [key: string]: string };

}

/**
 * DownwardAPIVolumeSource represents a volume containing downward API info. Downward API volumes support ownership management and SELinux relabeling.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesVolumesDownwardApi
 */
export interface ClusterWorkflowTemplateSpecTemplatesVolumesDownwardApi {
  /**
   * Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @default 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesDownwardApi#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * Items is a list of downward API volume file
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesDownwardApi#items
   */
  readonly items?: ClusterWorkflowTemplateSpecTemplatesVolumesDownwardApiItems[];

}

/**
 * Represents an empty directory for a pod. Empty directory volumes support ownership management and SELinux relabeling.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesVolumesEmptyDir
 */
export interface ClusterWorkflowTemplateSpecTemplatesVolumesEmptyDir {
  /**
   * What type of storage medium should back this directory. The default is "" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesEmptyDir#medium
   */
  readonly medium?: string;

  /**
   * Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and Int64() accessors.

The serialization format is:

<quantity>        ::= <signedNumber><suffix>
  (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
<decimalSI>       ::= m | "" | k | M | G | T | P | E
  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
<decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  a. No precision is lost
  b. No fractional digits will be emitted
  c. The exponent (or suffix) is as large as possible.
The sign will be omitted unless the number is negative.

Examples:
  1.5 will be serialized as "1500m"
  1.5Gi will be serialized as "1536Mi"

Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.

Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesEmptyDir#sizeLimit
   */
  readonly sizeLimit?: string;

}

/**
 * Represents a Fibre Channel volume. Fibre Channel volumes can only be mounted as read/write once. Fibre Channel volumes support ownership management and SELinux relabeling.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesVolumesFc
 */
export interface ClusterWorkflowTemplateSpecTemplatesVolumesFc {
  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesFc#fsType
   */
  readonly fsType?: string;

  /**
   * Optional: FC target lun number
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesFc#lun
   */
  readonly lun?: number;

  /**
   * Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesFc#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Optional: FC target worldwide names (WWNs)
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesFc#targetWWNs
   */
  readonly targetWWNs?: string[];

  /**
   * Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesFc#wwids
   */
  readonly wwids?: string[];

}

/**
 * FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesVolumesFlexVolume
 */
export interface ClusterWorkflowTemplateSpecTemplatesVolumesFlexVolume {
  /**
   * Driver is the name of the driver to use for this volume.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesFlexVolume#driver
   */
  readonly driver: string;

  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesFlexVolume#fsType
   */
  readonly fsType?: string;

  /**
   * Optional: Extra command options if any.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesFlexVolume#options
   */
  readonly options?: { [key: string]: string };

  /**
   * Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesFlexVolume#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesFlexVolume#secretRef
   */
  readonly secretRef?: ClusterWorkflowTemplateSpecTemplatesVolumesFlexVolumeSecretRef;

}

/**
 * Represents a Flocker volume mounted by the Flocker agent. One and only one of datasetName and datasetUUID should be set. Flocker volumes do not support ownership management or SELinux relabeling.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesVolumesFlocker
 */
export interface ClusterWorkflowTemplateSpecTemplatesVolumesFlocker {
  /**
   * Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesFlocker#datasetName
   */
  readonly datasetName?: string;

  /**
   * UUID of the dataset. This is unique identifier of a Flocker dataset
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesFlocker#datasetUUID
   */
  readonly datasetUUID?: string;

}

/**
 * Represents a Persistent Disk resource in Google Compute Engine.

A GCE PD must exist before mounting to a container. The disk must also be in the same GCE project and zone as the kubelet. A GCE PD can only be mounted as read/write once or read-only many times. GCE PDs support ownership management and SELinux relabeling.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesVolumesGcePersistentDisk
 */
export interface ClusterWorkflowTemplateSpecTemplatesVolumesGcePersistentDisk {
  /**
   * Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesGcePersistentDisk#fsType
   */
  readonly fsType?: string;

  /**
   * The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesGcePersistentDisk#partition
   */
  readonly partition?: number;

  /**
   * Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesGcePersistentDisk#pdName
   */
  readonly pdName: string;

  /**
   * ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
   *
   * @default false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesGcePersistentDisk#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Represents a volume that is populated with the contents of a git repository. Git repo volumes do not support ownership management. Git repo volumes support SELinux relabeling.

DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesVolumesGitRepo
 */
export interface ClusterWorkflowTemplateSpecTemplatesVolumesGitRepo {
  /**
   * Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesGitRepo#directory
   */
  readonly directory?: string;

  /**
   * Repository URL
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesGitRepo#repository
   */
  readonly repository: string;

  /**
   * Commit hash for the specified revision.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesGitRepo#revision
   */
  readonly revision?: string;

}

/**
 * Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesVolumesGlusterfs
 */
export interface ClusterWorkflowTemplateSpecTemplatesVolumesGlusterfs {
  /**
   * EndpointsName is the endpoint name that details Glusterfs topology. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesGlusterfs#endpoints
   */
  readonly endpoints: string;

  /**
   * Path is the Glusterfs volume path. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesGlusterfs#path
   */
  readonly path: string;

  /**
   * ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod
   *
   * @default false. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesGlusterfs#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Represents a host path mapped into a pod. Host path volumes do not support ownership management or SELinux relabeling.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesVolumesHostPath
 */
export interface ClusterWorkflowTemplateSpecTemplatesVolumesHostPath {
  /**
   * Path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesHostPath#path
   */
  readonly path: string;

  /**
   * Type for HostPath Volume Defaults to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
   *
   * @default More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesHostPath#type
   */
  readonly type?: string;

}

/**
 * Represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesVolumesIscsi
 */
export interface ClusterWorkflowTemplateSpecTemplatesVolumesIscsi {
  /**
   * whether support iSCSI Discovery CHAP authentication
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesIscsi#chapAuthDiscovery
   */
  readonly chapAuthDiscovery?: boolean;

  /**
   * whether support iSCSI Session CHAP authentication
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesIscsi#chapAuthSession
   */
  readonly chapAuthSession?: boolean;

  /**
   * Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesIscsi#fsType
   */
  readonly fsType?: string;

  /**
   * Custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesIscsi#initiatorName
   */
  readonly initiatorName?: string;

  /**
   * Target iSCSI Qualified Name.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesIscsi#iqn
   */
  readonly iqn: string;

  /**
   * iSCSI Interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).
   *
   * @default default' (tcp).
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesIscsi#iscsiInterface
   */
  readonly iscsiInterface?: string;

  /**
   * iSCSI Target Lun number.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesIscsi#lun
   */
  readonly lun: number;

  /**
   * iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesIscsi#portals
   */
  readonly portals?: string[];

  /**
   * ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.
   *
   * @default false.
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesIscsi#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesIscsi#secretRef
   */
  readonly secretRef?: ClusterWorkflowTemplateSpecTemplatesVolumesIscsiSecretRef;

  /**
   * iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesIscsi#targetPortal
   */
  readonly targetPortal: string;

}

/**
 * Represents an NFS mount that lasts the lifetime of a pod. NFS volumes do not support ownership management or SELinux relabeling.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesVolumesNfs
 */
export interface ClusterWorkflowTemplateSpecTemplatesVolumesNfs {
  /**
   * Path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesNfs#path
   */
  readonly path: string;

  /**
   * ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
   *
   * @default false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesNfs#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesNfs#server
   */
  readonly server: string;

}

/**
 * PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace. This volume finds the bound PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another type of volume that is owned by someone else (the system).
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesVolumesPersistentVolumeClaim
 */
export interface ClusterWorkflowTemplateSpecTemplatesVolumesPersistentVolumeClaim {
  /**
   * ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesPersistentVolumeClaim#claimName
   */
  readonly claimName: string;

  /**
   * Will force the ReadOnly setting in VolumeMounts. Default false.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesPersistentVolumeClaim#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Represents a Photon Controller persistent disk resource.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesVolumesPhotonPersistentDisk
 */
export interface ClusterWorkflowTemplateSpecTemplatesVolumesPhotonPersistentDisk {
  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesPhotonPersistentDisk#fsType
   */
  readonly fsType?: string;

  /**
   * ID that identifies Photon Controller persistent disk
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesPhotonPersistentDisk#pdID
   */
  readonly pdID: string;

}

/**
 * PortworxVolumeSource represents a Portworx volume resource.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesVolumesPortworxVolume
 */
export interface ClusterWorkflowTemplateSpecTemplatesVolumesPortworxVolume {
  /**
   * FSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesPortworxVolume#fsType
   */
  readonly fsType?: string;

  /**
   * Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesPortworxVolume#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * VolumeID uniquely identifies a Portworx volume
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesPortworxVolume#volumeID
   */
  readonly volumeID: string;

}

/**
 * Represents a projected volume source
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesVolumesProjected
 */
export interface ClusterWorkflowTemplateSpecTemplatesVolumesProjected {
  /**
   * Mode bits to use on created files by default. Must be a value between 0 and 0777. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesProjected#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * list of volume projections
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesProjected#sources
   */
  readonly sources: ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSources[];

}

/**
 * Represents a Quobyte mount that lasts the lifetime of a pod. Quobyte volumes do not support ownership management or SELinux relabeling.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesVolumesQuobyte
 */
export interface ClusterWorkflowTemplateSpecTemplatesVolumesQuobyte {
  /**
   * Group to map volume access to Default is no group
   *
   * @default no group
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesQuobyte#group
   */
  readonly group?: string;

  /**
   * ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.
   *
   * @default false.
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesQuobyte#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesQuobyte#registry
   */
  readonly registry: string;

  /**
   * Tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesQuobyte#tenant
   */
  readonly tenant?: string;

  /**
   * User to map volume access to Defaults to serivceaccount user
   *
   * @default serivceaccount user
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesQuobyte#user
   */
  readonly user?: string;

  /**
   * Volume is a string that references an already created Quobyte volume by name.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesQuobyte#volume
   */
  readonly volume: string;

}

/**
 * Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesVolumesRbd
 */
export interface ClusterWorkflowTemplateSpecTemplatesVolumesRbd {
  /**
   * Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesRbd#fsType
   */
  readonly fsType?: string;

  /**
   * The rados image name. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesRbd#image
   */
  readonly image: string;

  /**
   * Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   *
   * @default etc/ceph/keyring. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesRbd#keyring
   */
  readonly keyring?: string;

  /**
   * A collection of Ceph monitors. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesRbd#monitors
   */
  readonly monitors: string[];

  /**
   * The rados pool name. Default is rbd. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   *
   * @default rbd. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesRbd#pool
   */
  readonly pool?: string;

  /**
   * ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   *
   * @default false. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesRbd#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesRbd#secretRef
   */
  readonly secretRef?: ClusterWorkflowTemplateSpecTemplatesVolumesRbdSecretRef;

  /**
   * The rados user name. Default is admin. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   *
   * @default admin. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesRbd#user
   */
  readonly user?: string;

}

/**
 * ScaleIOVolumeSource represents a persistent ScaleIO volume
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesVolumesScaleIo
 */
export interface ClusterWorkflowTemplateSpecTemplatesVolumesScaleIo {
  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Default is "xfs".
   *
   * @default xfs".
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesScaleIo#fsType
   */
  readonly fsType?: string;

  /**
   * The host address of the ScaleIO API Gateway.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesScaleIo#gateway
   */
  readonly gateway: string;

  /**
   * The name of the ScaleIO Protection Domain for the configured storage.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesScaleIo#protectionDomain
   */
  readonly protectionDomain?: string;

  /**
   * Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesScaleIo#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesScaleIo#secretRef
   */
  readonly secretRef: ClusterWorkflowTemplateSpecTemplatesVolumesScaleIoSecretRef;

  /**
   * Flag to enable/disable SSL communication with Gateway, default false
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesScaleIo#sslEnabled
   */
  readonly sslEnabled?: boolean;

  /**
   * Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.
   *
   * @default ThinProvisioned.
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesScaleIo#storageMode
   */
  readonly storageMode?: string;

  /**
   * The ScaleIO Storage Pool associated with the protection domain.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesScaleIo#storagePool
   */
  readonly storagePool?: string;

  /**
   * The name of the storage system as configured in ScaleIO.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesScaleIo#system
   */
  readonly system: string;

  /**
   * The name of a volume already created in the ScaleIO system that is associated with this volume source.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesScaleIo#volumeName
   */
  readonly volumeName?: string;

}

/**
 * Adapts a Secret into a volume.

The contents of the target Secret's Data field will be presented in a volume as files using the keys in the Data field as the file names. Secret volumes support ownership management and SELinux relabeling.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesVolumesSecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesVolumesSecret {
  /**
   * Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @default 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesSecret#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesSecret#items
   */
  readonly items?: ClusterWorkflowTemplateSpecTemplatesVolumesSecretItems[];

  /**
   * Specify whether the Secret or its keys must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesSecret#optional
   */
  readonly optional?: boolean;

  /**
   * Name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesSecret#secretName
   */
  readonly secretName?: string;

}

/**
 * Represents a StorageOS persistent volume resource.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesVolumesStorageos
 */
export interface ClusterWorkflowTemplateSpecTemplatesVolumesStorageos {
  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesStorageos#fsType
   */
  readonly fsType?: string;

  /**
   * Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesStorageos#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesStorageos#secretRef
   */
  readonly secretRef?: ClusterWorkflowTemplateSpecTemplatesVolumesStorageosSecretRef;

  /**
   * VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesStorageos#volumeName
   */
  readonly volumeName?: string;

  /**
   * VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to "default" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesStorageos#volumeNamespace
   */
  readonly volumeNamespace?: string;

}

/**
 * Represents a vSphere volume resource.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesVolumesVsphereVolume
 */
export interface ClusterWorkflowTemplateSpecTemplatesVolumesVsphereVolume {
  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesVsphereVolume#fsType
   */
  readonly fsType?: string;

  /**
   * Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesVsphereVolume#storagePolicyID
   */
  readonly storagePolicyID?: string;

  /**
   * Storage Policy Based Management (SPBM) profile name.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesVsphereVolume#storagePolicyName
   */
  readonly storagePolicyName?: string;

  /**
   * Path that identifies vSphere volume vmdk
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesVsphereVolume#volumePath
   */
  readonly volumePath: string;

}

/**
 * TypedLocalObjectReference contains enough information to let you locate the typed referenced object inside the same namespace.
 *
 * @schema ClusterWorkflowTemplateSpecVolumeClaimTemplatesSpecDataSource
 */
export interface ClusterWorkflowTemplateSpecVolumeClaimTemplatesSpecDataSource {
  /**
   * APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
   *
   * @schema ClusterWorkflowTemplateSpecVolumeClaimTemplatesSpecDataSource#apiGroup
   */
  readonly apiGroup?: string;

  /**
   * Kind is the type of resource being referenced
   *
   * @schema ClusterWorkflowTemplateSpecVolumeClaimTemplatesSpecDataSource#kind
   */
  readonly kind: string;

  /**
   * Name is the name of resource being referenced
   *
   * @schema ClusterWorkflowTemplateSpecVolumeClaimTemplatesSpecDataSource#name
   */
  readonly name: string;

}

/**
 * ResourceRequirements describes the compute resource requirements.
 *
 * @schema ClusterWorkflowTemplateSpecVolumeClaimTemplatesSpecResources
 */
export interface ClusterWorkflowTemplateSpecVolumeClaimTemplatesSpecResources {
  /**
   * Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
   *
   * @schema ClusterWorkflowTemplateSpecVolumeClaimTemplatesSpecResources#limits
   */
  readonly limits?: { [key: string]: string };

  /**
   * Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
   *
   * @schema ClusterWorkflowTemplateSpecVolumeClaimTemplatesSpecResources#requests
   */
  readonly requests?: { [key: string]: string };

}

/**
 * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
 *
 * @schema ClusterWorkflowTemplateSpecVolumeClaimTemplatesSpecSelector
 */
export interface ClusterWorkflowTemplateSpecVolumeClaimTemplatesSpecSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema ClusterWorkflowTemplateSpecVolumeClaimTemplatesSpecSelector#matchExpressions
   */
  readonly matchExpressions?: ClusterWorkflowTemplateSpecVolumeClaimTemplatesSpecSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema ClusterWorkflowTemplateSpecVolumeClaimTemplatesSpecSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * PersistentVolumeClaimCondition contails details about state of pvc
 *
 * @schema ClusterWorkflowTemplateSpecVolumeClaimTemplatesStatusConditions
 */
export interface ClusterWorkflowTemplateSpecVolumeClaimTemplatesStatusConditions {
  /**
   * Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
   *
   * @schema ClusterWorkflowTemplateSpecVolumeClaimTemplatesStatusConditions#lastProbeTime
   */
  readonly lastProbeTime?: Date;

  /**
   * Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
   *
   * @schema ClusterWorkflowTemplateSpecVolumeClaimTemplatesStatusConditions#lastTransitionTime
   */
  readonly lastTransitionTime?: Date;

  /**
   * Human-readable message indicating details about last transition.
   *
   * @schema ClusterWorkflowTemplateSpecVolumeClaimTemplatesStatusConditions#message
   */
  readonly message?: string;

  /**
   * Unique, this should be a short, machine understandable string that gives the reason for condition's last transition. If it reports "ResizeStarted" that means the underlying persistent volume is being resized.
   *
   * @schema ClusterWorkflowTemplateSpecVolumeClaimTemplatesStatusConditions#reason
   */
  readonly reason?: string;

  /**
   * @schema ClusterWorkflowTemplateSpecVolumeClaimTemplatesStatusConditions#status
   */
  readonly status: string;

  /**
   * @schema ClusterWorkflowTemplateSpecVolumeClaimTemplatesStatusConditions#type
   */
  readonly type: string;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema ClusterWorkflowTemplateSpecVolumesCephfsSecretRef
 */
export interface ClusterWorkflowTemplateSpecVolumesCephfsSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecVolumesCephfsSecretRef#name
   */
  readonly name?: string;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema ClusterWorkflowTemplateSpecVolumesCinderSecretRef
 */
export interface ClusterWorkflowTemplateSpecVolumesCinderSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecVolumesCinderSecretRef#name
   */
  readonly name?: string;

}

/**
 * Maps a string key to a path within a volume.
 *
 * @schema ClusterWorkflowTemplateSpecVolumesConfigMapItems
 */
export interface ClusterWorkflowTemplateSpecVolumesConfigMapItems {
  /**
   * The key to project.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesConfigMapItems#key
   */
  readonly key: string;

  /**
   * Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesConfigMapItems#mode
   */
  readonly mode?: number;

  /**
   * The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesConfigMapItems#path
   */
  readonly path: string;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema ClusterWorkflowTemplateSpecVolumesCsiNodePublishSecretRef
 */
export interface ClusterWorkflowTemplateSpecVolumesCsiNodePublishSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecVolumesCsiNodePublishSecretRef#name
   */
  readonly name?: string;

}

/**
 * DownwardAPIVolumeFile represents information to create the file containing the pod field
 *
 * @schema ClusterWorkflowTemplateSpecVolumesDownwardApiItems
 */
export interface ClusterWorkflowTemplateSpecVolumesDownwardApiItems {
  /**
   * ObjectFieldSelector selects an APIVersioned field of an object.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesDownwardApiItems#fieldRef
   */
  readonly fieldRef?: ClusterWorkflowTemplateSpecVolumesDownwardApiItemsFieldRef;

  /**
   * Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesDownwardApiItems#mode
   */
  readonly mode?: number;

  /**
   * Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
   *
   * @schema ClusterWorkflowTemplateSpecVolumesDownwardApiItems#path
   */
  readonly path: string;

  /**
   * ResourceFieldSelector represents container resources (cpu, memory) and their output format
   *
   * @schema ClusterWorkflowTemplateSpecVolumesDownwardApiItems#resourceFieldRef
   */
  readonly resourceFieldRef?: ClusterWorkflowTemplateSpecVolumesDownwardApiItemsResourceFieldRef;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema ClusterWorkflowTemplateSpecVolumesFlexVolumeSecretRef
 */
export interface ClusterWorkflowTemplateSpecVolumesFlexVolumeSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecVolumesFlexVolumeSecretRef#name
   */
  readonly name?: string;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema ClusterWorkflowTemplateSpecVolumesIscsiSecretRef
 */
export interface ClusterWorkflowTemplateSpecVolumesIscsiSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecVolumesIscsiSecretRef#name
   */
  readonly name?: string;

}

/**
 * Projection that may be projected along with other supported volume types
 *
 * @schema ClusterWorkflowTemplateSpecVolumesProjectedSources
 */
export interface ClusterWorkflowTemplateSpecVolumesProjectedSources {
  /**
   * Adapts a ConfigMap into a projected volume.

The contents of the target ConfigMap's Data field will be presented in a projected volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. Note that this is identical to a configmap volume source without the default mode.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesProjectedSources#configMap
   */
  readonly configMap?: ClusterWorkflowTemplateSpecVolumesProjectedSourcesConfigMap;

  /**
   * Represents downward API info for projecting into a projected volume. Note that this is identical to a downwardAPI volume source without the default mode.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesProjectedSources#downwardAPI
   */
  readonly downwardAPI?: ClusterWorkflowTemplateSpecVolumesProjectedSourcesDownwardApi;

  /**
   * Adapts a secret into a projected volume.

The contents of the target Secret's Data field will be presented in a projected volume as files using the keys in the Data field as the file names. Note that this is identical to a secret volume source without the default mode.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesProjectedSources#secret
   */
  readonly secret?: ClusterWorkflowTemplateSpecVolumesProjectedSourcesSecret;

  /**
   * ServiceAccountTokenProjection represents a projected service account token volume. This projection can be used to insert a service account token into the pods runtime filesystem for use against APIs (Kubernetes API Server or otherwise).
   *
   * @schema ClusterWorkflowTemplateSpecVolumesProjectedSources#serviceAccountToken
   */
  readonly serviceAccountToken?: ClusterWorkflowTemplateSpecVolumesProjectedSourcesServiceAccountToken;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema ClusterWorkflowTemplateSpecVolumesRbdSecretRef
 */
export interface ClusterWorkflowTemplateSpecVolumesRbdSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecVolumesRbdSecretRef#name
   */
  readonly name?: string;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema ClusterWorkflowTemplateSpecVolumesScaleIoSecretRef
 */
export interface ClusterWorkflowTemplateSpecVolumesScaleIoSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecVolumesScaleIoSecretRef#name
   */
  readonly name?: string;

}

/**
 * Maps a string key to a path within a volume.
 *
 * @schema ClusterWorkflowTemplateSpecVolumesSecretItems
 */
export interface ClusterWorkflowTemplateSpecVolumesSecretItems {
  /**
   * The key to project.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesSecretItems#key
   */
  readonly key: string;

  /**
   * Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesSecretItems#mode
   */
  readonly mode?: number;

  /**
   * The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesSecretItems#path
   */
  readonly path: string;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema ClusterWorkflowTemplateSpecVolumesStorageosSecretRef
 */
export interface ClusterWorkflowTemplateSpecVolumesStorageosSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecVolumesStorageosSecretRef#name
   */
  readonly name?: string;

}

/**
 * A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
 *
 * @schema ClusterWorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference
 */
export interface ClusterWorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
  /**
   * A list of node selector requirements by node's labels.
   *
   * @schema ClusterWorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference#matchExpressions
   */
  readonly matchExpressions?: ClusterWorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions[];

  /**
   * A list of node selector requirements by node's fields.
   *
   * @schema ClusterWorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference#matchFields
   */
  readonly matchFields?: ClusterWorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields[];

}

/**
 * A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
 *
 * @schema ClusterWorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms
 */
export interface ClusterWorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
  /**
   * A list of node selector requirements by node's labels.
   *
   * @schema ClusterWorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms#matchExpressions
   */
  readonly matchExpressions?: ClusterWorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions[];

  /**
   * A list of node selector requirements by node's fields.
   *
   * @schema ClusterWorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms#matchFields
   */
  readonly matchFields?: ClusterWorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields[];

}

/**
 * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
 *
 * @schema ClusterWorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm
 */
export interface ClusterWorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
  /**
   * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
   *
   * @schema ClusterWorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#labelSelector
   */
  readonly labelSelector?: ClusterWorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;

  /**
   * namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
   *
   * @schema ClusterWorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaces
   */
  readonly namespaces?: string[];

  /**
   * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
   *
   * @schema ClusterWorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
 *
 * @schema ClusterWorkflowTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector
 */
export interface ClusterWorkflowTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema ClusterWorkflowTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchExpressions
   */
  readonly matchExpressions?: ClusterWorkflowTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema ClusterWorkflowTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
 *
 * @schema ClusterWorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm
 */
export interface ClusterWorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
  /**
   * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
   *
   * @schema ClusterWorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#labelSelector
   */
  readonly labelSelector?: ClusterWorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;

  /**
   * namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
   *
   * @schema ClusterWorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaces
   */
  readonly namespaces?: string[];

  /**
   * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
   *
   * @schema ClusterWorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
 *
 * @schema ClusterWorkflowTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector
 */
export interface ClusterWorkflowTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema ClusterWorkflowTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchExpressions
   */
  readonly matchExpressions?: ClusterWorkflowTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema ClusterWorkflowTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * TarStrategy will tar and gzip the file or directory when saving
 *
 * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsArchiveTar
 */
export interface ClusterWorkflowTemplateSpecArgumentsArtifactsArchiveTar {
  /**
   * CompressionLevel specifies the gzip compression level to use for the artifact. Defaults to gzip.DefaultCompression.
   *
   * @default gzip.DefaultCompression.
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsArchiveTar#compressionLevel
   */
  readonly compressionLevel?: number;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsArtifactoryPasswordSecret
 */
export interface ClusterWorkflowTemplateSpecArgumentsArtifactsArtifactoryPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsArtifactoryPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsArtifactoryPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsArtifactoryPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsArtifactoryUsernameSecret
 */
export interface ClusterWorkflowTemplateSpecArgumentsArtifactsArtifactoryUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsArtifactoryUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsArtifactoryUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsArtifactoryUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsGcsServiceAccountKeySecret
 */
export interface ClusterWorkflowTemplateSpecArgumentsArtifactsGcsServiceAccountKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsGcsServiceAccountKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsGcsServiceAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsGcsServiceAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsGitPasswordSecret
 */
export interface ClusterWorkflowTemplateSpecArgumentsArtifactsGitPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsGitPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsGitPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsGitPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsGitSshPrivateKeySecret
 */
export interface ClusterWorkflowTemplateSpecArgumentsArtifactsGitSshPrivateKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsGitSshPrivateKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsGitSshPrivateKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsGitSshPrivateKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsGitUsernameSecret
 */
export interface ClusterWorkflowTemplateSpecArgumentsArtifactsGitUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsGitUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsGitUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsGitUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsHdfsKrbCCacheSecret
 */
export interface ClusterWorkflowTemplateSpecArgumentsArtifactsHdfsKrbCCacheSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsHdfsKrbCCacheSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsHdfsKrbCCacheSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsHdfsKrbCCacheSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Selects a key from a ConfigMap.
 *
 * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsHdfsKrbConfigConfigMap
 */
export interface ClusterWorkflowTemplateSpecArgumentsArtifactsHdfsKrbConfigConfigMap {
  /**
   * The key to select.
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsHdfsKrbConfigConfigMap#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsHdfsKrbConfigConfigMap#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsHdfsKrbConfigConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsHdfsKrbKeytabSecret
 */
export interface ClusterWorkflowTemplateSpecArgumentsArtifactsHdfsKrbKeytabSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsHdfsKrbKeytabSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsHdfsKrbKeytabSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsHdfsKrbKeytabSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsOssAccessKeySecret
 */
export interface ClusterWorkflowTemplateSpecArgumentsArtifactsOssAccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsOssAccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsOssAccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsOssAccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsOssSecretKeySecret
 */
export interface ClusterWorkflowTemplateSpecArgumentsArtifactsOssSecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsOssSecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsOssSecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsOssSecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsS3AccessKeySecret
 */
export interface ClusterWorkflowTemplateSpecArgumentsArtifactsS3AccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsS3AccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsS3AccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsS3AccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsS3SecretKeySecret
 */
export interface ClusterWorkflowTemplateSpecArgumentsArtifactsS3SecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsS3SecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsS3SecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecArgumentsArtifactsS3SecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution#preference
   */
  readonly preference: ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference;

  /**
   * Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * Required. A list of node selector terms. The terms are ORed.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution#nodeSelectorTerms
   */
  readonly nodeSelectorTerms: ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms[];

}

/**
 * The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution#podAffinityTerm
   */
  readonly podAffinityTerm: ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;

  /**
   * weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#labelSelector
   */
  readonly labelSelector?: ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;

  /**
   * namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaces
   */
  readonly namespaces?: string[];

  /**
   * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution#podAffinityTerm
   */
  readonly podAffinityTerm: ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;

  /**
   * weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#labelSelector
   */
  readonly labelSelector?: ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;

  /**
   * namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaces
   */
  readonly namespaces?: string[];

  /**
   * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationArtifactoryPasswordSecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesArchiveLocationArtifactoryPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationArtifactoryPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationArtifactoryPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationArtifactoryPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationArtifactoryUsernameSecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesArchiveLocationArtifactoryUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationArtifactoryUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationArtifactoryUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationArtifactoryUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationGcsServiceAccountKeySecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesArchiveLocationGcsServiceAccountKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationGcsServiceAccountKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationGcsServiceAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationGcsServiceAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationGitPasswordSecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesArchiveLocationGitPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationGitPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationGitPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationGitPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationGitSshPrivateKeySecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesArchiveLocationGitSshPrivateKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationGitSshPrivateKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationGitSshPrivateKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationGitSshPrivateKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationGitUsernameSecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesArchiveLocationGitUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationGitUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationGitUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationGitUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationHdfsKrbCCacheSecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesArchiveLocationHdfsKrbCCacheSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationHdfsKrbCCacheSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationHdfsKrbCCacheSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationHdfsKrbCCacheSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Selects a key from a ConfigMap.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationHdfsKrbConfigConfigMap
 */
export interface ClusterWorkflowTemplateSpecTemplatesArchiveLocationHdfsKrbConfigConfigMap {
  /**
   * The key to select.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationHdfsKrbConfigConfigMap#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationHdfsKrbConfigConfigMap#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationHdfsKrbConfigConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationHdfsKrbKeytabSecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesArchiveLocationHdfsKrbKeytabSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationHdfsKrbKeytabSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationHdfsKrbKeytabSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationHdfsKrbKeytabSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationOssAccessKeySecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesArchiveLocationOssAccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationOssAccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationOssAccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationOssAccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationOssSecretKeySecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesArchiveLocationOssSecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationOssSecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationOssSecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationOssSecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationS3AccessKeySecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesArchiveLocationS3AccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationS3AccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationS3AccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationS3AccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationS3SecretKeySecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesArchiveLocationS3SecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationS3SecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationS3SecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArchiveLocationS3SecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * ArchiveStrategy describes how to archive files/directory when saving artifacts
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsArchive
 */
export interface ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsArchive {
  /**
   * NoneStrategy indicates to skip tar process and upload the files or directory tree as independent files. Note that if the artifact is a directory, the artifact driver must support the ability to save/load the directory appropriately.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsArchive#none
   */
  readonly none?: any;

  /**
   * TarStrategy will tar and gzip the file or directory when saving
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsArchive#tar
   */
  readonly tar?: ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsArchiveTar;

}

/**
 * ArtifactoryArtifact is the location of an artifactory artifact
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsArtifactory
 */
export interface ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsArtifactory {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsArtifactory#passwordSecret
   */
  readonly passwordSecret?: ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsArtifactoryPasswordSecret;

  /**
   * URL of the artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsArtifactory#url
   */
  readonly url: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsArtifactory#usernameSecret
   */
  readonly usernameSecret?: ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsArtifactoryUsernameSecret;

}

/**
 * GCSArtifact is the location of a GCS artifact
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsGcs
 */
export interface ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsGcs {
  /**
   * Bucket is the name of the bucket
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsGcs#bucket
   */
  readonly bucket: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsGcs#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsGcs#serviceAccountKeySecret
   */
  readonly serviceAccountKeySecret?: ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsGcsServiceAccountKeySecret;

}

/**
 * GitArtifact is the location of an git artifact
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsGit
 */
export interface ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsGit {
  /**
   * Depth specifies clones/fetches should be shallow and include the given number of commits from the branch tip
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsGit#depth
   */
  readonly depth?: number;

  /**
   * Fetch specifies a number of refs that should be fetched before checkout
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsGit#fetch
   */
  readonly fetch?: string[];

  /**
   * InsecureIgnoreHostKey disables SSH strict host key checking during git clone
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsGit#insecureIgnoreHostKey
   */
  readonly insecureIgnoreHostKey?: boolean;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsGit#passwordSecret
   */
  readonly passwordSecret?: ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsGitPasswordSecret;

  /**
   * Repo is the git repository
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsGit#repo
   */
  readonly repo: string;

  /**
   * Revision is the git commit, tag, branch to checkout
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsGit#revision
   */
  readonly revision?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsGit#sshPrivateKeySecret
   */
  readonly sshPrivateKeySecret?: ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsGitSshPrivateKeySecret;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsGit#usernameSecret
   */
  readonly usernameSecret?: ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsGitUsernameSecret;

}

/**
 * HDFSArtifact is the location of an HDFS artifact
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsHdfs
 */
export interface ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsHdfs {
  /**
   * Addresses is accessible addresses of HDFS name nodes
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsHdfs#addresses
   */
  readonly addresses: string[];

  /**
   * Force copies a file forcibly even if it exists (default: false)
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsHdfs#force
   */
  readonly force?: boolean;

  /**
   * HDFSUser is the user to access HDFS file system. It is ignored if either ccache or keytab is used.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsHdfs#hdfsUser
   */
  readonly hdfsUser?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsHdfs#krbCCacheSecret
   */
  readonly krbCCacheSecret?: ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsHdfsKrbCCacheSecret;

  /**
   * Selects a key from a ConfigMap.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsHdfs#krbConfigConfigMap
   */
  readonly krbConfigConfigMap?: ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsHdfsKrbConfigConfigMap;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsHdfs#krbKeytabSecret
   */
  readonly krbKeytabSecret?: ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsHdfsKrbKeytabSecret;

  /**
   * KrbRealm is the Kerberos realm used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsHdfs#krbRealm
   */
  readonly krbRealm?: string;

  /**
   * KrbServicePrincipalName is the principal name of Kerberos service It must be set if either ccache or keytab is used.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsHdfs#krbServicePrincipalName
   */
  readonly krbServicePrincipalName?: string;

  /**
   * KrbUsername is the Kerberos username used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsHdfs#krbUsername
   */
  readonly krbUsername?: string;

  /**
   * Path is a file path in HDFS
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsHdfs#path
   */
  readonly path: string;

}

/**
 * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsHttp
 */
export interface ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsHttp {
  /**
   * URL of the artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsHttp#url
   */
  readonly url: string;

}

/**
 * OSSArtifact is the location of an Alibaba Cloud OSS artifact
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsOss
 */
export interface ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsOss {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsOss#accessKeySecret
   */
  readonly accessKeySecret: ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsOssAccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsOss#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsOss#endpoint
   */
  readonly endpoint: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsOss#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsOss#secretKeySecret
   */
  readonly secretKeySecret: ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsOssSecretKeySecret;

}

/**
 * RawArtifact allows raw string content to be placed as an artifact in a container
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsRaw
 */
export interface ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsRaw {
  /**
   * Data is the string contents of the artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsRaw#data
   */
  readonly data: string;

}

/**
 * S3Artifact is the location of an S3 artifact
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsS3
 */
export interface ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsS3 {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsS3#accessKeySecret
   */
  readonly accessKeySecret: ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsS3AccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsS3#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsS3#endpoint
   */
  readonly endpoint: string;

  /**
   * Insecure will connect to the service with TLS
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsS3#insecure
   */
  readonly insecure?: boolean;

  /**
   * Key is the key in the bucket where the artifact resides
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsS3#key
   */
  readonly key: string;

  /**
   * Region contains the optional bucket region
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsS3#region
   */
  readonly region?: string;

  /**
   * RoleARN is the Amazon Resource Name (ARN) of the role to assume.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsS3#roleARN
   */
  readonly roleARN?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsS3#secretKeySecret
   */
  readonly secretKeySecret: ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsS3SecretKeySecret;

  /**
   * UseSDKCreds tells the driver to figure out credentials based on sdk defaults.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsS3#useSDKCreds
   */
  readonly useSDKCreds?: boolean;

}

/**
 * ValueFrom describes a location in which to obtain the value to a parameter
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsParametersValueFrom
 */
export interface ClusterWorkflowTemplateSpecTemplatesArgumentsParametersValueFrom {
  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsParametersValueFrom#default
   */
  readonly default?: string;

  /**
   * JQFilter expression against the resource object in resource templates
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsParametersValueFrom#jqFilter
   */
  readonly jqFilter?: string;

  /**
   * JSONPath of a resource to retrieve an output parameter value from in resource templates
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsParametersValueFrom#jsonPath
   */
  readonly jsonPath?: string;

  /**
   * Parameter reference to a step or dag task in which to retrieve an output parameter value from (e.g. '{{steps.mystep.outputs.myparam}}')
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsParametersValueFrom#parameter
   */
  readonly parameter?: string;

  /**
   * Path in the container to retrieve an output parameter value from in container templates
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsParametersValueFrom#path
   */
  readonly path?: string;

}

/**
 * EnvVarSource represents a source for the value of an EnvVar.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesContainerEnvValueFrom
 */
export interface ClusterWorkflowTemplateSpecTemplatesContainerEnvValueFrom {
  /**
   * Selects a key from a ConfigMap.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerEnvValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: ClusterWorkflowTemplateSpecTemplatesContainerEnvValueFromConfigMapKeyRef;

  /**
   * ObjectFieldSelector selects an APIVersioned field of an object.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerEnvValueFrom#fieldRef
   */
  readonly fieldRef?: ClusterWorkflowTemplateSpecTemplatesContainerEnvValueFromFieldRef;

  /**
   * ResourceFieldSelector represents container resources (cpu, memory) and their output format
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerEnvValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: ClusterWorkflowTemplateSpecTemplatesContainerEnvValueFromResourceFieldRef;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerEnvValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: ClusterWorkflowTemplateSpecTemplatesContainerEnvValueFromSecretKeyRef;

}

/**
 * ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.

The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesContainerEnvFromConfigMapRef
 */
export interface ClusterWorkflowTemplateSpecTemplatesContainerEnvFromConfigMapRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerEnvFromConfigMapRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerEnvFromConfigMapRef#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretEnvSource selects a Secret to populate the environment variables with.

The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesContainerEnvFromSecretRef
 */
export interface ClusterWorkflowTemplateSpecTemplatesContainerEnvFromSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerEnvFromSecretRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerEnvFromSecretRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Handler defines a specific action that should be taken
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePostStart
 */
export interface ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePostStart {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePostStart#exec
   */
  readonly exec?: ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePostStartExec;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePostStart#httpGet
   */
  readonly httpGet?: ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePostStartHttpGet;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePostStart#tcpSocket
   */
  readonly tcpSocket?: ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePostStartTcpSocket;

}

/**
 * Handler defines a specific action that should be taken
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePreStop
 */
export interface ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePreStop {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePreStop#exec
   */
  readonly exec?: ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePreStopExec;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePreStop#httpGet
   */
  readonly httpGet?: ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePreStopHttpGet;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePreStop#tcpSocket
   */
  readonly tcpSocket?: ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePreStopTcpSocket;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesContainerLivenessProbeExec
 */
export interface ClusterWorkflowTemplateSpecTemplatesContainerLivenessProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerLivenessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesContainerLivenessProbeHttpGet
 */
export interface ClusterWorkflowTemplateSpecTemplatesContainerLivenessProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerLivenessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerLivenessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: ClusterWorkflowTemplateSpecTemplatesContainerLivenessProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerLivenessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerLivenessProbeHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerLivenessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesContainerLivenessProbeTcpSocket
 */
export interface ClusterWorkflowTemplateSpecTemplatesContainerLivenessProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerLivenessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerLivenessProbeTcpSocket#port
   */
  readonly port: string;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesContainerReadinessProbeExec
 */
export interface ClusterWorkflowTemplateSpecTemplatesContainerReadinessProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerReadinessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesContainerReadinessProbeHttpGet
 */
export interface ClusterWorkflowTemplateSpecTemplatesContainerReadinessProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerReadinessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerReadinessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: ClusterWorkflowTemplateSpecTemplatesContainerReadinessProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerReadinessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerReadinessProbeHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerReadinessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesContainerReadinessProbeTcpSocket
 */
export interface ClusterWorkflowTemplateSpecTemplatesContainerReadinessProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerReadinessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerReadinessProbeTcpSocket#port
   */
  readonly port: string;

}

/**
 * Adds and removes POSIX capabilities from running containers.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesContainerSecurityContextCapabilities
 */
export interface ClusterWorkflowTemplateSpecTemplatesContainerSecurityContextCapabilities {
  /**
   * Added capabilities
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerSecurityContextCapabilities#add
   */
  readonly add?: string[];

  /**
   * Removed capabilities
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerSecurityContextCapabilities#drop
   */
  readonly drop?: string[];

}

/**
 * SELinuxOptions are the labels to be applied to the container
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesContainerSecurityContextSeLinuxOptions
 */
export interface ClusterWorkflowTemplateSpecTemplatesContainerSecurityContextSeLinuxOptions {
  /**
   * Level is SELinux level label that applies to the container.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * Role is a SELinux role label that applies to the container.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * Type is a SELinux type label that applies to the container.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * User is a SELinux user label that applies to the container.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * WindowsSecurityContextOptions contain Windows-specific options and credentials.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesContainerSecurityContextWindowsOptions
 */
export interface ClusterWorkflowTemplateSpecTemplatesContainerSecurityContextWindowsOptions {
  /**
   * GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * GMSACredentialSpecName is the name of the GMSA credential spec to use. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

}

/**
 * Arguments to a template
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArguments
 */
export interface ClusterWorkflowTemplateSpecTemplatesDagTasksArguments {
  /**
   * Artifacts is the list of artifacts to pass to the template or workflow
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArguments#artifacts
   */
  readonly artifacts?: ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifacts[];

  /**
   * Parameters is the list of parameters to pass to the template or workflow
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArguments#parameters
   */
  readonly parameters?: ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsParameters[];

}

/**
 * ContinueOn defines if a workflow should continue even if a task or step fails/errors. It can be specified if the workflow should continue when the pod errors, fails or both.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksContinueOn
 */
export interface ClusterWorkflowTemplateSpecTemplatesDagTasksContinueOn {
  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksContinueOn#error
   */
  readonly error?: boolean;

  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksContinueOn#failed
   */
  readonly failed?: boolean;

}

/**
 * TemplateRef is a reference of template resource.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksTemplateRef
 */
export interface ClusterWorkflowTemplateSpecTemplatesDagTasksTemplateRef {
  /**
   * ClusterScope indicates the referred template is cluster scoped (i.e. a ClusterWorkflowTemplate).
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksTemplateRef#clusterScope
   */
  readonly clusterScope?: boolean;

  /**
   * Name is the resource name of the template.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksTemplateRef#name
   */
  readonly name?: string;

  /**
   * RuntimeResolution skips validation at creation time. By enabling this option, you can create the referred workflow template before the actual runtime.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksTemplateRef#runtimeResolution
   */
  readonly runtimeResolution?: boolean;

  /**
   * Template is the name of referred template in the resource.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksTemplateRef#template
   */
  readonly template?: string;

}

/**
 * Sequence expands a workflow step into numeric range
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksWithSequence
 */
export interface ClusterWorkflowTemplateSpecTemplatesDagTasksWithSequence {
  /**
   * Count is number of elements in the sequence (default: 0). Not to be used with end
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksWithSequence#count
   */
  readonly count?: string;

  /**
   * Number at which to end the sequence (default: 0). Not to be used with Count
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksWithSequence#end
   */
  readonly end?: string;

  /**
   * Format is a printf format string to format the value in the sequence
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksWithSequence#format
   */
  readonly format?: string;

  /**
   * Number at which to start the sequence (default: 0)
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksWithSequence#start
   */
  readonly start?: string;

}

/**
 * EnvVarSource represents a source for the value of an EnvVar.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersEnvValueFrom
 */
export interface ClusterWorkflowTemplateSpecTemplatesInitContainersEnvValueFrom {
  /**
   * Selects a key from a ConfigMap.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersEnvValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: ClusterWorkflowTemplateSpecTemplatesInitContainersEnvValueFromConfigMapKeyRef;

  /**
   * ObjectFieldSelector selects an APIVersioned field of an object.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersEnvValueFrom#fieldRef
   */
  readonly fieldRef?: ClusterWorkflowTemplateSpecTemplatesInitContainersEnvValueFromFieldRef;

  /**
   * ResourceFieldSelector represents container resources (cpu, memory) and their output format
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersEnvValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: ClusterWorkflowTemplateSpecTemplatesInitContainersEnvValueFromResourceFieldRef;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersEnvValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: ClusterWorkflowTemplateSpecTemplatesInitContainersEnvValueFromSecretKeyRef;

}

/**
 * ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.

The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersEnvFromConfigMapRef
 */
export interface ClusterWorkflowTemplateSpecTemplatesInitContainersEnvFromConfigMapRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersEnvFromConfigMapRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersEnvFromConfigMapRef#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretEnvSource selects a Secret to populate the environment variables with.

The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersEnvFromSecretRef
 */
export interface ClusterWorkflowTemplateSpecTemplatesInitContainersEnvFromSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersEnvFromSecretRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersEnvFromSecretRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Handler defines a specific action that should be taken
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStart
 */
export interface ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStart {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStart#exec
   */
  readonly exec?: ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartExec;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStart#httpGet
   */
  readonly httpGet?: ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartHttpGet;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStart#tcpSocket
   */
  readonly tcpSocket?: ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartTcpSocket;

}

/**
 * Handler defines a specific action that should be taken
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStop
 */
export interface ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStop {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStop#exec
   */
  readonly exec?: ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopExec;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStop#httpGet
   */
  readonly httpGet?: ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopHttpGet;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStop#tcpSocket
   */
  readonly tcpSocket?: ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopTcpSocket;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLivenessProbeExec
 */
export interface ClusterWorkflowTemplateSpecTemplatesInitContainersLivenessProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLivenessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLivenessProbeHttpGet
 */
export interface ClusterWorkflowTemplateSpecTemplatesInitContainersLivenessProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLivenessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLivenessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: ClusterWorkflowTemplateSpecTemplatesInitContainersLivenessProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLivenessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLivenessProbeHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLivenessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLivenessProbeTcpSocket
 */
export interface ClusterWorkflowTemplateSpecTemplatesInitContainersLivenessProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLivenessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLivenessProbeTcpSocket#port
   */
  readonly port: string;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersReadinessProbeExec
 */
export interface ClusterWorkflowTemplateSpecTemplatesInitContainersReadinessProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersReadinessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersReadinessProbeHttpGet
 */
export interface ClusterWorkflowTemplateSpecTemplatesInitContainersReadinessProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersReadinessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersReadinessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: ClusterWorkflowTemplateSpecTemplatesInitContainersReadinessProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersReadinessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersReadinessProbeHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersReadinessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersReadinessProbeTcpSocket
 */
export interface ClusterWorkflowTemplateSpecTemplatesInitContainersReadinessProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersReadinessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersReadinessProbeTcpSocket#port
   */
  readonly port: string;

}

/**
 * Adds and removes POSIX capabilities from running containers.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersSecurityContextCapabilities
 */
export interface ClusterWorkflowTemplateSpecTemplatesInitContainersSecurityContextCapabilities {
  /**
   * Added capabilities
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersSecurityContextCapabilities#add
   */
  readonly add?: string[];

  /**
   * Removed capabilities
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersSecurityContextCapabilities#drop
   */
  readonly drop?: string[];

}

/**
 * SELinuxOptions are the labels to be applied to the container
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersSecurityContextSeLinuxOptions
 */
export interface ClusterWorkflowTemplateSpecTemplatesInitContainersSecurityContextSeLinuxOptions {
  /**
   * Level is SELinux level label that applies to the container.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * Role is a SELinux role label that applies to the container.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * Type is a SELinux type label that applies to the container.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * User is a SELinux user label that applies to the container.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * WindowsSecurityContextOptions contain Windows-specific options and credentials.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersSecurityContextWindowsOptions
 */
export interface ClusterWorkflowTemplateSpecTemplatesInitContainersSecurityContextWindowsOptions {
  /**
   * GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * GMSACredentialSpecName is the name of the GMSA credential spec to use. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersStartupProbeExec
 */
export interface ClusterWorkflowTemplateSpecTemplatesInitContainersStartupProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersStartupProbeExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersStartupProbeHttpGet
 */
export interface ClusterWorkflowTemplateSpecTemplatesInitContainersStartupProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersStartupProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersStartupProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: ClusterWorkflowTemplateSpecTemplatesInitContainersStartupProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersStartupProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersStartupProbeHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersStartupProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersStartupProbeTcpSocket
 */
export interface ClusterWorkflowTemplateSpecTemplatesInitContainersStartupProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersStartupProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersStartupProbeTcpSocket#port
   */
  readonly port: string;

}

/**
 * ArchiveStrategy describes how to archive files/directory when saving artifacts
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsArchive
 */
export interface ClusterWorkflowTemplateSpecTemplatesInputsArtifactsArchive {
  /**
   * NoneStrategy indicates to skip tar process and upload the files or directory tree as independent files. Note that if the artifact is a directory, the artifact driver must support the ability to save/load the directory appropriately.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsArchive#none
   */
  readonly none?: any;

  /**
   * TarStrategy will tar and gzip the file or directory when saving
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsArchive#tar
   */
  readonly tar?: ClusterWorkflowTemplateSpecTemplatesInputsArtifactsArchiveTar;

}

/**
 * ArtifactoryArtifact is the location of an artifactory artifact
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsArtifactory
 */
export interface ClusterWorkflowTemplateSpecTemplatesInputsArtifactsArtifactory {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsArtifactory#passwordSecret
   */
  readonly passwordSecret?: ClusterWorkflowTemplateSpecTemplatesInputsArtifactsArtifactoryPasswordSecret;

  /**
   * URL of the artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsArtifactory#url
   */
  readonly url: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsArtifactory#usernameSecret
   */
  readonly usernameSecret?: ClusterWorkflowTemplateSpecTemplatesInputsArtifactsArtifactoryUsernameSecret;

}

/**
 * GCSArtifact is the location of a GCS artifact
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsGcs
 */
export interface ClusterWorkflowTemplateSpecTemplatesInputsArtifactsGcs {
  /**
   * Bucket is the name of the bucket
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsGcs#bucket
   */
  readonly bucket: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsGcs#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsGcs#serviceAccountKeySecret
   */
  readonly serviceAccountKeySecret?: ClusterWorkflowTemplateSpecTemplatesInputsArtifactsGcsServiceAccountKeySecret;

}

/**
 * GitArtifact is the location of an git artifact
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsGit
 */
export interface ClusterWorkflowTemplateSpecTemplatesInputsArtifactsGit {
  /**
   * Depth specifies clones/fetches should be shallow and include the given number of commits from the branch tip
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsGit#depth
   */
  readonly depth?: number;

  /**
   * Fetch specifies a number of refs that should be fetched before checkout
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsGit#fetch
   */
  readonly fetch?: string[];

  /**
   * InsecureIgnoreHostKey disables SSH strict host key checking during git clone
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsGit#insecureIgnoreHostKey
   */
  readonly insecureIgnoreHostKey?: boolean;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsGit#passwordSecret
   */
  readonly passwordSecret?: ClusterWorkflowTemplateSpecTemplatesInputsArtifactsGitPasswordSecret;

  /**
   * Repo is the git repository
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsGit#repo
   */
  readonly repo: string;

  /**
   * Revision is the git commit, tag, branch to checkout
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsGit#revision
   */
  readonly revision?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsGit#sshPrivateKeySecret
   */
  readonly sshPrivateKeySecret?: ClusterWorkflowTemplateSpecTemplatesInputsArtifactsGitSshPrivateKeySecret;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsGit#usernameSecret
   */
  readonly usernameSecret?: ClusterWorkflowTemplateSpecTemplatesInputsArtifactsGitUsernameSecret;

}

/**
 * HDFSArtifact is the location of an HDFS artifact
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsHdfs
 */
export interface ClusterWorkflowTemplateSpecTemplatesInputsArtifactsHdfs {
  /**
   * Addresses is accessible addresses of HDFS name nodes
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsHdfs#addresses
   */
  readonly addresses: string[];

  /**
   * Force copies a file forcibly even if it exists (default: false)
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsHdfs#force
   */
  readonly force?: boolean;

  /**
   * HDFSUser is the user to access HDFS file system. It is ignored if either ccache or keytab is used.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsHdfs#hdfsUser
   */
  readonly hdfsUser?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsHdfs#krbCCacheSecret
   */
  readonly krbCCacheSecret?: ClusterWorkflowTemplateSpecTemplatesInputsArtifactsHdfsKrbCCacheSecret;

  /**
   * Selects a key from a ConfigMap.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsHdfs#krbConfigConfigMap
   */
  readonly krbConfigConfigMap?: ClusterWorkflowTemplateSpecTemplatesInputsArtifactsHdfsKrbConfigConfigMap;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsHdfs#krbKeytabSecret
   */
  readonly krbKeytabSecret?: ClusterWorkflowTemplateSpecTemplatesInputsArtifactsHdfsKrbKeytabSecret;

  /**
   * KrbRealm is the Kerberos realm used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsHdfs#krbRealm
   */
  readonly krbRealm?: string;

  /**
   * KrbServicePrincipalName is the principal name of Kerberos service It must be set if either ccache or keytab is used.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsHdfs#krbServicePrincipalName
   */
  readonly krbServicePrincipalName?: string;

  /**
   * KrbUsername is the Kerberos username used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsHdfs#krbUsername
   */
  readonly krbUsername?: string;

  /**
   * Path is a file path in HDFS
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsHdfs#path
   */
  readonly path: string;

}

/**
 * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsHttp
 */
export interface ClusterWorkflowTemplateSpecTemplatesInputsArtifactsHttp {
  /**
   * URL of the artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsHttp#url
   */
  readonly url: string;

}

/**
 * OSSArtifact is the location of an Alibaba Cloud OSS artifact
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsOss
 */
export interface ClusterWorkflowTemplateSpecTemplatesInputsArtifactsOss {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsOss#accessKeySecret
   */
  readonly accessKeySecret: ClusterWorkflowTemplateSpecTemplatesInputsArtifactsOssAccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsOss#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsOss#endpoint
   */
  readonly endpoint: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsOss#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsOss#secretKeySecret
   */
  readonly secretKeySecret: ClusterWorkflowTemplateSpecTemplatesInputsArtifactsOssSecretKeySecret;

}

/**
 * RawArtifact allows raw string content to be placed as an artifact in a container
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsRaw
 */
export interface ClusterWorkflowTemplateSpecTemplatesInputsArtifactsRaw {
  /**
   * Data is the string contents of the artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsRaw#data
   */
  readonly data: string;

}

/**
 * S3Artifact is the location of an S3 artifact
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsS3
 */
export interface ClusterWorkflowTemplateSpecTemplatesInputsArtifactsS3 {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsS3#accessKeySecret
   */
  readonly accessKeySecret: ClusterWorkflowTemplateSpecTemplatesInputsArtifactsS3AccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsS3#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsS3#endpoint
   */
  readonly endpoint: string;

  /**
   * Insecure will connect to the service with TLS
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsS3#insecure
   */
  readonly insecure?: boolean;

  /**
   * Key is the key in the bucket where the artifact resides
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsS3#key
   */
  readonly key: string;

  /**
   * Region contains the optional bucket region
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsS3#region
   */
  readonly region?: string;

  /**
   * RoleARN is the Amazon Resource Name (ARN) of the role to assume.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsS3#roleARN
   */
  readonly roleARN?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsS3#secretKeySecret
   */
  readonly secretKeySecret: ClusterWorkflowTemplateSpecTemplatesInputsArtifactsS3SecretKeySecret;

  /**
   * UseSDKCreds tells the driver to figure out credentials based on sdk defaults.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsS3#useSDKCreds
   */
  readonly useSDKCreds?: boolean;

}

/**
 * ValueFrom describes a location in which to obtain the value to a parameter
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInputsParametersValueFrom
 */
export interface ClusterWorkflowTemplateSpecTemplatesInputsParametersValueFrom {
  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsParametersValueFrom#default
   */
  readonly default?: string;

  /**
   * JQFilter expression against the resource object in resource templates
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsParametersValueFrom#jqFilter
   */
  readonly jqFilter?: string;

  /**
   * JSONPath of a resource to retrieve an output parameter value from in resource templates
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsParametersValueFrom#jsonPath
   */
  readonly jsonPath?: string;

  /**
   * Parameter reference to a step or dag task in which to retrieve an output parameter value from (e.g. '{{steps.mystep.outputs.myparam}}')
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsParametersValueFrom#parameter
   */
  readonly parameter?: string;

  /**
   * Path in the container to retrieve an output parameter value from in container templates
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsParametersValueFrom#path
   */
  readonly path?: string;

}

/**
 * Counter is a Counter prometheus metric
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesMetricsPrometheusCounter
 */
export interface ClusterWorkflowTemplateSpecTemplatesMetricsPrometheusCounter {
  /**
   * Value is the value of the metric
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesMetricsPrometheusCounter#value
   */
  readonly value: string;

}

/**
 * Gauge is a Gauge prometheus metric
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesMetricsPrometheusGauge
 */
export interface ClusterWorkflowTemplateSpecTemplatesMetricsPrometheusGauge {
  /**
   * Realtime emits this metric in real time if applicable
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesMetricsPrometheusGauge#realtime
   */
  readonly realtime: boolean;

  /**
   * Value is the value of the metric
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesMetricsPrometheusGauge#value
   */
  readonly value: string;

}

/**
 * Histogram is a Histogram prometheus metric
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesMetricsPrometheusHistogram
 */
export interface ClusterWorkflowTemplateSpecTemplatesMetricsPrometheusHistogram {
  /**
   * Buckets is a list of bucket divisors for the histogram
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesMetricsPrometheusHistogram#buckets
   */
  readonly buckets: number[];

  /**
   * Value is the value of the metric
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesMetricsPrometheusHistogram#value
   */
  readonly value: string;

}

/**
 * MetricLabel is a single label for a prometheus metric
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesMetricsPrometheusLabels
 */
export interface ClusterWorkflowTemplateSpecTemplatesMetricsPrometheusLabels {
  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesMetricsPrometheusLabels#key
   */
  readonly key: string;

  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesMetricsPrometheusLabels#value
   */
  readonly value: string;

}

/**
 * ArchiveStrategy describes how to archive files/directory when saving artifacts
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsArchive
 */
export interface ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsArchive {
  /**
   * NoneStrategy indicates to skip tar process and upload the files or directory tree as independent files. Note that if the artifact is a directory, the artifact driver must support the ability to save/load the directory appropriately.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsArchive#none
   */
  readonly none?: any;

  /**
   * TarStrategy will tar and gzip the file or directory when saving
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsArchive#tar
   */
  readonly tar?: ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsArchiveTar;

}

/**
 * ArtifactoryArtifact is the location of an artifactory artifact
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsArtifactory
 */
export interface ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsArtifactory {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsArtifactory#passwordSecret
   */
  readonly passwordSecret?: ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsArtifactoryPasswordSecret;

  /**
   * URL of the artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsArtifactory#url
   */
  readonly url: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsArtifactory#usernameSecret
   */
  readonly usernameSecret?: ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsArtifactoryUsernameSecret;

}

/**
 * GCSArtifact is the location of a GCS artifact
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsGcs
 */
export interface ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsGcs {
  /**
   * Bucket is the name of the bucket
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsGcs#bucket
   */
  readonly bucket: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsGcs#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsGcs#serviceAccountKeySecret
   */
  readonly serviceAccountKeySecret?: ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsGcsServiceAccountKeySecret;

}

/**
 * GitArtifact is the location of an git artifact
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsGit
 */
export interface ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsGit {
  /**
   * Depth specifies clones/fetches should be shallow and include the given number of commits from the branch tip
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsGit#depth
   */
  readonly depth?: number;

  /**
   * Fetch specifies a number of refs that should be fetched before checkout
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsGit#fetch
   */
  readonly fetch?: string[];

  /**
   * InsecureIgnoreHostKey disables SSH strict host key checking during git clone
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsGit#insecureIgnoreHostKey
   */
  readonly insecureIgnoreHostKey?: boolean;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsGit#passwordSecret
   */
  readonly passwordSecret?: ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsGitPasswordSecret;

  /**
   * Repo is the git repository
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsGit#repo
   */
  readonly repo: string;

  /**
   * Revision is the git commit, tag, branch to checkout
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsGit#revision
   */
  readonly revision?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsGit#sshPrivateKeySecret
   */
  readonly sshPrivateKeySecret?: ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsGitSshPrivateKeySecret;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsGit#usernameSecret
   */
  readonly usernameSecret?: ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsGitUsernameSecret;

}

/**
 * HDFSArtifact is the location of an HDFS artifact
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsHdfs
 */
export interface ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsHdfs {
  /**
   * Addresses is accessible addresses of HDFS name nodes
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsHdfs#addresses
   */
  readonly addresses: string[];

  /**
   * Force copies a file forcibly even if it exists (default: false)
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsHdfs#force
   */
  readonly force?: boolean;

  /**
   * HDFSUser is the user to access HDFS file system. It is ignored if either ccache or keytab is used.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsHdfs#hdfsUser
   */
  readonly hdfsUser?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsHdfs#krbCCacheSecret
   */
  readonly krbCCacheSecret?: ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsHdfsKrbCCacheSecret;

  /**
   * Selects a key from a ConfigMap.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsHdfs#krbConfigConfigMap
   */
  readonly krbConfigConfigMap?: ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsHdfsKrbConfigConfigMap;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsHdfs#krbKeytabSecret
   */
  readonly krbKeytabSecret?: ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsHdfsKrbKeytabSecret;

  /**
   * KrbRealm is the Kerberos realm used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsHdfs#krbRealm
   */
  readonly krbRealm?: string;

  /**
   * KrbServicePrincipalName is the principal name of Kerberos service It must be set if either ccache or keytab is used.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsHdfs#krbServicePrincipalName
   */
  readonly krbServicePrincipalName?: string;

  /**
   * KrbUsername is the Kerberos username used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsHdfs#krbUsername
   */
  readonly krbUsername?: string;

  /**
   * Path is a file path in HDFS
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsHdfs#path
   */
  readonly path: string;

}

/**
 * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsHttp
 */
export interface ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsHttp {
  /**
   * URL of the artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsHttp#url
   */
  readonly url: string;

}

/**
 * OSSArtifact is the location of an Alibaba Cloud OSS artifact
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsOss
 */
export interface ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsOss {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsOss#accessKeySecret
   */
  readonly accessKeySecret: ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsOssAccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsOss#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsOss#endpoint
   */
  readonly endpoint: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsOss#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsOss#secretKeySecret
   */
  readonly secretKeySecret: ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsOssSecretKeySecret;

}

/**
 * RawArtifact allows raw string content to be placed as an artifact in a container
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsRaw
 */
export interface ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsRaw {
  /**
   * Data is the string contents of the artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsRaw#data
   */
  readonly data: string;

}

/**
 * S3Artifact is the location of an S3 artifact
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsS3
 */
export interface ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsS3 {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsS3#accessKeySecret
   */
  readonly accessKeySecret: ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsS3AccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsS3#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsS3#endpoint
   */
  readonly endpoint: string;

  /**
   * Insecure will connect to the service with TLS
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsS3#insecure
   */
  readonly insecure?: boolean;

  /**
   * Key is the key in the bucket where the artifact resides
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsS3#key
   */
  readonly key: string;

  /**
   * Region contains the optional bucket region
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsS3#region
   */
  readonly region?: string;

  /**
   * RoleARN is the Amazon Resource Name (ARN) of the role to assume.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsS3#roleARN
   */
  readonly roleARN?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsS3#secretKeySecret
   */
  readonly secretKeySecret: ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsS3SecretKeySecret;

  /**
   * UseSDKCreds tells the driver to figure out credentials based on sdk defaults.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsS3#useSDKCreds
   */
  readonly useSDKCreds?: boolean;

}

/**
 * ValueFrom describes a location in which to obtain the value to a parameter
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesOutputsParametersValueFrom
 */
export interface ClusterWorkflowTemplateSpecTemplatesOutputsParametersValueFrom {
  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsParametersValueFrom#default
   */
  readonly default?: string;

  /**
   * JQFilter expression against the resource object in resource templates
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsParametersValueFrom#jqFilter
   */
  readonly jqFilter?: string;

  /**
   * JSONPath of a resource to retrieve an output parameter value from in resource templates
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsParametersValueFrom#jsonPath
   */
  readonly jsonPath?: string;

  /**
   * Parameter reference to a step or dag task in which to retrieve an output parameter value from (e.g. '{{steps.mystep.outputs.myparam}}')
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsParametersValueFrom#parameter
   */
  readonly parameter?: string;

  /**
   * Path in the container to retrieve an output parameter value from in container templates
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsParametersValueFrom#path
   */
  readonly path?: string;

}

/**
 * EnvVarSource represents a source for the value of an EnvVar.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesScriptEnvValueFrom
 */
export interface ClusterWorkflowTemplateSpecTemplatesScriptEnvValueFrom {
  /**
   * Selects a key from a ConfigMap.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptEnvValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: ClusterWorkflowTemplateSpecTemplatesScriptEnvValueFromConfigMapKeyRef;

  /**
   * ObjectFieldSelector selects an APIVersioned field of an object.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptEnvValueFrom#fieldRef
   */
  readonly fieldRef?: ClusterWorkflowTemplateSpecTemplatesScriptEnvValueFromFieldRef;

  /**
   * ResourceFieldSelector represents container resources (cpu, memory) and their output format
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptEnvValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: ClusterWorkflowTemplateSpecTemplatesScriptEnvValueFromResourceFieldRef;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptEnvValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: ClusterWorkflowTemplateSpecTemplatesScriptEnvValueFromSecretKeyRef;

}

/**
 * ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.

The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesScriptEnvFromConfigMapRef
 */
export interface ClusterWorkflowTemplateSpecTemplatesScriptEnvFromConfigMapRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptEnvFromConfigMapRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptEnvFromConfigMapRef#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretEnvSource selects a Secret to populate the environment variables with.

The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesScriptEnvFromSecretRef
 */
export interface ClusterWorkflowTemplateSpecTemplatesScriptEnvFromSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptEnvFromSecretRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptEnvFromSecretRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Handler defines a specific action that should be taken
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePostStart
 */
export interface ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePostStart {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePostStart#exec
   */
  readonly exec?: ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePostStartExec;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePostStart#httpGet
   */
  readonly httpGet?: ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePostStartHttpGet;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePostStart#tcpSocket
   */
  readonly tcpSocket?: ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePostStartTcpSocket;

}

/**
 * Handler defines a specific action that should be taken
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePreStop
 */
export interface ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePreStop {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePreStop#exec
   */
  readonly exec?: ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePreStopExec;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePreStop#httpGet
   */
  readonly httpGet?: ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePreStopHttpGet;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePreStop#tcpSocket
   */
  readonly tcpSocket?: ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePreStopTcpSocket;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesScriptLivenessProbeExec
 */
export interface ClusterWorkflowTemplateSpecTemplatesScriptLivenessProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptLivenessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesScriptLivenessProbeHttpGet
 */
export interface ClusterWorkflowTemplateSpecTemplatesScriptLivenessProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptLivenessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptLivenessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: ClusterWorkflowTemplateSpecTemplatesScriptLivenessProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptLivenessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptLivenessProbeHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptLivenessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesScriptLivenessProbeTcpSocket
 */
export interface ClusterWorkflowTemplateSpecTemplatesScriptLivenessProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptLivenessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptLivenessProbeTcpSocket#port
   */
  readonly port: string;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesScriptReadinessProbeExec
 */
export interface ClusterWorkflowTemplateSpecTemplatesScriptReadinessProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptReadinessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesScriptReadinessProbeHttpGet
 */
export interface ClusterWorkflowTemplateSpecTemplatesScriptReadinessProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptReadinessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptReadinessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: ClusterWorkflowTemplateSpecTemplatesScriptReadinessProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptReadinessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptReadinessProbeHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptReadinessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesScriptReadinessProbeTcpSocket
 */
export interface ClusterWorkflowTemplateSpecTemplatesScriptReadinessProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptReadinessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptReadinessProbeTcpSocket#port
   */
  readonly port: string;

}

/**
 * Adds and removes POSIX capabilities from running containers.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesScriptSecurityContextCapabilities
 */
export interface ClusterWorkflowTemplateSpecTemplatesScriptSecurityContextCapabilities {
  /**
   * Added capabilities
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptSecurityContextCapabilities#add
   */
  readonly add?: string[];

  /**
   * Removed capabilities
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptSecurityContextCapabilities#drop
   */
  readonly drop?: string[];

}

/**
 * SELinuxOptions are the labels to be applied to the container
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesScriptSecurityContextSeLinuxOptions
 */
export interface ClusterWorkflowTemplateSpecTemplatesScriptSecurityContextSeLinuxOptions {
  /**
   * Level is SELinux level label that applies to the container.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * Role is a SELinux role label that applies to the container.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * Type is a SELinux type label that applies to the container.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * User is a SELinux user label that applies to the container.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * WindowsSecurityContextOptions contain Windows-specific options and credentials.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesScriptSecurityContextWindowsOptions
 */
export interface ClusterWorkflowTemplateSpecTemplatesScriptSecurityContextWindowsOptions {
  /**
   * GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * GMSACredentialSpecName is the name of the GMSA credential spec to use. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesScriptStartupProbeExec
 */
export interface ClusterWorkflowTemplateSpecTemplatesScriptStartupProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptStartupProbeExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesScriptStartupProbeHttpGet
 */
export interface ClusterWorkflowTemplateSpecTemplatesScriptStartupProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptStartupProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptStartupProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: ClusterWorkflowTemplateSpecTemplatesScriptStartupProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptStartupProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptStartupProbeHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptStartupProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesScriptStartupProbeTcpSocket
 */
export interface ClusterWorkflowTemplateSpecTemplatesScriptStartupProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptStartupProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptStartupProbeTcpSocket#port
   */
  readonly port: string;

}

/**
 * EnvVarSource represents a source for the value of an EnvVar.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsEnvValueFrom
 */
export interface ClusterWorkflowTemplateSpecTemplatesSidecarsEnvValueFrom {
  /**
   * Selects a key from a ConfigMap.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsEnvValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: ClusterWorkflowTemplateSpecTemplatesSidecarsEnvValueFromConfigMapKeyRef;

  /**
   * ObjectFieldSelector selects an APIVersioned field of an object.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsEnvValueFrom#fieldRef
   */
  readonly fieldRef?: ClusterWorkflowTemplateSpecTemplatesSidecarsEnvValueFromFieldRef;

  /**
   * ResourceFieldSelector represents container resources (cpu, memory) and their output format
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsEnvValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: ClusterWorkflowTemplateSpecTemplatesSidecarsEnvValueFromResourceFieldRef;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsEnvValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: ClusterWorkflowTemplateSpecTemplatesSidecarsEnvValueFromSecretKeyRef;

}

/**
 * ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.

The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsEnvFromConfigMapRef
 */
export interface ClusterWorkflowTemplateSpecTemplatesSidecarsEnvFromConfigMapRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsEnvFromConfigMapRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsEnvFromConfigMapRef#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretEnvSource selects a Secret to populate the environment variables with.

The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsEnvFromSecretRef
 */
export interface ClusterWorkflowTemplateSpecTemplatesSidecarsEnvFromSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsEnvFromSecretRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsEnvFromSecretRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Handler defines a specific action that should be taken
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStart
 */
export interface ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStart {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStart#exec
   */
  readonly exec?: ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartExec;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStart#httpGet
   */
  readonly httpGet?: ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartHttpGet;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStart#tcpSocket
   */
  readonly tcpSocket?: ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartTcpSocket;

}

/**
 * Handler defines a specific action that should be taken
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStop
 */
export interface ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStop {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStop#exec
   */
  readonly exec?: ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopExec;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStop#httpGet
   */
  readonly httpGet?: ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopHttpGet;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStop#tcpSocket
   */
  readonly tcpSocket?: ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopTcpSocket;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLivenessProbeExec
 */
export interface ClusterWorkflowTemplateSpecTemplatesSidecarsLivenessProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLivenessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLivenessProbeHttpGet
 */
export interface ClusterWorkflowTemplateSpecTemplatesSidecarsLivenessProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLivenessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLivenessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: ClusterWorkflowTemplateSpecTemplatesSidecarsLivenessProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLivenessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLivenessProbeHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLivenessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLivenessProbeTcpSocket
 */
export interface ClusterWorkflowTemplateSpecTemplatesSidecarsLivenessProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLivenessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLivenessProbeTcpSocket#port
   */
  readonly port: string;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsReadinessProbeExec
 */
export interface ClusterWorkflowTemplateSpecTemplatesSidecarsReadinessProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsReadinessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsReadinessProbeHttpGet
 */
export interface ClusterWorkflowTemplateSpecTemplatesSidecarsReadinessProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsReadinessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsReadinessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: ClusterWorkflowTemplateSpecTemplatesSidecarsReadinessProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsReadinessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsReadinessProbeHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsReadinessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsReadinessProbeTcpSocket
 */
export interface ClusterWorkflowTemplateSpecTemplatesSidecarsReadinessProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsReadinessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsReadinessProbeTcpSocket#port
   */
  readonly port: string;

}

/**
 * Adds and removes POSIX capabilities from running containers.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsSecurityContextCapabilities
 */
export interface ClusterWorkflowTemplateSpecTemplatesSidecarsSecurityContextCapabilities {
  /**
   * Added capabilities
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsSecurityContextCapabilities#add
   */
  readonly add?: string[];

  /**
   * Removed capabilities
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsSecurityContextCapabilities#drop
   */
  readonly drop?: string[];

}

/**
 * SELinuxOptions are the labels to be applied to the container
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsSecurityContextSeLinuxOptions
 */
export interface ClusterWorkflowTemplateSpecTemplatesSidecarsSecurityContextSeLinuxOptions {
  /**
   * Level is SELinux level label that applies to the container.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * Role is a SELinux role label that applies to the container.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * Type is a SELinux type label that applies to the container.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * User is a SELinux user label that applies to the container.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * WindowsSecurityContextOptions contain Windows-specific options and credentials.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsSecurityContextWindowsOptions
 */
export interface ClusterWorkflowTemplateSpecTemplatesSidecarsSecurityContextWindowsOptions {
  /**
   * GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * GMSACredentialSpecName is the name of the GMSA credential spec to use. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsStartupProbeExec
 */
export interface ClusterWorkflowTemplateSpecTemplatesSidecarsStartupProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsStartupProbeExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsStartupProbeHttpGet
 */
export interface ClusterWorkflowTemplateSpecTemplatesSidecarsStartupProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsStartupProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsStartupProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: ClusterWorkflowTemplateSpecTemplatesSidecarsStartupProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsStartupProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsStartupProbeHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsStartupProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsStartupProbeTcpSocket
 */
export interface ClusterWorkflowTemplateSpecTemplatesSidecarsStartupProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsStartupProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsStartupProbeTcpSocket#port
   */
  readonly port: string;

}

/**
 * Artifact indicates an artifact to place at a specified path
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifacts
 */
export interface ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifacts {
  /**
   * ArchiveStrategy describes how to archive files/directory when saving artifacts
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifacts#archive
   */
  readonly archive?: ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsArchive;

  /**
   * ArchiveLogs indicates if the container logs should be archived
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifacts#archiveLogs
   */
  readonly archiveLogs?: boolean;

  /**
   * ArtifactoryArtifact is the location of an artifactory artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifacts#artifactory
   */
  readonly artifactory?: ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsArtifactory;

  /**
   * From allows an artifact to reference an artifact from a previous step
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifacts#from
   */
  readonly from?: string;

  /**
   * GCSArtifact is the location of a GCS artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifacts#gcs
   */
  readonly gcs?: ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGcs;

  /**
   * GitArtifact is the location of an git artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifacts#git
   */
  readonly git?: ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGit;

  /**
   * GlobalName exports an output artifact to the global scope, making it available as '{{io.argoproj.workflow.v1alpha1.outputs.artifacts.XXXX}} and in workflow.status.outputs.artifacts
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifacts#globalName
   */
  readonly globalName?: string;

  /**
   * HDFSArtifact is the location of an HDFS artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifacts#hdfs
   */
  readonly hdfs?: ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfs;

  /**
   * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifacts#http
   */
  readonly http?: ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHttp;

  /**
   * mode bits to use on this file, must be a value between 0 and 0777 set when loading input artifacts.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifacts#mode
   */
  readonly mode?: number;

  /**
   * name of the artifact. must be unique within a template's inputs/outputs.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifacts#name
   */
  readonly name: string;

  /**
   * Make Artifacts optional, if Artifacts doesn't generate or exist
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifacts#optional
   */
  readonly optional?: boolean;

  /**
   * OSSArtifact is the location of an Alibaba Cloud OSS artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifacts#oss
   */
  readonly oss?: ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsOss;

  /**
   * Path is the container path to the artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifacts#path
   */
  readonly path?: string;

  /**
   * RawArtifact allows raw string content to be placed as an artifact in a container
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifacts#raw
   */
  readonly raw?: ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsRaw;

  /**
   * S3Artifact is the location of an S3 artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifacts#s3
   */
  readonly s3?: ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsS3;

}

/**
 * Parameter indicate a passed string parameter to a service template with an optional default value
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsParameters
 */
export interface ClusterWorkflowTemplateSpecTemplatesStepsArgumentsParameters {
  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsParameters#default
   */
  readonly default?: string;

  /**
   * GlobalName exports an output parameter to the global scope, making it available as '{{io.argoproj.workflow.v1alpha1.outputs.parameters.XXXX}} and in workflow.status.outputs.parameters
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsParameters#globalName
   */
  readonly globalName?: string;

  /**
   * Name is the parameter name
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsParameters#name
   */
  readonly name: string;

  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsParameters#value
   */
  readonly value?: string;

  /**
   * ValueFrom describes a location in which to obtain the value to a parameter
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsParameters#valueFrom
   */
  readonly valueFrom?: ClusterWorkflowTemplateSpecTemplatesStepsArgumentsParametersValueFrom;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesVolumesCephfsSecretRef
 */
export interface ClusterWorkflowTemplateSpecTemplatesVolumesCephfsSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesCephfsSecretRef#name
   */
  readonly name?: string;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesVolumesCinderSecretRef
 */
export interface ClusterWorkflowTemplateSpecTemplatesVolumesCinderSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesCinderSecretRef#name
   */
  readonly name?: string;

}

/**
 * Maps a string key to a path within a volume.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesVolumesConfigMapItems
 */
export interface ClusterWorkflowTemplateSpecTemplatesVolumesConfigMapItems {
  /**
   * The key to project.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesConfigMapItems#key
   */
  readonly key: string;

  /**
   * Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesConfigMapItems#mode
   */
  readonly mode?: number;

  /**
   * The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesConfigMapItems#path
   */
  readonly path: string;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesVolumesCsiNodePublishSecretRef
 */
export interface ClusterWorkflowTemplateSpecTemplatesVolumesCsiNodePublishSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesCsiNodePublishSecretRef#name
   */
  readonly name?: string;

}

/**
 * DownwardAPIVolumeFile represents information to create the file containing the pod field
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesVolumesDownwardApiItems
 */
export interface ClusterWorkflowTemplateSpecTemplatesVolumesDownwardApiItems {
  /**
   * ObjectFieldSelector selects an APIVersioned field of an object.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesDownwardApiItems#fieldRef
   */
  readonly fieldRef?: ClusterWorkflowTemplateSpecTemplatesVolumesDownwardApiItemsFieldRef;

  /**
   * Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesDownwardApiItems#mode
   */
  readonly mode?: number;

  /**
   * Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesDownwardApiItems#path
   */
  readonly path: string;

  /**
   * ResourceFieldSelector represents container resources (cpu, memory) and their output format
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesDownwardApiItems#resourceFieldRef
   */
  readonly resourceFieldRef?: ClusterWorkflowTemplateSpecTemplatesVolumesDownwardApiItemsResourceFieldRef;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesVolumesFlexVolumeSecretRef
 */
export interface ClusterWorkflowTemplateSpecTemplatesVolumesFlexVolumeSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesFlexVolumeSecretRef#name
   */
  readonly name?: string;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesVolumesIscsiSecretRef
 */
export interface ClusterWorkflowTemplateSpecTemplatesVolumesIscsiSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesIscsiSecretRef#name
   */
  readonly name?: string;

}

/**
 * Projection that may be projected along with other supported volume types
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSources
 */
export interface ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSources {
  /**
   * Adapts a ConfigMap into a projected volume.

The contents of the target ConfigMap's Data field will be presented in a projected volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. Note that this is identical to a configmap volume source without the default mode.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSources#configMap
   */
  readonly configMap?: ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesConfigMap;

  /**
   * Represents downward API info for projecting into a projected volume. Note that this is identical to a downwardAPI volume source without the default mode.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSources#downwardAPI
   */
  readonly downwardAPI?: ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardApi;

  /**
   * Adapts a secret into a projected volume.

The contents of the target Secret's Data field will be presented in a projected volume as files using the keys in the Data field as the file names. Note that this is identical to a secret volume source without the default mode.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSources#secret
   */
  readonly secret?: ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesSecret;

  /**
   * ServiceAccountTokenProjection represents a projected service account token volume. This projection can be used to insert a service account token into the pods runtime filesystem for use against APIs (Kubernetes API Server or otherwise).
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSources#serviceAccountToken
   */
  readonly serviceAccountToken?: ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesServiceAccountToken;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesVolumesRbdSecretRef
 */
export interface ClusterWorkflowTemplateSpecTemplatesVolumesRbdSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesRbdSecretRef#name
   */
  readonly name?: string;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesVolumesScaleIoSecretRef
 */
export interface ClusterWorkflowTemplateSpecTemplatesVolumesScaleIoSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesScaleIoSecretRef#name
   */
  readonly name?: string;

}

/**
 * Maps a string key to a path within a volume.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesVolumesSecretItems
 */
export interface ClusterWorkflowTemplateSpecTemplatesVolumesSecretItems {
  /**
   * The key to project.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesSecretItems#key
   */
  readonly key: string;

  /**
   * Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesSecretItems#mode
   */
  readonly mode?: number;

  /**
   * The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesSecretItems#path
   */
  readonly path: string;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesVolumesStorageosSecretRef
 */
export interface ClusterWorkflowTemplateSpecTemplatesVolumesStorageosSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesStorageosSecretRef#name
   */
  readonly name?: string;

}

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema ClusterWorkflowTemplateSpecVolumeClaimTemplatesSpecSelectorMatchExpressions
 */
export interface ClusterWorkflowTemplateSpecVolumeClaimTemplatesSpecSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema ClusterWorkflowTemplateSpecVolumeClaimTemplatesSpecSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema ClusterWorkflowTemplateSpecVolumeClaimTemplatesSpecSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   *
   * @schema ClusterWorkflowTemplateSpecVolumeClaimTemplatesSpecSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * ObjectFieldSelector selects an APIVersioned field of an object.
 *
 * @schema ClusterWorkflowTemplateSpecVolumesDownwardApiItemsFieldRef
 */
export interface ClusterWorkflowTemplateSpecVolumesDownwardApiItemsFieldRef {
  /**
   * Version of the schema the FieldPath is written in terms of, defaults to "v1".
   *
   * @schema ClusterWorkflowTemplateSpecVolumesDownwardApiItemsFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * Path of the field to select in the specified API version.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesDownwardApiItemsFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * ResourceFieldSelector represents container resources (cpu, memory) and their output format
 *
 * @schema ClusterWorkflowTemplateSpecVolumesDownwardApiItemsResourceFieldRef
 */
export interface ClusterWorkflowTemplateSpecVolumesDownwardApiItemsResourceFieldRef {
  /**
   * Container name: required for volumes, optional for env vars
   *
   * @schema ClusterWorkflowTemplateSpecVolumesDownwardApiItemsResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and Int64() accessors.

The serialization format is:

<quantity>        ::= <signedNumber><suffix>
  (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
<decimalSI>       ::= m | "" | k | M | G | T | P | E
  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
<decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  a. No precision is lost
  b. No fractional digits will be emitted
  c. The exponent (or suffix) is as large as possible.
The sign will be omitted unless the number is negative.

Examples:
  1.5 will be serialized as "1500m"
  1.5Gi will be serialized as "1536Mi"

Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.

Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesDownwardApiItemsResourceFieldRef#divisor
   */
  readonly divisor?: string;

  /**
   * Required: resource to select
   *
   * @schema ClusterWorkflowTemplateSpecVolumesDownwardApiItemsResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Adapts a ConfigMap into a projected volume.

The contents of the target ConfigMap's Data field will be presented in a projected volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. Note that this is identical to a configmap volume source without the default mode.
 *
 * @schema ClusterWorkflowTemplateSpecVolumesProjectedSourcesConfigMap
 */
export interface ClusterWorkflowTemplateSpecVolumesProjectedSourcesConfigMap {
  /**
   * If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesProjectedSourcesConfigMap#items
   */
  readonly items?: ClusterWorkflowTemplateSpecVolumesProjectedSourcesConfigMapItems[];

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecVolumesProjectedSourcesConfigMap#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its keys must be defined
   *
   * @schema ClusterWorkflowTemplateSpecVolumesProjectedSourcesConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Represents downward API info for projecting into a projected volume. Note that this is identical to a downwardAPI volume source without the default mode.
 *
 * @schema ClusterWorkflowTemplateSpecVolumesProjectedSourcesDownwardApi
 */
export interface ClusterWorkflowTemplateSpecVolumesProjectedSourcesDownwardApi {
  /**
   * Items is a list of DownwardAPIVolume file
   *
   * @schema ClusterWorkflowTemplateSpecVolumesProjectedSourcesDownwardApi#items
   */
  readonly items?: ClusterWorkflowTemplateSpecVolumesProjectedSourcesDownwardApiItems[];

}

/**
 * Adapts a secret into a projected volume.

The contents of the target Secret's Data field will be presented in a projected volume as files using the keys in the Data field as the file names. Note that this is identical to a secret volume source without the default mode.
 *
 * @schema ClusterWorkflowTemplateSpecVolumesProjectedSourcesSecret
 */
export interface ClusterWorkflowTemplateSpecVolumesProjectedSourcesSecret {
  /**
   * If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesProjectedSourcesSecret#items
   */
  readonly items?: ClusterWorkflowTemplateSpecVolumesProjectedSourcesSecretItems[];

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecVolumesProjectedSourcesSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecVolumesProjectedSourcesSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * ServiceAccountTokenProjection represents a projected service account token volume. This projection can be used to insert a service account token into the pods runtime filesystem for use against APIs (Kubernetes API Server or otherwise).
 *
 * @schema ClusterWorkflowTemplateSpecVolumesProjectedSourcesServiceAccountToken
 */
export interface ClusterWorkflowTemplateSpecVolumesProjectedSourcesServiceAccountToken {
  /**
   * Audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesProjectedSourcesServiceAccountToken#audience
   */
  readonly audience?: string;

  /**
   * ExpirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.
   *
   * @default 1 hour and must be at least 10 minutes.
   * @schema ClusterWorkflowTemplateSpecVolumesProjectedSourcesServiceAccountToken#expirationSeconds
   */
  readonly expirationSeconds?: number;

  /**
   * Path is the path relative to the mount point of the file to project the token into.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesProjectedSourcesServiceAccountToken#path
   */
  readonly path: string;

}

/**
 * A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema ClusterWorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions
 */
export interface ClusterWorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
  /**
   * The label key that the selector applies to.
   *
   * @schema ClusterWorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#key
   */
  readonly key: string;

  /**
   * Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
   *
   * @schema ClusterWorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
   *
   * @schema ClusterWorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema ClusterWorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields
 */
export interface ClusterWorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
  /**
   * The label key that the selector applies to.
   *
   * @schema ClusterWorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#key
   */
  readonly key: string;

  /**
   * Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
   *
   * @schema ClusterWorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#operator
   */
  readonly operator: string;

  /**
   * An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
   *
   * @schema ClusterWorkflowTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#values
   */
  readonly values?: string[];

}

/**
 * A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema ClusterWorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions
 */
export interface ClusterWorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
  /**
   * The label key that the selector applies to.
   *
   * @schema ClusterWorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#key
   */
  readonly key: string;

  /**
   * Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
   *
   * @schema ClusterWorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
   *
   * @schema ClusterWorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema ClusterWorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields
 */
export interface ClusterWorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
  /**
   * The label key that the selector applies to.
   *
   * @schema ClusterWorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#key
   */
  readonly key: string;

  /**
   * Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
   *
   * @schema ClusterWorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#operator
   */
  readonly operator: string;

  /**
   * An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
   *
   * @schema ClusterWorkflowTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#values
   */
  readonly values?: string[];

}

/**
 * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
 *
 * @schema ClusterWorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector
 */
export interface ClusterWorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema ClusterWorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchExpressions
   */
  readonly matchExpressions?: ClusterWorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema ClusterWorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema ClusterWorkflowTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions
 */
export interface ClusterWorkflowTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema ClusterWorkflowTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema ClusterWorkflowTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   *
   * @schema ClusterWorkflowTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
 *
 * @schema ClusterWorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector
 */
export interface ClusterWorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema ClusterWorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchExpressions
   */
  readonly matchExpressions?: ClusterWorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema ClusterWorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema ClusterWorkflowTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions
 */
export interface ClusterWorkflowTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema ClusterWorkflowTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema ClusterWorkflowTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   *
   * @schema ClusterWorkflowTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference
 */
export interface ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
  /**
   * A list of node selector requirements by node's labels.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference#matchExpressions
   */
  readonly matchExpressions?: ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions[];

  /**
   * A list of node selector requirements by node's fields.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference#matchFields
   */
  readonly matchFields?: ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields[];

}

/**
 * A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms
 */
export interface ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
  /**
   * A list of node selector requirements by node's labels.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms#matchExpressions
   */
  readonly matchExpressions?: ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions[];

  /**
   * A list of node selector requirements by node's fields.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms#matchFields
   */
  readonly matchFields?: ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields[];

}

/**
 * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm
 */
export interface ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
  /**
   * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#labelSelector
   */
  readonly labelSelector?: ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;

  /**
   * namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaces
   */
  readonly namespaces?: string[];

  /**
   * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector
 */
export interface ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchExpressions
   */
  readonly matchExpressions?: ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm
 */
export interface ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
  /**
   * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#labelSelector
   */
  readonly labelSelector?: ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;

  /**
   * namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaces
   */
  readonly namespaces?: string[];

  /**
   * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector
 */
export interface ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchExpressions
   */
  readonly matchExpressions?: ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * TarStrategy will tar and gzip the file or directory when saving
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsArchiveTar
 */
export interface ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsArchiveTar {
  /**
   * CompressionLevel specifies the gzip compression level to use for the artifact. Defaults to gzip.DefaultCompression.
   *
   * @default gzip.DefaultCompression.
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsArchiveTar#compressionLevel
   */
  readonly compressionLevel?: number;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsArtifactoryPasswordSecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsArtifactoryPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsArtifactoryPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsArtifactoryPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsArtifactoryPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsArtifactoryUsernameSecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsArtifactoryUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsArtifactoryUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsArtifactoryUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsArtifactoryUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsGcsServiceAccountKeySecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsGcsServiceAccountKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsGcsServiceAccountKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsGcsServiceAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsGcsServiceAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsGitPasswordSecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsGitPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsGitPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsGitPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsGitPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsGitSshPrivateKeySecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsGitSshPrivateKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsGitSshPrivateKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsGitSshPrivateKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsGitSshPrivateKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsGitUsernameSecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsGitUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsGitUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsGitUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsGitUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsHdfsKrbCCacheSecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsHdfsKrbCCacheSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsHdfsKrbCCacheSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsHdfsKrbCCacheSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsHdfsKrbCCacheSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Selects a key from a ConfigMap.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsHdfsKrbConfigConfigMap
 */
export interface ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsHdfsKrbConfigConfigMap {
  /**
   * The key to select.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsHdfsKrbConfigConfigMap#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsHdfsKrbConfigConfigMap#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsHdfsKrbConfigConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsHdfsKrbKeytabSecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsHdfsKrbKeytabSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsHdfsKrbKeytabSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsHdfsKrbKeytabSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsHdfsKrbKeytabSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsOssAccessKeySecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsOssAccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsOssAccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsOssAccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsOssAccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsOssSecretKeySecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsOssSecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsOssSecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsOssSecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsOssSecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsS3AccessKeySecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsS3AccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsS3AccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsS3AccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsS3AccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsS3SecretKeySecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsS3SecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsS3SecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsS3SecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesArgumentsArtifactsS3SecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Selects a key from a ConfigMap.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesContainerEnvValueFromConfigMapKeyRef
 */
export interface ClusterWorkflowTemplateSpecTemplatesContainerEnvValueFromConfigMapKeyRef {
  /**
   * The key to select.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerEnvValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerEnvValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerEnvValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * ObjectFieldSelector selects an APIVersioned field of an object.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesContainerEnvValueFromFieldRef
 */
export interface ClusterWorkflowTemplateSpecTemplatesContainerEnvValueFromFieldRef {
  /**
   * Version of the schema the FieldPath is written in terms of, defaults to "v1".
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerEnvValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * Path of the field to select in the specified API version.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerEnvValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * ResourceFieldSelector represents container resources (cpu, memory) and their output format
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesContainerEnvValueFromResourceFieldRef
 */
export interface ClusterWorkflowTemplateSpecTemplatesContainerEnvValueFromResourceFieldRef {
  /**
   * Container name: required for volumes, optional for env vars
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerEnvValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and Int64() accessors.

The serialization format is:

<quantity>        ::= <signedNumber><suffix>
  (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
<decimalSI>       ::= m | "" | k | M | G | T | P | E
  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
<decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  a. No precision is lost
  b. No fractional digits will be emitted
  c. The exponent (or suffix) is as large as possible.
The sign will be omitted unless the number is negative.

Examples:
  1.5 will be serialized as "1500m"
  1.5Gi will be serialized as "1536Mi"

Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.

Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerEnvValueFromResourceFieldRef#divisor
   */
  readonly divisor?: string;

  /**
   * Required: resource to select
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerEnvValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesContainerEnvValueFromSecretKeyRef
 */
export interface ClusterWorkflowTemplateSpecTemplatesContainerEnvValueFromSecretKeyRef {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerEnvValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerEnvValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerEnvValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePostStartExec
 */
export interface ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePostStartExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePostStartExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePostStartHttpGet
 */
export interface ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePostStartHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePostStartHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePostStartHttpGet#httpHeaders
   */
  readonly httpHeaders?: ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePostStartHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePostStartHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePostStartHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePostStartHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePostStartTcpSocket
 */
export interface ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePostStartTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePostStartTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePostStartTcpSocket#port
   */
  readonly port: string;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePreStopExec
 */
export interface ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePreStopExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePreStopExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePreStopHttpGet
 */
export interface ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePreStopHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePreStopHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePreStopHttpGet#httpHeaders
   */
  readonly httpHeaders?: ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePreStopHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePreStopHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePreStopHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePreStopHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePreStopTcpSocket
 */
export interface ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePreStopTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePreStopTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePreStopTcpSocket#port
   */
  readonly port: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesContainerLivenessProbeHttpGetHttpHeaders
 */
export interface ClusterWorkflowTemplateSpecTemplatesContainerLivenessProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerLivenessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerLivenessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesContainerReadinessProbeHttpGetHttpHeaders
 */
export interface ClusterWorkflowTemplateSpecTemplatesContainerReadinessProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerReadinessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerReadinessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Artifact indicates an artifact to place at a specified path
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifacts
 */
export interface ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifacts {
  /**
   * ArchiveStrategy describes how to archive files/directory when saving artifacts
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifacts#archive
   */
  readonly archive?: ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArchive;

  /**
   * ArchiveLogs indicates if the container logs should be archived
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifacts#archiveLogs
   */
  readonly archiveLogs?: boolean;

  /**
   * ArtifactoryArtifact is the location of an artifactory artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifacts#artifactory
   */
  readonly artifactory?: ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArtifactory;

  /**
   * From allows an artifact to reference an artifact from a previous step
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifacts#from
   */
  readonly from?: string;

  /**
   * GCSArtifact is the location of a GCS artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifacts#gcs
   */
  readonly gcs?: ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGcs;

  /**
   * GitArtifact is the location of an git artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifacts#git
   */
  readonly git?: ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGit;

  /**
   * GlobalName exports an output artifact to the global scope, making it available as '{{io.argoproj.workflow.v1alpha1.outputs.artifacts.XXXX}} and in workflow.status.outputs.artifacts
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifacts#globalName
   */
  readonly globalName?: string;

  /**
   * HDFSArtifact is the location of an HDFS artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifacts#hdfs
   */
  readonly hdfs?: ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfs;

  /**
   * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifacts#http
   */
  readonly http?: ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHttp;

  /**
   * mode bits to use on this file, must be a value between 0 and 0777 set when loading input artifacts.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifacts#mode
   */
  readonly mode?: number;

  /**
   * name of the artifact. must be unique within a template's inputs/outputs.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifacts#name
   */
  readonly name: string;

  /**
   * Make Artifacts optional, if Artifacts doesn't generate or exist
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifacts#optional
   */
  readonly optional?: boolean;

  /**
   * OSSArtifact is the location of an Alibaba Cloud OSS artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifacts#oss
   */
  readonly oss?: ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOss;

  /**
   * Path is the container path to the artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifacts#path
   */
  readonly path?: string;

  /**
   * RawArtifact allows raw string content to be placed as an artifact in a container
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifacts#raw
   */
  readonly raw?: ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsRaw;

  /**
   * S3Artifact is the location of an S3 artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifacts#s3
   */
  readonly s3?: ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3;

}

/**
 * Parameter indicate a passed string parameter to a service template with an optional default value
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsParameters
 */
export interface ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsParameters {
  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsParameters#default
   */
  readonly default?: string;

  /**
   * GlobalName exports an output parameter to the global scope, making it available as '{{io.argoproj.workflow.v1alpha1.outputs.parameters.XXXX}} and in workflow.status.outputs.parameters
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsParameters#globalName
   */
  readonly globalName?: string;

  /**
   * Name is the parameter name
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsParameters#name
   */
  readonly name: string;

  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsParameters#value
   */
  readonly value?: string;

  /**
   * ValueFrom describes a location in which to obtain the value to a parameter
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsParameters#valueFrom
   */
  readonly valueFrom?: ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsParametersValueFrom;

}

/**
 * Selects a key from a ConfigMap.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersEnvValueFromConfigMapKeyRef
 */
export interface ClusterWorkflowTemplateSpecTemplatesInitContainersEnvValueFromConfigMapKeyRef {
  /**
   * The key to select.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersEnvValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersEnvValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersEnvValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * ObjectFieldSelector selects an APIVersioned field of an object.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersEnvValueFromFieldRef
 */
export interface ClusterWorkflowTemplateSpecTemplatesInitContainersEnvValueFromFieldRef {
  /**
   * Version of the schema the FieldPath is written in terms of, defaults to "v1".
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersEnvValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * Path of the field to select in the specified API version.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersEnvValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * ResourceFieldSelector represents container resources (cpu, memory) and their output format
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersEnvValueFromResourceFieldRef
 */
export interface ClusterWorkflowTemplateSpecTemplatesInitContainersEnvValueFromResourceFieldRef {
  /**
   * Container name: required for volumes, optional for env vars
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersEnvValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and Int64() accessors.

The serialization format is:

<quantity>        ::= <signedNumber><suffix>
  (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
<decimalSI>       ::= m | "" | k | M | G | T | P | E
  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
<decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  a. No precision is lost
  b. No fractional digits will be emitted
  c. The exponent (or suffix) is as large as possible.
The sign will be omitted unless the number is negative.

Examples:
  1.5 will be serialized as "1500m"
  1.5Gi will be serialized as "1536Mi"

Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.

Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersEnvValueFromResourceFieldRef#divisor
   */
  readonly divisor?: string;

  /**
   * Required: resource to select
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersEnvValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersEnvValueFromSecretKeyRef
 */
export interface ClusterWorkflowTemplateSpecTemplatesInitContainersEnvValueFromSecretKeyRef {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersEnvValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersEnvValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersEnvValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartExec
 */
export interface ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartHttpGet
 */
export interface ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartHttpGet#httpHeaders
   */
  readonly httpHeaders?: ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartTcpSocket
 */
export interface ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartTcpSocket#port
   */
  readonly port: string;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopExec
 */
export interface ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopHttpGet
 */
export interface ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopHttpGet#httpHeaders
   */
  readonly httpHeaders?: ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopTcpSocket
 */
export interface ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopTcpSocket#port
   */
  readonly port: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLivenessProbeHttpGetHttpHeaders
 */
export interface ClusterWorkflowTemplateSpecTemplatesInitContainersLivenessProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLivenessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLivenessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersReadinessProbeHttpGetHttpHeaders
 */
export interface ClusterWorkflowTemplateSpecTemplatesInitContainersReadinessProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersReadinessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersReadinessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersStartupProbeHttpGetHttpHeaders
 */
export interface ClusterWorkflowTemplateSpecTemplatesInitContainersStartupProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersStartupProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersStartupProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * TarStrategy will tar and gzip the file or directory when saving
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsArchiveTar
 */
export interface ClusterWorkflowTemplateSpecTemplatesInputsArtifactsArchiveTar {
  /**
   * CompressionLevel specifies the gzip compression level to use for the artifact. Defaults to gzip.DefaultCompression.
   *
   * @default gzip.DefaultCompression.
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsArchiveTar#compressionLevel
   */
  readonly compressionLevel?: number;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsArtifactoryPasswordSecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesInputsArtifactsArtifactoryPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsArtifactoryPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsArtifactoryPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsArtifactoryPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsArtifactoryUsernameSecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesInputsArtifactsArtifactoryUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsArtifactoryUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsArtifactoryUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsArtifactoryUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsGcsServiceAccountKeySecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesInputsArtifactsGcsServiceAccountKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsGcsServiceAccountKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsGcsServiceAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsGcsServiceAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsGitPasswordSecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesInputsArtifactsGitPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsGitPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsGitPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsGitPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsGitSshPrivateKeySecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesInputsArtifactsGitSshPrivateKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsGitSshPrivateKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsGitSshPrivateKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsGitSshPrivateKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsGitUsernameSecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesInputsArtifactsGitUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsGitUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsGitUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsGitUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsHdfsKrbCCacheSecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesInputsArtifactsHdfsKrbCCacheSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsHdfsKrbCCacheSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsHdfsKrbCCacheSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsHdfsKrbCCacheSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Selects a key from a ConfigMap.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsHdfsKrbConfigConfigMap
 */
export interface ClusterWorkflowTemplateSpecTemplatesInputsArtifactsHdfsKrbConfigConfigMap {
  /**
   * The key to select.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsHdfsKrbConfigConfigMap#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsHdfsKrbConfigConfigMap#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsHdfsKrbConfigConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsHdfsKrbKeytabSecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesInputsArtifactsHdfsKrbKeytabSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsHdfsKrbKeytabSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsHdfsKrbKeytabSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsHdfsKrbKeytabSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsOssAccessKeySecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesInputsArtifactsOssAccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsOssAccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsOssAccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsOssAccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsOssSecretKeySecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesInputsArtifactsOssSecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsOssSecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsOssSecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsOssSecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsS3AccessKeySecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesInputsArtifactsS3AccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsS3AccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsS3AccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsS3AccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsS3SecretKeySecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesInputsArtifactsS3SecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsS3SecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsS3SecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInputsArtifactsS3SecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * TarStrategy will tar and gzip the file or directory when saving
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsArchiveTar
 */
export interface ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsArchiveTar {
  /**
   * CompressionLevel specifies the gzip compression level to use for the artifact. Defaults to gzip.DefaultCompression.
   *
   * @default gzip.DefaultCompression.
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsArchiveTar#compressionLevel
   */
  readonly compressionLevel?: number;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsArtifactoryPasswordSecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsArtifactoryPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsArtifactoryPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsArtifactoryPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsArtifactoryPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsArtifactoryUsernameSecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsArtifactoryUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsArtifactoryUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsArtifactoryUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsArtifactoryUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsGcsServiceAccountKeySecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsGcsServiceAccountKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsGcsServiceAccountKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsGcsServiceAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsGcsServiceAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsGitPasswordSecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsGitPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsGitPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsGitPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsGitPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsGitSshPrivateKeySecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsGitSshPrivateKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsGitSshPrivateKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsGitSshPrivateKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsGitSshPrivateKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsGitUsernameSecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsGitUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsGitUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsGitUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsGitUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsHdfsKrbCCacheSecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsHdfsKrbCCacheSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsHdfsKrbCCacheSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsHdfsKrbCCacheSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsHdfsKrbCCacheSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Selects a key from a ConfigMap.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsHdfsKrbConfigConfigMap
 */
export interface ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsHdfsKrbConfigConfigMap {
  /**
   * The key to select.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsHdfsKrbConfigConfigMap#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsHdfsKrbConfigConfigMap#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsHdfsKrbConfigConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsHdfsKrbKeytabSecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsHdfsKrbKeytabSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsHdfsKrbKeytabSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsHdfsKrbKeytabSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsHdfsKrbKeytabSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsOssAccessKeySecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsOssAccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsOssAccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsOssAccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsOssAccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsOssSecretKeySecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsOssSecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsOssSecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsOssSecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsOssSecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsS3AccessKeySecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsS3AccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsS3AccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsS3AccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsS3AccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsS3SecretKeySecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsS3SecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsS3SecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsS3SecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesOutputsArtifactsS3SecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Selects a key from a ConfigMap.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesScriptEnvValueFromConfigMapKeyRef
 */
export interface ClusterWorkflowTemplateSpecTemplatesScriptEnvValueFromConfigMapKeyRef {
  /**
   * The key to select.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptEnvValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptEnvValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptEnvValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * ObjectFieldSelector selects an APIVersioned field of an object.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesScriptEnvValueFromFieldRef
 */
export interface ClusterWorkflowTemplateSpecTemplatesScriptEnvValueFromFieldRef {
  /**
   * Version of the schema the FieldPath is written in terms of, defaults to "v1".
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptEnvValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * Path of the field to select in the specified API version.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptEnvValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * ResourceFieldSelector represents container resources (cpu, memory) and their output format
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesScriptEnvValueFromResourceFieldRef
 */
export interface ClusterWorkflowTemplateSpecTemplatesScriptEnvValueFromResourceFieldRef {
  /**
   * Container name: required for volumes, optional for env vars
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptEnvValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and Int64() accessors.

The serialization format is:

<quantity>        ::= <signedNumber><suffix>
  (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
<decimalSI>       ::= m | "" | k | M | G | T | P | E
  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
<decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  a. No precision is lost
  b. No fractional digits will be emitted
  c. The exponent (or suffix) is as large as possible.
The sign will be omitted unless the number is negative.

Examples:
  1.5 will be serialized as "1500m"
  1.5Gi will be serialized as "1536Mi"

Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.

Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptEnvValueFromResourceFieldRef#divisor
   */
  readonly divisor?: string;

  /**
   * Required: resource to select
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptEnvValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesScriptEnvValueFromSecretKeyRef
 */
export interface ClusterWorkflowTemplateSpecTemplatesScriptEnvValueFromSecretKeyRef {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptEnvValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptEnvValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptEnvValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePostStartExec
 */
export interface ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePostStartExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePostStartExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePostStartHttpGet
 */
export interface ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePostStartHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePostStartHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePostStartHttpGet#httpHeaders
   */
  readonly httpHeaders?: ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePostStartHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePostStartHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePostStartHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePostStartHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePostStartTcpSocket
 */
export interface ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePostStartTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePostStartTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePostStartTcpSocket#port
   */
  readonly port: string;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePreStopExec
 */
export interface ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePreStopExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePreStopExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePreStopHttpGet
 */
export interface ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePreStopHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePreStopHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePreStopHttpGet#httpHeaders
   */
  readonly httpHeaders?: ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePreStopHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePreStopHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePreStopHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePreStopHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePreStopTcpSocket
 */
export interface ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePreStopTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePreStopTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePreStopTcpSocket#port
   */
  readonly port: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesScriptLivenessProbeHttpGetHttpHeaders
 */
export interface ClusterWorkflowTemplateSpecTemplatesScriptLivenessProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptLivenessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptLivenessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesScriptReadinessProbeHttpGetHttpHeaders
 */
export interface ClusterWorkflowTemplateSpecTemplatesScriptReadinessProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptReadinessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptReadinessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesScriptStartupProbeHttpGetHttpHeaders
 */
export interface ClusterWorkflowTemplateSpecTemplatesScriptStartupProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptStartupProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptStartupProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Selects a key from a ConfigMap.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsEnvValueFromConfigMapKeyRef
 */
export interface ClusterWorkflowTemplateSpecTemplatesSidecarsEnvValueFromConfigMapKeyRef {
  /**
   * The key to select.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsEnvValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsEnvValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsEnvValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * ObjectFieldSelector selects an APIVersioned field of an object.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsEnvValueFromFieldRef
 */
export interface ClusterWorkflowTemplateSpecTemplatesSidecarsEnvValueFromFieldRef {
  /**
   * Version of the schema the FieldPath is written in terms of, defaults to "v1".
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsEnvValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * Path of the field to select in the specified API version.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsEnvValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * ResourceFieldSelector represents container resources (cpu, memory) and their output format
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsEnvValueFromResourceFieldRef
 */
export interface ClusterWorkflowTemplateSpecTemplatesSidecarsEnvValueFromResourceFieldRef {
  /**
   * Container name: required for volumes, optional for env vars
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsEnvValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and Int64() accessors.

The serialization format is:

<quantity>        ::= <signedNumber><suffix>
  (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
<decimalSI>       ::= m | "" | k | M | G | T | P | E
  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
<decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  a. No precision is lost
  b. No fractional digits will be emitted
  c. The exponent (or suffix) is as large as possible.
The sign will be omitted unless the number is negative.

Examples:
  1.5 will be serialized as "1500m"
  1.5Gi will be serialized as "1536Mi"

Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.

Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsEnvValueFromResourceFieldRef#divisor
   */
  readonly divisor?: string;

  /**
   * Required: resource to select
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsEnvValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsEnvValueFromSecretKeyRef
 */
export interface ClusterWorkflowTemplateSpecTemplatesSidecarsEnvValueFromSecretKeyRef {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsEnvValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsEnvValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsEnvValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartExec
 */
export interface ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartHttpGet
 */
export interface ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartHttpGet#httpHeaders
   */
  readonly httpHeaders?: ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartTcpSocket
 */
export interface ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartTcpSocket#port
   */
  readonly port: string;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopExec
 */
export interface ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopHttpGet
 */
export interface ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopHttpGet#httpHeaders
   */
  readonly httpHeaders?: ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopTcpSocket
 */
export interface ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopTcpSocket#port
   */
  readonly port: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLivenessProbeHttpGetHttpHeaders
 */
export interface ClusterWorkflowTemplateSpecTemplatesSidecarsLivenessProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLivenessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLivenessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsReadinessProbeHttpGetHttpHeaders
 */
export interface ClusterWorkflowTemplateSpecTemplatesSidecarsReadinessProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsReadinessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsReadinessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsStartupProbeHttpGetHttpHeaders
 */
export interface ClusterWorkflowTemplateSpecTemplatesSidecarsStartupProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsStartupProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsStartupProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * ArchiveStrategy describes how to archive files/directory when saving artifacts
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsArchive
 */
export interface ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsArchive {
  /**
   * NoneStrategy indicates to skip tar process and upload the files or directory tree as independent files. Note that if the artifact is a directory, the artifact driver must support the ability to save/load the directory appropriately.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsArchive#none
   */
  readonly none?: any;

  /**
   * TarStrategy will tar and gzip the file or directory when saving
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsArchive#tar
   */
  readonly tar?: ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsArchiveTar;

}

/**
 * ArtifactoryArtifact is the location of an artifactory artifact
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsArtifactory
 */
export interface ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsArtifactory {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsArtifactory#passwordSecret
   */
  readonly passwordSecret?: ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsArtifactoryPasswordSecret;

  /**
   * URL of the artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsArtifactory#url
   */
  readonly url: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsArtifactory#usernameSecret
   */
  readonly usernameSecret?: ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsArtifactoryUsernameSecret;

}

/**
 * GCSArtifact is the location of a GCS artifact
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGcs
 */
export interface ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGcs {
  /**
   * Bucket is the name of the bucket
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGcs#bucket
   */
  readonly bucket: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGcs#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGcs#serviceAccountKeySecret
   */
  readonly serviceAccountKeySecret?: ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGcsServiceAccountKeySecret;

}

/**
 * GitArtifact is the location of an git artifact
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGit
 */
export interface ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGit {
  /**
   * Depth specifies clones/fetches should be shallow and include the given number of commits from the branch tip
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGit#depth
   */
  readonly depth?: number;

  /**
   * Fetch specifies a number of refs that should be fetched before checkout
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGit#fetch
   */
  readonly fetch?: string[];

  /**
   * InsecureIgnoreHostKey disables SSH strict host key checking during git clone
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGit#insecureIgnoreHostKey
   */
  readonly insecureIgnoreHostKey?: boolean;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGit#passwordSecret
   */
  readonly passwordSecret?: ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGitPasswordSecret;

  /**
   * Repo is the git repository
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGit#repo
   */
  readonly repo: string;

  /**
   * Revision is the git commit, tag, branch to checkout
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGit#revision
   */
  readonly revision?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGit#sshPrivateKeySecret
   */
  readonly sshPrivateKeySecret?: ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGitSshPrivateKeySecret;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGit#usernameSecret
   */
  readonly usernameSecret?: ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGitUsernameSecret;

}

/**
 * HDFSArtifact is the location of an HDFS artifact
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfs
 */
export interface ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfs {
  /**
   * Addresses is accessible addresses of HDFS name nodes
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfs#addresses
   */
  readonly addresses: string[];

  /**
   * Force copies a file forcibly even if it exists (default: false)
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfs#force
   */
  readonly force?: boolean;

  /**
   * HDFSUser is the user to access HDFS file system. It is ignored if either ccache or keytab is used.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfs#hdfsUser
   */
  readonly hdfsUser?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfs#krbCCacheSecret
   */
  readonly krbCCacheSecret?: ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfsKrbCCacheSecret;

  /**
   * Selects a key from a ConfigMap.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfs#krbConfigConfigMap
   */
  readonly krbConfigConfigMap?: ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfsKrbConfigConfigMap;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfs#krbKeytabSecret
   */
  readonly krbKeytabSecret?: ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfsKrbKeytabSecret;

  /**
   * KrbRealm is the Kerberos realm used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfs#krbRealm
   */
  readonly krbRealm?: string;

  /**
   * KrbServicePrincipalName is the principal name of Kerberos service It must be set if either ccache or keytab is used.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfs#krbServicePrincipalName
   */
  readonly krbServicePrincipalName?: string;

  /**
   * KrbUsername is the Kerberos username used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfs#krbUsername
   */
  readonly krbUsername?: string;

  /**
   * Path is a file path in HDFS
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfs#path
   */
  readonly path: string;

}

/**
 * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHttp
 */
export interface ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHttp {
  /**
   * URL of the artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHttp#url
   */
  readonly url: string;

}

/**
 * OSSArtifact is the location of an Alibaba Cloud OSS artifact
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsOss
 */
export interface ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsOss {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsOss#accessKeySecret
   */
  readonly accessKeySecret: ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsOssAccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsOss#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsOss#endpoint
   */
  readonly endpoint: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsOss#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsOss#secretKeySecret
   */
  readonly secretKeySecret: ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsOssSecretKeySecret;

}

/**
 * RawArtifact allows raw string content to be placed as an artifact in a container
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsRaw
 */
export interface ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsRaw {
  /**
   * Data is the string contents of the artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsRaw#data
   */
  readonly data: string;

}

/**
 * S3Artifact is the location of an S3 artifact
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsS3
 */
export interface ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsS3 {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsS3#accessKeySecret
   */
  readonly accessKeySecret: ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsS3AccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsS3#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsS3#endpoint
   */
  readonly endpoint: string;

  /**
   * Insecure will connect to the service with TLS
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsS3#insecure
   */
  readonly insecure?: boolean;

  /**
   * Key is the key in the bucket where the artifact resides
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsS3#key
   */
  readonly key: string;

  /**
   * Region contains the optional bucket region
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsS3#region
   */
  readonly region?: string;

  /**
   * RoleARN is the Amazon Resource Name (ARN) of the role to assume.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsS3#roleARN
   */
  readonly roleARN?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsS3#secretKeySecret
   */
  readonly secretKeySecret: ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsS3SecretKeySecret;

  /**
   * UseSDKCreds tells the driver to figure out credentials based on sdk defaults.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsS3#useSDKCreds
   */
  readonly useSDKCreds?: boolean;

}

/**
 * ValueFrom describes a location in which to obtain the value to a parameter
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsParametersValueFrom
 */
export interface ClusterWorkflowTemplateSpecTemplatesStepsArgumentsParametersValueFrom {
  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsParametersValueFrom#default
   */
  readonly default?: string;

  /**
   * JQFilter expression against the resource object in resource templates
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsParametersValueFrom#jqFilter
   */
  readonly jqFilter?: string;

  /**
   * JSONPath of a resource to retrieve an output parameter value from in resource templates
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsParametersValueFrom#jsonPath
   */
  readonly jsonPath?: string;

  /**
   * Parameter reference to a step or dag task in which to retrieve an output parameter value from (e.g. '{{steps.mystep.outputs.myparam}}')
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsParametersValueFrom#parameter
   */
  readonly parameter?: string;

  /**
   * Path in the container to retrieve an output parameter value from in container templates
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsParametersValueFrom#path
   */
  readonly path?: string;

}

/**
 * ObjectFieldSelector selects an APIVersioned field of an object.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesVolumesDownwardApiItemsFieldRef
 */
export interface ClusterWorkflowTemplateSpecTemplatesVolumesDownwardApiItemsFieldRef {
  /**
   * Version of the schema the FieldPath is written in terms of, defaults to "v1".
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesDownwardApiItemsFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * Path of the field to select in the specified API version.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesDownwardApiItemsFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * ResourceFieldSelector represents container resources (cpu, memory) and their output format
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesVolumesDownwardApiItemsResourceFieldRef
 */
export interface ClusterWorkflowTemplateSpecTemplatesVolumesDownwardApiItemsResourceFieldRef {
  /**
   * Container name: required for volumes, optional for env vars
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesDownwardApiItemsResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and Int64() accessors.

The serialization format is:

<quantity>        ::= <signedNumber><suffix>
  (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
<decimalSI>       ::= m | "" | k | M | G | T | P | E
  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
<decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  a. No precision is lost
  b. No fractional digits will be emitted
  c. The exponent (or suffix) is as large as possible.
The sign will be omitted unless the number is negative.

Examples:
  1.5 will be serialized as "1500m"
  1.5Gi will be serialized as "1536Mi"

Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.

Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesDownwardApiItemsResourceFieldRef#divisor
   */
  readonly divisor?: string;

  /**
   * Required: resource to select
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesDownwardApiItemsResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Adapts a ConfigMap into a projected volume.

The contents of the target ConfigMap's Data field will be presented in a projected volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. Note that this is identical to a configmap volume source without the default mode.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesConfigMap
 */
export interface ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesConfigMap {
  /**
   * If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesConfigMap#items
   */
  readonly items?: ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesConfigMapItems[];

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesConfigMap#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its keys must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Represents downward API info for projecting into a projected volume. Note that this is identical to a downwardAPI volume source without the default mode.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardApi
 */
export interface ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardApi {
  /**
   * Items is a list of DownwardAPIVolume file
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardApi#items
   */
  readonly items?: ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardApiItems[];

}

/**
 * Adapts a secret into a projected volume.

The contents of the target Secret's Data field will be presented in a projected volume as files using the keys in the Data field as the file names. Note that this is identical to a secret volume source without the default mode.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesSecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesSecret {
  /**
   * If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesSecret#items
   */
  readonly items?: ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesSecretItems[];

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * ServiceAccountTokenProjection represents a projected service account token volume. This projection can be used to insert a service account token into the pods runtime filesystem for use against APIs (Kubernetes API Server or otherwise).
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesServiceAccountToken
 */
export interface ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesServiceAccountToken {
  /**
   * Audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesServiceAccountToken#audience
   */
  readonly audience?: string;

  /**
   * ExpirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.
   *
   * @default 1 hour and must be at least 10 minutes.
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesServiceAccountToken#expirationSeconds
   */
  readonly expirationSeconds?: number;

  /**
   * Path is the path relative to the mount point of the file to project the token into.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesServiceAccountToken#path
   */
  readonly path: string;

}

/**
 * Maps a string key to a path within a volume.
 *
 * @schema ClusterWorkflowTemplateSpecVolumesProjectedSourcesConfigMapItems
 */
export interface ClusterWorkflowTemplateSpecVolumesProjectedSourcesConfigMapItems {
  /**
   * The key to project.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesProjectedSourcesConfigMapItems#key
   */
  readonly key: string;

  /**
   * Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesProjectedSourcesConfigMapItems#mode
   */
  readonly mode?: number;

  /**
   * The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesProjectedSourcesConfigMapItems#path
   */
  readonly path: string;

}

/**
 * DownwardAPIVolumeFile represents information to create the file containing the pod field
 *
 * @schema ClusterWorkflowTemplateSpecVolumesProjectedSourcesDownwardApiItems
 */
export interface ClusterWorkflowTemplateSpecVolumesProjectedSourcesDownwardApiItems {
  /**
   * ObjectFieldSelector selects an APIVersioned field of an object.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesProjectedSourcesDownwardApiItems#fieldRef
   */
  readonly fieldRef?: ClusterWorkflowTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRef;

  /**
   * Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesProjectedSourcesDownwardApiItems#mode
   */
  readonly mode?: number;

  /**
   * Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
   *
   * @schema ClusterWorkflowTemplateSpecVolumesProjectedSourcesDownwardApiItems#path
   */
  readonly path: string;

  /**
   * ResourceFieldSelector represents container resources (cpu, memory) and their output format
   *
   * @schema ClusterWorkflowTemplateSpecVolumesProjectedSourcesDownwardApiItems#resourceFieldRef
   */
  readonly resourceFieldRef?: ClusterWorkflowTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef;

}

/**
 * Maps a string key to a path within a volume.
 *
 * @schema ClusterWorkflowTemplateSpecVolumesProjectedSourcesSecretItems
 */
export interface ClusterWorkflowTemplateSpecVolumesProjectedSourcesSecretItems {
  /**
   * The key to project.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesProjectedSourcesSecretItems#key
   */
  readonly key: string;

  /**
   * Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesProjectedSourcesSecretItems#mode
   */
  readonly mode?: number;

  /**
   * The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesProjectedSourcesSecretItems#path
   */
  readonly path: string;

}

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema ClusterWorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions
 */
export interface ClusterWorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema ClusterWorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema ClusterWorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   *
   * @schema ClusterWorkflowTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema ClusterWorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions
 */
export interface ClusterWorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema ClusterWorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema ClusterWorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   *
   * @schema ClusterWorkflowTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions
 */
export interface ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
  /**
   * The label key that the selector applies to.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#key
   */
  readonly key: string;

  /**
   * Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields
 */
export interface ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
  /**
   * The label key that the selector applies to.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#key
   */
  readonly key: string;

  /**
   * Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#operator
   */
  readonly operator: string;

  /**
   * An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#values
   */
  readonly values?: string[];

}

/**
 * A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions
 */
export interface ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
  /**
   * The label key that the selector applies to.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#key
   */
  readonly key: string;

  /**
   * Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields
 */
export interface ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
  /**
   * The label key that the selector applies to.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#key
   */
  readonly key: string;

  /**
   * Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#operator
   */
  readonly operator: string;

  /**
   * An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#values
   */
  readonly values?: string[];

}

/**
 * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector
 */
export interface ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchExpressions
   */
  readonly matchExpressions?: ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions
 */
export interface ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector
 */
export interface ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchExpressions
   */
  readonly matchExpressions?: ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions
 */
export interface ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePostStartHttpGetHttpHeaders
 */
export interface ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePostStartHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePostStartHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePostStartHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePreStopHttpGetHttpHeaders
 */
export interface ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePreStopHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePreStopHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesContainerLifecyclePreStopHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * ArchiveStrategy describes how to archive files/directory when saving artifacts
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArchive
 */
export interface ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArchive {
  /**
   * NoneStrategy indicates to skip tar process and upload the files or directory tree as independent files. Note that if the artifact is a directory, the artifact driver must support the ability to save/load the directory appropriately.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArchive#none
   */
  readonly none?: any;

  /**
   * TarStrategy will tar and gzip the file or directory when saving
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArchive#tar
   */
  readonly tar?: ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArchiveTar;

}

/**
 * ArtifactoryArtifact is the location of an artifactory artifact
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArtifactory
 */
export interface ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArtifactory {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArtifactory#passwordSecret
   */
  readonly passwordSecret?: ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArtifactoryPasswordSecret;

  /**
   * URL of the artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArtifactory#url
   */
  readonly url: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArtifactory#usernameSecret
   */
  readonly usernameSecret?: ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArtifactoryUsernameSecret;

}

/**
 * GCSArtifact is the location of a GCS artifact
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGcs
 */
export interface ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGcs {
  /**
   * Bucket is the name of the bucket
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGcs#bucket
   */
  readonly bucket: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGcs#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGcs#serviceAccountKeySecret
   */
  readonly serviceAccountKeySecret?: ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGcsServiceAccountKeySecret;

}

/**
 * GitArtifact is the location of an git artifact
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGit
 */
export interface ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGit {
  /**
   * Depth specifies clones/fetches should be shallow and include the given number of commits from the branch tip
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGit#depth
   */
  readonly depth?: number;

  /**
   * Fetch specifies a number of refs that should be fetched before checkout
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGit#fetch
   */
  readonly fetch?: string[];

  /**
   * InsecureIgnoreHostKey disables SSH strict host key checking during git clone
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGit#insecureIgnoreHostKey
   */
  readonly insecureIgnoreHostKey?: boolean;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGit#passwordSecret
   */
  readonly passwordSecret?: ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGitPasswordSecret;

  /**
   * Repo is the git repository
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGit#repo
   */
  readonly repo: string;

  /**
   * Revision is the git commit, tag, branch to checkout
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGit#revision
   */
  readonly revision?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGit#sshPrivateKeySecret
   */
  readonly sshPrivateKeySecret?: ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGitSshPrivateKeySecret;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGit#usernameSecret
   */
  readonly usernameSecret?: ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGitUsernameSecret;

}

/**
 * HDFSArtifact is the location of an HDFS artifact
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfs
 */
export interface ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfs {
  /**
   * Addresses is accessible addresses of HDFS name nodes
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfs#addresses
   */
  readonly addresses: string[];

  /**
   * Force copies a file forcibly even if it exists (default: false)
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfs#force
   */
  readonly force?: boolean;

  /**
   * HDFSUser is the user to access HDFS file system. It is ignored if either ccache or keytab is used.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfs#hdfsUser
   */
  readonly hdfsUser?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfs#krbCCacheSecret
   */
  readonly krbCCacheSecret?: ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbCCacheSecret;

  /**
   * Selects a key from a ConfigMap.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfs#krbConfigConfigMap
   */
  readonly krbConfigConfigMap?: ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfs#krbKeytabSecret
   */
  readonly krbKeytabSecret?: ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbKeytabSecret;

  /**
   * KrbRealm is the Kerberos realm used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfs#krbRealm
   */
  readonly krbRealm?: string;

  /**
   * KrbServicePrincipalName is the principal name of Kerberos service It must be set if either ccache or keytab is used.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfs#krbServicePrincipalName
   */
  readonly krbServicePrincipalName?: string;

  /**
   * KrbUsername is the Kerberos username used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfs#krbUsername
   */
  readonly krbUsername?: string;

  /**
   * Path is a file path in HDFS
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfs#path
   */
  readonly path: string;

}

/**
 * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHttp
 */
export interface ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHttp {
  /**
   * URL of the artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHttp#url
   */
  readonly url: string;

}

/**
 * OSSArtifact is the location of an Alibaba Cloud OSS artifact
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOss
 */
export interface ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOss {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOss#accessKeySecret
   */
  readonly accessKeySecret: ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOssAccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOss#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOss#endpoint
   */
  readonly endpoint: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOss#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOss#secretKeySecret
   */
  readonly secretKeySecret: ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOssSecretKeySecret;

}

/**
 * RawArtifact allows raw string content to be placed as an artifact in a container
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsRaw
 */
export interface ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsRaw {
  /**
   * Data is the string contents of the artifact
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsRaw#data
   */
  readonly data: string;

}

/**
 * S3Artifact is the location of an S3 artifact
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3
 */
export interface ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3 {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3#accessKeySecret
   */
  readonly accessKeySecret: ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3AccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3#endpoint
   */
  readonly endpoint: string;

  /**
   * Insecure will connect to the service with TLS
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3#insecure
   */
  readonly insecure?: boolean;

  /**
   * Key is the key in the bucket where the artifact resides
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3#key
   */
  readonly key: string;

  /**
   * Region contains the optional bucket region
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3#region
   */
  readonly region?: string;

  /**
   * RoleARN is the Amazon Resource Name (ARN) of the role to assume.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3#roleARN
   */
  readonly roleARN?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3#secretKeySecret
   */
  readonly secretKeySecret: ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3SecretKeySecret;

  /**
   * UseSDKCreds tells the driver to figure out credentials based on sdk defaults.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3#useSDKCreds
   */
  readonly useSDKCreds?: boolean;

}

/**
 * ValueFrom describes a location in which to obtain the value to a parameter
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsParametersValueFrom
 */
export interface ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsParametersValueFrom {
  /**
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsParametersValueFrom#default
   */
  readonly default?: string;

  /**
   * JQFilter expression against the resource object in resource templates
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsParametersValueFrom#jqFilter
   */
  readonly jqFilter?: string;

  /**
   * JSONPath of a resource to retrieve an output parameter value from in resource templates
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsParametersValueFrom#jsonPath
   */
  readonly jsonPath?: string;

  /**
   * Parameter reference to a step or dag task in which to retrieve an output parameter value from (e.g. '{{steps.mystep.outputs.myparam}}')
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsParametersValueFrom#parameter
   */
  readonly parameter?: string;

  /**
   * Path in the container to retrieve an output parameter value from in container templates
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsParametersValueFrom#path
   */
  readonly path?: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartHttpGetHttpHeaders
 */
export interface ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePostStartHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopHttpGetHttpHeaders
 */
export interface ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesInitContainersLifecyclePreStopHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePostStartHttpGetHttpHeaders
 */
export interface ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePostStartHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePostStartHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePostStartHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePreStopHttpGetHttpHeaders
 */
export interface ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePreStopHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePreStopHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesScriptLifecyclePreStopHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartHttpGetHttpHeaders
 */
export interface ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePostStartHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopHttpGetHttpHeaders
 */
export interface ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesSidecarsLifecyclePreStopHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * TarStrategy will tar and gzip the file or directory when saving
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsArchiveTar
 */
export interface ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsArchiveTar {
  /**
   * CompressionLevel specifies the gzip compression level to use for the artifact. Defaults to gzip.DefaultCompression.
   *
   * @default gzip.DefaultCompression.
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsArchiveTar#compressionLevel
   */
  readonly compressionLevel?: number;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsArtifactoryPasswordSecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsArtifactoryPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsArtifactoryPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsArtifactoryPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsArtifactoryPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsArtifactoryUsernameSecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsArtifactoryUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsArtifactoryUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsArtifactoryUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsArtifactoryUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGcsServiceAccountKeySecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGcsServiceAccountKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGcsServiceAccountKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGcsServiceAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGcsServiceAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGitPasswordSecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGitPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGitPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGitPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGitPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGitSshPrivateKeySecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGitSshPrivateKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGitSshPrivateKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGitSshPrivateKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGitSshPrivateKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGitUsernameSecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGitUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGitUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGitUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsGitUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfsKrbCCacheSecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfsKrbCCacheSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfsKrbCCacheSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfsKrbCCacheSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfsKrbCCacheSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Selects a key from a ConfigMap.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfsKrbConfigConfigMap
 */
export interface ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfsKrbConfigConfigMap {
  /**
   * The key to select.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfsKrbConfigConfigMap#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfsKrbConfigConfigMap#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfsKrbConfigConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfsKrbKeytabSecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfsKrbKeytabSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfsKrbKeytabSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfsKrbKeytabSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsHdfsKrbKeytabSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsOssAccessKeySecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsOssAccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsOssAccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsOssAccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsOssAccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsOssSecretKeySecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsOssSecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsOssSecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsOssSecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsOssSecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsS3AccessKeySecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsS3AccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsS3AccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsS3AccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsS3AccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsS3SecretKeySecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsS3SecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsS3SecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsS3SecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesStepsArgumentsArtifactsS3SecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Maps a string key to a path within a volume.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesConfigMapItems
 */
export interface ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesConfigMapItems {
  /**
   * The key to project.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesConfigMapItems#key
   */
  readonly key: string;

  /**
   * Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesConfigMapItems#mode
   */
  readonly mode?: number;

  /**
   * The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesConfigMapItems#path
   */
  readonly path: string;

}

/**
 * DownwardAPIVolumeFile represents information to create the file containing the pod field
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardApiItems
 */
export interface ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardApiItems {
  /**
   * ObjectFieldSelector selects an APIVersioned field of an object.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardApiItems#fieldRef
   */
  readonly fieldRef?: ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardApiItemsFieldRef;

  /**
   * Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardApiItems#mode
   */
  readonly mode?: number;

  /**
   * Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardApiItems#path
   */
  readonly path: string;

  /**
   * ResourceFieldSelector represents container resources (cpu, memory) and their output format
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardApiItems#resourceFieldRef
   */
  readonly resourceFieldRef?: ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardApiItemsResourceFieldRef;

}

/**
 * Maps a string key to a path within a volume.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesSecretItems
 */
export interface ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesSecretItems {
  /**
   * The key to project.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesSecretItems#key
   */
  readonly key: string;

  /**
   * Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesSecretItems#mode
   */
  readonly mode?: number;

  /**
   * The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesSecretItems#path
   */
  readonly path: string;

}

/**
 * ObjectFieldSelector selects an APIVersioned field of an object.
 *
 * @schema ClusterWorkflowTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRef
 */
export interface ClusterWorkflowTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRef {
  /**
   * Version of the schema the FieldPath is written in terms of, defaults to "v1".
   *
   * @schema ClusterWorkflowTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * Path of the field to select in the specified API version.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * ResourceFieldSelector represents container resources (cpu, memory) and their output format
 *
 * @schema ClusterWorkflowTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef
 */
export interface ClusterWorkflowTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef {
  /**
   * Container name: required for volumes, optional for env vars
   *
   * @schema ClusterWorkflowTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and Int64() accessors.

The serialization format is:

<quantity>        ::= <signedNumber><suffix>
  (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
<decimalSI>       ::= m | "" | k | M | G | T | P | E
  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
<decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  a. No precision is lost
  b. No fractional digits will be emitted
  c. The exponent (or suffix) is as large as possible.
The sign will be omitted unless the number is negative.

Examples:
  1.5 will be serialized as "1500m"
  1.5Gi will be serialized as "1536Mi"

Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.

Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
   *
   * @schema ClusterWorkflowTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#divisor
   */
  readonly divisor?: string;

  /**
   * Required: resource to select
   *
   * @schema ClusterWorkflowTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions
 */
export interface ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions
 */
export interface ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * TarStrategy will tar and gzip the file or directory when saving
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArchiveTar
 */
export interface ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArchiveTar {
  /**
   * CompressionLevel specifies the gzip compression level to use for the artifact. Defaults to gzip.DefaultCompression.
   *
   * @default gzip.DefaultCompression.
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArchiveTar#compressionLevel
   */
  readonly compressionLevel?: number;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArtifactoryPasswordSecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArtifactoryPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArtifactoryPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArtifactoryPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArtifactoryPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArtifactoryUsernameSecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArtifactoryUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArtifactoryUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArtifactoryUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsArtifactoryUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGcsServiceAccountKeySecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGcsServiceAccountKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGcsServiceAccountKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGcsServiceAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGcsServiceAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGitPasswordSecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGitPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGitPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGitPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGitPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGitSshPrivateKeySecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGitSshPrivateKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGitSshPrivateKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGitSshPrivateKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGitSshPrivateKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGitUsernameSecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGitUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGitUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGitUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsGitUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbCCacheSecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbCCacheSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbCCacheSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbCCacheSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbCCacheSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Selects a key from a ConfigMap.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap
 */
export interface ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap {
  /**
   * The key to select.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbKeytabSecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbKeytabSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbKeytabSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbKeytabSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbKeytabSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOssAccessKeySecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOssAccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOssAccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOssAccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOssAccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOssSecretKeySecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOssSecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOssSecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOssSecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsOssSecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3AccessKeySecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3AccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3AccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3AccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3AccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3SecretKeySecret
 */
export interface ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3SecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3SecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3SecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesDagTasksArgumentsArtifactsS3SecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * ObjectFieldSelector selects an APIVersioned field of an object.
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardApiItemsFieldRef
 */
export interface ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardApiItemsFieldRef {
  /**
   * Version of the schema the FieldPath is written in terms of, defaults to "v1".
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardApiItemsFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * Path of the field to select in the specified API version.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardApiItemsFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * ResourceFieldSelector represents container resources (cpu, memory) and their output format
 *
 * @schema ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardApiItemsResourceFieldRef
 */
export interface ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardApiItemsResourceFieldRef {
  /**
   * Container name: required for volumes, optional for env vars
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and Int64() accessors.

The serialization format is:

<quantity>        ::= <signedNumber><suffix>
  (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
<decimalSI>       ::= m | "" | k | M | G | T | P | E
  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
<decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  a. No precision is lost
  b. No fractional digits will be emitted
  c. The exponent (or suffix) is as large as possible.
The sign will be omitted unless the number is negative.

Examples:
  1.5 will be serialized as "1500m"
  1.5Gi will be serialized as "1536Mi"

Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.

Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#divisor
   */
  readonly divisor?: string;

  /**
   * Required: resource to select
   *
   * @schema ClusterWorkflowTemplateSpecTemplatesVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#resource
   */
  readonly resource: string;

}

