// generated by cdk8s
import { ApiObject } from 'cdk8s';
import { Construct } from 'constructs';

/**
 * CronWorkflow is the definition of a scheduled workflow resource
 *
 * @schema CronWorkflow
 */
export class CronWorkflow extends ApiObject {
  /**
   * Defines a "CronWorkflow" API object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: CronWorkflowOptions) {
    super(scope, name, {
      ...options,
      kind: 'CronWorkflow',
      apiVersion: 'argoproj.io/v1alpha1',
    });
  }
}

/**
 * CronWorkflow is the definition of a scheduled workflow resource
 *
 * @schema CronWorkflow
 */
export interface CronWorkflowOptions {
  /**
   * @schema CronWorkflow#metadata
   */
  readonly metadata: any;

  /**
   * CronWorkflowSpec is the specification of a CronWorkflow
   *
   * @schema CronWorkflow#spec
   */
  readonly spec: CronWorkflowSpec;

}

/**
 * CronWorkflowSpec is the specification of a CronWorkflow
 *
 * @schema CronWorkflowSpec
 */
export interface CronWorkflowSpec {
  /**
   * ConcurrencyPolicy is the K8s-style concurrency policy that will be used
   *
   * @schema CronWorkflowSpec#concurrencyPolicy
   */
  readonly concurrencyPolicy?: string;

  /**
   * FailedJobsHistoryLimit is the number of successful jobs to be kept at a time
   *
   * @schema CronWorkflowSpec#failedJobsHistoryLimit
   */
  readonly failedJobsHistoryLimit?: number;

  /**
   * Schedule is a schedule to run the Workflow in Cron format
   *
   * @schema CronWorkflowSpec#schedule
   */
  readonly schedule: string;

  /**
   * StartingDeadlineSeconds is the K8s-style deadline that will limit the time a CronWorkflow will be run after its original scheduled time if it is missed.
   *
   * @schema CronWorkflowSpec#startingDeadlineSeconds
   */
  readonly startingDeadlineSeconds?: number;

  /**
   * SuccessfulJobsHistoryLimit is the number of successful jobs to be kept at a time
   *
   * @schema CronWorkflowSpec#successfulJobsHistoryLimit
   */
  readonly successfulJobsHistoryLimit?: number;

  /**
   * Suspend is a flag that will stop new CronWorkflows from running if set to true
   *
   * @schema CronWorkflowSpec#suspend
   */
  readonly suspend?: boolean;

  /**
   * Timezone is the timezone against which the cron schedule will be calculated, e.g. "Asia/Tokyo". Default is machine's local time.
   *
   * @default machine's local time.
   * @schema CronWorkflowSpec#timezone
   */
  readonly timezone?: string;

  /**
   * @schema CronWorkflowSpec#workflowMetadata
   */
  readonly workflowMetadata?: any;

  /**
   * WorkflowSpec is the specification of a Workflow.
   *
   * @schema CronWorkflowSpec#workflowSpec
   */
  readonly workflowSpec: CronWorkflowSpecWorkflowSpec;

}

/**
 * WorkflowSpec is the specification of a Workflow.
 *
 * @schema CronWorkflowSpecWorkflowSpec
 */
export interface CronWorkflowSpecWorkflowSpec {
  /**
   * Optional duration in seconds relative to the workflow start time which the workflow is allowed to run before the controller terminates the io.argoproj.workflow.v1alpha1. A value of zero is used to terminate a Running workflow
   *
   * @schema CronWorkflowSpecWorkflowSpec#activeDeadlineSeconds
   */
  readonly activeDeadlineSeconds?: number;

  /**
   * Affinity is a group of affinity scheduling rules.
   *
   * @schema CronWorkflowSpecWorkflowSpec#affinity
   */
  readonly affinity?: CronWorkflowSpecWorkflowSpecAffinity;

  /**
   * Arguments to a template
   *
   * @schema CronWorkflowSpecWorkflowSpec#arguments
   */
  readonly arguments?: CronWorkflowSpecWorkflowSpecArguments;

  /**
   * @schema CronWorkflowSpecWorkflowSpec#artifactRepositoryRef
   */
  readonly artifactRepositoryRef?: CronWorkflowSpecWorkflowSpecArtifactRepositoryRef;

  /**
   * AutomountServiceAccountToken indicates whether a service account token should be automatically mounted in pods. ServiceAccountName of ExecutorConfig must be specified if this value is false.
   *
   * @schema CronWorkflowSpecWorkflowSpec#automountServiceAccountToken
   */
  readonly automountServiceAccountToken?: boolean;

  /**
   * PodDNSConfig defines the DNS parameters of a pod in addition to those generated from DNSPolicy.
   *
   * @schema CronWorkflowSpecWorkflowSpec#dnsConfig
   */
  readonly dnsConfig?: CronWorkflowSpecWorkflowSpecDnsConfig;

  /**
   * Set DNS policy for the pod. Defaults to "ClusterFirst". Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'.
   *
   * @default ClusterFirst". Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'.
   * @schema CronWorkflowSpecWorkflowSpec#dnsPolicy
   */
  readonly dnsPolicy?: string;

  /**
   * Entrypoint is a template reference to the starting point of the io.argoproj.workflow.v1alpha1.
   *
   * @schema CronWorkflowSpecWorkflowSpec#entrypoint
   */
  readonly entrypoint?: string;

  /**
   * ExecutorConfig holds configurations of an executor container.
   *
   * @schema CronWorkflowSpecWorkflowSpec#executor
   */
  readonly executor?: CronWorkflowSpecWorkflowSpecExecutor;

  /**
   * @schema CronWorkflowSpecWorkflowSpec#hostAliases
   */
  readonly hostAliases?: CronWorkflowSpecWorkflowSpecHostAliases[];

  /**
   * Host networking requested for this workflow pod. Default to false.
   *
   * @default false.
   * @schema CronWorkflowSpecWorkflowSpec#hostNetwork
   */
  readonly hostNetwork?: boolean;

  /**
   * ImagePullSecrets is a list of references to secrets in the same namespace to use for pulling any images in pods that reference this ServiceAccount. ImagePullSecrets are distinct from Secrets because Secrets can be mounted in the pod, but ImagePullSecrets are only accessed by the kubelet. More info: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
   *
   * @schema CronWorkflowSpecWorkflowSpec#imagePullSecrets
   */
  readonly imagePullSecrets?: CronWorkflowSpecWorkflowSpecImagePullSecrets[];

  /**
   * Metrics are a list of metrics emitted from a Workflow/Template
   *
   * @schema CronWorkflowSpecWorkflowSpec#metrics
   */
  readonly metrics?: CronWorkflowSpecWorkflowSpecMetrics;

  /**
   * NodeSelector is a selector which will result in all pods of the workflow to be scheduled on the selected node(s). This is able to be overridden by a nodeSelector specified in the template.
   *
   * @schema CronWorkflowSpecWorkflowSpec#nodeSelector
   */
  readonly nodeSelector?: { [key: string]: string };

  /**
   * OnExit is a template reference which is invoked at the end of the workflow, irrespective of the success, failure, or error of the primary io.argoproj.workflow.v1alpha1.
   *
   * @schema CronWorkflowSpecWorkflowSpec#onExit
   */
  readonly onExit?: string;

  /**
   * Parallelism limits the max total parallel pods that can execute at the same time in a workflow
   *
   * @schema CronWorkflowSpecWorkflowSpec#parallelism
   */
  readonly parallelism?: number;

  /**
   * PodDisruptionBudgetSpec is a description of a PodDisruptionBudget.
   *
   * @schema CronWorkflowSpecWorkflowSpec#podDisruptionBudget
   */
  readonly podDisruptionBudget?: CronWorkflowSpecWorkflowSpecPodDisruptionBudget;

  /**
   * PodGC describes how to delete completed pods as they complete
   *
   * @schema CronWorkflowSpecWorkflowSpec#podGC
   */
  readonly podGC?: CronWorkflowSpecWorkflowSpecPodGc;

  /**
   * Priority to apply to workflow pods.
   *
   * @schema CronWorkflowSpecWorkflowSpec#podPriority
   */
  readonly podPriority?: number;

  /**
   * PriorityClassName to apply to workflow pods.
   *
   * @schema CronWorkflowSpecWorkflowSpec#podPriorityClassName
   */
  readonly podPriorityClassName?: string;

  /**
   * PodSpecPatch holds strategic merge patch to apply against the pod spec. Allows parameterization of container fields which are not strings (e.g. resource limits).
   *
   * @schema CronWorkflowSpecWorkflowSpec#podSpecPatch
   */
  readonly podSpecPatch?: string;

  /**
   * Priority is used if controller is configured to process limited number of workflows in parallel. Workflows with higher priority are processed first.
   *
   * @schema CronWorkflowSpecWorkflowSpec#priority
   */
  readonly priority?: number;

  /**
   * Set scheduler name for all pods. Will be overridden if container/script template's scheduler name is set. Default scheduler will be used if neither specified.
   *
   * @schema CronWorkflowSpecWorkflowSpec#schedulerName
   */
  readonly schedulerName?: string;

  /**
   * PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext.
   *
   * @schema CronWorkflowSpecWorkflowSpec#securityContext
   */
  readonly securityContext?: CronWorkflowSpecWorkflowSpecSecurityContext;

  /**
   * ServiceAccountName is the name of the ServiceAccount to run all pods of the workflow as.
   *
   * @schema CronWorkflowSpecWorkflowSpec#serviceAccountName
   */
  readonly serviceAccountName?: string;

  /**
   * Shutdown will shutdown the workflow according to its ShutdownStrategy
   *
   * @schema CronWorkflowSpecWorkflowSpec#shutdown
   */
  readonly shutdown?: string;

  /**
   * Suspend will suspend the workflow and prevent execution of any future steps in the workflow
   *
   * @schema CronWorkflowSpecWorkflowSpec#suspend
   */
  readonly suspend?: boolean;

  /**
   * Templates is a list of workflow templates used in a workflow
   *
   * @schema CronWorkflowSpecWorkflowSpec#templates
   */
  readonly templates?: CronWorkflowSpecWorkflowSpecTemplates[];

  /**
   * Tolerations to apply to workflow pods.
   *
   * @schema CronWorkflowSpecWorkflowSpec#tolerations
   */
  readonly tolerations?: CronWorkflowSpecWorkflowSpecTolerations[];

  /**
   * TTLSecondsAfterFinished limits the lifetime of a Workflow that has finished execution (Succeeded, Failed, Error). If this field is set, once the Workflow finishes, it will be deleted after ttlSecondsAfterFinished expires. If this field is unset, ttlSecondsAfterFinished will not expire. If this field is set to zero, ttlSecondsAfterFinished expires immediately after the Workflow finishes. DEPRECATED: Use TTLStrategy.SecondsAfterCompletion instead.
   *
   * @schema CronWorkflowSpecWorkflowSpec#ttlSecondsAfterFinished
   */
  readonly ttlSecondsAfterFinished?: number;

  /**
   * TTLStrategy is the strategy for the time to live depending on if the workflow succeeded or failed
   *
   * @schema CronWorkflowSpecWorkflowSpec#ttlStrategy
   */
  readonly ttlStrategy?: CronWorkflowSpecWorkflowSpecTtlStrategy;

  /**
   * VolumeClaimTemplates is a list of claims that containers are allowed to reference. The Workflow controller will create the claims at the beginning of the workflow and delete the claims upon completion of the workflow
   *
   * @schema CronWorkflowSpecWorkflowSpec#volumeClaimTemplates
   */
  readonly volumeClaimTemplates?: CronWorkflowSpecWorkflowSpecVolumeClaimTemplates[];

  /**
   * Volumes is a list of volumes that can be mounted by containers in a io.argoproj.workflow.v1alpha1.
   *
   * @schema CronWorkflowSpecWorkflowSpec#volumes
   */
  readonly volumes?: CronWorkflowSpecWorkflowSpecVolumes[];

  /**
   * WorkflowTemplateRef is a reference to a WorkflowTemplate resource.
   *
   * @schema CronWorkflowSpecWorkflowSpec#workflowTemplateRef
   */
  readonly workflowTemplateRef?: CronWorkflowSpecWorkflowSpecWorkflowTemplateRef;

}

/**
 * Affinity is a group of affinity scheduling rules.
 *
 * @schema CronWorkflowSpecWorkflowSpecAffinity
 */
export interface CronWorkflowSpecWorkflowSpecAffinity {
  /**
   * Node affinity is a group of node affinity scheduling rules.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinity#nodeAffinity
   */
  readonly nodeAffinity?: CronWorkflowSpecWorkflowSpecAffinityNodeAffinity;

  /**
   * Pod affinity is a group of inter pod affinity scheduling rules.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinity#podAffinity
   */
  readonly podAffinity?: CronWorkflowSpecWorkflowSpecAffinityPodAffinity;

  /**
   * Pod anti affinity is a group of inter pod anti affinity scheduling rules.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinity#podAntiAffinity
   */
  readonly podAntiAffinity?: CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinity;

}

/**
 * Arguments to a template
 *
 * @schema CronWorkflowSpecWorkflowSpecArguments
 */
export interface CronWorkflowSpecWorkflowSpecArguments {
  /**
   * Artifacts is the list of artifacts to pass to the template or workflow
   *
   * @schema CronWorkflowSpecWorkflowSpecArguments#artifacts
   */
  readonly artifacts?: CronWorkflowSpecWorkflowSpecArgumentsArtifacts[];

  /**
   * Parameters is the list of parameters to pass to the template or workflow
   *
   * @schema CronWorkflowSpecWorkflowSpecArguments#parameters
   */
  readonly parameters?: CronWorkflowSpecWorkflowSpecArgumentsParameters[];

}

/**
 * @schema CronWorkflowSpecWorkflowSpecArtifactRepositoryRef
 */
export interface CronWorkflowSpecWorkflowSpecArtifactRepositoryRef {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArtifactRepositoryRef#configMap
   */
  readonly configMap?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArtifactRepositoryRef#key
   */
  readonly key?: string;

}

/**
 * PodDNSConfig defines the DNS parameters of a pod in addition to those generated from DNSPolicy.
 *
 * @schema CronWorkflowSpecWorkflowSpecDnsConfig
 */
export interface CronWorkflowSpecWorkflowSpecDnsConfig {
  /**
   * A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.
   *
   * @schema CronWorkflowSpecWorkflowSpecDnsConfig#nameservers
   */
  readonly nameservers?: string[];

  /**
   * A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.
   *
   * @schema CronWorkflowSpecWorkflowSpecDnsConfig#options
   */
  readonly options?: CronWorkflowSpecWorkflowSpecDnsConfigOptions[];

  /**
   * A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.
   *
   * @schema CronWorkflowSpecWorkflowSpecDnsConfig#searches
   */
  readonly searches?: string[];

}

/**
 * ExecutorConfig holds configurations of an executor container.
 *
 * @schema CronWorkflowSpecWorkflowSpecExecutor
 */
export interface CronWorkflowSpecWorkflowSpecExecutor {
  /**
   * ServiceAccountName specifies the service account name of the executor container.
   *
   * @schema CronWorkflowSpecWorkflowSpecExecutor#serviceAccountName
   */
  readonly serviceAccountName?: string;

}

/**
 * HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the pod's hosts file.
 *
 * @schema CronWorkflowSpecWorkflowSpecHostAliases
 */
export interface CronWorkflowSpecWorkflowSpecHostAliases {
  /**
   * Hostnames for the above IP address.
   *
   * @schema CronWorkflowSpecWorkflowSpecHostAliases#hostnames
   */
  readonly hostnames?: string[];

  /**
   * IP address of the host file entry.
   *
   * @schema CronWorkflowSpecWorkflowSpecHostAliases#ip
   */
  readonly ip?: string;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema CronWorkflowSpecWorkflowSpecImagePullSecrets
 */
export interface CronWorkflowSpecWorkflowSpecImagePullSecrets {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecImagePullSecrets#name
   */
  readonly name?: string;

}

/**
 * Metrics are a list of metrics emitted from a Workflow/Template
 *
 * @schema CronWorkflowSpecWorkflowSpecMetrics
 */
export interface CronWorkflowSpecWorkflowSpecMetrics {
  /**
   * Prometheus is a list of prometheus metrics to be emitted
   *
   * @schema CronWorkflowSpecWorkflowSpecMetrics#prometheus
   */
  readonly prometheus: CronWorkflowSpecWorkflowSpecMetricsPrometheus[];

}

/**
 * PodDisruptionBudgetSpec is a description of a PodDisruptionBudget.
 *
 * @schema CronWorkflowSpecWorkflowSpecPodDisruptionBudget
 */
export interface CronWorkflowSpecWorkflowSpecPodDisruptionBudget {
  /**
   * @schema CronWorkflowSpecWorkflowSpecPodDisruptionBudget#maxUnavailable
   */
  readonly maxUnavailable?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecPodDisruptionBudget#minAvailable
   */
  readonly minAvailable?: string;

  /**
   * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
   *
   * @schema CronWorkflowSpecWorkflowSpecPodDisruptionBudget#selector
   */
  readonly selector?: CronWorkflowSpecWorkflowSpecPodDisruptionBudgetSelector;

}

/**
 * PodGC describes how to delete completed pods as they complete
 *
 * @schema CronWorkflowSpecWorkflowSpecPodGc
 */
export interface CronWorkflowSpecWorkflowSpecPodGc {
  /**
   * Strategy is the strategy to use. One of "OnPodCompletion", "OnPodSuccess", "OnWorkflowCompletion", "OnWorkflowSuccess"
   *
   * @schema CronWorkflowSpecWorkflowSpecPodGc#strategy
   */
  readonly strategy?: string;

}

/**
 * PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext.
 *
 * @schema CronWorkflowSpecWorkflowSpecSecurityContext
 */
export interface CronWorkflowSpecWorkflowSpecSecurityContext {
  /**
   * A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:

1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----

If unset, the Kubelet will not modify the ownership and permissions of any volume.
   *
   * @schema CronWorkflowSpecWorkflowSpecSecurityContext#fsGroup
   */
  readonly fsGroup?: number;

  /**
   * The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
   *
   * @schema CronWorkflowSpecWorkflowSpecSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema CronWorkflowSpecWorkflowSpecSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
   *
   * @default user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
   * @schema CronWorkflowSpecWorkflowSpecSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * SELinuxOptions are the labels to be applied to the container
   *
   * @schema CronWorkflowSpecWorkflowSpecSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: CronWorkflowSpecWorkflowSpecSecurityContextSeLinuxOptions;

  /**
   * A list of groups applied to the first process run in each container, in addition to the container's primary GID.  If unspecified, no groups will be added to any container.
   *
   * @schema CronWorkflowSpecWorkflowSpecSecurityContext#supplementalGroups
   */
  readonly supplementalGroups?: number[];

  /**
   * Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch.
   *
   * @schema CronWorkflowSpecWorkflowSpecSecurityContext#sysctls
   */
  readonly sysctls?: CronWorkflowSpecWorkflowSpecSecurityContextSysctls[];

  /**
   * WindowsSecurityContextOptions contain Windows-specific options and credentials.
   *
   * @schema CronWorkflowSpecWorkflowSpecSecurityContext#windowsOptions
   */
  readonly windowsOptions?: CronWorkflowSpecWorkflowSpecSecurityContextWindowsOptions;

}

/**
 * Template is a reusable and composable unit of execution in a workflow
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplates
 */
export interface CronWorkflowSpecWorkflowSpecTemplates {
  /**
   * Optional duration in seconds relative to the StartTime that the pod may be active on a node before the system actively tries to terminate the pod; value must be positive integer This field is only applicable to container and script templates.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplates#activeDeadlineSeconds
   */
  readonly activeDeadlineSeconds?: number;

  /**
   * Affinity is a group of affinity scheduling rules.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplates#affinity
   */
  readonly affinity?: CronWorkflowSpecWorkflowSpecTemplatesAffinity;

  /**
   * ArtifactLocation describes a location for a single or multiple artifacts. It is used as single artifact in the context of inputs/outputs (e.g. outputs.artifacts.artname). It is also used to describe the location of multiple artifacts such as the archive location of a single workflow step, which the executor will use as a default location to store its files.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplates#archiveLocation
   */
  readonly archiveLocation?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocation;

  /**
   * Arguments to a template
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplates#arguments
   */
  readonly arguments?: CronWorkflowSpecWorkflowSpecTemplatesArguments;

  /**
   * AutomountServiceAccountToken indicates whether a service account token should be automatically mounted in pods. ServiceAccountName of ExecutorConfig must be specified if this value is false.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplates#automountServiceAccountToken
   */
  readonly automountServiceAccountToken?: boolean;

  /**
   * A single application container that you want to run within a pod.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplates#container
   */
  readonly container?: CronWorkflowSpecWorkflowSpecTemplatesContainer;

  /**
   * Deamon will allow a workflow to proceed to the next step so long as the container reaches readiness
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplates#daemon
   */
  readonly daemon?: boolean;

  /**
   * DAGTemplate is a template subtype for directed acyclic graph templates
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplates#dag
   */
  readonly dag?: CronWorkflowSpecWorkflowSpecTemplatesDag;

  /**
   * ExecutorConfig holds configurations of an executor container.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplates#executor
   */
  readonly executor?: CronWorkflowSpecWorkflowSpecTemplatesExecutor;

  /**
   * HostAliases is an optional list of hosts and IPs that will be injected into the pod spec
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplates#hostAliases
   */
  readonly hostAliases?: CronWorkflowSpecWorkflowSpecTemplatesHostAliases[];

  /**
   * InitContainers is a list of containers which run before the main container.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplates#initContainers
   */
  readonly initContainers?: CronWorkflowSpecWorkflowSpecTemplatesInitContainers[];

  /**
   * Inputs are the mechanism for passing parameters, artifacts, volumes from one template to another
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplates#inputs
   */
  readonly inputs?: CronWorkflowSpecWorkflowSpecTemplatesInputs;

  /**
   * Pod metdata
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplates#metadata
   */
  readonly metadata?: CronWorkflowSpecWorkflowSpecTemplatesMetadata;

  /**
   * Metrics are a list of metrics emitted from a Workflow/Template
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplates#metrics
   */
  readonly metrics?: CronWorkflowSpecWorkflowSpecTemplatesMetrics;

  /**
   * Name is the name of the template
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplates#name
   */
  readonly name: string;

  /**
   * NodeSelector is a selector to schedule this step of the workflow to be run on the selected node(s). Overrides the selector set at the workflow level.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplates#nodeSelector
   */
  readonly nodeSelector?: { [key: string]: string };

  /**
   * Outputs hold parameters, artifacts, and results from a step
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplates#outputs
   */
  readonly outputs?: CronWorkflowSpecWorkflowSpecTemplatesOutputs;

  /**
   * Parallelism limits the max total parallel pods that can execute at the same time within the boundaries of this template invocation. If additional steps/dag templates are invoked, the pods created by those templates will not be counted towards this total.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplates#parallelism
   */
  readonly parallelism?: number;

  /**
   * PodSpecPatch holds strategic merge patch to apply against the pod spec. Allows parameterization of container fields which are not strings (e.g. resource limits).
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplates#podSpecPatch
   */
  readonly podSpecPatch?: string;

  /**
   * Priority to apply to workflow pods.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplates#priority
   */
  readonly priority?: number;

  /**
   * PriorityClassName to apply to workflow pods.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplates#priorityClassName
   */
  readonly priorityClassName?: string;

  /**
   * ResourceTemplate is a template subtype to manipulate kubernetes resources
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplates#resource
   */
  readonly resource?: CronWorkflowSpecWorkflowSpecTemplatesResource;

  /**
   * ResubmitPendingPods is a flag to enable resubmitting pods that remain Pending after initial submission
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplates#resubmitPendingPods
   */
  readonly resubmitPendingPods?: boolean;

  /**
   * RetryStrategy provides controls on how to retry a workflow step
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplates#retryStrategy
   */
  readonly retryStrategy?: CronWorkflowSpecWorkflowSpecTemplatesRetryStrategy;

  /**
   * If specified, the pod will be dispatched by specified scheduler. Or it will be dispatched by workflow scope scheduler if specified. If neither specified, the pod will be dispatched by default scheduler.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplates#schedulerName
   */
  readonly schedulerName?: string;

  /**
   * ScriptTemplate is a template subtype to enable scripting through code steps
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplates#script
   */
  readonly script?: CronWorkflowSpecWorkflowSpecTemplatesScript;

  /**
   * PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplates#securityContext
   */
  readonly securityContext?: CronWorkflowSpecWorkflowSpecTemplatesSecurityContext;

  /**
   * ServiceAccountName to apply to workflow pods
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplates#serviceAccountName
   */
  readonly serviceAccountName?: string;

  /**
   * Sidecars is a list of containers which run alongside the main container Sidecars are automatically killed when the main container completes
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplates#sidecars
   */
  readonly sidecars?: CronWorkflowSpecWorkflowSpecTemplatesSidecars[];

  /**
   * Steps define a series of sequential/parallel workflow steps
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplates#steps
   */
  readonly steps?: CronWorkflowSpecWorkflowSpecTemplatesSteps[][];

  /**
   * SuspendTemplate is a template subtype to suspend a workflow at a predetermined point in time
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplates#suspend
   */
  readonly suspend?: CronWorkflowSpecWorkflowSpecTemplatesSuspend;

  /**
   * Template is the name of the template which is used as the base of this template. DEPRECATED: This field is not used.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplates#template
   */
  readonly template?: string;

  /**
   * TemplateRef is a reference of template resource.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplates#templateRef
   */
  readonly templateRef?: CronWorkflowSpecWorkflowSpecTemplatesTemplateRef;

  /**
   * Tolerations to apply to workflow pods.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplates#tolerations
   */
  readonly tolerations?: CronWorkflowSpecWorkflowSpecTemplatesTolerations[];

  /**
   * Volumes is a list of volumes that can be mounted by containers in a template.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplates#volumes
   */
  readonly volumes?: CronWorkflowSpecWorkflowSpecTemplatesVolumes[];

}

/**
 * The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
 *
 * @schema CronWorkflowSpecWorkflowSpecTolerations
 */
export interface CronWorkflowSpecWorkflowSpecTolerations {
  /**
   * Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
   *
   * @schema CronWorkflowSpecWorkflowSpecTolerations#effect
   */
  readonly effect?: string;

  /**
   * Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
   *
   * @schema CronWorkflowSpecWorkflowSpecTolerations#key
   */
  readonly key?: string;

  /**
   * Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
   *
   * @default Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
   * @schema CronWorkflowSpecWorkflowSpecTolerations#operator
   */
  readonly operator?: string;

  /**
   * TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
   *
   * @schema CronWorkflowSpecWorkflowSpecTolerations#tolerationSeconds
   */
  readonly tolerationSeconds?: number;

  /**
   * Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
   *
   * @schema CronWorkflowSpecWorkflowSpecTolerations#value
   */
  readonly value?: string;

}

/**
 * TTLStrategy is the strategy for the time to live depending on if the workflow succeeded or failed
 *
 * @schema CronWorkflowSpecWorkflowSpecTtlStrategy
 */
export interface CronWorkflowSpecWorkflowSpecTtlStrategy {
  /**
   * SecondsAfterCompletion is the number of seconds to live after completion
   *
   * @schema CronWorkflowSpecWorkflowSpecTtlStrategy#secondsAfterCompletion
   */
  readonly secondsAfterCompletion?: number;

  /**
   * SecondsAfterFailure is the number of seconds to live after failure
   *
   * @schema CronWorkflowSpecWorkflowSpecTtlStrategy#secondsAfterFailure
   */
  readonly secondsAfterFailure?: number;

  /**
   * SecondsAfterSuccess is the number of seconds to live after success
   *
   * @schema CronWorkflowSpecWorkflowSpecTtlStrategy#secondsAfterSuccess
   */
  readonly secondsAfterSuccess?: number;

}

/**
 * PersistentVolumeClaim is a user's request for and claim to a persistent volume
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplates
 */
export interface CronWorkflowSpecWorkflowSpecVolumeClaimTemplates {
  /**
   * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplates#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplates#kind
   */
  readonly kind?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplates#metadata
   */
  readonly metadata?: any;

  /**
   * PersistentVolumeClaimSpec describes the common attributes of storage devices and allows a Source for provider-specific attributes
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplates#spec
   */
  readonly spec?: CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpec;

  /**
   * PersistentVolumeClaimStatus is the current status of a persistent volume claim.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplates#status
   */
  readonly status?: CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatus;

}

/**
 * Volume represents a named volume in a pod that may be accessed by any container in the pod.
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumes
 */
export interface CronWorkflowSpecWorkflowSpecVolumes {
  /**
   * Represents a Persistent Disk resource in AWS.

An AWS EBS disk must exist before mounting to a container. The disk must also be in the same AWS zone as the kubelet. An AWS EBS disk can only be mounted as read/write once. AWS EBS volumes support ownership management and SELinux relabeling.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumes#awsElasticBlockStore
   */
  readonly awsElasticBlockStore?: CronWorkflowSpecWorkflowSpecVolumesAwsElasticBlockStore;

  /**
   * AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumes#azureDisk
   */
  readonly azureDisk?: CronWorkflowSpecWorkflowSpecVolumesAzureDisk;

  /**
   * AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumes#azureFile
   */
  readonly azureFile?: CronWorkflowSpecWorkflowSpecVolumesAzureFile;

  /**
   * Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumes#cephfs
   */
  readonly cephfs?: CronWorkflowSpecWorkflowSpecVolumesCephfs;

  /**
   * Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumes#cinder
   */
  readonly cinder?: CronWorkflowSpecWorkflowSpecVolumesCinder;

  /**
   * Adapts a ConfigMap into a volume.

The contents of the target ConfigMap's Data field will be presented in a volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. ConfigMap volumes support ownership management and SELinux relabeling.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumes#configMap
   */
  readonly configMap?: CronWorkflowSpecWorkflowSpecVolumesConfigMap;

  /**
   * Represents a source location of a volume to mount, managed by an external CSI driver
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumes#csi
   */
  readonly csi?: CronWorkflowSpecWorkflowSpecVolumesCsi;

  /**
   * DownwardAPIVolumeSource represents a volume containing downward API info. Downward API volumes support ownership management and SELinux relabeling.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumes#downwardAPI
   */
  readonly downwardAPI?: CronWorkflowSpecWorkflowSpecVolumesDownwardApi;

  /**
   * Represents an empty directory for a pod. Empty directory volumes support ownership management and SELinux relabeling.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumes#emptyDir
   */
  readonly emptyDir?: CronWorkflowSpecWorkflowSpecVolumesEmptyDir;

  /**
   * Represents a Fibre Channel volume. Fibre Channel volumes can only be mounted as read/write once. Fibre Channel volumes support ownership management and SELinux relabeling.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumes#fc
   */
  readonly fc?: CronWorkflowSpecWorkflowSpecVolumesFc;

  /**
   * FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumes#flexVolume
   */
  readonly flexVolume?: CronWorkflowSpecWorkflowSpecVolumesFlexVolume;

  /**
   * Represents a Flocker volume mounted by the Flocker agent. One and only one of datasetName and datasetUUID should be set. Flocker volumes do not support ownership management or SELinux relabeling.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumes#flocker
   */
  readonly flocker?: CronWorkflowSpecWorkflowSpecVolumesFlocker;

  /**
   * Represents a Persistent Disk resource in Google Compute Engine.

A GCE PD must exist before mounting to a container. The disk must also be in the same GCE project and zone as the kubelet. A GCE PD can only be mounted as read/write once or read-only many times. GCE PDs support ownership management and SELinux relabeling.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumes#gcePersistentDisk
   */
  readonly gcePersistentDisk?: CronWorkflowSpecWorkflowSpecVolumesGcePersistentDisk;

  /**
   * Represents a volume that is populated with the contents of a git repository. Git repo volumes do not support ownership management. Git repo volumes support SELinux relabeling.

DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumes#gitRepo
   */
  readonly gitRepo?: CronWorkflowSpecWorkflowSpecVolumesGitRepo;

  /**
   * Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumes#glusterfs
   */
  readonly glusterfs?: CronWorkflowSpecWorkflowSpecVolumesGlusterfs;

  /**
   * Represents a host path mapped into a pod. Host path volumes do not support ownership management or SELinux relabeling.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumes#hostPath
   */
  readonly hostPath?: CronWorkflowSpecWorkflowSpecVolumesHostPath;

  /**
   * Represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumes#iscsi
   */
  readonly iscsi?: CronWorkflowSpecWorkflowSpecVolumesIscsi;

  /**
   * Volume's name. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumes#name
   */
  readonly name: string;

  /**
   * Represents an NFS mount that lasts the lifetime of a pod. NFS volumes do not support ownership management or SELinux relabeling.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumes#nfs
   */
  readonly nfs?: CronWorkflowSpecWorkflowSpecVolumesNfs;

  /**
   * PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace. This volume finds the bound PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another type of volume that is owned by someone else (the system).
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumes#persistentVolumeClaim
   */
  readonly persistentVolumeClaim?: CronWorkflowSpecWorkflowSpecVolumesPersistentVolumeClaim;

  /**
   * Represents a Photon Controller persistent disk resource.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumes#photonPersistentDisk
   */
  readonly photonPersistentDisk?: CronWorkflowSpecWorkflowSpecVolumesPhotonPersistentDisk;

  /**
   * PortworxVolumeSource represents a Portworx volume resource.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumes#portworxVolume
   */
  readonly portworxVolume?: CronWorkflowSpecWorkflowSpecVolumesPortworxVolume;

  /**
   * Represents a projected volume source
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumes#projected
   */
  readonly projected?: CronWorkflowSpecWorkflowSpecVolumesProjected;

  /**
   * Represents a Quobyte mount that lasts the lifetime of a pod. Quobyte volumes do not support ownership management or SELinux relabeling.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumes#quobyte
   */
  readonly quobyte?: CronWorkflowSpecWorkflowSpecVolumesQuobyte;

  /**
   * Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumes#rbd
   */
  readonly rbd?: CronWorkflowSpecWorkflowSpecVolumesRbd;

  /**
   * ScaleIOVolumeSource represents a persistent ScaleIO volume
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumes#scaleIO
   */
  readonly scaleIO?: CronWorkflowSpecWorkflowSpecVolumesScaleIo;

  /**
   * Adapts a Secret into a volume.

The contents of the target Secret's Data field will be presented in a volume as files using the keys in the Data field as the file names. Secret volumes support ownership management and SELinux relabeling.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumes#secret
   */
  readonly secret?: CronWorkflowSpecWorkflowSpecVolumesSecret;

  /**
   * Represents a StorageOS persistent volume resource.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumes#storageos
   */
  readonly storageos?: CronWorkflowSpecWorkflowSpecVolumesStorageos;

  /**
   * Represents a vSphere volume resource.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumes#vsphereVolume
   */
  readonly vsphereVolume?: CronWorkflowSpecWorkflowSpecVolumesVsphereVolume;

}

/**
 * WorkflowTemplateRef is a reference to a WorkflowTemplate resource.
 *
 * @schema CronWorkflowSpecWorkflowSpecWorkflowTemplateRef
 */
export interface CronWorkflowSpecWorkflowSpecWorkflowTemplateRef {
  /**
   * ClusterScope indicates the referred template is cluster scoped (i.e. a ClusterWorkflowTemplate).
   *
   * @schema CronWorkflowSpecWorkflowSpecWorkflowTemplateRef#clusterScope
   */
  readonly clusterScope?: boolean;

  /**
   * Name is the resource name of the workflow template.
   *
   * @schema CronWorkflowSpecWorkflowSpecWorkflowTemplateRef#name
   */
  readonly name?: string;

}

/**
 * Node affinity is a group of node affinity scheduling rules.
 *
 * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinity
 */
export interface CronWorkflowSpecWorkflowSpecAffinityNodeAffinity {
  /**
   * The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution;

}

/**
 * Pod affinity is a group of inter pod affinity scheduling rules.
 *
 * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinity
 */
export interface CronWorkflowSpecWorkflowSpecAffinityPodAffinity {
  /**
   * The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution[];

}

/**
 * Pod anti affinity is a group of inter pod anti affinity scheduling rules.
 *
 * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinity
 */
export interface CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinity {
  /**
   * The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution[];

}

/**
 * Artifact indicates an artifact to place at a specified path
 *
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifacts
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifacts {
  /**
   * ArchiveStrategy describes how to archive files/directory when saving artifacts
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifacts#archive
   */
  readonly archive?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsArchive;

  /**
   * ArchiveLogs indicates if the container logs should be archived
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifacts#archiveLogs
   */
  readonly archiveLogs?: boolean;

  /**
   * ArtifactoryArtifact is the location of an artifactory artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifacts#artifactory
   */
  readonly artifactory?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactory;

  /**
   * From allows an artifact to reference an artifact from a previous step
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifacts#from
   */
  readonly from?: string;

  /**
   * GCSArtifact is the location of a GCS artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifacts#gcs
   */
  readonly gcs?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsGcs;

  /**
   * GitArtifact is the location of an git artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifacts#git
   */
  readonly git?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsGit;

  /**
   * GlobalName exports an output artifact to the global scope, making it available as '{{io.argoproj.workflow.v1alpha1.outputs.artifacts.XXXX}} and in workflow.status.outputs.artifacts
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifacts#globalName
   */
  readonly globalName?: string;

  /**
   * HDFSArtifact is the location of an HDFS artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifacts#hdfs
   */
  readonly hdfs?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfs;

  /**
   * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifacts#http
   */
  readonly http?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttp;

  /**
   * mode bits to use on this file, must be a value between 0 and 0777 set when loading input artifacts.
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifacts#mode
   */
  readonly mode?: number;

  /**
   * name of the artifact. must be unique within a template's inputs/outputs.
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifacts#name
   */
  readonly name: string;

  /**
   * Make Artifacts optional, if Artifacts doesn't generate or exist
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifacts#optional
   */
  readonly optional?: boolean;

  /**
   * OSSArtifact is the location of an Alibaba Cloud OSS artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifacts#oss
   */
  readonly oss?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsOss;

  /**
   * Path is the container path to the artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifacts#path
   */
  readonly path?: string;

  /**
   * RawArtifact allows raw string content to be placed as an artifact in a container
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifacts#raw
   */
  readonly raw?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsRaw;

  /**
   * S3Artifact is the location of an S3 artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifacts#s3
   */
  readonly s3?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3;

}

/**
 * Parameter indicate a passed string parameter to a service template with an optional default value
 *
 * @schema CronWorkflowSpecWorkflowSpecArgumentsParameters
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsParameters {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsParameters#default
   */
  readonly default?: string;

  /**
   * GlobalName exports an output parameter to the global scope, making it available as '{{io.argoproj.workflow.v1alpha1.outputs.parameters.XXXX}} and in workflow.status.outputs.parameters
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsParameters#globalName
   */
  readonly globalName?: string;

  /**
   * Name is the parameter name
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsParameters#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsParameters#value
   */
  readonly value?: string;

  /**
   * ValueFrom describes a location in which to obtain the value to a parameter
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsParameters#valueFrom
   */
  readonly valueFrom?: CronWorkflowSpecWorkflowSpecArgumentsParametersValueFrom;

}

/**
 * PodDNSConfigOption defines DNS resolver options of a pod.
 *
 * @schema CronWorkflowSpecWorkflowSpecDnsConfigOptions
 */
export interface CronWorkflowSpecWorkflowSpecDnsConfigOptions {
  /**
   * Required.
   *
   * @schema CronWorkflowSpecWorkflowSpecDnsConfigOptions#name
   */
  readonly name?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecDnsConfigOptions#value
   */
  readonly value?: string;

}

/**
 * Prometheus is a prometheus metric to be emitted
 *
 * @schema CronWorkflowSpecWorkflowSpecMetricsPrometheus
 */
export interface CronWorkflowSpecWorkflowSpecMetricsPrometheus {
  /**
   * Counter is a Counter prometheus metric
   *
   * @schema CronWorkflowSpecWorkflowSpecMetricsPrometheus#counter
   */
  readonly counter?: CronWorkflowSpecWorkflowSpecMetricsPrometheusCounter;

  /**
   * Gauge is a Gauge prometheus metric
   *
   * @schema CronWorkflowSpecWorkflowSpecMetricsPrometheus#gauge
   */
  readonly gauge?: CronWorkflowSpecWorkflowSpecMetricsPrometheusGauge;

  /**
   * Help is a string that describes the metric
   *
   * @schema CronWorkflowSpecWorkflowSpecMetricsPrometheus#help
   */
  readonly help: string;

  /**
   * Histogram is a Histogram prometheus metric
   *
   * @schema CronWorkflowSpecWorkflowSpecMetricsPrometheus#histogram
   */
  readonly histogram?: CronWorkflowSpecWorkflowSpecMetricsPrometheusHistogram;

  /**
   * Labels is a list of metric labels
   *
   * @schema CronWorkflowSpecWorkflowSpecMetricsPrometheus#labels
   */
  readonly labels?: CronWorkflowSpecWorkflowSpecMetricsPrometheusLabels[];

  /**
   * Name is the name of the metric
   *
   * @schema CronWorkflowSpecWorkflowSpecMetricsPrometheus#name
   */
  readonly name: string;

  /**
   * When is a conditional statement that decides when to emit the metric
   *
   * @schema CronWorkflowSpecWorkflowSpecMetricsPrometheus#when
   */
  readonly when?: string;

}

/**
 * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
 *
 * @schema CronWorkflowSpecWorkflowSpecPodDisruptionBudgetSelector
 */
export interface CronWorkflowSpecWorkflowSpecPodDisruptionBudgetSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema CronWorkflowSpecWorkflowSpecPodDisruptionBudgetSelector#matchExpressions
   */
  readonly matchExpressions?: CronWorkflowSpecWorkflowSpecPodDisruptionBudgetSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema CronWorkflowSpecWorkflowSpecPodDisruptionBudgetSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * SELinuxOptions are the labels to be applied to the container
 *
 * @schema CronWorkflowSpecWorkflowSpecSecurityContextSeLinuxOptions
 */
export interface CronWorkflowSpecWorkflowSpecSecurityContextSeLinuxOptions {
  /**
   * Level is SELinux level label that applies to the container.
   *
   * @schema CronWorkflowSpecWorkflowSpecSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * Role is a SELinux role label that applies to the container.
   *
   * @schema CronWorkflowSpecWorkflowSpecSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * Type is a SELinux type label that applies to the container.
   *
   * @schema CronWorkflowSpecWorkflowSpecSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * User is a SELinux user label that applies to the container.
   *
   * @schema CronWorkflowSpecWorkflowSpecSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * Sysctl defines a kernel parameter to be set
 *
 * @schema CronWorkflowSpecWorkflowSpecSecurityContextSysctls
 */
export interface CronWorkflowSpecWorkflowSpecSecurityContextSysctls {
  /**
   * Name of a property to set
   *
   * @schema CronWorkflowSpecWorkflowSpecSecurityContextSysctls#name
   */
  readonly name: string;

  /**
   * Value of a property to set
   *
   * @schema CronWorkflowSpecWorkflowSpecSecurityContextSysctls#value
   */
  readonly value: string;

}

/**
 * WindowsSecurityContextOptions contain Windows-specific options and credentials.
 *
 * @schema CronWorkflowSpecWorkflowSpecSecurityContextWindowsOptions
 */
export interface CronWorkflowSpecWorkflowSpecSecurityContextWindowsOptions {
  /**
   * GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
   *
   * @schema CronWorkflowSpecWorkflowSpecSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * GMSACredentialSpecName is the name of the GMSA credential spec to use. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
   *
   * @schema CronWorkflowSpecWorkflowSpecSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

}

/**
 * Affinity is a group of affinity scheduling rules.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinity
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinity {
  /**
   * Node affinity is a group of node affinity scheduling rules.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinity#nodeAffinity
   */
  readonly nodeAffinity?: CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinity;

  /**
   * Pod affinity is a group of inter pod affinity scheduling rules.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinity#podAffinity
   */
  readonly podAffinity?: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinity;

  /**
   * Pod anti affinity is a group of inter pod anti affinity scheduling rules.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinity#podAntiAffinity
   */
  readonly podAntiAffinity?: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinity;

}

/**
 * ArtifactLocation describes a location for a single or multiple artifacts. It is used as single artifact in the context of inputs/outputs (e.g. outputs.artifacts.artname). It is also used to describe the location of multiple artifacts such as the archive location of a single workflow step, which the executor will use as a default location to store its files.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocation
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocation {
  /**
   * ArchiveLogs indicates if the container logs should be archived
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocation#archiveLogs
   */
  readonly archiveLogs?: boolean;

  /**
   * ArtifactoryArtifact is the location of an artifactory artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocation#artifactory
   */
  readonly artifactory?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationArtifactory;

  /**
   * GCSArtifact is the location of a GCS artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocation#gcs
   */
  readonly gcs?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGcs;

  /**
   * GitArtifact is the location of an git artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocation#git
   */
  readonly git?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGit;

  /**
   * HDFSArtifact is the location of an HDFS artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocation#hdfs
   */
  readonly hdfs?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfs;

  /**
   * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocation#http
   */
  readonly http?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttp;

  /**
   * OSSArtifact is the location of an Alibaba Cloud OSS artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocation#oss
   */
  readonly oss?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOss;

  /**
   * RawArtifact allows raw string content to be placed as an artifact in a container
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocation#raw
   */
  readonly raw?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationRaw;

  /**
   * S3Artifact is the location of an S3 artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocation#s3
   */
  readonly s3?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3;

}

/**
 * Arguments to a template
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArguments
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArguments {
  /**
   * Artifacts is the list of artifacts to pass to the template or workflow
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArguments#artifacts
   */
  readonly artifacts?: CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifacts[];

  /**
   * Parameters is the list of parameters to pass to the template or workflow
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArguments#parameters
   */
  readonly parameters?: CronWorkflowSpecWorkflowSpecTemplatesArgumentsParameters[];

}

/**
 * A single application container that you want to run within a pod.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainer
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainer {
  /**
   * Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainer#args
   */
  readonly args?: string[];

  /**
   * Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainer#command
   */
  readonly command?: string[];

  /**
   * List of environment variables to set in the container. Cannot be updated.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainer#env
   */
  readonly env?: CronWorkflowSpecWorkflowSpecTemplatesContainerEnv[];

  /**
   * List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainer#envFrom
   */
  readonly envFrom?: CronWorkflowSpecWorkflowSpecTemplatesContainerEnvFrom[];

  /**
   * Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainer#image
   */
  readonly image?: string;

  /**
   * Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
   *
   * @default Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainer#imagePullPolicy
   */
  readonly imagePullPolicy?: string;

  /**
   * Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainer#lifecycle
   */
  readonly lifecycle?: CronWorkflowSpecWorkflowSpecTemplatesContainerLifecycle;

  /**
   * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainer#livenessProbe
   */
  readonly livenessProbe?: CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbe;

  /**
   * Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainer#name
   */
  readonly name?: string;

  /**
   * List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Cannot be updated.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainer#ports
   */
  readonly ports?: CronWorkflowSpecWorkflowSpecTemplatesContainerPorts[];

  /**
   * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainer#readinessProbe
   */
  readonly readinessProbe?: CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbe;

  /**
   * ResourceRequirements describes the compute resource requirements.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainer#resources
   */
  readonly resources?: CronWorkflowSpecWorkflowSpecTemplatesContainerResources;

  /**
   * SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainer#securityContext
   */
  readonly securityContext?: CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContext;

  /**
   * Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
   *
   * @default false.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainer#stdin
   */
  readonly stdin?: boolean;

  /**
   * Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
   *
   * @default false
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainer#stdinOnce
   */
  readonly stdinOnce?: boolean;

  /**
   * Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.
   *
   * @default dev/termination-log. Cannot be updated.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainer#terminationMessagePath
   */
  readonly terminationMessagePath?: string;

  /**
   * Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
   *
   * @default File. Cannot be updated.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainer#terminationMessagePolicy
   */
  readonly terminationMessagePolicy?: string;

  /**
   * Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
   *
   * @default false.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainer#tty
   */
  readonly tty?: boolean;

  /**
   * volumeDevices is the list of block devices to be used by the container. This is a beta feature.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainer#volumeDevices
   */
  readonly volumeDevices?: CronWorkflowSpecWorkflowSpecTemplatesContainerVolumeDevices[];

  /**
   * Pod volumes to mount into the container's filesystem. Cannot be updated.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainer#volumeMounts
   */
  readonly volumeMounts?: CronWorkflowSpecWorkflowSpecTemplatesContainerVolumeMounts[];

  /**
   * Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainer#workingDir
   */
  readonly workingDir?: string;

}

/**
 * DAGTemplate is a template subtype for directed acyclic graph templates
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDag
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDag {
  /**
   * This flag is for DAG logic. The DAG logic has a built-in "fail fast" feature to stop scheduling new steps, as soon as it detects that one of the DAG nodes is failed. Then it waits until all DAG nodes are completed before failing the DAG itself. The FailFast flag default is true,  if set to false, it will allow a DAG to run all branches of the DAG to completion (either success or failure), regardless of the failed outcomes of branches in the DAG. More info and example about this feature at https://github.com/argoproj/argo/issues/1442
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDag#failFast
   */
  readonly failFast?: boolean;

  /**
   * Target are one or more names of targets to execute in a DAG
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDag#target
   */
  readonly target?: string;

  /**
   * Tasks are a list of DAG tasks
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDag#tasks
   */
  readonly tasks: CronWorkflowSpecWorkflowSpecTemplatesDagTasks[];

}

/**
 * ExecutorConfig holds configurations of an executor container.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesExecutor
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesExecutor {
  /**
   * ServiceAccountName specifies the service account name of the executor container.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesExecutor#serviceAccountName
   */
  readonly serviceAccountName?: string;

}

/**
 * HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the pod's hosts file.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesHostAliases
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesHostAliases {
  /**
   * Hostnames for the above IP address.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesHostAliases#hostnames
   */
  readonly hostnames?: string[];

  /**
   * IP address of the host file entry.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesHostAliases#ip
   */
  readonly ip?: string;

}

/**
 * UserContainer is a container specified by a user.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainers
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainers {
  /**
   * Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainers#args
   */
  readonly args?: string[];

  /**
   * Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainers#command
   */
  readonly command?: string[];

  /**
   * List of environment variables to set in the container. Cannot be updated.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainers#env
   */
  readonly env?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnv[];

  /**
   * List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainers#envFrom
   */
  readonly envFrom?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvFrom[];

  /**
   * Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainers#image
   */
  readonly image?: string;

  /**
   * Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
   *
   * @default Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainers#imagePullPolicy
   */
  readonly imagePullPolicy?: string;

  /**
   * Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainers#lifecycle
   */
  readonly lifecycle?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecycle;

  /**
   * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainers#livenessProbe
   */
  readonly livenessProbe?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbe;

  /**
   * MirrorVolumeMounts will mount the same volumes specified in the main container to the container (including artifacts), at the same mountPaths. This enables dind daemon to partially see the same filesystem as the main container in order to use features such as docker volume binding
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainers#mirrorVolumeMounts
   */
  readonly mirrorVolumeMounts?: boolean;

  /**
   * Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainers#name
   */
  readonly name: string;

  /**
   * List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Cannot be updated.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainers#ports
   */
  readonly ports?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersPorts[];

  /**
   * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainers#readinessProbe
   */
  readonly readinessProbe?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbe;

  /**
   * ResourceRequirements describes the compute resource requirements.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainers#resources
   */
  readonly resources?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersResources;

  /**
   * SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainers#securityContext
   */
  readonly securityContext?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContext;

  /**
   * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainers#startupProbe
   */
  readonly startupProbe?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbe;

  /**
   * Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
   *
   * @default false.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainers#stdin
   */
  readonly stdin?: boolean;

  /**
   * Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
   *
   * @default false
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainers#stdinOnce
   */
  readonly stdinOnce?: boolean;

  /**
   * Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.
   *
   * @default dev/termination-log. Cannot be updated.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainers#terminationMessagePath
   */
  readonly terminationMessagePath?: string;

  /**
   * Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
   *
   * @default File. Cannot be updated.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainers#terminationMessagePolicy
   */
  readonly terminationMessagePolicy?: string;

  /**
   * Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
   *
   * @default false.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainers#tty
   */
  readonly tty?: boolean;

  /**
   * volumeDevices is the list of block devices to be used by the container. This is a beta feature.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainers#volumeDevices
   */
  readonly volumeDevices?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersVolumeDevices[];

  /**
   * Pod volumes to mount into the container's filesystem. Cannot be updated.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainers#volumeMounts
   */
  readonly volumeMounts?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersVolumeMounts[];

  /**
   * Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainers#workingDir
   */
  readonly workingDir?: string;

}

/**
 * Inputs are the mechanism for passing parameters, artifacts, volumes from one template to another
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputs
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputs {
  /**
   * Artifact are a list of artifacts passed as inputs
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputs#artifacts
   */
  readonly artifacts?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifacts[];

  /**
   * Parameters are a list of parameters passed as inputs
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputs#parameters
   */
  readonly parameters?: CronWorkflowSpecWorkflowSpecTemplatesInputsParameters[];

}

/**
 * Pod metdata
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesMetadata
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesMetadata {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesMetadata#annotations
   */
  readonly annotations?: { [key: string]: string };

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesMetadata#labels
   */
  readonly labels?: { [key: string]: string };

}

/**
 * Metrics are a list of metrics emitted from a Workflow/Template
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesMetrics
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesMetrics {
  /**
   * Prometheus is a list of prometheus metrics to be emitted
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesMetrics#prometheus
   */
  readonly prometheus: CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheus[];

}

/**
 * Outputs hold parameters, artifacts, and results from a step
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputs
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputs {
  /**
   * Artifacts holds the list of output artifacts produced by a step
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputs#artifacts
   */
  readonly artifacts?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifacts[];

  /**
   * ExitCode holds the exit code of a script template
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputs#exitCode
   */
  readonly exitCode?: string;

  /**
   * Parameters holds the list of output parameters produced by a step
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputs#parameters
   */
  readonly parameters?: CronWorkflowSpecWorkflowSpecTemplatesOutputsParameters[];

  /**
   * Result holds the result (stdout) of a script template
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputs#result
   */
  readonly result?: string;

}

/**
 * ResourceTemplate is a template subtype to manipulate kubernetes resources
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesResource
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesResource {
  /**
   * Action is the action to perform to the resource. Must be one of: get, create, apply, delete, replace, patch
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResource#action
   */
  readonly action: string;

  /**
   * FailureCondition is a label selector expression which describes the conditions of the k8s resource in which the step was considered failed
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResource#failureCondition
   */
  readonly failureCondition?: string;

  /**
   * Flags is a set of additional options passed to kubectl before submitting a resource I.e. to disable resource validation: flags: [
	"--validate=false"  # disable resource validation
]
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResource#flags
   */
  readonly flags?: string[];

  /**
   * Manifest contains the kubernetes manifest
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResource#manifest
   */
  readonly manifest?: string;

  /**
   * MergeStrategy is the strategy used to merge a patch. It defaults to "strategic" Must be one of: strategic, merge, json
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResource#mergeStrategy
   */
  readonly mergeStrategy?: string;

  /**
   * SetOwnerReference sets the reference to the workflow on the OwnerReference of generated resource.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResource#setOwnerReference
   */
  readonly setOwnerReference?: boolean;

  /**
   * SuccessCondition is a label selector expression which describes the conditions of the k8s resource in which it is acceptable to proceed to the following step
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesResource#successCondition
   */
  readonly successCondition?: string;

}

/**
 * RetryStrategy provides controls on how to retry a workflow step
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesRetryStrategy
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesRetryStrategy {
  /**
   * Backoff is a backoff strategy to use within retryStrategy
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesRetryStrategy#backoff
   */
  readonly backoff?: CronWorkflowSpecWorkflowSpecTemplatesRetryStrategyBackoff;

  /**
   * Limit is the maximum number of attempts when retrying a container
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesRetryStrategy#limit
   */
  readonly limit?: number;

  /**
   * RetryPolicy is a policy of NodePhase statuses that will be retried
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesRetryStrategy#retryPolicy
   */
  readonly retryPolicy?: string;

}

/**
 * ScriptTemplate is a template subtype to enable scripting through code steps
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScript
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScript {
  /**
   * Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScript#args
   */
  readonly args?: string[];

  /**
   * Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScript#command
   */
  readonly command?: string[];

  /**
   * List of environment variables to set in the container. Cannot be updated.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScript#env
   */
  readonly env?: CronWorkflowSpecWorkflowSpecTemplatesScriptEnv[];

  /**
   * List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScript#envFrom
   */
  readonly envFrom?: CronWorkflowSpecWorkflowSpecTemplatesScriptEnvFrom[];

  /**
   * Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScript#image
   */
  readonly image?: string;

  /**
   * Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
   *
   * @default Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScript#imagePullPolicy
   */
  readonly imagePullPolicy?: string;

  /**
   * Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScript#lifecycle
   */
  readonly lifecycle?: CronWorkflowSpecWorkflowSpecTemplatesScriptLifecycle;

  /**
   * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScript#livenessProbe
   */
  readonly livenessProbe?: CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbe;

  /**
   * Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScript#name
   */
  readonly name?: string;

  /**
   * List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Cannot be updated.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScript#ports
   */
  readonly ports?: CronWorkflowSpecWorkflowSpecTemplatesScriptPorts[];

  /**
   * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScript#readinessProbe
   */
  readonly readinessProbe?: CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbe;

  /**
   * ResourceRequirements describes the compute resource requirements.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScript#resources
   */
  readonly resources?: CronWorkflowSpecWorkflowSpecTemplatesScriptResources;

  /**
   * SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScript#securityContext
   */
  readonly securityContext?: CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContext;

  /**
   * Source contains the source code of the script to execute
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScript#source
   */
  readonly source: string;

  /**
   * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScript#startupProbe
   */
  readonly startupProbe?: CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbe;

  /**
   * Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
   *
   * @default false.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScript#stdin
   */
  readonly stdin?: boolean;

  /**
   * Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
   *
   * @default false
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScript#stdinOnce
   */
  readonly stdinOnce?: boolean;

  /**
   * Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.
   *
   * @default dev/termination-log. Cannot be updated.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScript#terminationMessagePath
   */
  readonly terminationMessagePath?: string;

  /**
   * Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
   *
   * @default File. Cannot be updated.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScript#terminationMessagePolicy
   */
  readonly terminationMessagePolicy?: string;

  /**
   * Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
   *
   * @default false.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScript#tty
   */
  readonly tty?: boolean;

  /**
   * volumeDevices is the list of block devices to be used by the container. This is a beta feature.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScript#volumeDevices
   */
  readonly volumeDevices?: CronWorkflowSpecWorkflowSpecTemplatesScriptVolumeDevices[];

  /**
   * Pod volumes to mount into the container's filesystem. Cannot be updated.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScript#volumeMounts
   */
  readonly volumeMounts?: CronWorkflowSpecWorkflowSpecTemplatesScriptVolumeMounts[];

  /**
   * Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScript#workingDir
   */
  readonly workingDir?: string;

}

/**
 * PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSecurityContext
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSecurityContext {
  /**
   * A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:

1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----

If unset, the Kubelet will not modify the ownership and permissions of any volume.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSecurityContext#fsGroup
   */
  readonly fsGroup?: number;

  /**
   * The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
   *
   * @default user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * SELinuxOptions are the labels to be applied to the container
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: CronWorkflowSpecWorkflowSpecTemplatesSecurityContextSeLinuxOptions;

  /**
   * A list of groups applied to the first process run in each container, in addition to the container's primary GID.  If unspecified, no groups will be added to any container.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSecurityContext#supplementalGroups
   */
  readonly supplementalGroups?: number[];

  /**
   * Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSecurityContext#sysctls
   */
  readonly sysctls?: CronWorkflowSpecWorkflowSpecTemplatesSecurityContextSysctls[];

  /**
   * WindowsSecurityContextOptions contain Windows-specific options and credentials.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSecurityContext#windowsOptions
   */
  readonly windowsOptions?: CronWorkflowSpecWorkflowSpecTemplatesSecurityContextWindowsOptions;

}

/**
 * UserContainer is a container specified by a user.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecars
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecars {
  /**
   * Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecars#args
   */
  readonly args?: string[];

  /**
   * Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecars#command
   */
  readonly command?: string[];

  /**
   * List of environment variables to set in the container. Cannot be updated.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecars#env
   */
  readonly env?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnv[];

  /**
   * List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecars#envFrom
   */
  readonly envFrom?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvFrom[];

  /**
   * Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecars#image
   */
  readonly image?: string;

  /**
   * Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
   *
   * @default Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecars#imagePullPolicy
   */
  readonly imagePullPolicy?: string;

  /**
   * Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecars#lifecycle
   */
  readonly lifecycle?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecycle;

  /**
   * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecars#livenessProbe
   */
  readonly livenessProbe?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbe;

  /**
   * MirrorVolumeMounts will mount the same volumes specified in the main container to the container (including artifacts), at the same mountPaths. This enables dind daemon to partially see the same filesystem as the main container in order to use features such as docker volume binding
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecars#mirrorVolumeMounts
   */
  readonly mirrorVolumeMounts?: boolean;

  /**
   * Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecars#name
   */
  readonly name: string;

  /**
   * List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Cannot be updated.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecars#ports
   */
  readonly ports?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsPorts[];

  /**
   * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecars#readinessProbe
   */
  readonly readinessProbe?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbe;

  /**
   * ResourceRequirements describes the compute resource requirements.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecars#resources
   */
  readonly resources?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsResources;

  /**
   * SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecars#securityContext
   */
  readonly securityContext?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContext;

  /**
   * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecars#startupProbe
   */
  readonly startupProbe?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbe;

  /**
   * Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
   *
   * @default false.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecars#stdin
   */
  readonly stdin?: boolean;

  /**
   * Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
   *
   * @default false
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecars#stdinOnce
   */
  readonly stdinOnce?: boolean;

  /**
   * Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.
   *
   * @default dev/termination-log. Cannot be updated.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecars#terminationMessagePath
   */
  readonly terminationMessagePath?: string;

  /**
   * Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
   *
   * @default File. Cannot be updated.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecars#terminationMessagePolicy
   */
  readonly terminationMessagePolicy?: string;

  /**
   * Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
   *
   * @default false.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecars#tty
   */
  readonly tty?: boolean;

  /**
   * volumeDevices is the list of block devices to be used by the container. This is a beta feature.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecars#volumeDevices
   */
  readonly volumeDevices?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsVolumeDevices[];

  /**
   * Pod volumes to mount into the container's filesystem. Cannot be updated.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecars#volumeMounts
   */
  readonly volumeMounts?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsVolumeMounts[];

  /**
   * Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecars#workingDir
   */
  readonly workingDir?: string;

}

/**
 * WorkflowStep is a reference to a template to execute in a series of step
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSteps
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSteps {
  /**
   * Arguments to a template
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSteps#arguments
   */
  readonly arguments?: CronWorkflowSpecWorkflowSpecTemplatesStepsArguments;

  /**
   * ContinueOn defines if a workflow should continue even if a task or step fails/errors. It can be specified if the workflow should continue when the pod errors, fails or both.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSteps#continueOn
   */
  readonly continueOn?: CronWorkflowSpecWorkflowSpecTemplatesStepsContinueOn;

  /**
   * Name of the step
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSteps#name
   */
  readonly name?: string;

  /**
   * OnExit is a template reference which is invoked at the end of the template, irrespective of the success, failure, or error of the primary template.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSteps#onExit
   */
  readonly onExit?: string;

  /**
   * Template is the name of the template to execute as the step
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSteps#template
   */
  readonly template?: string;

  /**
   * TemplateRef is a reference of template resource.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSteps#templateRef
   */
  readonly templateRef?: CronWorkflowSpecWorkflowSpecTemplatesStepsTemplateRef;

  /**
   * When is an expression in which the step should conditionally execute
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSteps#when
   */
  readonly when?: string;

  /**
   * WithItems expands a step into multiple parallel steps from the items in the list
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSteps#withItems
   */
  readonly withItems?: string[];

  /**
   * WithParam expands a step into multiple parallel steps from the value in the parameter, which is expected to be a JSON list.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSteps#withParam
   */
  readonly withParam?: string;

  /**
   * Sequence expands a workflow step into numeric range
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSteps#withSequence
   */
  readonly withSequence?: CronWorkflowSpecWorkflowSpecTemplatesStepsWithSequence;

}

/**
 * SuspendTemplate is a template subtype to suspend a workflow at a predetermined point in time
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSuspend
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSuspend {
  /**
   * Duration is the seconds to wait before automatically resuming a template
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSuspend#duration
   */
  readonly duration?: string;

}

/**
 * TemplateRef is a reference of template resource.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesTemplateRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesTemplateRef {
  /**
   * ClusterScope indicates the referred template is cluster scoped (i.e. a ClusterWorkflowTemplate).
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesTemplateRef#clusterScope
   */
  readonly clusterScope?: boolean;

  /**
   * Name is the resource name of the template.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesTemplateRef#name
   */
  readonly name?: string;

  /**
   * RuntimeResolution skips validation at creation time. By enabling this option, you can create the referred workflow template before the actual runtime.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesTemplateRef#runtimeResolution
   */
  readonly runtimeResolution?: boolean;

  /**
   * Template is the name of referred template in the resource.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesTemplateRef#template
   */
  readonly template?: string;

}

/**
 * The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesTolerations
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesTolerations {
  /**
   * Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesTolerations#effect
   */
  readonly effect?: string;

  /**
   * Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesTolerations#key
   */
  readonly key?: string;

  /**
   * Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
   *
   * @default Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesTolerations#operator
   */
  readonly operator?: string;

  /**
   * TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesTolerations#tolerationSeconds
   */
  readonly tolerationSeconds?: number;

  /**
   * Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesTolerations#value
   */
  readonly value?: string;

}

/**
 * Volume represents a named volume in a pod that may be accessed by any container in the pod.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumes {
  /**
   * Represents a Persistent Disk resource in AWS.

An AWS EBS disk must exist before mounting to a container. The disk must also be in the same AWS zone as the kubelet. An AWS EBS disk can only be mounted as read/write once. AWS EBS volumes support ownership management and SELinux relabeling.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#awsElasticBlockStore
   */
  readonly awsElasticBlockStore?: CronWorkflowSpecWorkflowSpecTemplatesVolumesAwsElasticBlockStore;

  /**
   * AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#azureDisk
   */
  readonly azureDisk?: CronWorkflowSpecWorkflowSpecTemplatesVolumesAzureDisk;

  /**
   * AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#azureFile
   */
  readonly azureFile?: CronWorkflowSpecWorkflowSpecTemplatesVolumesAzureFile;

  /**
   * Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#cephfs
   */
  readonly cephfs?: CronWorkflowSpecWorkflowSpecTemplatesVolumesCephfs;

  /**
   * Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#cinder
   */
  readonly cinder?: CronWorkflowSpecWorkflowSpecTemplatesVolumesCinder;

  /**
   * Adapts a ConfigMap into a volume.

The contents of the target ConfigMap's Data field will be presented in a volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. ConfigMap volumes support ownership management and SELinux relabeling.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#configMap
   */
  readonly configMap?: CronWorkflowSpecWorkflowSpecTemplatesVolumesConfigMap;

  /**
   * Represents a source location of a volume to mount, managed by an external CSI driver
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#csi
   */
  readonly csi?: CronWorkflowSpecWorkflowSpecTemplatesVolumesCsi;

  /**
   * DownwardAPIVolumeSource represents a volume containing downward API info. Downward API volumes support ownership management and SELinux relabeling.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#downwardAPI
   */
  readonly downwardAPI?: CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApi;

  /**
   * Represents an empty directory for a pod. Empty directory volumes support ownership management and SELinux relabeling.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#emptyDir
   */
  readonly emptyDir?: CronWorkflowSpecWorkflowSpecTemplatesVolumesEmptyDir;

  /**
   * Represents a Fibre Channel volume. Fibre Channel volumes can only be mounted as read/write once. Fibre Channel volumes support ownership management and SELinux relabeling.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#fc
   */
  readonly fc?: CronWorkflowSpecWorkflowSpecTemplatesVolumesFc;

  /**
   * FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#flexVolume
   */
  readonly flexVolume?: CronWorkflowSpecWorkflowSpecTemplatesVolumesFlexVolume;

  /**
   * Represents a Flocker volume mounted by the Flocker agent. One and only one of datasetName and datasetUUID should be set. Flocker volumes do not support ownership management or SELinux relabeling.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#flocker
   */
  readonly flocker?: CronWorkflowSpecWorkflowSpecTemplatesVolumesFlocker;

  /**
   * Represents a Persistent Disk resource in Google Compute Engine.

A GCE PD must exist before mounting to a container. The disk must also be in the same GCE project and zone as the kubelet. A GCE PD can only be mounted as read/write once or read-only many times. GCE PDs support ownership management and SELinux relabeling.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#gcePersistentDisk
   */
  readonly gcePersistentDisk?: CronWorkflowSpecWorkflowSpecTemplatesVolumesGcePersistentDisk;

  /**
   * Represents a volume that is populated with the contents of a git repository. Git repo volumes do not support ownership management. Git repo volumes support SELinux relabeling.

DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#gitRepo
   */
  readonly gitRepo?: CronWorkflowSpecWorkflowSpecTemplatesVolumesGitRepo;

  /**
   * Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#glusterfs
   */
  readonly glusterfs?: CronWorkflowSpecWorkflowSpecTemplatesVolumesGlusterfs;

  /**
   * Represents a host path mapped into a pod. Host path volumes do not support ownership management or SELinux relabeling.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#hostPath
   */
  readonly hostPath?: CronWorkflowSpecWorkflowSpecTemplatesVolumesHostPath;

  /**
   * Represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#iscsi
   */
  readonly iscsi?: CronWorkflowSpecWorkflowSpecTemplatesVolumesIscsi;

  /**
   * Volume's name. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#name
   */
  readonly name: string;

  /**
   * Represents an NFS mount that lasts the lifetime of a pod. NFS volumes do not support ownership management or SELinux relabeling.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#nfs
   */
  readonly nfs?: CronWorkflowSpecWorkflowSpecTemplatesVolumesNfs;

  /**
   * PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace. This volume finds the bound PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another type of volume that is owned by someone else (the system).
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#persistentVolumeClaim
   */
  readonly persistentVolumeClaim?: CronWorkflowSpecWorkflowSpecTemplatesVolumesPersistentVolumeClaim;

  /**
   * Represents a Photon Controller persistent disk resource.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#photonPersistentDisk
   */
  readonly photonPersistentDisk?: CronWorkflowSpecWorkflowSpecTemplatesVolumesPhotonPersistentDisk;

  /**
   * PortworxVolumeSource represents a Portworx volume resource.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#portworxVolume
   */
  readonly portworxVolume?: CronWorkflowSpecWorkflowSpecTemplatesVolumesPortworxVolume;

  /**
   * Represents a projected volume source
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#projected
   */
  readonly projected?: CronWorkflowSpecWorkflowSpecTemplatesVolumesProjected;

  /**
   * Represents a Quobyte mount that lasts the lifetime of a pod. Quobyte volumes do not support ownership management or SELinux relabeling.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#quobyte
   */
  readonly quobyte?: CronWorkflowSpecWorkflowSpecTemplatesVolumesQuobyte;

  /**
   * Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#rbd
   */
  readonly rbd?: CronWorkflowSpecWorkflowSpecTemplatesVolumesRbd;

  /**
   * ScaleIOVolumeSource represents a persistent ScaleIO volume
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#scaleIO
   */
  readonly scaleIO?: CronWorkflowSpecWorkflowSpecTemplatesVolumesScaleIo;

  /**
   * Adapts a Secret into a volume.

The contents of the target Secret's Data field will be presented in a volume as files using the keys in the Data field as the file names. Secret volumes support ownership management and SELinux relabeling.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#secret
   */
  readonly secret?: CronWorkflowSpecWorkflowSpecTemplatesVolumesSecret;

  /**
   * Represents a StorageOS persistent volume resource.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#storageos
   */
  readonly storageos?: CronWorkflowSpecWorkflowSpecTemplatesVolumesStorageos;

  /**
   * Represents a vSphere volume resource.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumes#vsphereVolume
   */
  readonly vsphereVolume?: CronWorkflowSpecWorkflowSpecTemplatesVolumesVsphereVolume;

}

/**
 * PersistentVolumeClaimSpec describes the common attributes of storage devices and allows a Source for provider-specific attributes
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpec
 */
export interface CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpec {
  /**
   * AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpec#accessModes
   */
  readonly accessModes?: string[];

  /**
   * TypedLocalObjectReference contains enough information to let you locate the typed referenced object inside the same namespace.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpec#dataSource
   */
  readonly dataSource?: CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecDataSource;

  /**
   * ResourceRequirements describes the compute resource requirements.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpec#resources
   */
  readonly resources?: CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecResources;

  /**
   * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpec#selector
   */
  readonly selector?: CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecSelector;

  /**
   * Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpec#storageClassName
   */
  readonly storageClassName?: string;

  /**
   * volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is a beta feature.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpec#volumeMode
   */
  readonly volumeMode?: string;

  /**
   * VolumeName is the binding reference to the PersistentVolume backing this claim.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpec#volumeName
   */
  readonly volumeName?: string;

}

/**
 * PersistentVolumeClaimStatus is the current status of a persistent volume claim.
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatus
 */
export interface CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatus {
  /**
   * AccessModes contains the actual access modes the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatus#accessModes
   */
  readonly accessModes?: string[];

  /**
   * Represents the actual resources of the underlying volume.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatus#capacity
   */
  readonly capacity?: { [key: string]: string };

  /**
   * Current Condition of persistent volume claim. If underlying persistent volume is being resized then the Condition will be set to 'ResizeStarted'.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatus#conditions
   */
  readonly conditions?: CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatusConditions[];

  /**
   * Phase represents the current phase of PersistentVolumeClaim.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatus#phase
   */
  readonly phase?: string;

}

/**
 * Represents a Persistent Disk resource in AWS.

An AWS EBS disk must exist before mounting to a container. The disk must also be in the same AWS zone as the kubelet. An AWS EBS disk can only be mounted as read/write once. AWS EBS volumes support ownership management and SELinux relabeling.
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumesAwsElasticBlockStore
 */
export interface CronWorkflowSpecWorkflowSpecVolumesAwsElasticBlockStore {
  /**
   * Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesAwsElasticBlockStore#fsType
   */
  readonly fsType?: string;

  /**
   * The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesAwsElasticBlockStore#partition
   */
  readonly partition?: number;

  /**
   * Specify "true" to force and set the ReadOnly property in VolumeMounts to "true". If omitted, the default is "false". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesAwsElasticBlockStore#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesAwsElasticBlockStore#volumeID
   */
  readonly volumeID: string;

}

/**
 * AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumesAzureDisk
 */
export interface CronWorkflowSpecWorkflowSpecVolumesAzureDisk {
  /**
   * Host Caching mode: None, Read Only, Read Write.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesAzureDisk#cachingMode
   */
  readonly cachingMode?: string;

  /**
   * The Name of the data disk in the blob storage
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesAzureDisk#diskName
   */
  readonly diskName: string;

  /**
   * The URI the data disk in the blob storage
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesAzureDisk#diskURI
   */
  readonly diskURI: string;

  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesAzureDisk#fsType
   */
  readonly fsType?: string;

  /**
   * Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesAzureDisk#kind
   */
  readonly kind?: string;

  /**
   * Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema CronWorkflowSpecWorkflowSpecVolumesAzureDisk#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumesAzureFile
 */
export interface CronWorkflowSpecWorkflowSpecVolumesAzureFile {
  /**
   * Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema CronWorkflowSpecWorkflowSpecVolumesAzureFile#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * the name of secret that contains Azure Storage Account Name and Key
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesAzureFile#secretName
   */
  readonly secretName: string;

  /**
   * Share Name
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesAzureFile#shareName
   */
  readonly shareName: string;

}

/**
 * Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling.
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumesCephfs
 */
export interface CronWorkflowSpecWorkflowSpecVolumesCephfs {
  /**
   * Required: Monitors is a collection of Ceph monitors More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesCephfs#monitors
   */
  readonly monitors: string[];

  /**
   * Optional: Used as the mounted root, rather than the full Ceph tree, default is /
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesCephfs#path
   */
  readonly path?: string;

  /**
   * Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
   * @schema CronWorkflowSpecWorkflowSpecVolumesCephfs#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesCephfs#secretFile
   */
  readonly secretFile?: string;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesCephfs#secretRef
   */
  readonly secretRef?: CronWorkflowSpecWorkflowSpecVolumesCephfsSecretRef;

  /**
   * Optional: User is the rados user name, default is admin More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesCephfs#user
   */
  readonly user?: string;

}

/**
 * Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling.
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumesCinder
 */
export interface CronWorkflowSpecWorkflowSpecVolumesCinder {
  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesCinder#fsType
   */
  readonly fsType?: string;

  /**
   * Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
   * @schema CronWorkflowSpecWorkflowSpecVolumesCinder#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesCinder#secretRef
   */
  readonly secretRef?: CronWorkflowSpecWorkflowSpecVolumesCinderSecretRef;

  /**
   * volume id used to identify the volume in cinder More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesCinder#volumeID
   */
  readonly volumeID: string;

}

/**
 * Adapts a ConfigMap into a volume.

The contents of the target ConfigMap's Data field will be presented in a volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. ConfigMap volumes support ownership management and SELinux relabeling.
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumesConfigMap
 */
export interface CronWorkflowSpecWorkflowSpecVolumesConfigMap {
  /**
   * Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @default 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   * @schema CronWorkflowSpecWorkflowSpecVolumesConfigMap#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesConfigMap#items
   */
  readonly items?: CronWorkflowSpecWorkflowSpecVolumesConfigMapItems[];

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesConfigMap#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its keys must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Represents a source location of a volume to mount, managed by an external CSI driver
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumesCsi
 */
export interface CronWorkflowSpecWorkflowSpecVolumesCsi {
  /**
   * Driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesCsi#driver
   */
  readonly driver: string;

  /**
   * Filesystem type to mount. Ex. "ext4", "xfs", "ntfs". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesCsi#fsType
   */
  readonly fsType?: string;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesCsi#nodePublishSecretRef
   */
  readonly nodePublishSecretRef?: CronWorkflowSpecWorkflowSpecVolumesCsiNodePublishSecretRef;

  /**
   * Specifies a read-only configuration for the volume. Defaults to false (read/write).
   *
   * @default false (read/write).
   * @schema CronWorkflowSpecWorkflowSpecVolumesCsi#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * VolumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesCsi#volumeAttributes
   */
  readonly volumeAttributes?: { [key: string]: string };

}

/**
 * DownwardAPIVolumeSource represents a volume containing downward API info. Downward API volumes support ownership management and SELinux relabeling.
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumesDownwardApi
 */
export interface CronWorkflowSpecWorkflowSpecVolumesDownwardApi {
  /**
   * Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @default 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   * @schema CronWorkflowSpecWorkflowSpecVolumesDownwardApi#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * Items is a list of downward API volume file
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesDownwardApi#items
   */
  readonly items?: CronWorkflowSpecWorkflowSpecVolumesDownwardApiItems[];

}

/**
 * Represents an empty directory for a pod. Empty directory volumes support ownership management and SELinux relabeling.
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumesEmptyDir
 */
export interface CronWorkflowSpecWorkflowSpecVolumesEmptyDir {
  /**
   * What type of storage medium should back this directory. The default is "" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesEmptyDir#medium
   */
  readonly medium?: string;

  /**
   * Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and Int64() accessors.

The serialization format is:

<quantity>        ::= <signedNumber><suffix>
  (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
<decimalSI>       ::= m | "" | k | M | G | T | P | E
  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
<decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  a. No precision is lost
  b. No fractional digits will be emitted
  c. The exponent (or suffix) is as large as possible.
The sign will be omitted unless the number is negative.

Examples:
  1.5 will be serialized as "1500m"
  1.5Gi will be serialized as "1536Mi"

Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.

Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesEmptyDir#sizeLimit
   */
  readonly sizeLimit?: string;

}

/**
 * Represents a Fibre Channel volume. Fibre Channel volumes can only be mounted as read/write once. Fibre Channel volumes support ownership management and SELinux relabeling.
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumesFc
 */
export interface CronWorkflowSpecWorkflowSpecVolumesFc {
  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesFc#fsType
   */
  readonly fsType?: string;

  /**
   * Optional: FC target lun number
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesFc#lun
   */
  readonly lun?: number;

  /**
   * Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema CronWorkflowSpecWorkflowSpecVolumesFc#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Optional: FC target worldwide names (WWNs)
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesFc#targetWWNs
   */
  readonly targetWWNs?: string[];

  /**
   * Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesFc#wwids
   */
  readonly wwids?: string[];

}

/**
 * FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumesFlexVolume
 */
export interface CronWorkflowSpecWorkflowSpecVolumesFlexVolume {
  /**
   * Driver is the name of the driver to use for this volume.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesFlexVolume#driver
   */
  readonly driver: string;

  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesFlexVolume#fsType
   */
  readonly fsType?: string;

  /**
   * Optional: Extra command options if any.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesFlexVolume#options
   */
  readonly options?: { [key: string]: string };

  /**
   * Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema CronWorkflowSpecWorkflowSpecVolumesFlexVolume#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesFlexVolume#secretRef
   */
  readonly secretRef?: CronWorkflowSpecWorkflowSpecVolumesFlexVolumeSecretRef;

}

/**
 * Represents a Flocker volume mounted by the Flocker agent. One and only one of datasetName and datasetUUID should be set. Flocker volumes do not support ownership management or SELinux relabeling.
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumesFlocker
 */
export interface CronWorkflowSpecWorkflowSpecVolumesFlocker {
  /**
   * Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesFlocker#datasetName
   */
  readonly datasetName?: string;

  /**
   * UUID of the dataset. This is unique identifier of a Flocker dataset
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesFlocker#datasetUUID
   */
  readonly datasetUUID?: string;

}

/**
 * Represents a Persistent Disk resource in Google Compute Engine.

A GCE PD must exist before mounting to a container. The disk must also be in the same GCE project and zone as the kubelet. A GCE PD can only be mounted as read/write once or read-only many times. GCE PDs support ownership management and SELinux relabeling.
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumesGcePersistentDisk
 */
export interface CronWorkflowSpecWorkflowSpecVolumesGcePersistentDisk {
  /**
   * Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesGcePersistentDisk#fsType
   */
  readonly fsType?: string;

  /**
   * The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesGcePersistentDisk#partition
   */
  readonly partition?: number;

  /**
   * Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesGcePersistentDisk#pdName
   */
  readonly pdName: string;

  /**
   * ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
   *
   * @default false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
   * @schema CronWorkflowSpecWorkflowSpecVolumesGcePersistentDisk#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Represents a volume that is populated with the contents of a git repository. Git repo volumes do not support ownership management. Git repo volumes support SELinux relabeling.

DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumesGitRepo
 */
export interface CronWorkflowSpecWorkflowSpecVolumesGitRepo {
  /**
   * Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesGitRepo#directory
   */
  readonly directory?: string;

  /**
   * Repository URL
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesGitRepo#repository
   */
  readonly repository: string;

  /**
   * Commit hash for the specified revision.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesGitRepo#revision
   */
  readonly revision?: string;

}

/**
 * Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling.
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumesGlusterfs
 */
export interface CronWorkflowSpecWorkflowSpecVolumesGlusterfs {
  /**
   * EndpointsName is the endpoint name that details Glusterfs topology. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesGlusterfs#endpoints
   */
  readonly endpoints: string;

  /**
   * Path is the Glusterfs volume path. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesGlusterfs#path
   */
  readonly path: string;

  /**
   * ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod
   *
   * @default false. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod
   * @schema CronWorkflowSpecWorkflowSpecVolumesGlusterfs#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Represents a host path mapped into a pod. Host path volumes do not support ownership management or SELinux relabeling.
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumesHostPath
 */
export interface CronWorkflowSpecWorkflowSpecVolumesHostPath {
  /**
   * Path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesHostPath#path
   */
  readonly path: string;

  /**
   * Type for HostPath Volume Defaults to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
   *
   * @default More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
   * @schema CronWorkflowSpecWorkflowSpecVolumesHostPath#type
   */
  readonly type?: string;

}

/**
 * Represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling.
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumesIscsi
 */
export interface CronWorkflowSpecWorkflowSpecVolumesIscsi {
  /**
   * whether support iSCSI Discovery CHAP authentication
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesIscsi#chapAuthDiscovery
   */
  readonly chapAuthDiscovery?: boolean;

  /**
   * whether support iSCSI Session CHAP authentication
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesIscsi#chapAuthSession
   */
  readonly chapAuthSession?: boolean;

  /**
   * Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesIscsi#fsType
   */
  readonly fsType?: string;

  /**
   * Custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesIscsi#initiatorName
   */
  readonly initiatorName?: string;

  /**
   * Target iSCSI Qualified Name.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesIscsi#iqn
   */
  readonly iqn: string;

  /**
   * iSCSI Interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).
   *
   * @default default' (tcp).
   * @schema CronWorkflowSpecWorkflowSpecVolumesIscsi#iscsiInterface
   */
  readonly iscsiInterface?: string;

  /**
   * iSCSI Target Lun number.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesIscsi#lun
   */
  readonly lun: number;

  /**
   * iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesIscsi#portals
   */
  readonly portals?: string[];

  /**
   * ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.
   *
   * @default false.
   * @schema CronWorkflowSpecWorkflowSpecVolumesIscsi#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesIscsi#secretRef
   */
  readonly secretRef?: CronWorkflowSpecWorkflowSpecVolumesIscsiSecretRef;

  /**
   * iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesIscsi#targetPortal
   */
  readonly targetPortal: string;

}

/**
 * Represents an NFS mount that lasts the lifetime of a pod. NFS volumes do not support ownership management or SELinux relabeling.
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumesNfs
 */
export interface CronWorkflowSpecWorkflowSpecVolumesNfs {
  /**
   * Path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesNfs#path
   */
  readonly path: string;

  /**
   * ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
   *
   * @default false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
   * @schema CronWorkflowSpecWorkflowSpecVolumesNfs#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesNfs#server
   */
  readonly server: string;

}

/**
 * PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace. This volume finds the bound PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another type of volume that is owned by someone else (the system).
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumesPersistentVolumeClaim
 */
export interface CronWorkflowSpecWorkflowSpecVolumesPersistentVolumeClaim {
  /**
   * ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesPersistentVolumeClaim#claimName
   */
  readonly claimName: string;

  /**
   * Will force the ReadOnly setting in VolumeMounts. Default false.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesPersistentVolumeClaim#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Represents a Photon Controller persistent disk resource.
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumesPhotonPersistentDisk
 */
export interface CronWorkflowSpecWorkflowSpecVolumesPhotonPersistentDisk {
  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesPhotonPersistentDisk#fsType
   */
  readonly fsType?: string;

  /**
   * ID that identifies Photon Controller persistent disk
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesPhotonPersistentDisk#pdID
   */
  readonly pdID: string;

}

/**
 * PortworxVolumeSource represents a Portworx volume resource.
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumesPortworxVolume
 */
export interface CronWorkflowSpecWorkflowSpecVolumesPortworxVolume {
  /**
   * FSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesPortworxVolume#fsType
   */
  readonly fsType?: string;

  /**
   * Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema CronWorkflowSpecWorkflowSpecVolumesPortworxVolume#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * VolumeID uniquely identifies a Portworx volume
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesPortworxVolume#volumeID
   */
  readonly volumeID: string;

}

/**
 * Represents a projected volume source
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumesProjected
 */
export interface CronWorkflowSpecWorkflowSpecVolumesProjected {
  /**
   * Mode bits to use on created files by default. Must be a value between 0 and 0777. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjected#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * list of volume projections
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjected#sources
   */
  readonly sources: CronWorkflowSpecWorkflowSpecVolumesProjectedSources[];

}

/**
 * Represents a Quobyte mount that lasts the lifetime of a pod. Quobyte volumes do not support ownership management or SELinux relabeling.
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumesQuobyte
 */
export interface CronWorkflowSpecWorkflowSpecVolumesQuobyte {
  /**
   * Group to map volume access to Default is no group
   *
   * @default no group
   * @schema CronWorkflowSpecWorkflowSpecVolumesQuobyte#group
   */
  readonly group?: string;

  /**
   * ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.
   *
   * @default false.
   * @schema CronWorkflowSpecWorkflowSpecVolumesQuobyte#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesQuobyte#registry
   */
  readonly registry: string;

  /**
   * Tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesQuobyte#tenant
   */
  readonly tenant?: string;

  /**
   * User to map volume access to Defaults to serivceaccount user
   *
   * @default serivceaccount user
   * @schema CronWorkflowSpecWorkflowSpecVolumesQuobyte#user
   */
  readonly user?: string;

  /**
   * Volume is a string that references an already created Quobyte volume by name.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesQuobyte#volume
   */
  readonly volume: string;

}

/**
 * Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling.
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumesRbd
 */
export interface CronWorkflowSpecWorkflowSpecVolumesRbd {
  /**
   * Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesRbd#fsType
   */
  readonly fsType?: string;

  /**
   * The rados image name. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesRbd#image
   */
  readonly image: string;

  /**
   * Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   *
   * @default etc/ceph/keyring. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   * @schema CronWorkflowSpecWorkflowSpecVolumesRbd#keyring
   */
  readonly keyring?: string;

  /**
   * A collection of Ceph monitors. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesRbd#monitors
   */
  readonly monitors: string[];

  /**
   * The rados pool name. Default is rbd. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   *
   * @default rbd. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   * @schema CronWorkflowSpecWorkflowSpecVolumesRbd#pool
   */
  readonly pool?: string;

  /**
   * ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   *
   * @default false. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   * @schema CronWorkflowSpecWorkflowSpecVolumesRbd#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesRbd#secretRef
   */
  readonly secretRef?: CronWorkflowSpecWorkflowSpecVolumesRbdSecretRef;

  /**
   * The rados user name. Default is admin. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   *
   * @default admin. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   * @schema CronWorkflowSpecWorkflowSpecVolumesRbd#user
   */
  readonly user?: string;

}

/**
 * ScaleIOVolumeSource represents a persistent ScaleIO volume
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumesScaleIo
 */
export interface CronWorkflowSpecWorkflowSpecVolumesScaleIo {
  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Default is "xfs".
   *
   * @default xfs".
   * @schema CronWorkflowSpecWorkflowSpecVolumesScaleIo#fsType
   */
  readonly fsType?: string;

  /**
   * The host address of the ScaleIO API Gateway.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesScaleIo#gateway
   */
  readonly gateway: string;

  /**
   * The name of the ScaleIO Protection Domain for the configured storage.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesScaleIo#protectionDomain
   */
  readonly protectionDomain?: string;

  /**
   * Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema CronWorkflowSpecWorkflowSpecVolumesScaleIo#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesScaleIo#secretRef
   */
  readonly secretRef: CronWorkflowSpecWorkflowSpecVolumesScaleIoSecretRef;

  /**
   * Flag to enable/disable SSL communication with Gateway, default false
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesScaleIo#sslEnabled
   */
  readonly sslEnabled?: boolean;

  /**
   * Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.
   *
   * @default ThinProvisioned.
   * @schema CronWorkflowSpecWorkflowSpecVolumesScaleIo#storageMode
   */
  readonly storageMode?: string;

  /**
   * The ScaleIO Storage Pool associated with the protection domain.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesScaleIo#storagePool
   */
  readonly storagePool?: string;

  /**
   * The name of the storage system as configured in ScaleIO.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesScaleIo#system
   */
  readonly system: string;

  /**
   * The name of a volume already created in the ScaleIO system that is associated with this volume source.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesScaleIo#volumeName
   */
  readonly volumeName?: string;

}

/**
 * Adapts a Secret into a volume.

The contents of the target Secret's Data field will be presented in a volume as files using the keys in the Data field as the file names. Secret volumes support ownership management and SELinux relabeling.
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumesSecret
 */
export interface CronWorkflowSpecWorkflowSpecVolumesSecret {
  /**
   * Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @default 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   * @schema CronWorkflowSpecWorkflowSpecVolumesSecret#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesSecret#items
   */
  readonly items?: CronWorkflowSpecWorkflowSpecVolumesSecretItems[];

  /**
   * Specify whether the Secret or its keys must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesSecret#optional
   */
  readonly optional?: boolean;

  /**
   * Name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesSecret#secretName
   */
  readonly secretName?: string;

}

/**
 * Represents a StorageOS persistent volume resource.
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumesStorageos
 */
export interface CronWorkflowSpecWorkflowSpecVolumesStorageos {
  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesStorageos#fsType
   */
  readonly fsType?: string;

  /**
   * Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema CronWorkflowSpecWorkflowSpecVolumesStorageos#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesStorageos#secretRef
   */
  readonly secretRef?: CronWorkflowSpecWorkflowSpecVolumesStorageosSecretRef;

  /**
   * VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesStorageos#volumeName
   */
  readonly volumeName?: string;

  /**
   * VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to "default" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesStorageos#volumeNamespace
   */
  readonly volumeNamespace?: string;

}

/**
 * Represents a vSphere volume resource.
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumesVsphereVolume
 */
export interface CronWorkflowSpecWorkflowSpecVolumesVsphereVolume {
  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesVsphereVolume#fsType
   */
  readonly fsType?: string;

  /**
   * Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesVsphereVolume#storagePolicyID
   */
  readonly storagePolicyID?: string;

  /**
   * Storage Policy Based Management (SPBM) profile name.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesVsphereVolume#storagePolicyName
   */
  readonly storagePolicyName?: string;

  /**
   * Path that identifies vSphere volume vmdk
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesVsphereVolume#volumePath
   */
  readonly volumePath: string;

}

/**
 * An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
 *
 * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution#preference
   */
  readonly preference: CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference;

  /**
   * Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms.
 *
 * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * Required. A list of node selector terms. The terms are ORed.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution#nodeSelectorTerms
   */
  readonly nodeSelectorTerms: CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms[];

}

/**
 * The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
 *
 * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution#podAffinityTerm
   */
  readonly podAffinityTerm: CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;

  /**
   * weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
 *
 * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#labelSelector
   */
  readonly labelSelector?: CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;

  /**
   * namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaces
   */
  readonly namespaces?: string[];

  /**
   * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
 *
 * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution#podAffinityTerm
   */
  readonly podAffinityTerm: CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;

  /**
   * weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
 *
 * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#labelSelector
   */
  readonly labelSelector?: CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;

  /**
   * namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaces
   */
  readonly namespaces?: string[];

  /**
   * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * ArchiveStrategy describes how to archive files/directory when saving artifacts
 *
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsArchive
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsArchive {
  /**
   * NoneStrategy indicates to skip tar process and upload the files or directory tree as independent files. Note that if the artifact is a directory, the artifact driver must support the ability to save/load the directory appropriately.
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsArchive#none
   */
  readonly none?: any;

  /**
   * TarStrategy will tar and gzip the file or directory when saving
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsArchive#tar
   */
  readonly tar?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsArchiveTar;

}

/**
 * ArtifactoryArtifact is the location of an artifactory artifact
 *
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactory
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactory {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactory#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactoryPasswordSecret;

  /**
   * URL of the artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactory#url
   */
  readonly url: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactory#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactoryUsernameSecret;

}

/**
 * GCSArtifact is the location of a GCS artifact
 *
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGcs
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsGcs {
  /**
   * Bucket is the name of the bucket
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGcs#bucket
   */
  readonly bucket: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGcs#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGcs#serviceAccountKeySecret
   */
  readonly serviceAccountKeySecret?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsGcsServiceAccountKeySecret;

}

/**
 * GitArtifact is the location of an git artifact
 *
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGit
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsGit {
  /**
   * Depth specifies clones/fetches should be shallow and include the given number of commits from the branch tip
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGit#depth
   */
  readonly depth?: number;

  /**
   * Fetch specifies a number of refs that should be fetched before checkout
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGit#fetch
   */
  readonly fetch?: string[];

  /**
   * InsecureIgnoreHostKey disables SSH strict host key checking during git clone
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGit#insecureIgnoreHostKey
   */
  readonly insecureIgnoreHostKey?: boolean;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGit#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsGitPasswordSecret;

  /**
   * Repo is the git repository
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGit#repo
   */
  readonly repo: string;

  /**
   * Revision is the git commit, tag, branch to checkout
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGit#revision
   */
  readonly revision?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGit#sshPrivateKeySecret
   */
  readonly sshPrivateKeySecret?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsGitSshPrivateKeySecret;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGit#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsGitUsernameSecret;

}

/**
 * HDFSArtifact is the location of an HDFS artifact
 *
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfs
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfs {
  /**
   * Addresses is accessible addresses of HDFS name nodes
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfs#addresses
   */
  readonly addresses: string[];

  /**
   * Force copies a file forcibly even if it exists (default: false)
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfs#force
   */
  readonly force?: boolean;

  /**
   * HDFSUser is the user to access HDFS file system. It is ignored if either ccache or keytab is used.
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfs#hdfsUser
   */
  readonly hdfsUser?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfs#krbCCacheSecret
   */
  readonly krbCCacheSecret?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfsKrbCCacheSecret;

  /**
   * Selects a key from a ConfigMap.
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfs#krbConfigConfigMap
   */
  readonly krbConfigConfigMap?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfsKrbConfigConfigMap;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfs#krbKeytabSecret
   */
  readonly krbKeytabSecret?: CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfsKrbKeytabSecret;

  /**
   * KrbRealm is the Kerberos realm used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfs#krbRealm
   */
  readonly krbRealm?: string;

  /**
   * KrbServicePrincipalName is the principal name of Kerberos service It must be set if either ccache or keytab is used.
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfs#krbServicePrincipalName
   */
  readonly krbServicePrincipalName?: string;

  /**
   * KrbUsername is the Kerberos username used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfs#krbUsername
   */
  readonly krbUsername?: string;

  /**
   * Path is a file path in HDFS
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfs#path
   */
  readonly path: string;

}

/**
 * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
 *
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttp
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttp {
  /**
   * URL of the artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHttp#url
   */
  readonly url: string;

}

/**
 * OSSArtifact is the location of an Alibaba Cloud OSS artifact
 *
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsOss
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsOss {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsOss#accessKeySecret
   */
  readonly accessKeySecret: CronWorkflowSpecWorkflowSpecArgumentsArtifactsOssAccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsOss#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsOss#endpoint
   */
  readonly endpoint: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsOss#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsOss#secretKeySecret
   */
  readonly secretKeySecret: CronWorkflowSpecWorkflowSpecArgumentsArtifactsOssSecretKeySecret;

}

/**
 * RawArtifact allows raw string content to be placed as an artifact in a container
 *
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsRaw
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsRaw {
  /**
   * Data is the string contents of the artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsRaw#data
   */
  readonly data: string;

}

/**
 * S3Artifact is the location of an S3 artifact
 *
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3 {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3#accessKeySecret
   */
  readonly accessKeySecret: CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3AccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3#endpoint
   */
  readonly endpoint: string;

  /**
   * Insecure will connect to the service with TLS
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3#insecure
   */
  readonly insecure?: boolean;

  /**
   * Key is the key in the bucket where the artifact resides
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3#key
   */
  readonly key: string;

  /**
   * Region contains the optional bucket region
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3#region
   */
  readonly region?: string;

  /**
   * RoleARN is the Amazon Resource Name (ARN) of the role to assume.
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3#roleARN
   */
  readonly roleARN?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3#secretKeySecret
   */
  readonly secretKeySecret: CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3SecretKeySecret;

  /**
   * UseSDKCreds tells the driver to figure out credentials based on sdk defaults.
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3#useSDKCreds
   */
  readonly useSDKCreds?: boolean;

}

/**
 * ValueFrom describes a location in which to obtain the value to a parameter
 *
 * @schema CronWorkflowSpecWorkflowSpecArgumentsParametersValueFrom
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsParametersValueFrom {
  /**
   * @schema CronWorkflowSpecWorkflowSpecArgumentsParametersValueFrom#default
   */
  readonly default?: string;

  /**
   * JQFilter expression against the resource object in resource templates
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsParametersValueFrom#jqFilter
   */
  readonly jqFilter?: string;

  /**
   * JSONPath of a resource to retrieve an output parameter value from in resource templates
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsParametersValueFrom#jsonPath
   */
  readonly jsonPath?: string;

  /**
   * Parameter reference to a step or dag task in which to retrieve an output parameter value from (e.g. '{{steps.mystep.outputs.myparam}}')
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsParametersValueFrom#parameter
   */
  readonly parameter?: string;

  /**
   * Path in the container to retrieve an output parameter value from in container templates
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsParametersValueFrom#path
   */
  readonly path?: string;

}

/**
 * Counter is a Counter prometheus metric
 *
 * @schema CronWorkflowSpecWorkflowSpecMetricsPrometheusCounter
 */
export interface CronWorkflowSpecWorkflowSpecMetricsPrometheusCounter {
  /**
   * Value is the value of the metric
   *
   * @schema CronWorkflowSpecWorkflowSpecMetricsPrometheusCounter#value
   */
  readonly value: string;

}

/**
 * Gauge is a Gauge prometheus metric
 *
 * @schema CronWorkflowSpecWorkflowSpecMetricsPrometheusGauge
 */
export interface CronWorkflowSpecWorkflowSpecMetricsPrometheusGauge {
  /**
   * Realtime emits this metric in real time if applicable
   *
   * @schema CronWorkflowSpecWorkflowSpecMetricsPrometheusGauge#realtime
   */
  readonly realtime: boolean;

  /**
   * Value is the value of the metric
   *
   * @schema CronWorkflowSpecWorkflowSpecMetricsPrometheusGauge#value
   */
  readonly value: string;

}

/**
 * Histogram is a Histogram prometheus metric
 *
 * @schema CronWorkflowSpecWorkflowSpecMetricsPrometheusHistogram
 */
export interface CronWorkflowSpecWorkflowSpecMetricsPrometheusHistogram {
  /**
   * Buckets is a list of bucket divisors for the histogram
   *
   * @schema CronWorkflowSpecWorkflowSpecMetricsPrometheusHistogram#buckets
   */
  readonly buckets: number[];

  /**
   * Value is the value of the metric
   *
   * @schema CronWorkflowSpecWorkflowSpecMetricsPrometheusHistogram#value
   */
  readonly value: string;

}

/**
 * MetricLabel is a single label for a prometheus metric
 *
 * @schema CronWorkflowSpecWorkflowSpecMetricsPrometheusLabels
 */
export interface CronWorkflowSpecWorkflowSpecMetricsPrometheusLabels {
  /**
   * @schema CronWorkflowSpecWorkflowSpecMetricsPrometheusLabels#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecMetricsPrometheusLabels#value
   */
  readonly value: string;

}

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema CronWorkflowSpecWorkflowSpecPodDisruptionBudgetSelectorMatchExpressions
 */
export interface CronWorkflowSpecWorkflowSpecPodDisruptionBudgetSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema CronWorkflowSpecWorkflowSpecPodDisruptionBudgetSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema CronWorkflowSpecWorkflowSpecPodDisruptionBudgetSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   *
   * @schema CronWorkflowSpecWorkflowSpecPodDisruptionBudgetSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Node affinity is a group of node affinity scheduling rules.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinity
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinity {
  /**
   * The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution;

}

/**
 * Pod affinity is a group of inter pod affinity scheduling rules.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinity
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinity {
  /**
   * The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution[];

}

/**
 * Pod anti affinity is a group of inter pod anti affinity scheduling rules.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinity
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinity {
  /**
   * The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution[];

}

/**
 * ArtifactoryArtifact is the location of an artifactory artifact
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationArtifactory
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationArtifactory {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationArtifactory#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationArtifactoryPasswordSecret;

  /**
   * URL of the artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationArtifactory#url
   */
  readonly url: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationArtifactory#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationArtifactoryUsernameSecret;

}

/**
 * GCSArtifact is the location of a GCS artifact
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGcs
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGcs {
  /**
   * Bucket is the name of the bucket
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGcs#bucket
   */
  readonly bucket: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGcs#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGcs#serviceAccountKeySecret
   */
  readonly serviceAccountKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGcsServiceAccountKeySecret;

}

/**
 * GitArtifact is the location of an git artifact
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGit
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGit {
  /**
   * Depth specifies clones/fetches should be shallow and include the given number of commits from the branch tip
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGit#depth
   */
  readonly depth?: number;

  /**
   * Fetch specifies a number of refs that should be fetched before checkout
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGit#fetch
   */
  readonly fetch?: string[];

  /**
   * InsecureIgnoreHostKey disables SSH strict host key checking during git clone
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGit#insecureIgnoreHostKey
   */
  readonly insecureIgnoreHostKey?: boolean;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGit#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGitPasswordSecret;

  /**
   * Repo is the git repository
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGit#repo
   */
  readonly repo: string;

  /**
   * Revision is the git commit, tag, branch to checkout
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGit#revision
   */
  readonly revision?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGit#sshPrivateKeySecret
   */
  readonly sshPrivateKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGitSshPrivateKeySecret;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGit#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGitUsernameSecret;

}

/**
 * HDFSArtifact is the location of an HDFS artifact
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfs
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfs {
  /**
   * Addresses is accessible addresses of HDFS name nodes
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfs#addresses
   */
  readonly addresses: string[];

  /**
   * Force copies a file forcibly even if it exists (default: false)
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfs#force
   */
  readonly force?: boolean;

  /**
   * HDFSUser is the user to access HDFS file system. It is ignored if either ccache or keytab is used.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfs#hdfsUser
   */
  readonly hdfsUser?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfs#krbCCacheSecret
   */
  readonly krbCCacheSecret?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfsKrbCCacheSecret;

  /**
   * Selects a key from a ConfigMap.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfs#krbConfigConfigMap
   */
  readonly krbConfigConfigMap?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfsKrbConfigConfigMap;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfs#krbKeytabSecret
   */
  readonly krbKeytabSecret?: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfsKrbKeytabSecret;

  /**
   * KrbRealm is the Kerberos realm used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfs#krbRealm
   */
  readonly krbRealm?: string;

  /**
   * KrbServicePrincipalName is the principal name of Kerberos service It must be set if either ccache or keytab is used.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfs#krbServicePrincipalName
   */
  readonly krbServicePrincipalName?: string;

  /**
   * KrbUsername is the Kerberos username used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfs#krbUsername
   */
  readonly krbUsername?: string;

  /**
   * Path is a file path in HDFS
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfs#path
   */
  readonly path: string;

}

/**
 * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttp
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttp {
  /**
   * URL of the artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHttp#url
   */
  readonly url: string;

}

/**
 * OSSArtifact is the location of an Alibaba Cloud OSS artifact
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOss
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOss {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOss#accessKeySecret
   */
  readonly accessKeySecret: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOssAccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOss#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOss#endpoint
   */
  readonly endpoint: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOss#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOss#secretKeySecret
   */
  readonly secretKeySecret: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOssSecretKeySecret;

}

/**
 * RawArtifact allows raw string content to be placed as an artifact in a container
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationRaw
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationRaw {
  /**
   * Data is the string contents of the artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationRaw#data
   */
  readonly data: string;

}

/**
 * S3Artifact is the location of an S3 artifact
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3 {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3#accessKeySecret
   */
  readonly accessKeySecret: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3AccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3#endpoint
   */
  readonly endpoint: string;

  /**
   * Insecure will connect to the service with TLS
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3#insecure
   */
  readonly insecure?: boolean;

  /**
   * Key is the key in the bucket where the artifact resides
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3#key
   */
  readonly key: string;

  /**
   * Region contains the optional bucket region
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3#region
   */
  readonly region?: string;

  /**
   * RoleARN is the Amazon Resource Name (ARN) of the role to assume.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3#roleARN
   */
  readonly roleARN?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3#secretKeySecret
   */
  readonly secretKeySecret: CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3SecretKeySecret;

  /**
   * UseSDKCreds tells the driver to figure out credentials based on sdk defaults.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3#useSDKCreds
   */
  readonly useSDKCreds?: boolean;

}

/**
 * Artifact indicates an artifact to place at a specified path
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifacts
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifacts {
  /**
   * ArchiveStrategy describes how to archive files/directory when saving artifacts
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifacts#archive
   */
  readonly archive?: CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsArchive;

  /**
   * ArchiveLogs indicates if the container logs should be archived
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifacts#archiveLogs
   */
  readonly archiveLogs?: boolean;

  /**
   * ArtifactoryArtifact is the location of an artifactory artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifacts#artifactory
   */
  readonly artifactory?: CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsArtifactory;

  /**
   * From allows an artifact to reference an artifact from a previous step
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifacts#from
   */
  readonly from?: string;

  /**
   * GCSArtifact is the location of a GCS artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifacts#gcs
   */
  readonly gcs?: CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsGcs;

  /**
   * GitArtifact is the location of an git artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifacts#git
   */
  readonly git?: CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsGit;

  /**
   * GlobalName exports an output artifact to the global scope, making it available as '{{io.argoproj.workflow.v1alpha1.outputs.artifacts.XXXX}} and in workflow.status.outputs.artifacts
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifacts#globalName
   */
  readonly globalName?: string;

  /**
   * HDFSArtifact is the location of an HDFS artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifacts#hdfs
   */
  readonly hdfs?: CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsHdfs;

  /**
   * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifacts#http
   */
  readonly http?: CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsHttp;

  /**
   * mode bits to use on this file, must be a value between 0 and 0777 set when loading input artifacts.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifacts#mode
   */
  readonly mode?: number;

  /**
   * name of the artifact. must be unique within a template's inputs/outputs.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifacts#name
   */
  readonly name: string;

  /**
   * Make Artifacts optional, if Artifacts doesn't generate or exist
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifacts#optional
   */
  readonly optional?: boolean;

  /**
   * OSSArtifact is the location of an Alibaba Cloud OSS artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifacts#oss
   */
  readonly oss?: CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsOss;

  /**
   * Path is the container path to the artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifacts#path
   */
  readonly path?: string;

  /**
   * RawArtifact allows raw string content to be placed as an artifact in a container
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifacts#raw
   */
  readonly raw?: CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsRaw;

  /**
   * S3Artifact is the location of an S3 artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifacts#s3
   */
  readonly s3?: CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsS3;

}

/**
 * Parameter indicate a passed string parameter to a service template with an optional default value
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsParameters
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArgumentsParameters {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsParameters#default
   */
  readonly default?: string;

  /**
   * GlobalName exports an output parameter to the global scope, making it available as '{{io.argoproj.workflow.v1alpha1.outputs.parameters.XXXX}} and in workflow.status.outputs.parameters
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsParameters#globalName
   */
  readonly globalName?: string;

  /**
   * Name is the parameter name
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsParameters#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsParameters#value
   */
  readonly value?: string;

  /**
   * ValueFrom describes a location in which to obtain the value to a parameter
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsParameters#valueFrom
   */
  readonly valueFrom?: CronWorkflowSpecWorkflowSpecTemplatesArgumentsParametersValueFrom;

}

/**
 * EnvVar represents an environment variable present in a Container.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnv
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerEnv {
  /**
   * Name of the environment variable. Must be a C_IDENTIFIER.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnv#name
   */
  readonly name: string;

  /**
   * Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
   *
   * @default .
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnv#value
   */
  readonly value?: string;

  /**
   * EnvVarSource represents a source for the value of an EnvVar.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnv#valueFrom
   */
  readonly valueFrom?: CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFrom;

}

/**
 * EnvFromSource represents the source of a set of ConfigMaps
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvFrom
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerEnvFrom {
  /**
   * ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.

The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvFrom#configMapRef
   */
  readonly configMapRef?: CronWorkflowSpecWorkflowSpecTemplatesContainerEnvFromConfigMapRef;

  /**
   * An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvFrom#prefix
   */
  readonly prefix?: string;

  /**
   * SecretEnvSource selects a Secret to populate the environment variables with.

The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvFrom#secretRef
   */
  readonly secretRef?: CronWorkflowSpecWorkflowSpecTemplatesContainerEnvFromSecretRef;

}

/**
 * Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecycle
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerLifecycle {
  /**
   * Handler defines a specific action that should be taken
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecycle#postStart
   */
  readonly postStart?: CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStart;

  /**
   * Handler defines a specific action that should be taken
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecycle#preStop
   */
  readonly preStop?: CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStop;

}

/**
 * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbe
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbe {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbe#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbe#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness. Minimum value is 1.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbe#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeTcpSocket;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * ContainerPort represents a network port in a single container.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerPorts
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerPorts {
  /**
   * Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerPorts#containerPort
   */
  readonly containerPort: number;

  /**
   * What host IP to bind the external port to.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerPorts#hostIP
   */
  readonly hostIP?: string;

  /**
   * Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerPorts#hostPort
   */
  readonly hostPort?: number;

  /**
   * If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerPorts#name
   */
  readonly name?: string;

  /**
   * Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
   *
   * @default TCP".
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerPorts#protocol
   */
  readonly protocol?: string;

}

/**
 * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbe
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbe {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbe#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbe#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness. Minimum value is 1.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbe#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeTcpSocket;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * ResourceRequirements describes the compute resource requirements.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerResources
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerResources {
  /**
   * Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerResources#limits
   */
  readonly limits?: { [key: string]: string };

  /**
   * Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerResources#requests
   */
  readonly requests?: { [key: string]: string };

}

/**
 * SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContext
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContext {
  /**
   * AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContext#allowPrivilegeEscalation
   */
  readonly allowPrivilegeEscalation?: boolean;

  /**
   * Adds and removes POSIX capabilities from running containers.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContext#capabilities
   */
  readonly capabilities?: CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextCapabilities;

  /**
   * Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.
   *
   * @default false.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContext#privileged
   */
  readonly privileged?: boolean;

  /**
   * procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContext#procMount
   */
  readonly procMount?: string;

  /**
   * Whether this container has a read-only root filesystem. Default is false.
   *
   * @default false.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContext#readOnlyRootFilesystem
   */
  readonly readOnlyRootFilesystem?: boolean;

  /**
   * The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @default user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * SELinuxOptions are the labels to be applied to the container
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextSeLinuxOptions;

  /**
   * WindowsSecurityContextOptions contain Windows-specific options and credentials.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContext#windowsOptions
   */
  readonly windowsOptions?: CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextWindowsOptions;

}

/**
 * volumeDevice describes a mapping of a raw block device within a container.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerVolumeDevices
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerVolumeDevices {
  /**
   * devicePath is the path inside of the container that the device will be mapped to.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerVolumeDevices#devicePath
   */
  readonly devicePath: string;

  /**
   * name must match the name of a persistentVolumeClaim in the pod
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerVolumeDevices#name
   */
  readonly name: string;

}

/**
 * VolumeMount describes a mounting of a Volume within a container.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerVolumeMounts
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerVolumeMounts {
  /**
   * Path within the container at which the volume should be mounted.  Must not contain ':'.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerVolumeMounts#mountPath
   */
  readonly mountPath: string;

  /**
   * mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerVolumeMounts#mountPropagation
   */
  readonly mountPropagation?: string;

  /**
   * This must match the Name of a Volume.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerVolumeMounts#name
   */
  readonly name: string;

  /**
   * Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
   *
   * @default false.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerVolumeMounts#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
   *
   * @default volume's root).
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerVolumeMounts#subPath
   */
  readonly subPath?: string;

  /**
   * Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive. This field is beta in 1.15.
   *
   * @default volume's root). SubPathExpr and SubPath are mutually exclusive. This field is beta in 1.15.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerVolumeMounts#subPathExpr
   */
  readonly subPathExpr?: string;

}

/**
 * DAGTask represents a node in the graph during DAG execution
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasks
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasks {
  /**
   * Arguments to a template
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasks#arguments
   */
  readonly arguments?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArguments;

  /**
   * ContinueOn defines if a workflow should continue even if a task or step fails/errors. It can be specified if the workflow should continue when the pod errors, fails or both.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasks#continueOn
   */
  readonly continueOn?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksContinueOn;

  /**
   * Dependencies are name of other targets which this depends on
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasks#dependencies
   */
  readonly dependencies?: string[];

  /**
   * Depends are name of other targets which this depends on
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasks#depends
   */
  readonly depends?: string;

  /**
   * Name is the name of the target
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasks#name
   */
  readonly name: string;

  /**
   * OnExit is a template reference which is invoked at the end of the template, irrespective of the success, failure, or error of the primary template.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasks#onExit
   */
  readonly onExit?: string;

  /**
   * Name of template to execute
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasks#template
   */
  readonly template: string;

  /**
   * TemplateRef is a reference of template resource.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasks#templateRef
   */
  readonly templateRef?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksTemplateRef;

  /**
   * When is an expression in which the task should conditionally execute
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasks#when
   */
  readonly when?: string;

  /**
   * WithItems expands a task into multiple parallel tasks from the items in the list
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasks#withItems
   */
  readonly withItems?: string[];

  /**
   * WithParam expands a task into multiple parallel tasks from the value in the parameter, which is expected to be a JSON list.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasks#withParam
   */
  readonly withParam?: string;

  /**
   * Sequence expands a workflow step into numeric range
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasks#withSequence
   */
  readonly withSequence?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksWithSequence;

}

/**
 * EnvVar represents an environment variable present in a Container.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnv
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnv {
  /**
   * Name of the environment variable. Must be a C_IDENTIFIER.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnv#name
   */
  readonly name: string;

  /**
   * Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
   *
   * @default .
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnv#value
   */
  readonly value?: string;

  /**
   * EnvVarSource represents a source for the value of an EnvVar.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnv#valueFrom
   */
  readonly valueFrom?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFrom;

}

/**
 * EnvFromSource represents the source of a set of ConfigMaps
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvFrom
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvFrom {
  /**
   * ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.

The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvFrom#configMapRef
   */
  readonly configMapRef?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvFromConfigMapRef;

  /**
   * An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvFrom#prefix
   */
  readonly prefix?: string;

  /**
   * SecretEnvSource selects a Secret to populate the environment variables with.

The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvFrom#secretRef
   */
  readonly secretRef?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvFromSecretRef;

}

/**
 * Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecycle
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecycle {
  /**
   * Handler defines a specific action that should be taken
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecycle#postStart
   */
  readonly postStart?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStart;

  /**
   * Handler defines a specific action that should be taken
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecycle#preStop
   */
  readonly preStop?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStop;

}

/**
 * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbe
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbe {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbe#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbe#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness. Minimum value is 1.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbe#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeTcpSocket;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * ContainerPort represents a network port in a single container.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersPorts
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersPorts {
  /**
   * Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersPorts#containerPort
   */
  readonly containerPort: number;

  /**
   * What host IP to bind the external port to.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersPorts#hostIP
   */
  readonly hostIP?: string;

  /**
   * Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersPorts#hostPort
   */
  readonly hostPort?: number;

  /**
   * If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersPorts#name
   */
  readonly name?: string;

  /**
   * Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
   *
   * @default TCP".
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersPorts#protocol
   */
  readonly protocol?: string;

}

/**
 * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbe
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbe {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbe#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbe#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness. Minimum value is 1.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbe#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeTcpSocket;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * ResourceRequirements describes the compute resource requirements.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersResources
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersResources {
  /**
   * Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersResources#limits
   */
  readonly limits?: { [key: string]: string };

  /**
   * Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersResources#requests
   */
  readonly requests?: { [key: string]: string };

}

/**
 * SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContext
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContext {
  /**
   * AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContext#allowPrivilegeEscalation
   */
  readonly allowPrivilegeEscalation?: boolean;

  /**
   * Adds and removes POSIX capabilities from running containers.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContext#capabilities
   */
  readonly capabilities?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextCapabilities;

  /**
   * Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.
   *
   * @default false.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContext#privileged
   */
  readonly privileged?: boolean;

  /**
   * procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContext#procMount
   */
  readonly procMount?: string;

  /**
   * Whether this container has a read-only root filesystem. Default is false.
   *
   * @default false.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContext#readOnlyRootFilesystem
   */
  readonly readOnlyRootFilesystem?: boolean;

  /**
   * The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @default user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * SELinuxOptions are the labels to be applied to the container
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextSeLinuxOptions;

  /**
   * WindowsSecurityContextOptions contain Windows-specific options and credentials.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContext#windowsOptions
   */
  readonly windowsOptions?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextWindowsOptions;

}

/**
 * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbe
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbe {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbe#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbe#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness. Minimum value is 1.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbe#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeTcpSocket;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * volumeDevice describes a mapping of a raw block device within a container.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersVolumeDevices
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersVolumeDevices {
  /**
   * devicePath is the path inside of the container that the device will be mapped to.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersVolumeDevices#devicePath
   */
  readonly devicePath: string;

  /**
   * name must match the name of a persistentVolumeClaim in the pod
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersVolumeDevices#name
   */
  readonly name: string;

}

/**
 * VolumeMount describes a mounting of a Volume within a container.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersVolumeMounts
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersVolumeMounts {
  /**
   * Path within the container at which the volume should be mounted.  Must not contain ':'.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersVolumeMounts#mountPath
   */
  readonly mountPath: string;

  /**
   * mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersVolumeMounts#mountPropagation
   */
  readonly mountPropagation?: string;

  /**
   * This must match the Name of a Volume.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersVolumeMounts#name
   */
  readonly name: string;

  /**
   * Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
   *
   * @default false.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersVolumeMounts#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
   *
   * @default volume's root).
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersVolumeMounts#subPath
   */
  readonly subPath?: string;

  /**
   * Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive. This field is beta in 1.15.
   *
   * @default volume's root). SubPathExpr and SubPath are mutually exclusive. This field is beta in 1.15.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersVolumeMounts#subPathExpr
   */
  readonly subPathExpr?: string;

}

/**
 * Artifact indicates an artifact to place at a specified path
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifacts
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifacts {
  /**
   * ArchiveStrategy describes how to archive files/directory when saving artifacts
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifacts#archive
   */
  readonly archive?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArchive;

  /**
   * ArchiveLogs indicates if the container logs should be archived
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifacts#archiveLogs
   */
  readonly archiveLogs?: boolean;

  /**
   * ArtifactoryArtifact is the location of an artifactory artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifacts#artifactory
   */
  readonly artifactory?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactory;

  /**
   * From allows an artifact to reference an artifact from a previous step
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifacts#from
   */
  readonly from?: string;

  /**
   * GCSArtifact is the location of a GCS artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifacts#gcs
   */
  readonly gcs?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGcs;

  /**
   * GitArtifact is the location of an git artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifacts#git
   */
  readonly git?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGit;

  /**
   * GlobalName exports an output artifact to the global scope, making it available as '{{io.argoproj.workflow.v1alpha1.outputs.artifacts.XXXX}} and in workflow.status.outputs.artifacts
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifacts#globalName
   */
  readonly globalName?: string;

  /**
   * HDFSArtifact is the location of an HDFS artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifacts#hdfs
   */
  readonly hdfs?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfs;

  /**
   * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifacts#http
   */
  readonly http?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttp;

  /**
   * mode bits to use on this file, must be a value between 0 and 0777 set when loading input artifacts.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifacts#mode
   */
  readonly mode?: number;

  /**
   * name of the artifact. must be unique within a template's inputs/outputs.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifacts#name
   */
  readonly name: string;

  /**
   * Make Artifacts optional, if Artifacts doesn't generate or exist
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifacts#optional
   */
  readonly optional?: boolean;

  /**
   * OSSArtifact is the location of an Alibaba Cloud OSS artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifacts#oss
   */
  readonly oss?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOss;

  /**
   * Path is the container path to the artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifacts#path
   */
  readonly path?: string;

  /**
   * RawArtifact allows raw string content to be placed as an artifact in a container
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifacts#raw
   */
  readonly raw?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsRaw;

  /**
   * S3Artifact is the location of an S3 artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifacts#s3
   */
  readonly s3?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3;

}

/**
 * Parameter indicate a passed string parameter to a service template with an optional default value
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsParameters
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsParameters {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsParameters#default
   */
  readonly default?: string;

  /**
   * GlobalName exports an output parameter to the global scope, making it available as '{{io.argoproj.workflow.v1alpha1.outputs.parameters.XXXX}} and in workflow.status.outputs.parameters
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsParameters#globalName
   */
  readonly globalName?: string;

  /**
   * Name is the parameter name
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsParameters#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsParameters#value
   */
  readonly value?: string;

  /**
   * ValueFrom describes a location in which to obtain the value to a parameter
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsParameters#valueFrom
   */
  readonly valueFrom?: CronWorkflowSpecWorkflowSpecTemplatesInputsParametersValueFrom;

}

/**
 * Prometheus is a prometheus metric to be emitted
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheus
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheus {
  /**
   * Counter is a Counter prometheus metric
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheus#counter
   */
  readonly counter?: CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusCounter;

  /**
   * Gauge is a Gauge prometheus metric
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheus#gauge
   */
  readonly gauge?: CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusGauge;

  /**
   * Help is a string that describes the metric
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheus#help
   */
  readonly help: string;

  /**
   * Histogram is a Histogram prometheus metric
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheus#histogram
   */
  readonly histogram?: CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusHistogram;

  /**
   * Labels is a list of metric labels
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheus#labels
   */
  readonly labels?: CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusLabels[];

  /**
   * Name is the name of the metric
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheus#name
   */
  readonly name: string;

  /**
   * When is a conditional statement that decides when to emit the metric
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheus#when
   */
  readonly when?: string;

}

/**
 * Artifact indicates an artifact to place at a specified path
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifacts
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifacts {
  /**
   * ArchiveStrategy describes how to archive files/directory when saving artifacts
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifacts#archive
   */
  readonly archive?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArchive;

  /**
   * ArchiveLogs indicates if the container logs should be archived
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifacts#archiveLogs
   */
  readonly archiveLogs?: boolean;

  /**
   * ArtifactoryArtifact is the location of an artifactory artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifacts#artifactory
   */
  readonly artifactory?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactory;

  /**
   * From allows an artifact to reference an artifact from a previous step
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifacts#from
   */
  readonly from?: string;

  /**
   * GCSArtifact is the location of a GCS artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifacts#gcs
   */
  readonly gcs?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGcs;

  /**
   * GitArtifact is the location of an git artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifacts#git
   */
  readonly git?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGit;

  /**
   * GlobalName exports an output artifact to the global scope, making it available as '{{io.argoproj.workflow.v1alpha1.outputs.artifacts.XXXX}} and in workflow.status.outputs.artifacts
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifacts#globalName
   */
  readonly globalName?: string;

  /**
   * HDFSArtifact is the location of an HDFS artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifacts#hdfs
   */
  readonly hdfs?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfs;

  /**
   * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifacts#http
   */
  readonly http?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttp;

  /**
   * mode bits to use on this file, must be a value between 0 and 0777 set when loading input artifacts.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifacts#mode
   */
  readonly mode?: number;

  /**
   * name of the artifact. must be unique within a template's inputs/outputs.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifacts#name
   */
  readonly name: string;

  /**
   * Make Artifacts optional, if Artifacts doesn't generate or exist
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifacts#optional
   */
  readonly optional?: boolean;

  /**
   * OSSArtifact is the location of an Alibaba Cloud OSS artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifacts#oss
   */
  readonly oss?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOss;

  /**
   * Path is the container path to the artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifacts#path
   */
  readonly path?: string;

  /**
   * RawArtifact allows raw string content to be placed as an artifact in a container
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifacts#raw
   */
  readonly raw?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsRaw;

  /**
   * S3Artifact is the location of an S3 artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifacts#s3
   */
  readonly s3?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3;

}

/**
 * Parameter indicate a passed string parameter to a service template with an optional default value
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsParameters
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsParameters {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsParameters#default
   */
  readonly default?: string;

  /**
   * GlobalName exports an output parameter to the global scope, making it available as '{{io.argoproj.workflow.v1alpha1.outputs.parameters.XXXX}} and in workflow.status.outputs.parameters
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsParameters#globalName
   */
  readonly globalName?: string;

  /**
   * Name is the parameter name
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsParameters#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsParameters#value
   */
  readonly value?: string;

  /**
   * ValueFrom describes a location in which to obtain the value to a parameter
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsParameters#valueFrom
   */
  readonly valueFrom?: CronWorkflowSpecWorkflowSpecTemplatesOutputsParametersValueFrom;

}

/**
 * Backoff is a backoff strategy to use within retryStrategy
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesRetryStrategyBackoff
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesRetryStrategyBackoff {
  /**
   * Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesRetryStrategyBackoff#duration
   */
  readonly duration?: string;

  /**
   * Factor is a factor to multiply the base duration after each failed retry
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesRetryStrategyBackoff#factor
   */
  readonly factor?: number;

  /**
   * MaxDuration is the maximum amount of time allowed for the backoff strategy
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesRetryStrategyBackoff#maxDuration
   */
  readonly maxDuration?: string;

}

/**
 * EnvVar represents an environment variable present in a Container.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnv
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptEnv {
  /**
   * Name of the environment variable. Must be a C_IDENTIFIER.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnv#name
   */
  readonly name: string;

  /**
   * Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
   *
   * @default .
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnv#value
   */
  readonly value?: string;

  /**
   * EnvVarSource represents a source for the value of an EnvVar.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnv#valueFrom
   */
  readonly valueFrom?: CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFrom;

}

/**
 * EnvFromSource represents the source of a set of ConfigMaps
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvFrom
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptEnvFrom {
  /**
   * ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.

The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvFrom#configMapRef
   */
  readonly configMapRef?: CronWorkflowSpecWorkflowSpecTemplatesScriptEnvFromConfigMapRef;

  /**
   * An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvFrom#prefix
   */
  readonly prefix?: string;

  /**
   * SecretEnvSource selects a Secret to populate the environment variables with.

The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvFrom#secretRef
   */
  readonly secretRef?: CronWorkflowSpecWorkflowSpecTemplatesScriptEnvFromSecretRef;

}

/**
 * Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecycle
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptLifecycle {
  /**
   * Handler defines a specific action that should be taken
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecycle#postStart
   */
  readonly postStart?: CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStart;

  /**
   * Handler defines a specific action that should be taken
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecycle#preStop
   */
  readonly preStop?: CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStop;

}

/**
 * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbe
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbe {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbe#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbe#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness. Minimum value is 1.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbe#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeTcpSocket;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * ContainerPort represents a network port in a single container.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptPorts
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptPorts {
  /**
   * Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptPorts#containerPort
   */
  readonly containerPort: number;

  /**
   * What host IP to bind the external port to.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptPorts#hostIP
   */
  readonly hostIP?: string;

  /**
   * Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptPorts#hostPort
   */
  readonly hostPort?: number;

  /**
   * If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptPorts#name
   */
  readonly name?: string;

  /**
   * Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
   *
   * @default TCP".
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptPorts#protocol
   */
  readonly protocol?: string;

}

/**
 * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbe
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbe {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbe#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbe#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness. Minimum value is 1.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbe#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeTcpSocket;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * ResourceRequirements describes the compute resource requirements.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptResources
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptResources {
  /**
   * Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptResources#limits
   */
  readonly limits?: { [key: string]: string };

  /**
   * Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptResources#requests
   */
  readonly requests?: { [key: string]: string };

}

/**
 * SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContext
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContext {
  /**
   * AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContext#allowPrivilegeEscalation
   */
  readonly allowPrivilegeEscalation?: boolean;

  /**
   * Adds and removes POSIX capabilities from running containers.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContext#capabilities
   */
  readonly capabilities?: CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextCapabilities;

  /**
   * Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.
   *
   * @default false.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContext#privileged
   */
  readonly privileged?: boolean;

  /**
   * procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContext#procMount
   */
  readonly procMount?: string;

  /**
   * Whether this container has a read-only root filesystem. Default is false.
   *
   * @default false.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContext#readOnlyRootFilesystem
   */
  readonly readOnlyRootFilesystem?: boolean;

  /**
   * The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @default user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * SELinuxOptions are the labels to be applied to the container
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextSeLinuxOptions;

  /**
   * WindowsSecurityContextOptions contain Windows-specific options and credentials.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContext#windowsOptions
   */
  readonly windowsOptions?: CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextWindowsOptions;

}

/**
 * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbe
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbe {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbe#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbe#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness. Minimum value is 1.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbe#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeTcpSocket;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * volumeDevice describes a mapping of a raw block device within a container.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptVolumeDevices
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptVolumeDevices {
  /**
   * devicePath is the path inside of the container that the device will be mapped to.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptVolumeDevices#devicePath
   */
  readonly devicePath: string;

  /**
   * name must match the name of a persistentVolumeClaim in the pod
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptVolumeDevices#name
   */
  readonly name: string;

}

/**
 * VolumeMount describes a mounting of a Volume within a container.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptVolumeMounts
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptVolumeMounts {
  /**
   * Path within the container at which the volume should be mounted.  Must not contain ':'.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptVolumeMounts#mountPath
   */
  readonly mountPath: string;

  /**
   * mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptVolumeMounts#mountPropagation
   */
  readonly mountPropagation?: string;

  /**
   * This must match the Name of a Volume.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptVolumeMounts#name
   */
  readonly name: string;

  /**
   * Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
   *
   * @default false.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptVolumeMounts#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
   *
   * @default volume's root).
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptVolumeMounts#subPath
   */
  readonly subPath?: string;

  /**
   * Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive. This field is beta in 1.15.
   *
   * @default volume's root). SubPathExpr and SubPath are mutually exclusive. This field is beta in 1.15.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptVolumeMounts#subPathExpr
   */
  readonly subPathExpr?: string;

}

/**
 * SELinuxOptions are the labels to be applied to the container
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSecurityContextSeLinuxOptions
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSecurityContextSeLinuxOptions {
  /**
   * Level is SELinux level label that applies to the container.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * Role is a SELinux role label that applies to the container.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * Type is a SELinux type label that applies to the container.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * User is a SELinux user label that applies to the container.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * Sysctl defines a kernel parameter to be set
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSecurityContextSysctls
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSecurityContextSysctls {
  /**
   * Name of a property to set
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSecurityContextSysctls#name
   */
  readonly name: string;

  /**
   * Value of a property to set
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSecurityContextSysctls#value
   */
  readonly value: string;

}

/**
 * WindowsSecurityContextOptions contain Windows-specific options and credentials.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSecurityContextWindowsOptions
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSecurityContextWindowsOptions {
  /**
   * GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * GMSACredentialSpecName is the name of the GMSA credential spec to use. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

}

/**
 * EnvVar represents an environment variable present in a Container.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnv
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnv {
  /**
   * Name of the environment variable. Must be a C_IDENTIFIER.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnv#name
   */
  readonly name: string;

  /**
   * Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
   *
   * @default .
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnv#value
   */
  readonly value?: string;

  /**
   * EnvVarSource represents a source for the value of an EnvVar.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnv#valueFrom
   */
  readonly valueFrom?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFrom;

}

/**
 * EnvFromSource represents the source of a set of ConfigMaps
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvFrom
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvFrom {
  /**
   * ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.

The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvFrom#configMapRef
   */
  readonly configMapRef?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvFromConfigMapRef;

  /**
   * An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvFrom#prefix
   */
  readonly prefix?: string;

  /**
   * SecretEnvSource selects a Secret to populate the environment variables with.

The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvFrom#secretRef
   */
  readonly secretRef?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvFromSecretRef;

}

/**
 * Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecycle
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecycle {
  /**
   * Handler defines a specific action that should be taken
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecycle#postStart
   */
  readonly postStart?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStart;

  /**
   * Handler defines a specific action that should be taken
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecycle#preStop
   */
  readonly preStop?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStop;

}

/**
 * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbe
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbe {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbe#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbe#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness. Minimum value is 1.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbe#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeTcpSocket;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * ContainerPort represents a network port in a single container.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsPorts
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsPorts {
  /**
   * Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsPorts#containerPort
   */
  readonly containerPort: number;

  /**
   * What host IP to bind the external port to.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsPorts#hostIP
   */
  readonly hostIP?: string;

  /**
   * Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsPorts#hostPort
   */
  readonly hostPort?: number;

  /**
   * If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsPorts#name
   */
  readonly name?: string;

  /**
   * Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
   *
   * @default TCP".
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsPorts#protocol
   */
  readonly protocol?: string;

}

/**
 * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbe
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbe {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbe#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbe#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness. Minimum value is 1.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbe#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeTcpSocket;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * ResourceRequirements describes the compute resource requirements.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsResources
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsResources {
  /**
   * Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsResources#limits
   */
  readonly limits?: { [key: string]: string };

  /**
   * Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsResources#requests
   */
  readonly requests?: { [key: string]: string };

}

/**
 * SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContext
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContext {
  /**
   * AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContext#allowPrivilegeEscalation
   */
  readonly allowPrivilegeEscalation?: boolean;

  /**
   * Adds and removes POSIX capabilities from running containers.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContext#capabilities
   */
  readonly capabilities?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextCapabilities;

  /**
   * Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.
   *
   * @default false.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContext#privileged
   */
  readonly privileged?: boolean;

  /**
   * procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContext#procMount
   */
  readonly procMount?: string;

  /**
   * Whether this container has a read-only root filesystem. Default is false.
   *
   * @default false.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContext#readOnlyRootFilesystem
   */
  readonly readOnlyRootFilesystem?: boolean;

  /**
   * The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @default user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * SELinuxOptions are the labels to be applied to the container
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextSeLinuxOptions;

  /**
   * WindowsSecurityContextOptions contain Windows-specific options and credentials.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContext#windowsOptions
   */
  readonly windowsOptions?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextWindowsOptions;

}

/**
 * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbe
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbe {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbe#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbe#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness. Minimum value is 1.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbe#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeTcpSocket;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * volumeDevice describes a mapping of a raw block device within a container.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsVolumeDevices
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsVolumeDevices {
  /**
   * devicePath is the path inside of the container that the device will be mapped to.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsVolumeDevices#devicePath
   */
  readonly devicePath: string;

  /**
   * name must match the name of a persistentVolumeClaim in the pod
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsVolumeDevices#name
   */
  readonly name: string;

}

/**
 * VolumeMount describes a mounting of a Volume within a container.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsVolumeMounts
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsVolumeMounts {
  /**
   * Path within the container at which the volume should be mounted.  Must not contain ':'.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsVolumeMounts#mountPath
   */
  readonly mountPath: string;

  /**
   * mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsVolumeMounts#mountPropagation
   */
  readonly mountPropagation?: string;

  /**
   * This must match the Name of a Volume.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsVolumeMounts#name
   */
  readonly name: string;

  /**
   * Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
   *
   * @default false.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsVolumeMounts#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
   *
   * @default volume's root).
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsVolumeMounts#subPath
   */
  readonly subPath?: string;

  /**
   * Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive. This field is beta in 1.15.
   *
   * @default volume's root). SubPathExpr and SubPath are mutually exclusive. This field is beta in 1.15.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsVolumeMounts#subPathExpr
   */
  readonly subPathExpr?: string;

}

/**
 * Arguments to a template
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArguments
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesStepsArguments {
  /**
   * Artifacts is the list of artifacts to pass to the template or workflow
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArguments#artifacts
   */
  readonly artifacts?: CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifacts[];

  /**
   * Parameters is the list of parameters to pass to the template or workflow
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArguments#parameters
   */
  readonly parameters?: CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsParameters[];

}

/**
 * ContinueOn defines if a workflow should continue even if a task or step fails/errors. It can be specified if the workflow should continue when the pod errors, fails or both.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsContinueOn
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesStepsContinueOn {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsContinueOn#error
   */
  readonly error?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsContinueOn#failed
   */
  readonly failed?: boolean;

}

/**
 * TemplateRef is a reference of template resource.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsTemplateRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesStepsTemplateRef {
  /**
   * ClusterScope indicates the referred template is cluster scoped (i.e. a ClusterWorkflowTemplate).
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsTemplateRef#clusterScope
   */
  readonly clusterScope?: boolean;

  /**
   * Name is the resource name of the template.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsTemplateRef#name
   */
  readonly name?: string;

  /**
   * RuntimeResolution skips validation at creation time. By enabling this option, you can create the referred workflow template before the actual runtime.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsTemplateRef#runtimeResolution
   */
  readonly runtimeResolution?: boolean;

  /**
   * Template is the name of referred template in the resource.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsTemplateRef#template
   */
  readonly template?: string;

}

/**
 * Sequence expands a workflow step into numeric range
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsWithSequence
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesStepsWithSequence {
  /**
   * Count is number of elements in the sequence (default: 0). Not to be used with end
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsWithSequence#count
   */
  readonly count?: string;

  /**
   * Number at which to end the sequence (default: 0). Not to be used with Count
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsWithSequence#end
   */
  readonly end?: string;

  /**
   * Format is a printf format string to format the value in the sequence
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsWithSequence#format
   */
  readonly format?: string;

  /**
   * Number at which to start the sequence (default: 0)
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsWithSequence#start
   */
  readonly start?: string;

}

/**
 * Represents a Persistent Disk resource in AWS.

An AWS EBS disk must exist before mounting to a container. The disk must also be in the same AWS zone as the kubelet. An AWS EBS disk can only be mounted as read/write once. AWS EBS volumes support ownership management and SELinux relabeling.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesAwsElasticBlockStore
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesAwsElasticBlockStore {
  /**
   * Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesAwsElasticBlockStore#fsType
   */
  readonly fsType?: string;

  /**
   * The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesAwsElasticBlockStore#partition
   */
  readonly partition?: number;

  /**
   * Specify "true" to force and set the ReadOnly property in VolumeMounts to "true". If omitted, the default is "false". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesAwsElasticBlockStore#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesAwsElasticBlockStore#volumeID
   */
  readonly volumeID: string;

}

/**
 * AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesAzureDisk
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesAzureDisk {
  /**
   * Host Caching mode: None, Read Only, Read Write.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesAzureDisk#cachingMode
   */
  readonly cachingMode?: string;

  /**
   * The Name of the data disk in the blob storage
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesAzureDisk#diskName
   */
  readonly diskName: string;

  /**
   * The URI the data disk in the blob storage
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesAzureDisk#diskURI
   */
  readonly diskURI: string;

  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesAzureDisk#fsType
   */
  readonly fsType?: string;

  /**
   * Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesAzureDisk#kind
   */
  readonly kind?: string;

  /**
   * Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesAzureDisk#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesAzureFile
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesAzureFile {
  /**
   * Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesAzureFile#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * the name of secret that contains Azure Storage Account Name and Key
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesAzureFile#secretName
   */
  readonly secretName: string;

  /**
   * Share Name
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesAzureFile#shareName
   */
  readonly shareName: string;

}

/**
 * Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesCephfs
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesCephfs {
  /**
   * Required: Monitors is a collection of Ceph monitors More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesCephfs#monitors
   */
  readonly monitors: string[];

  /**
   * Optional: Used as the mounted root, rather than the full Ceph tree, default is /
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesCephfs#path
   */
  readonly path?: string;

  /**
   * Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesCephfs#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesCephfs#secretFile
   */
  readonly secretFile?: string;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesCephfs#secretRef
   */
  readonly secretRef?: CronWorkflowSpecWorkflowSpecTemplatesVolumesCephfsSecretRef;

  /**
   * Optional: User is the rados user name, default is admin More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesCephfs#user
   */
  readonly user?: string;

}

/**
 * Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesCinder
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesCinder {
  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesCinder#fsType
   */
  readonly fsType?: string;

  /**
   * Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesCinder#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesCinder#secretRef
   */
  readonly secretRef?: CronWorkflowSpecWorkflowSpecTemplatesVolumesCinderSecretRef;

  /**
   * volume id used to identify the volume in cinder More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesCinder#volumeID
   */
  readonly volumeID: string;

}

/**
 * Adapts a ConfigMap into a volume.

The contents of the target ConfigMap's Data field will be presented in a volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. ConfigMap volumes support ownership management and SELinux relabeling.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesConfigMap
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesConfigMap {
  /**
   * Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @default 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesConfigMap#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesConfigMap#items
   */
  readonly items?: CronWorkflowSpecWorkflowSpecTemplatesVolumesConfigMapItems[];

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesConfigMap#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its keys must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Represents a source location of a volume to mount, managed by an external CSI driver
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesCsi
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesCsi {
  /**
   * Driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesCsi#driver
   */
  readonly driver: string;

  /**
   * Filesystem type to mount. Ex. "ext4", "xfs", "ntfs". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesCsi#fsType
   */
  readonly fsType?: string;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesCsi#nodePublishSecretRef
   */
  readonly nodePublishSecretRef?: CronWorkflowSpecWorkflowSpecTemplatesVolumesCsiNodePublishSecretRef;

  /**
   * Specifies a read-only configuration for the volume. Defaults to false (read/write).
   *
   * @default false (read/write).
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesCsi#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * VolumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesCsi#volumeAttributes
   */
  readonly volumeAttributes?: { [key: string]: string };

}

/**
 * DownwardAPIVolumeSource represents a volume containing downward API info. Downward API volumes support ownership management and SELinux relabeling.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApi
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApi {
  /**
   * Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @default 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApi#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * Items is a list of downward API volume file
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApi#items
   */
  readonly items?: CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApiItems[];

}

/**
 * Represents an empty directory for a pod. Empty directory volumes support ownership management and SELinux relabeling.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesEmptyDir
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesEmptyDir {
  /**
   * What type of storage medium should back this directory. The default is "" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesEmptyDir#medium
   */
  readonly medium?: string;

  /**
   * Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and Int64() accessors.

The serialization format is:

<quantity>        ::= <signedNumber><suffix>
  (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
<decimalSI>       ::= m | "" | k | M | G | T | P | E
  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
<decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  a. No precision is lost
  b. No fractional digits will be emitted
  c. The exponent (or suffix) is as large as possible.
The sign will be omitted unless the number is negative.

Examples:
  1.5 will be serialized as "1500m"
  1.5Gi will be serialized as "1536Mi"

Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.

Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesEmptyDir#sizeLimit
   */
  readonly sizeLimit?: string;

}

/**
 * Represents a Fibre Channel volume. Fibre Channel volumes can only be mounted as read/write once. Fibre Channel volumes support ownership management and SELinux relabeling.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesFc
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesFc {
  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesFc#fsType
   */
  readonly fsType?: string;

  /**
   * Optional: FC target lun number
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesFc#lun
   */
  readonly lun?: number;

  /**
   * Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesFc#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Optional: FC target worldwide names (WWNs)
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesFc#targetWWNs
   */
  readonly targetWWNs?: string[];

  /**
   * Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesFc#wwids
   */
  readonly wwids?: string[];

}

/**
 * FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesFlexVolume
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesFlexVolume {
  /**
   * Driver is the name of the driver to use for this volume.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesFlexVolume#driver
   */
  readonly driver: string;

  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesFlexVolume#fsType
   */
  readonly fsType?: string;

  /**
   * Optional: Extra command options if any.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesFlexVolume#options
   */
  readonly options?: { [key: string]: string };

  /**
   * Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesFlexVolume#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesFlexVolume#secretRef
   */
  readonly secretRef?: CronWorkflowSpecWorkflowSpecTemplatesVolumesFlexVolumeSecretRef;

}

/**
 * Represents a Flocker volume mounted by the Flocker agent. One and only one of datasetName and datasetUUID should be set. Flocker volumes do not support ownership management or SELinux relabeling.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesFlocker
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesFlocker {
  /**
   * Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesFlocker#datasetName
   */
  readonly datasetName?: string;

  /**
   * UUID of the dataset. This is unique identifier of a Flocker dataset
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesFlocker#datasetUUID
   */
  readonly datasetUUID?: string;

}

/**
 * Represents a Persistent Disk resource in Google Compute Engine.

A GCE PD must exist before mounting to a container. The disk must also be in the same GCE project and zone as the kubelet. A GCE PD can only be mounted as read/write once or read-only many times. GCE PDs support ownership management and SELinux relabeling.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesGcePersistentDisk
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesGcePersistentDisk {
  /**
   * Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesGcePersistentDisk#fsType
   */
  readonly fsType?: string;

  /**
   * The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesGcePersistentDisk#partition
   */
  readonly partition?: number;

  /**
   * Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesGcePersistentDisk#pdName
   */
  readonly pdName: string;

  /**
   * ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
   *
   * @default false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesGcePersistentDisk#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Represents a volume that is populated with the contents of a git repository. Git repo volumes do not support ownership management. Git repo volumes support SELinux relabeling.

DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesGitRepo
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesGitRepo {
  /**
   * Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesGitRepo#directory
   */
  readonly directory?: string;

  /**
   * Repository URL
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesGitRepo#repository
   */
  readonly repository: string;

  /**
   * Commit hash for the specified revision.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesGitRepo#revision
   */
  readonly revision?: string;

}

/**
 * Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesGlusterfs
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesGlusterfs {
  /**
   * EndpointsName is the endpoint name that details Glusterfs topology. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesGlusterfs#endpoints
   */
  readonly endpoints: string;

  /**
   * Path is the Glusterfs volume path. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesGlusterfs#path
   */
  readonly path: string;

  /**
   * ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod
   *
   * @default false. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesGlusterfs#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Represents a host path mapped into a pod. Host path volumes do not support ownership management or SELinux relabeling.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesHostPath
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesHostPath {
  /**
   * Path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesHostPath#path
   */
  readonly path: string;

  /**
   * Type for HostPath Volume Defaults to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
   *
   * @default More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesHostPath#type
   */
  readonly type?: string;

}

/**
 * Represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesIscsi
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesIscsi {
  /**
   * whether support iSCSI Discovery CHAP authentication
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesIscsi#chapAuthDiscovery
   */
  readonly chapAuthDiscovery?: boolean;

  /**
   * whether support iSCSI Session CHAP authentication
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesIscsi#chapAuthSession
   */
  readonly chapAuthSession?: boolean;

  /**
   * Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesIscsi#fsType
   */
  readonly fsType?: string;

  /**
   * Custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesIscsi#initiatorName
   */
  readonly initiatorName?: string;

  /**
   * Target iSCSI Qualified Name.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesIscsi#iqn
   */
  readonly iqn: string;

  /**
   * iSCSI Interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).
   *
   * @default default' (tcp).
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesIscsi#iscsiInterface
   */
  readonly iscsiInterface?: string;

  /**
   * iSCSI Target Lun number.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesIscsi#lun
   */
  readonly lun: number;

  /**
   * iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesIscsi#portals
   */
  readonly portals?: string[];

  /**
   * ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.
   *
   * @default false.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesIscsi#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesIscsi#secretRef
   */
  readonly secretRef?: CronWorkflowSpecWorkflowSpecTemplatesVolumesIscsiSecretRef;

  /**
   * iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesIscsi#targetPortal
   */
  readonly targetPortal: string;

}

/**
 * Represents an NFS mount that lasts the lifetime of a pod. NFS volumes do not support ownership management or SELinux relabeling.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesNfs
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesNfs {
  /**
   * Path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesNfs#path
   */
  readonly path: string;

  /**
   * ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
   *
   * @default false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesNfs#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesNfs#server
   */
  readonly server: string;

}

/**
 * PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace. This volume finds the bound PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another type of volume that is owned by someone else (the system).
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesPersistentVolumeClaim
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesPersistentVolumeClaim {
  /**
   * ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesPersistentVolumeClaim#claimName
   */
  readonly claimName: string;

  /**
   * Will force the ReadOnly setting in VolumeMounts. Default false.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesPersistentVolumeClaim#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Represents a Photon Controller persistent disk resource.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesPhotonPersistentDisk
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesPhotonPersistentDisk {
  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesPhotonPersistentDisk#fsType
   */
  readonly fsType?: string;

  /**
   * ID that identifies Photon Controller persistent disk
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesPhotonPersistentDisk#pdID
   */
  readonly pdID: string;

}

/**
 * PortworxVolumeSource represents a Portworx volume resource.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesPortworxVolume
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesPortworxVolume {
  /**
   * FSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesPortworxVolume#fsType
   */
  readonly fsType?: string;

  /**
   * Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesPortworxVolume#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * VolumeID uniquely identifies a Portworx volume
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesPortworxVolume#volumeID
   */
  readonly volumeID: string;

}

/**
 * Represents a projected volume source
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjected
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesProjected {
  /**
   * Mode bits to use on created files by default. Must be a value between 0 and 0777. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjected#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * list of volume projections
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjected#sources
   */
  readonly sources: CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSources[];

}

/**
 * Represents a Quobyte mount that lasts the lifetime of a pod. Quobyte volumes do not support ownership management or SELinux relabeling.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesQuobyte
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesQuobyte {
  /**
   * Group to map volume access to Default is no group
   *
   * @default no group
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesQuobyte#group
   */
  readonly group?: string;

  /**
   * ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.
   *
   * @default false.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesQuobyte#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesQuobyte#registry
   */
  readonly registry: string;

  /**
   * Tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesQuobyte#tenant
   */
  readonly tenant?: string;

  /**
   * User to map volume access to Defaults to serivceaccount user
   *
   * @default serivceaccount user
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesQuobyte#user
   */
  readonly user?: string;

  /**
   * Volume is a string that references an already created Quobyte volume by name.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesQuobyte#volume
   */
  readonly volume: string;

}

/**
 * Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesRbd
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesRbd {
  /**
   * Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesRbd#fsType
   */
  readonly fsType?: string;

  /**
   * The rados image name. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesRbd#image
   */
  readonly image: string;

  /**
   * Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   *
   * @default etc/ceph/keyring. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesRbd#keyring
   */
  readonly keyring?: string;

  /**
   * A collection of Ceph monitors. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesRbd#monitors
   */
  readonly monitors: string[];

  /**
   * The rados pool name. Default is rbd. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   *
   * @default rbd. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesRbd#pool
   */
  readonly pool?: string;

  /**
   * ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   *
   * @default false. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesRbd#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesRbd#secretRef
   */
  readonly secretRef?: CronWorkflowSpecWorkflowSpecTemplatesVolumesRbdSecretRef;

  /**
   * The rados user name. Default is admin. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   *
   * @default admin. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesRbd#user
   */
  readonly user?: string;

}

/**
 * ScaleIOVolumeSource represents a persistent ScaleIO volume
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesScaleIo
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesScaleIo {
  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Default is "xfs".
   *
   * @default xfs".
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesScaleIo#fsType
   */
  readonly fsType?: string;

  /**
   * The host address of the ScaleIO API Gateway.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesScaleIo#gateway
   */
  readonly gateway: string;

  /**
   * The name of the ScaleIO Protection Domain for the configured storage.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesScaleIo#protectionDomain
   */
  readonly protectionDomain?: string;

  /**
   * Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesScaleIo#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesScaleIo#secretRef
   */
  readonly secretRef: CronWorkflowSpecWorkflowSpecTemplatesVolumesScaleIoSecretRef;

  /**
   * Flag to enable/disable SSL communication with Gateway, default false
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesScaleIo#sslEnabled
   */
  readonly sslEnabled?: boolean;

  /**
   * Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.
   *
   * @default ThinProvisioned.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesScaleIo#storageMode
   */
  readonly storageMode?: string;

  /**
   * The ScaleIO Storage Pool associated with the protection domain.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesScaleIo#storagePool
   */
  readonly storagePool?: string;

  /**
   * The name of the storage system as configured in ScaleIO.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesScaleIo#system
   */
  readonly system: string;

  /**
   * The name of a volume already created in the ScaleIO system that is associated with this volume source.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesScaleIo#volumeName
   */
  readonly volumeName?: string;

}

/**
 * Adapts a Secret into a volume.

The contents of the target Secret's Data field will be presented in a volume as files using the keys in the Data field as the file names. Secret volumes support ownership management and SELinux relabeling.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesSecret {
  /**
   * Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @default 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesSecret#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesSecret#items
   */
  readonly items?: CronWorkflowSpecWorkflowSpecTemplatesVolumesSecretItems[];

  /**
   * Specify whether the Secret or its keys must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesSecret#optional
   */
  readonly optional?: boolean;

  /**
   * Name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesSecret#secretName
   */
  readonly secretName?: string;

}

/**
 * Represents a StorageOS persistent volume resource.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesStorageos
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesStorageos {
  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesStorageos#fsType
   */
  readonly fsType?: string;

  /**
   * Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesStorageos#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesStorageos#secretRef
   */
  readonly secretRef?: CronWorkflowSpecWorkflowSpecTemplatesVolumesStorageosSecretRef;

  /**
   * VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesStorageos#volumeName
   */
  readonly volumeName?: string;

  /**
   * VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to "default" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesStorageos#volumeNamespace
   */
  readonly volumeNamespace?: string;

}

/**
 * Represents a vSphere volume resource.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesVsphereVolume
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesVsphereVolume {
  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesVsphereVolume#fsType
   */
  readonly fsType?: string;

  /**
   * Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesVsphereVolume#storagePolicyID
   */
  readonly storagePolicyID?: string;

  /**
   * Storage Policy Based Management (SPBM) profile name.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesVsphereVolume#storagePolicyName
   */
  readonly storagePolicyName?: string;

  /**
   * Path that identifies vSphere volume vmdk
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesVsphereVolume#volumePath
   */
  readonly volumePath: string;

}

/**
 * TypedLocalObjectReference contains enough information to let you locate the typed referenced object inside the same namespace.
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecDataSource
 */
export interface CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecDataSource {
  /**
   * APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecDataSource#apiGroup
   */
  readonly apiGroup?: string;

  /**
   * Kind is the type of resource being referenced
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecDataSource#kind
   */
  readonly kind: string;

  /**
   * Name is the name of resource being referenced
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecDataSource#name
   */
  readonly name: string;

}

/**
 * ResourceRequirements describes the compute resource requirements.
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecResources
 */
export interface CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecResources {
  /**
   * Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecResources#limits
   */
  readonly limits?: { [key: string]: string };

  /**
   * Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecResources#requests
   */
  readonly requests?: { [key: string]: string };

}

/**
 * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecSelector
 */
export interface CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecSelector#matchExpressions
   */
  readonly matchExpressions?: CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * PersistentVolumeClaimCondition contails details about state of pvc
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatusConditions
 */
export interface CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatusConditions {
  /**
   * Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatusConditions#lastProbeTime
   */
  readonly lastProbeTime?: Date;

  /**
   * Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatusConditions#lastTransitionTime
   */
  readonly lastTransitionTime?: Date;

  /**
   * Human-readable message indicating details about last transition.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatusConditions#message
   */
  readonly message?: string;

  /**
   * Unique, this should be a short, machine understandable string that gives the reason for condition's last transition. If it reports "ResizeStarted" that means the underlying persistent volume is being resized.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatusConditions#reason
   */
  readonly reason?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatusConditions#status
   */
  readonly status: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesStatusConditions#type
   */
  readonly type: string;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumesCephfsSecretRef
 */
export interface CronWorkflowSpecWorkflowSpecVolumesCephfsSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesCephfsSecretRef#name
   */
  readonly name?: string;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumesCinderSecretRef
 */
export interface CronWorkflowSpecWorkflowSpecVolumesCinderSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesCinderSecretRef#name
   */
  readonly name?: string;

}

/**
 * Maps a string key to a path within a volume.
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumesConfigMapItems
 */
export interface CronWorkflowSpecWorkflowSpecVolumesConfigMapItems {
  /**
   * The key to project.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesConfigMapItems#key
   */
  readonly key: string;

  /**
   * Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesConfigMapItems#mode
   */
  readonly mode?: number;

  /**
   * The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesConfigMapItems#path
   */
  readonly path: string;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumesCsiNodePublishSecretRef
 */
export interface CronWorkflowSpecWorkflowSpecVolumesCsiNodePublishSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesCsiNodePublishSecretRef#name
   */
  readonly name?: string;

}

/**
 * DownwardAPIVolumeFile represents information to create the file containing the pod field
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumesDownwardApiItems
 */
export interface CronWorkflowSpecWorkflowSpecVolumesDownwardApiItems {
  /**
   * ObjectFieldSelector selects an APIVersioned field of an object.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesDownwardApiItems#fieldRef
   */
  readonly fieldRef?: CronWorkflowSpecWorkflowSpecVolumesDownwardApiItemsFieldRef;

  /**
   * Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesDownwardApiItems#mode
   */
  readonly mode?: number;

  /**
   * Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesDownwardApiItems#path
   */
  readonly path: string;

  /**
   * ResourceFieldSelector represents container resources (cpu, memory) and their output format
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesDownwardApiItems#resourceFieldRef
   */
  readonly resourceFieldRef?: CronWorkflowSpecWorkflowSpecVolumesDownwardApiItemsResourceFieldRef;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumesFlexVolumeSecretRef
 */
export interface CronWorkflowSpecWorkflowSpecVolumesFlexVolumeSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesFlexVolumeSecretRef#name
   */
  readonly name?: string;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumesIscsiSecretRef
 */
export interface CronWorkflowSpecWorkflowSpecVolumesIscsiSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesIscsiSecretRef#name
   */
  readonly name?: string;

}

/**
 * Projection that may be projected along with other supported volume types
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSources
 */
export interface CronWorkflowSpecWorkflowSpecVolumesProjectedSources {
  /**
   * Adapts a ConfigMap into a projected volume.

The contents of the target ConfigMap's Data field will be presented in a projected volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. Note that this is identical to a configmap volume source without the default mode.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSources#configMap
   */
  readonly configMap?: CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesConfigMap;

  /**
   * Represents downward API info for projecting into a projected volume. Note that this is identical to a downwardAPI volume source without the default mode.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSources#downwardAPI
   */
  readonly downwardAPI?: CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApi;

  /**
   * Adapts a secret into a projected volume.

The contents of the target Secret's Data field will be presented in a projected volume as files using the keys in the Data field as the file names. Note that this is identical to a secret volume source without the default mode.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSources#secret
   */
  readonly secret?: CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesSecret;

  /**
   * ServiceAccountTokenProjection represents a projected service account token volume. This projection can be used to insert a service account token into the pods runtime filesystem for use against APIs (Kubernetes API Server or otherwise).
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSources#serviceAccountToken
   */
  readonly serviceAccountToken?: CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesServiceAccountToken;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumesRbdSecretRef
 */
export interface CronWorkflowSpecWorkflowSpecVolumesRbdSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesRbdSecretRef#name
   */
  readonly name?: string;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumesScaleIoSecretRef
 */
export interface CronWorkflowSpecWorkflowSpecVolumesScaleIoSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesScaleIoSecretRef#name
   */
  readonly name?: string;

}

/**
 * Maps a string key to a path within a volume.
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumesSecretItems
 */
export interface CronWorkflowSpecWorkflowSpecVolumesSecretItems {
  /**
   * The key to project.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesSecretItems#key
   */
  readonly key: string;

  /**
   * Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesSecretItems#mode
   */
  readonly mode?: number;

  /**
   * The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesSecretItems#path
   */
  readonly path: string;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumesStorageosSecretRef
 */
export interface CronWorkflowSpecWorkflowSpecVolumesStorageosSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesStorageosSecretRef#name
   */
  readonly name?: string;

}

/**
 * A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
 *
 * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference
 */
export interface CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
  /**
   * A list of node selector requirements by node's labels.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference#matchExpressions
   */
  readonly matchExpressions?: CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions[];

  /**
   * A list of node selector requirements by node's fields.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference#matchFields
   */
  readonly matchFields?: CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields[];

}

/**
 * A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
 *
 * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms
 */
export interface CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
  /**
   * A list of node selector requirements by node's labels.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms#matchExpressions
   */
  readonly matchExpressions?: CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions[];

  /**
   * A list of node selector requirements by node's fields.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms#matchFields
   */
  readonly matchFields?: CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields[];

}

/**
 * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
 *
 * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm
 */
export interface CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
  /**
   * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#labelSelector
   */
  readonly labelSelector?: CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;

  /**
   * namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaces
   */
  readonly namespaces?: string[];

  /**
   * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
 *
 * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector
 */
export interface CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchExpressions
   */
  readonly matchExpressions?: CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
 *
 * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm
 */
export interface CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
  /**
   * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#labelSelector
   */
  readonly labelSelector?: CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;

  /**
   * namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaces
   */
  readonly namespaces?: string[];

  /**
   * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
 *
 * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector
 */
export interface CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchExpressions
   */
  readonly matchExpressions?: CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * TarStrategy will tar and gzip the file or directory when saving
 *
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsArchiveTar
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsArchiveTar {
  /**
   * CompressionLevel specifies the gzip compression level to use for the artifact. Defaults to gzip.DefaultCompression.
   *
   * @default gzip.DefaultCompression.
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsArchiveTar#compressionLevel
   */
  readonly compressionLevel?: number;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactoryPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactoryPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactoryPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactoryPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactoryPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactoryUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactoryUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactoryUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactoryUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsArtifactoryUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGcsServiceAccountKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsGcsServiceAccountKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGcsServiceAccountKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGcsServiceAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGcsServiceAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGitPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsGitPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGitPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGitPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGitPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGitSshPrivateKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsGitSshPrivateKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGitSshPrivateKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGitSshPrivateKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGitSshPrivateKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGitUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsGitUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGitUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGitUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsGitUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfsKrbCCacheSecret
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfsKrbCCacheSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfsKrbCCacheSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfsKrbCCacheSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfsKrbCCacheSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Selects a key from a ConfigMap.
 *
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfsKrbConfigConfigMap
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfsKrbConfigConfigMap {
  /**
   * The key to select.
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfsKrbConfigConfigMap#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfsKrbConfigConfigMap#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfsKrbConfigConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfsKrbKeytabSecret
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfsKrbKeytabSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfsKrbKeytabSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfsKrbKeytabSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsHdfsKrbKeytabSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsOssAccessKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsOssAccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsOssAccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsOssAccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsOssAccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsOssSecretKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsOssSecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsOssSecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsOssSecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsOssSecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3AccessKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3AccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3AccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3AccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3AccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3SecretKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3SecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3SecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3SecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecArgumentsArtifactsS3SecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution#preference
   */
  readonly preference: CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference;

  /**
   * Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * Required. A list of node selector terms. The terms are ORed.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution#nodeSelectorTerms
   */
  readonly nodeSelectorTerms: CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms[];

}

/**
 * The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution#podAffinityTerm
   */
  readonly podAffinityTerm: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;

  /**
   * weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#labelSelector
   */
  readonly labelSelector?: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;

  /**
   * namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaces
   */
  readonly namespaces?: string[];

  /**
   * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution#podAffinityTerm
   */
  readonly podAffinityTerm: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;

  /**
   * weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#labelSelector
   */
  readonly labelSelector?: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;

  /**
   * namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaces
   */
  readonly namespaces?: string[];

  /**
   * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationArtifactoryPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationArtifactoryPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationArtifactoryPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationArtifactoryPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationArtifactoryPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationArtifactoryUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationArtifactoryUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationArtifactoryUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationArtifactoryUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationArtifactoryUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGcsServiceAccountKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGcsServiceAccountKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGcsServiceAccountKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGcsServiceAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGcsServiceAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGitPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGitPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGitPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGitPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGitPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGitSshPrivateKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGitSshPrivateKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGitSshPrivateKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGitSshPrivateKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGitSshPrivateKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGitUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGitUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGitUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGitUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationGitUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfsKrbCCacheSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfsKrbCCacheSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfsKrbCCacheSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfsKrbCCacheSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfsKrbCCacheSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Selects a key from a ConfigMap.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfsKrbConfigConfigMap
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfsKrbConfigConfigMap {
  /**
   * The key to select.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfsKrbConfigConfigMap#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfsKrbConfigConfigMap#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfsKrbConfigConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfsKrbKeytabSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfsKrbKeytabSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfsKrbKeytabSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfsKrbKeytabSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationHdfsKrbKeytabSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOssAccessKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOssAccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOssAccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOssAccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOssAccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOssSecretKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOssSecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOssSecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOssSecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationOssSecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3AccessKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3AccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3AccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3AccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3AccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3SecretKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3SecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3SecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3SecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArchiveLocationS3SecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * ArchiveStrategy describes how to archive files/directory when saving artifacts
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsArchive
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsArchive {
  /**
   * NoneStrategy indicates to skip tar process and upload the files or directory tree as independent files. Note that if the artifact is a directory, the artifact driver must support the ability to save/load the directory appropriately.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsArchive#none
   */
  readonly none?: any;

  /**
   * TarStrategy will tar and gzip the file or directory when saving
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsArchive#tar
   */
  readonly tar?: CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsArchiveTar;

}

/**
 * ArtifactoryArtifact is the location of an artifactory artifact
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsArtifactory
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsArtifactory {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsArtifactory#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsArtifactoryPasswordSecret;

  /**
   * URL of the artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsArtifactory#url
   */
  readonly url: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsArtifactory#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsArtifactoryUsernameSecret;

}

/**
 * GCSArtifact is the location of a GCS artifact
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsGcs
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsGcs {
  /**
   * Bucket is the name of the bucket
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsGcs#bucket
   */
  readonly bucket: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsGcs#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsGcs#serviceAccountKeySecret
   */
  readonly serviceAccountKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsGcsServiceAccountKeySecret;

}

/**
 * GitArtifact is the location of an git artifact
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsGit
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsGit {
  /**
   * Depth specifies clones/fetches should be shallow and include the given number of commits from the branch tip
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsGit#depth
   */
  readonly depth?: number;

  /**
   * Fetch specifies a number of refs that should be fetched before checkout
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsGit#fetch
   */
  readonly fetch?: string[];

  /**
   * InsecureIgnoreHostKey disables SSH strict host key checking during git clone
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsGit#insecureIgnoreHostKey
   */
  readonly insecureIgnoreHostKey?: boolean;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsGit#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsGitPasswordSecret;

  /**
   * Repo is the git repository
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsGit#repo
   */
  readonly repo: string;

  /**
   * Revision is the git commit, tag, branch to checkout
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsGit#revision
   */
  readonly revision?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsGit#sshPrivateKeySecret
   */
  readonly sshPrivateKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsGitSshPrivateKeySecret;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsGit#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsGitUsernameSecret;

}

/**
 * HDFSArtifact is the location of an HDFS artifact
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsHdfs
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsHdfs {
  /**
   * Addresses is accessible addresses of HDFS name nodes
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsHdfs#addresses
   */
  readonly addresses: string[];

  /**
   * Force copies a file forcibly even if it exists (default: false)
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsHdfs#force
   */
  readonly force?: boolean;

  /**
   * HDFSUser is the user to access HDFS file system. It is ignored if either ccache or keytab is used.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsHdfs#hdfsUser
   */
  readonly hdfsUser?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsHdfs#krbCCacheSecret
   */
  readonly krbCCacheSecret?: CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsHdfsKrbCCacheSecret;

  /**
   * Selects a key from a ConfigMap.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsHdfs#krbConfigConfigMap
   */
  readonly krbConfigConfigMap?: CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsHdfsKrbConfigConfigMap;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsHdfs#krbKeytabSecret
   */
  readonly krbKeytabSecret?: CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsHdfsKrbKeytabSecret;

  /**
   * KrbRealm is the Kerberos realm used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsHdfs#krbRealm
   */
  readonly krbRealm?: string;

  /**
   * KrbServicePrincipalName is the principal name of Kerberos service It must be set if either ccache or keytab is used.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsHdfs#krbServicePrincipalName
   */
  readonly krbServicePrincipalName?: string;

  /**
   * KrbUsername is the Kerberos username used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsHdfs#krbUsername
   */
  readonly krbUsername?: string;

  /**
   * Path is a file path in HDFS
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsHdfs#path
   */
  readonly path: string;

}

/**
 * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsHttp
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsHttp {
  /**
   * URL of the artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsHttp#url
   */
  readonly url: string;

}

/**
 * OSSArtifact is the location of an Alibaba Cloud OSS artifact
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsOss
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsOss {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsOss#accessKeySecret
   */
  readonly accessKeySecret: CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsOssAccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsOss#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsOss#endpoint
   */
  readonly endpoint: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsOss#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsOss#secretKeySecret
   */
  readonly secretKeySecret: CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsOssSecretKeySecret;

}

/**
 * RawArtifact allows raw string content to be placed as an artifact in a container
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsRaw
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsRaw {
  /**
   * Data is the string contents of the artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsRaw#data
   */
  readonly data: string;

}

/**
 * S3Artifact is the location of an S3 artifact
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsS3
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsS3 {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsS3#accessKeySecret
   */
  readonly accessKeySecret: CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsS3AccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsS3#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsS3#endpoint
   */
  readonly endpoint: string;

  /**
   * Insecure will connect to the service with TLS
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsS3#insecure
   */
  readonly insecure?: boolean;

  /**
   * Key is the key in the bucket where the artifact resides
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsS3#key
   */
  readonly key: string;

  /**
   * Region contains the optional bucket region
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsS3#region
   */
  readonly region?: string;

  /**
   * RoleARN is the Amazon Resource Name (ARN) of the role to assume.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsS3#roleARN
   */
  readonly roleARN?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsS3#secretKeySecret
   */
  readonly secretKeySecret: CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsS3SecretKeySecret;

  /**
   * UseSDKCreds tells the driver to figure out credentials based on sdk defaults.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsS3#useSDKCreds
   */
  readonly useSDKCreds?: boolean;

}

/**
 * ValueFrom describes a location in which to obtain the value to a parameter
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsParametersValueFrom
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArgumentsParametersValueFrom {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsParametersValueFrom#default
   */
  readonly default?: string;

  /**
   * JQFilter expression against the resource object in resource templates
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsParametersValueFrom#jqFilter
   */
  readonly jqFilter?: string;

  /**
   * JSONPath of a resource to retrieve an output parameter value from in resource templates
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsParametersValueFrom#jsonPath
   */
  readonly jsonPath?: string;

  /**
   * Parameter reference to a step or dag task in which to retrieve an output parameter value from (e.g. '{{steps.mystep.outputs.myparam}}')
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsParametersValueFrom#parameter
   */
  readonly parameter?: string;

  /**
   * Path in the container to retrieve an output parameter value from in container templates
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsParametersValueFrom#path
   */
  readonly path?: string;

}

/**
 * EnvVarSource represents a source for the value of an EnvVar.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFrom
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFrom {
  /**
   * Selects a key from a ConfigMap.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromConfigMapKeyRef;

  /**
   * ObjectFieldSelector selects an APIVersioned field of an object.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFrom#fieldRef
   */
  readonly fieldRef?: CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromFieldRef;

  /**
   * ResourceFieldSelector represents container resources (cpu, memory) and their output format
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromResourceFieldRef;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromSecretKeyRef;

}

/**
 * ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.

The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvFromConfigMapRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerEnvFromConfigMapRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvFromConfigMapRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvFromConfigMapRef#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretEnvSource selects a Secret to populate the environment variables with.

The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvFromSecretRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerEnvFromSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvFromSecretRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvFromSecretRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Handler defines a specific action that should be taken
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStart
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStart {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStart#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartExec;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStart#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartHttpGet;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStart#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartTcpSocket;

}

/**
 * Handler defines a specific action that should be taken
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStop
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStop {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStop#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopExec;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStop#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopHttpGet;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStop#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopTcpSocket;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeTcpSocket#port
   */
  readonly port: string;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeTcpSocket#port
   */
  readonly port: string;

}

/**
 * Adds and removes POSIX capabilities from running containers.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextCapabilities
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextCapabilities {
  /**
   * Added capabilities
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextCapabilities#add
   */
  readonly add?: string[];

  /**
   * Removed capabilities
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextCapabilities#drop
   */
  readonly drop?: string[];

}

/**
 * SELinuxOptions are the labels to be applied to the container
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextSeLinuxOptions
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextSeLinuxOptions {
  /**
   * Level is SELinux level label that applies to the container.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * Role is a SELinux role label that applies to the container.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * Type is a SELinux type label that applies to the container.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * User is a SELinux user label that applies to the container.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * WindowsSecurityContextOptions contain Windows-specific options and credentials.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextWindowsOptions
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextWindowsOptions {
  /**
   * GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * GMSACredentialSpecName is the name of the GMSA credential spec to use. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

}

/**
 * Arguments to a template
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArguments
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArguments {
  /**
   * Artifacts is the list of artifacts to pass to the template or workflow
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArguments#artifacts
   */
  readonly artifacts?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifacts[];

  /**
   * Parameters is the list of parameters to pass to the template or workflow
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArguments#parameters
   */
  readonly parameters?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParameters[];

}

/**
 * ContinueOn defines if a workflow should continue even if a task or step fails/errors. It can be specified if the workflow should continue when the pod errors, fails or both.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksContinueOn
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksContinueOn {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksContinueOn#error
   */
  readonly error?: boolean;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksContinueOn#failed
   */
  readonly failed?: boolean;

}

/**
 * TemplateRef is a reference of template resource.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksTemplateRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksTemplateRef {
  /**
   * ClusterScope indicates the referred template is cluster scoped (i.e. a ClusterWorkflowTemplate).
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksTemplateRef#clusterScope
   */
  readonly clusterScope?: boolean;

  /**
   * Name is the resource name of the template.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksTemplateRef#name
   */
  readonly name?: string;

  /**
   * RuntimeResolution skips validation at creation time. By enabling this option, you can create the referred workflow template before the actual runtime.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksTemplateRef#runtimeResolution
   */
  readonly runtimeResolution?: boolean;

  /**
   * Template is the name of referred template in the resource.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksTemplateRef#template
   */
  readonly template?: string;

}

/**
 * Sequence expands a workflow step into numeric range
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksWithSequence
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksWithSequence {
  /**
   * Count is number of elements in the sequence (default: 0). Not to be used with end
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksWithSequence#count
   */
  readonly count?: string;

  /**
   * Number at which to end the sequence (default: 0). Not to be used with Count
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksWithSequence#end
   */
  readonly end?: string;

  /**
   * Format is a printf format string to format the value in the sequence
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksWithSequence#format
   */
  readonly format?: string;

  /**
   * Number at which to start the sequence (default: 0)
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksWithSequence#start
   */
  readonly start?: string;

}

/**
 * EnvVarSource represents a source for the value of an EnvVar.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFrom
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFrom {
  /**
   * Selects a key from a ConfigMap.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromConfigMapKeyRef;

  /**
   * ObjectFieldSelector selects an APIVersioned field of an object.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFrom#fieldRef
   */
  readonly fieldRef?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromFieldRef;

  /**
   * ResourceFieldSelector represents container resources (cpu, memory) and their output format
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromResourceFieldRef;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromSecretKeyRef;

}

/**
 * ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.

The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvFromConfigMapRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvFromConfigMapRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvFromConfigMapRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvFromConfigMapRef#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretEnvSource selects a Secret to populate the environment variables with.

The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvFromSecretRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvFromSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvFromSecretRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvFromSecretRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Handler defines a specific action that should be taken
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStart
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStart {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStart#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartExec;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStart#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGet;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStart#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartTcpSocket;

}

/**
 * Handler defines a specific action that should be taken
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStop
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStop {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStop#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopExec;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStop#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGet;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStop#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopTcpSocket;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeTcpSocket#port
   */
  readonly port: string;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeTcpSocket#port
   */
  readonly port: string;

}

/**
 * Adds and removes POSIX capabilities from running containers.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextCapabilities
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextCapabilities {
  /**
   * Added capabilities
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextCapabilities#add
   */
  readonly add?: string[];

  /**
   * Removed capabilities
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextCapabilities#drop
   */
  readonly drop?: string[];

}

/**
 * SELinuxOptions are the labels to be applied to the container
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextSeLinuxOptions
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextSeLinuxOptions {
  /**
   * Level is SELinux level label that applies to the container.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * Role is a SELinux role label that applies to the container.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * Type is a SELinux type label that applies to the container.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * User is a SELinux user label that applies to the container.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * WindowsSecurityContextOptions contain Windows-specific options and credentials.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextWindowsOptions
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextWindowsOptions {
  /**
   * GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * GMSACredentialSpecName is the name of the GMSA credential spec to use. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeTcpSocket#port
   */
  readonly port: string;

}

/**
 * ArchiveStrategy describes how to archive files/directory when saving artifacts
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArchive
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArchive {
  /**
   * NoneStrategy indicates to skip tar process and upload the files or directory tree as independent files. Note that if the artifact is a directory, the artifact driver must support the ability to save/load the directory appropriately.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArchive#none
   */
  readonly none?: any;

  /**
   * TarStrategy will tar and gzip the file or directory when saving
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArchive#tar
   */
  readonly tar?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArchiveTar;

}

/**
 * ArtifactoryArtifact is the location of an artifactory artifact
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactory
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactory {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactory#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactoryPasswordSecret;

  /**
   * URL of the artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactory#url
   */
  readonly url: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactory#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactoryUsernameSecret;

}

/**
 * GCSArtifact is the location of a GCS artifact
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGcs
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGcs {
  /**
   * Bucket is the name of the bucket
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGcs#bucket
   */
  readonly bucket: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGcs#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGcs#serviceAccountKeySecret
   */
  readonly serviceAccountKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGcsServiceAccountKeySecret;

}

/**
 * GitArtifact is the location of an git artifact
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGit
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGit {
  /**
   * Depth specifies clones/fetches should be shallow and include the given number of commits from the branch tip
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGit#depth
   */
  readonly depth?: number;

  /**
   * Fetch specifies a number of refs that should be fetched before checkout
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGit#fetch
   */
  readonly fetch?: string[];

  /**
   * InsecureIgnoreHostKey disables SSH strict host key checking during git clone
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGit#insecureIgnoreHostKey
   */
  readonly insecureIgnoreHostKey?: boolean;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGit#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGitPasswordSecret;

  /**
   * Repo is the git repository
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGit#repo
   */
  readonly repo: string;

  /**
   * Revision is the git commit, tag, branch to checkout
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGit#revision
   */
  readonly revision?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGit#sshPrivateKeySecret
   */
  readonly sshPrivateKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGitSshPrivateKeySecret;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGit#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGitUsernameSecret;

}

/**
 * HDFSArtifact is the location of an HDFS artifact
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfs
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfs {
  /**
   * Addresses is accessible addresses of HDFS name nodes
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfs#addresses
   */
  readonly addresses: string[];

  /**
   * Force copies a file forcibly even if it exists (default: false)
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfs#force
   */
  readonly force?: boolean;

  /**
   * HDFSUser is the user to access HDFS file system. It is ignored if either ccache or keytab is used.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfs#hdfsUser
   */
  readonly hdfsUser?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfs#krbCCacheSecret
   */
  readonly krbCCacheSecret?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfsKrbCCacheSecret;

  /**
   * Selects a key from a ConfigMap.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfs#krbConfigConfigMap
   */
  readonly krbConfigConfigMap?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfsKrbConfigConfigMap;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfs#krbKeytabSecret
   */
  readonly krbKeytabSecret?: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfsKrbKeytabSecret;

  /**
   * KrbRealm is the Kerberos realm used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfs#krbRealm
   */
  readonly krbRealm?: string;

  /**
   * KrbServicePrincipalName is the principal name of Kerberos service It must be set if either ccache or keytab is used.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfs#krbServicePrincipalName
   */
  readonly krbServicePrincipalName?: string;

  /**
   * KrbUsername is the Kerberos username used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfs#krbUsername
   */
  readonly krbUsername?: string;

  /**
   * Path is a file path in HDFS
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfs#path
   */
  readonly path: string;

}

/**
 * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttp
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttp {
  /**
   * URL of the artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHttp#url
   */
  readonly url: string;

}

/**
 * OSSArtifact is the location of an Alibaba Cloud OSS artifact
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOss
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOss {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOss#accessKeySecret
   */
  readonly accessKeySecret: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOssAccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOss#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOss#endpoint
   */
  readonly endpoint: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOss#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOss#secretKeySecret
   */
  readonly secretKeySecret: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOssSecretKeySecret;

}

/**
 * RawArtifact allows raw string content to be placed as an artifact in a container
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsRaw
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsRaw {
  /**
   * Data is the string contents of the artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsRaw#data
   */
  readonly data: string;

}

/**
 * S3Artifact is the location of an S3 artifact
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3 {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3#accessKeySecret
   */
  readonly accessKeySecret: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3AccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3#endpoint
   */
  readonly endpoint: string;

  /**
   * Insecure will connect to the service with TLS
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3#insecure
   */
  readonly insecure?: boolean;

  /**
   * Key is the key in the bucket where the artifact resides
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3#key
   */
  readonly key: string;

  /**
   * Region contains the optional bucket region
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3#region
   */
  readonly region?: string;

  /**
   * RoleARN is the Amazon Resource Name (ARN) of the role to assume.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3#roleARN
   */
  readonly roleARN?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3#secretKeySecret
   */
  readonly secretKeySecret: CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3SecretKeySecret;

  /**
   * UseSDKCreds tells the driver to figure out credentials based on sdk defaults.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3#useSDKCreds
   */
  readonly useSDKCreds?: boolean;

}

/**
 * ValueFrom describes a location in which to obtain the value to a parameter
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsParametersValueFrom
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsParametersValueFrom {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsParametersValueFrom#default
   */
  readonly default?: string;

  /**
   * JQFilter expression against the resource object in resource templates
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsParametersValueFrom#jqFilter
   */
  readonly jqFilter?: string;

  /**
   * JSONPath of a resource to retrieve an output parameter value from in resource templates
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsParametersValueFrom#jsonPath
   */
  readonly jsonPath?: string;

  /**
   * Parameter reference to a step or dag task in which to retrieve an output parameter value from (e.g. '{{steps.mystep.outputs.myparam}}')
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsParametersValueFrom#parameter
   */
  readonly parameter?: string;

  /**
   * Path in the container to retrieve an output parameter value from in container templates
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsParametersValueFrom#path
   */
  readonly path?: string;

}

/**
 * Counter is a Counter prometheus metric
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusCounter
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusCounter {
  /**
   * Value is the value of the metric
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusCounter#value
   */
  readonly value: string;

}

/**
 * Gauge is a Gauge prometheus metric
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusGauge
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusGauge {
  /**
   * Realtime emits this metric in real time if applicable
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusGauge#realtime
   */
  readonly realtime: boolean;

  /**
   * Value is the value of the metric
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusGauge#value
   */
  readonly value: string;

}

/**
 * Histogram is a Histogram prometheus metric
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusHistogram
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusHistogram {
  /**
   * Buckets is a list of bucket divisors for the histogram
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusHistogram#buckets
   */
  readonly buckets: number[];

  /**
   * Value is the value of the metric
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusHistogram#value
   */
  readonly value: string;

}

/**
 * MetricLabel is a single label for a prometheus metric
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusLabels
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusLabels {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusLabels#key
   */
  readonly key: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesMetricsPrometheusLabels#value
   */
  readonly value: string;

}

/**
 * ArchiveStrategy describes how to archive files/directory when saving artifacts
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArchive
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArchive {
  /**
   * NoneStrategy indicates to skip tar process and upload the files or directory tree as independent files. Note that if the artifact is a directory, the artifact driver must support the ability to save/load the directory appropriately.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArchive#none
   */
  readonly none?: any;

  /**
   * TarStrategy will tar and gzip the file or directory when saving
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArchive#tar
   */
  readonly tar?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArchiveTar;

}

/**
 * ArtifactoryArtifact is the location of an artifactory artifact
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactory
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactory {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactory#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactoryPasswordSecret;

  /**
   * URL of the artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactory#url
   */
  readonly url: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactory#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactoryUsernameSecret;

}

/**
 * GCSArtifact is the location of a GCS artifact
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGcs
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGcs {
  /**
   * Bucket is the name of the bucket
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGcs#bucket
   */
  readonly bucket: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGcs#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGcs#serviceAccountKeySecret
   */
  readonly serviceAccountKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGcsServiceAccountKeySecret;

}

/**
 * GitArtifact is the location of an git artifact
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGit
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGit {
  /**
   * Depth specifies clones/fetches should be shallow and include the given number of commits from the branch tip
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGit#depth
   */
  readonly depth?: number;

  /**
   * Fetch specifies a number of refs that should be fetched before checkout
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGit#fetch
   */
  readonly fetch?: string[];

  /**
   * InsecureIgnoreHostKey disables SSH strict host key checking during git clone
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGit#insecureIgnoreHostKey
   */
  readonly insecureIgnoreHostKey?: boolean;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGit#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGitPasswordSecret;

  /**
   * Repo is the git repository
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGit#repo
   */
  readonly repo: string;

  /**
   * Revision is the git commit, tag, branch to checkout
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGit#revision
   */
  readonly revision?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGit#sshPrivateKeySecret
   */
  readonly sshPrivateKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGitSshPrivateKeySecret;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGit#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGitUsernameSecret;

}

/**
 * HDFSArtifact is the location of an HDFS artifact
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfs
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfs {
  /**
   * Addresses is accessible addresses of HDFS name nodes
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfs#addresses
   */
  readonly addresses: string[];

  /**
   * Force copies a file forcibly even if it exists (default: false)
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfs#force
   */
  readonly force?: boolean;

  /**
   * HDFSUser is the user to access HDFS file system. It is ignored if either ccache or keytab is used.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfs#hdfsUser
   */
  readonly hdfsUser?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfs#krbCCacheSecret
   */
  readonly krbCCacheSecret?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfsKrbCCacheSecret;

  /**
   * Selects a key from a ConfigMap.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfs#krbConfigConfigMap
   */
  readonly krbConfigConfigMap?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfsKrbConfigConfigMap;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfs#krbKeytabSecret
   */
  readonly krbKeytabSecret?: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfsKrbKeytabSecret;

  /**
   * KrbRealm is the Kerberos realm used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfs#krbRealm
   */
  readonly krbRealm?: string;

  /**
   * KrbServicePrincipalName is the principal name of Kerberos service It must be set if either ccache or keytab is used.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfs#krbServicePrincipalName
   */
  readonly krbServicePrincipalName?: string;

  /**
   * KrbUsername is the Kerberos username used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfs#krbUsername
   */
  readonly krbUsername?: string;

  /**
   * Path is a file path in HDFS
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfs#path
   */
  readonly path: string;

}

/**
 * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttp
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttp {
  /**
   * URL of the artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHttp#url
   */
  readonly url: string;

}

/**
 * OSSArtifact is the location of an Alibaba Cloud OSS artifact
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOss
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOss {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOss#accessKeySecret
   */
  readonly accessKeySecret: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOssAccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOss#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOss#endpoint
   */
  readonly endpoint: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOss#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOss#secretKeySecret
   */
  readonly secretKeySecret: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOssSecretKeySecret;

}

/**
 * RawArtifact allows raw string content to be placed as an artifact in a container
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsRaw
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsRaw {
  /**
   * Data is the string contents of the artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsRaw#data
   */
  readonly data: string;

}

/**
 * S3Artifact is the location of an S3 artifact
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3 {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3#accessKeySecret
   */
  readonly accessKeySecret: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3AccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3#endpoint
   */
  readonly endpoint: string;

  /**
   * Insecure will connect to the service with TLS
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3#insecure
   */
  readonly insecure?: boolean;

  /**
   * Key is the key in the bucket where the artifact resides
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3#key
   */
  readonly key: string;

  /**
   * Region contains the optional bucket region
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3#region
   */
  readonly region?: string;

  /**
   * RoleARN is the Amazon Resource Name (ARN) of the role to assume.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3#roleARN
   */
  readonly roleARN?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3#secretKeySecret
   */
  readonly secretKeySecret: CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3SecretKeySecret;

  /**
   * UseSDKCreds tells the driver to figure out credentials based on sdk defaults.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3#useSDKCreds
   */
  readonly useSDKCreds?: boolean;

}

/**
 * ValueFrom describes a location in which to obtain the value to a parameter
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsParametersValueFrom
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsParametersValueFrom {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsParametersValueFrom#default
   */
  readonly default?: string;

  /**
   * JQFilter expression against the resource object in resource templates
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsParametersValueFrom#jqFilter
   */
  readonly jqFilter?: string;

  /**
   * JSONPath of a resource to retrieve an output parameter value from in resource templates
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsParametersValueFrom#jsonPath
   */
  readonly jsonPath?: string;

  /**
   * Parameter reference to a step or dag task in which to retrieve an output parameter value from (e.g. '{{steps.mystep.outputs.myparam}}')
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsParametersValueFrom#parameter
   */
  readonly parameter?: string;

  /**
   * Path in the container to retrieve an output parameter value from in container templates
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsParametersValueFrom#path
   */
  readonly path?: string;

}

/**
 * EnvVarSource represents a source for the value of an EnvVar.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFrom
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFrom {
  /**
   * Selects a key from a ConfigMap.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromConfigMapKeyRef;

  /**
   * ObjectFieldSelector selects an APIVersioned field of an object.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFrom#fieldRef
   */
  readonly fieldRef?: CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromFieldRef;

  /**
   * ResourceFieldSelector represents container resources (cpu, memory) and their output format
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromResourceFieldRef;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromSecretKeyRef;

}

/**
 * ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.

The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvFromConfigMapRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptEnvFromConfigMapRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvFromConfigMapRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvFromConfigMapRef#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretEnvSource selects a Secret to populate the environment variables with.

The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvFromSecretRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptEnvFromSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvFromSecretRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvFromSecretRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Handler defines a specific action that should be taken
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStart
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStart {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStart#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartExec;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStart#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartHttpGet;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStart#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartTcpSocket;

}

/**
 * Handler defines a specific action that should be taken
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStop
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStop {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStop#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopExec;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStop#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopHttpGet;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStop#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopTcpSocket;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeTcpSocket#port
   */
  readonly port: string;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeTcpSocket#port
   */
  readonly port: string;

}

/**
 * Adds and removes POSIX capabilities from running containers.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextCapabilities
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextCapabilities {
  /**
   * Added capabilities
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextCapabilities#add
   */
  readonly add?: string[];

  /**
   * Removed capabilities
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextCapabilities#drop
   */
  readonly drop?: string[];

}

/**
 * SELinuxOptions are the labels to be applied to the container
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextSeLinuxOptions
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextSeLinuxOptions {
  /**
   * Level is SELinux level label that applies to the container.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * Role is a SELinux role label that applies to the container.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * Type is a SELinux type label that applies to the container.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * User is a SELinux user label that applies to the container.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * WindowsSecurityContextOptions contain Windows-specific options and credentials.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextWindowsOptions
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextWindowsOptions {
  /**
   * GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * GMSACredentialSpecName is the name of the GMSA credential spec to use. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeTcpSocket#port
   */
  readonly port: string;

}

/**
 * EnvVarSource represents a source for the value of an EnvVar.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFrom
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFrom {
  /**
   * Selects a key from a ConfigMap.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromConfigMapKeyRef;

  /**
   * ObjectFieldSelector selects an APIVersioned field of an object.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFrom#fieldRef
   */
  readonly fieldRef?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromFieldRef;

  /**
   * ResourceFieldSelector represents container resources (cpu, memory) and their output format
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromResourceFieldRef;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromSecretKeyRef;

}

/**
 * ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.

The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvFromConfigMapRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvFromConfigMapRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvFromConfigMapRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvFromConfigMapRef#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretEnvSource selects a Secret to populate the environment variables with.

The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvFromSecretRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvFromSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvFromSecretRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvFromSecretRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Handler defines a specific action that should be taken
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStart
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStart {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStart#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartExec;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStart#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGet;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStart#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartTcpSocket;

}

/**
 * Handler defines a specific action that should be taken
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStop
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStop {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStop#exec
   */
  readonly exec?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopExec;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStop#httpGet
   */
  readonly httpGet?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGet;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStop#tcpSocket
   */
  readonly tcpSocket?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopTcpSocket;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeTcpSocket#port
   */
  readonly port: string;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeTcpSocket#port
   */
  readonly port: string;

}

/**
 * Adds and removes POSIX capabilities from running containers.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextCapabilities
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextCapabilities {
  /**
   * Added capabilities
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextCapabilities#add
   */
  readonly add?: string[];

  /**
   * Removed capabilities
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextCapabilities#drop
   */
  readonly drop?: string[];

}

/**
 * SELinuxOptions are the labels to be applied to the container
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextSeLinuxOptions
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextSeLinuxOptions {
  /**
   * Level is SELinux level label that applies to the container.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * Role is a SELinux role label that applies to the container.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * Type is a SELinux type label that applies to the container.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * User is a SELinux user label that applies to the container.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * WindowsSecurityContextOptions contain Windows-specific options and credentials.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextWindowsOptions
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextWindowsOptions {
  /**
   * GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * GMSACredentialSpecName is the name of the GMSA credential spec to use. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeTcpSocket#port
   */
  readonly port: string;

}

/**
 * Artifact indicates an artifact to place at a specified path
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifacts
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifacts {
  /**
   * ArchiveStrategy describes how to archive files/directory when saving artifacts
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifacts#archive
   */
  readonly archive?: CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsArchive;

  /**
   * ArchiveLogs indicates if the container logs should be archived
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifacts#archiveLogs
   */
  readonly archiveLogs?: boolean;

  /**
   * ArtifactoryArtifact is the location of an artifactory artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifacts#artifactory
   */
  readonly artifactory?: CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsArtifactory;

  /**
   * From allows an artifact to reference an artifact from a previous step
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifacts#from
   */
  readonly from?: string;

  /**
   * GCSArtifact is the location of a GCS artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifacts#gcs
   */
  readonly gcs?: CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsGcs;

  /**
   * GitArtifact is the location of an git artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifacts#git
   */
  readonly git?: CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsGit;

  /**
   * GlobalName exports an output artifact to the global scope, making it available as '{{io.argoproj.workflow.v1alpha1.outputs.artifacts.XXXX}} and in workflow.status.outputs.artifacts
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifacts#globalName
   */
  readonly globalName?: string;

  /**
   * HDFSArtifact is the location of an HDFS artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifacts#hdfs
   */
  readonly hdfs?: CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsHdfs;

  /**
   * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifacts#http
   */
  readonly http?: CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsHttp;

  /**
   * mode bits to use on this file, must be a value between 0 and 0777 set when loading input artifacts.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifacts#mode
   */
  readonly mode?: number;

  /**
   * name of the artifact. must be unique within a template's inputs/outputs.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifacts#name
   */
  readonly name: string;

  /**
   * Make Artifacts optional, if Artifacts doesn't generate or exist
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifacts#optional
   */
  readonly optional?: boolean;

  /**
   * OSSArtifact is the location of an Alibaba Cloud OSS artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifacts#oss
   */
  readonly oss?: CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsOss;

  /**
   * Path is the container path to the artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifacts#path
   */
  readonly path?: string;

  /**
   * RawArtifact allows raw string content to be placed as an artifact in a container
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifacts#raw
   */
  readonly raw?: CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsRaw;

  /**
   * S3Artifact is the location of an S3 artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifacts#s3
   */
  readonly s3?: CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsS3;

}

/**
 * Parameter indicate a passed string parameter to a service template with an optional default value
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsParameters
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsParameters {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsParameters#default
   */
  readonly default?: string;

  /**
   * GlobalName exports an output parameter to the global scope, making it available as '{{io.argoproj.workflow.v1alpha1.outputs.parameters.XXXX}} and in workflow.status.outputs.parameters
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsParameters#globalName
   */
  readonly globalName?: string;

  /**
   * Name is the parameter name
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsParameters#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsParameters#value
   */
  readonly value?: string;

  /**
   * ValueFrom describes a location in which to obtain the value to a parameter
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsParameters#valueFrom
   */
  readonly valueFrom?: CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsParametersValueFrom;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesCephfsSecretRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesCephfsSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesCephfsSecretRef#name
   */
  readonly name?: string;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesCinderSecretRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesCinderSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesCinderSecretRef#name
   */
  readonly name?: string;

}

/**
 * Maps a string key to a path within a volume.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesConfigMapItems
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesConfigMapItems {
  /**
   * The key to project.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesConfigMapItems#key
   */
  readonly key: string;

  /**
   * Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesConfigMapItems#mode
   */
  readonly mode?: number;

  /**
   * The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesConfigMapItems#path
   */
  readonly path: string;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesCsiNodePublishSecretRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesCsiNodePublishSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesCsiNodePublishSecretRef#name
   */
  readonly name?: string;

}

/**
 * DownwardAPIVolumeFile represents information to create the file containing the pod field
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApiItems
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApiItems {
  /**
   * ObjectFieldSelector selects an APIVersioned field of an object.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApiItems#fieldRef
   */
  readonly fieldRef?: CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApiItemsFieldRef;

  /**
   * Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApiItems#mode
   */
  readonly mode?: number;

  /**
   * Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApiItems#path
   */
  readonly path: string;

  /**
   * ResourceFieldSelector represents container resources (cpu, memory) and their output format
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApiItems#resourceFieldRef
   */
  readonly resourceFieldRef?: CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApiItemsResourceFieldRef;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesFlexVolumeSecretRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesFlexVolumeSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesFlexVolumeSecretRef#name
   */
  readonly name?: string;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesIscsiSecretRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesIscsiSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesIscsiSecretRef#name
   */
  readonly name?: string;

}

/**
 * Projection that may be projected along with other supported volume types
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSources
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSources {
  /**
   * Adapts a ConfigMap into a projected volume.

The contents of the target ConfigMap's Data field will be presented in a projected volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. Note that this is identical to a configmap volume source without the default mode.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSources#configMap
   */
  readonly configMap?: CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesConfigMap;

  /**
   * Represents downward API info for projecting into a projected volume. Note that this is identical to a downwardAPI volume source without the default mode.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSources#downwardAPI
   */
  readonly downwardAPI?: CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApi;

  /**
   * Adapts a secret into a projected volume.

The contents of the target Secret's Data field will be presented in a projected volume as files using the keys in the Data field as the file names. Note that this is identical to a secret volume source without the default mode.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSources#secret
   */
  readonly secret?: CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesSecret;

  /**
   * ServiceAccountTokenProjection represents a projected service account token volume. This projection can be used to insert a service account token into the pods runtime filesystem for use against APIs (Kubernetes API Server or otherwise).
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSources#serviceAccountToken
   */
  readonly serviceAccountToken?: CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesServiceAccountToken;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesRbdSecretRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesRbdSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesRbdSecretRef#name
   */
  readonly name?: string;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesScaleIoSecretRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesScaleIoSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesScaleIoSecretRef#name
   */
  readonly name?: string;

}

/**
 * Maps a string key to a path within a volume.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesSecretItems
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesSecretItems {
  /**
   * The key to project.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesSecretItems#key
   */
  readonly key: string;

  /**
   * Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesSecretItems#mode
   */
  readonly mode?: number;

  /**
   * The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesSecretItems#path
   */
  readonly path: string;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesStorageosSecretRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesStorageosSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesStorageosSecretRef#name
   */
  readonly name?: string;

}

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecSelectorMatchExpressions
 */
export interface CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumeClaimTemplatesSpecSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * ObjectFieldSelector selects an APIVersioned field of an object.
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumesDownwardApiItemsFieldRef
 */
export interface CronWorkflowSpecWorkflowSpecVolumesDownwardApiItemsFieldRef {
  /**
   * Version of the schema the FieldPath is written in terms of, defaults to "v1".
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesDownwardApiItemsFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * Path of the field to select in the specified API version.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesDownwardApiItemsFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * ResourceFieldSelector represents container resources (cpu, memory) and their output format
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumesDownwardApiItemsResourceFieldRef
 */
export interface CronWorkflowSpecWorkflowSpecVolumesDownwardApiItemsResourceFieldRef {
  /**
   * Container name: required for volumes, optional for env vars
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesDownwardApiItemsResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and Int64() accessors.

The serialization format is:

<quantity>        ::= <signedNumber><suffix>
  (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
<decimalSI>       ::= m | "" | k | M | G | T | P | E
  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
<decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  a. No precision is lost
  b. No fractional digits will be emitted
  c. The exponent (or suffix) is as large as possible.
The sign will be omitted unless the number is negative.

Examples:
  1.5 will be serialized as "1500m"
  1.5Gi will be serialized as "1536Mi"

Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.

Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesDownwardApiItemsResourceFieldRef#divisor
   */
  readonly divisor?: string;

  /**
   * Required: resource to select
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesDownwardApiItemsResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Adapts a ConfigMap into a projected volume.

The contents of the target ConfigMap's Data field will be presented in a projected volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. Note that this is identical to a configmap volume source without the default mode.
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesConfigMap
 */
export interface CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesConfigMap {
  /**
   * If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesConfigMap#items
   */
  readonly items?: CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesConfigMapItems[];

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesConfigMap#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its keys must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Represents downward API info for projecting into a projected volume. Note that this is identical to a downwardAPI volume source without the default mode.
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApi
 */
export interface CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApi {
  /**
   * Items is a list of DownwardAPIVolume file
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApi#items
   */
  readonly items?: CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApiItems[];

}

/**
 * Adapts a secret into a projected volume.

The contents of the target Secret's Data field will be presented in a projected volume as files using the keys in the Data field as the file names. Note that this is identical to a secret volume source without the default mode.
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesSecret
 */
export interface CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesSecret {
  /**
   * If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesSecret#items
   */
  readonly items?: CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesSecretItems[];

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * ServiceAccountTokenProjection represents a projected service account token volume. This projection can be used to insert a service account token into the pods runtime filesystem for use against APIs (Kubernetes API Server or otherwise).
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesServiceAccountToken
 */
export interface CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesServiceAccountToken {
  /**
   * Audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesServiceAccountToken#audience
   */
  readonly audience?: string;

  /**
   * ExpirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.
   *
   * @default 1 hour and must be at least 10 minutes.
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesServiceAccountToken#expirationSeconds
   */
  readonly expirationSeconds?: number;

  /**
   * Path is the path relative to the mount point of the file to project the token into.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesServiceAccountToken#path
   */
  readonly path: string;

}

/**
 * A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions
 */
export interface CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
  /**
   * The label key that the selector applies to.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#key
   */
  readonly key: string;

  /**
   * Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields
 */
export interface CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
  /**
   * The label key that the selector applies to.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#key
   */
  readonly key: string;

  /**
   * Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#operator
   */
  readonly operator: string;

  /**
   * An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#values
   */
  readonly values?: string[];

}

/**
 * A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions
 */
export interface CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
  /**
   * The label key that the selector applies to.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#key
   */
  readonly key: string;

  /**
   * Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields
 */
export interface CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
  /**
   * The label key that the selector applies to.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#key
   */
  readonly key: string;

  /**
   * Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#operator
   */
  readonly operator: string;

  /**
   * An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#values
   */
  readonly values?: string[];

}

/**
 * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
 *
 * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector
 */
export interface CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchExpressions
   */
  readonly matchExpressions?: CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions
 */
export interface CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
 *
 * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector
 */
export interface CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchExpressions
   */
  readonly matchExpressions?: CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions
 */
export interface CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
  /**
   * A list of node selector requirements by node's labels.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference#matchExpressions
   */
  readonly matchExpressions?: CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions[];

  /**
   * A list of node selector requirements by node's fields.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference#matchFields
   */
  readonly matchFields?: CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields[];

}

/**
 * A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
  /**
   * A list of node selector requirements by node's labels.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms#matchExpressions
   */
  readonly matchExpressions?: CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions[];

  /**
   * A list of node selector requirements by node's fields.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms#matchFields
   */
  readonly matchFields?: CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields[];

}

/**
 * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
  /**
   * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#labelSelector
   */
  readonly labelSelector?: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;

  /**
   * namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaces
   */
  readonly namespaces?: string[];

  /**
   * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchExpressions
   */
  readonly matchExpressions?: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
  /**
   * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#labelSelector
   */
  readonly labelSelector?: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;

  /**
   * namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaces
   */
  readonly namespaces?: string[];

  /**
   * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchExpressions
   */
  readonly matchExpressions?: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * TarStrategy will tar and gzip the file or directory when saving
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsArchiveTar
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsArchiveTar {
  /**
   * CompressionLevel specifies the gzip compression level to use for the artifact. Defaults to gzip.DefaultCompression.
   *
   * @default gzip.DefaultCompression.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsArchiveTar#compressionLevel
   */
  readonly compressionLevel?: number;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsArtifactoryPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsArtifactoryPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsArtifactoryPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsArtifactoryPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsArtifactoryPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsArtifactoryUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsArtifactoryUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsArtifactoryUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsArtifactoryUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsArtifactoryUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsGcsServiceAccountKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsGcsServiceAccountKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsGcsServiceAccountKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsGcsServiceAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsGcsServiceAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsGitPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsGitPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsGitPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsGitPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsGitPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsGitSshPrivateKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsGitSshPrivateKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsGitSshPrivateKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsGitSshPrivateKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsGitSshPrivateKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsGitUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsGitUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsGitUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsGitUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsGitUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsHdfsKrbCCacheSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsHdfsKrbCCacheSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsHdfsKrbCCacheSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsHdfsKrbCCacheSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsHdfsKrbCCacheSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Selects a key from a ConfigMap.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsHdfsKrbConfigConfigMap
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsHdfsKrbConfigConfigMap {
  /**
   * The key to select.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsHdfsKrbConfigConfigMap#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsHdfsKrbConfigConfigMap#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsHdfsKrbConfigConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsHdfsKrbKeytabSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsHdfsKrbKeytabSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsHdfsKrbKeytabSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsHdfsKrbKeytabSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsHdfsKrbKeytabSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsOssAccessKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsOssAccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsOssAccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsOssAccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsOssAccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsOssSecretKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsOssSecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsOssSecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsOssSecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsOssSecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsS3AccessKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsS3AccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsS3AccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsS3AccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsS3AccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsS3SecretKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsS3SecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsS3SecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsS3SecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesArgumentsArtifactsS3SecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Selects a key from a ConfigMap.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromConfigMapKeyRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromConfigMapKeyRef {
  /**
   * The key to select.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * ObjectFieldSelector selects an APIVersioned field of an object.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromFieldRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromFieldRef {
  /**
   * Version of the schema the FieldPath is written in terms of, defaults to "v1".
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * Path of the field to select in the specified API version.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * ResourceFieldSelector represents container resources (cpu, memory) and their output format
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromResourceFieldRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromResourceFieldRef {
  /**
   * Container name: required for volumes, optional for env vars
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and Int64() accessors.

The serialization format is:

<quantity>        ::= <signedNumber><suffix>
  (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
<decimalSI>       ::= m | "" | k | M | G | T | P | E
  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
<decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  a. No precision is lost
  b. No fractional digits will be emitted
  c. The exponent (or suffix) is as large as possible.
The sign will be omitted unless the number is negative.

Examples:
  1.5 will be serialized as "1500m"
  1.5Gi will be serialized as "1536Mi"

Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.

Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromResourceFieldRef#divisor
   */
  readonly divisor?: string;

  /**
   * Required: resource to select
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromSecretKeyRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromSecretKeyRef {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerEnvValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartTcpSocket#port
   */
  readonly port: string;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopTcpSocket#port
   */
  readonly port: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLivenessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerReadinessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Artifact indicates an artifact to place at a specified path
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifacts
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifacts {
  /**
   * ArchiveStrategy describes how to archive files/directory when saving artifacts
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifacts#archive
   */
  readonly archive?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArchive;

  /**
   * ArchiveLogs indicates if the container logs should be archived
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifacts#archiveLogs
   */
  readonly archiveLogs?: boolean;

  /**
   * ArtifactoryArtifact is the location of an artifactory artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifacts#artifactory
   */
  readonly artifactory?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactory;

  /**
   * From allows an artifact to reference an artifact from a previous step
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifacts#from
   */
  readonly from?: string;

  /**
   * GCSArtifact is the location of a GCS artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifacts#gcs
   */
  readonly gcs?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGcs;

  /**
   * GitArtifact is the location of an git artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifacts#git
   */
  readonly git?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGit;

  /**
   * GlobalName exports an output artifact to the global scope, making it available as '{{io.argoproj.workflow.v1alpha1.outputs.artifacts.XXXX}} and in workflow.status.outputs.artifacts
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifacts#globalName
   */
  readonly globalName?: string;

  /**
   * HDFSArtifact is the location of an HDFS artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifacts#hdfs
   */
  readonly hdfs?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfs;

  /**
   * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifacts#http
   */
  readonly http?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttp;

  /**
   * mode bits to use on this file, must be a value between 0 and 0777 set when loading input artifacts.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifacts#mode
   */
  readonly mode?: number;

  /**
   * name of the artifact. must be unique within a template's inputs/outputs.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifacts#name
   */
  readonly name: string;

  /**
   * Make Artifacts optional, if Artifacts doesn't generate or exist
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifacts#optional
   */
  readonly optional?: boolean;

  /**
   * OSSArtifact is the location of an Alibaba Cloud OSS artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifacts#oss
   */
  readonly oss?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOss;

  /**
   * Path is the container path to the artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifacts#path
   */
  readonly path?: string;

  /**
   * RawArtifact allows raw string content to be placed as an artifact in a container
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifacts#raw
   */
  readonly raw?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsRaw;

  /**
   * S3Artifact is the location of an S3 artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifacts#s3
   */
  readonly s3?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3;

}

/**
 * Parameter indicate a passed string parameter to a service template with an optional default value
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParameters
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParameters {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParameters#default
   */
  readonly default?: string;

  /**
   * GlobalName exports an output parameter to the global scope, making it available as '{{io.argoproj.workflow.v1alpha1.outputs.parameters.XXXX}} and in workflow.status.outputs.parameters
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParameters#globalName
   */
  readonly globalName?: string;

  /**
   * Name is the parameter name
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParameters#name
   */
  readonly name: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParameters#value
   */
  readonly value?: string;

  /**
   * ValueFrom describes a location in which to obtain the value to a parameter
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParameters#valueFrom
   */
  readonly valueFrom?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParametersValueFrom;

}

/**
 * Selects a key from a ConfigMap.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromConfigMapKeyRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromConfigMapKeyRef {
  /**
   * The key to select.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * ObjectFieldSelector selects an APIVersioned field of an object.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromFieldRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromFieldRef {
  /**
   * Version of the schema the FieldPath is written in terms of, defaults to "v1".
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * Path of the field to select in the specified API version.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * ResourceFieldSelector represents container resources (cpu, memory) and their output format
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromResourceFieldRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromResourceFieldRef {
  /**
   * Container name: required for volumes, optional for env vars
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and Int64() accessors.

The serialization format is:

<quantity>        ::= <signedNumber><suffix>
  (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
<decimalSI>       ::= m | "" | k | M | G | T | P | E
  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
<decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  a. No precision is lost
  b. No fractional digits will be emitted
  c. The exponent (or suffix) is as large as possible.
The sign will be omitted unless the number is negative.

Examples:
  1.5 will be serialized as "1500m"
  1.5Gi will be serialized as "1536Mi"

Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.

Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromResourceFieldRef#divisor
   */
  readonly divisor?: string;

  /**
   * Required: resource to select
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromSecretKeyRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromSecretKeyRef {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersEnvValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartTcpSocket#port
   */
  readonly port: string;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopTcpSocket#port
   */
  readonly port: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLivenessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersReadinessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersStartupProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * TarStrategy will tar and gzip the file or directory when saving
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArchiveTar
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArchiveTar {
  /**
   * CompressionLevel specifies the gzip compression level to use for the artifact. Defaults to gzip.DefaultCompression.
   *
   * @default gzip.DefaultCompression.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArchiveTar#compressionLevel
   */
  readonly compressionLevel?: number;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactoryPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactoryPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactoryPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactoryPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactoryPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactoryUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactoryUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactoryUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactoryUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsArtifactoryUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGcsServiceAccountKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGcsServiceAccountKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGcsServiceAccountKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGcsServiceAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGcsServiceAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGitPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGitPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGitPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGitPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGitPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGitSshPrivateKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGitSshPrivateKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGitSshPrivateKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGitSshPrivateKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGitSshPrivateKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGitUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGitUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGitUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGitUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsGitUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfsKrbCCacheSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfsKrbCCacheSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfsKrbCCacheSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfsKrbCCacheSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfsKrbCCacheSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Selects a key from a ConfigMap.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfsKrbConfigConfigMap
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfsKrbConfigConfigMap {
  /**
   * The key to select.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfsKrbConfigConfigMap#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfsKrbConfigConfigMap#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfsKrbConfigConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfsKrbKeytabSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfsKrbKeytabSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfsKrbKeytabSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfsKrbKeytabSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsHdfsKrbKeytabSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOssAccessKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOssAccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOssAccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOssAccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOssAccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOssSecretKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOssSecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOssSecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOssSecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsOssSecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3AccessKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3AccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3AccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3AccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3AccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3SecretKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3SecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3SecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3SecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInputsArtifactsS3SecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * TarStrategy will tar and gzip the file or directory when saving
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArchiveTar
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArchiveTar {
  /**
   * CompressionLevel specifies the gzip compression level to use for the artifact. Defaults to gzip.DefaultCompression.
   *
   * @default gzip.DefaultCompression.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArchiveTar#compressionLevel
   */
  readonly compressionLevel?: number;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactoryPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactoryPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactoryPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactoryPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactoryPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactoryUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactoryUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactoryUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactoryUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsArtifactoryUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGcsServiceAccountKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGcsServiceAccountKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGcsServiceAccountKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGcsServiceAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGcsServiceAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGitPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGitPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGitPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGitPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGitPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGitSshPrivateKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGitSshPrivateKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGitSshPrivateKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGitSshPrivateKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGitSshPrivateKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGitUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGitUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGitUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGitUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsGitUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfsKrbCCacheSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfsKrbCCacheSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfsKrbCCacheSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfsKrbCCacheSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfsKrbCCacheSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Selects a key from a ConfigMap.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfsKrbConfigConfigMap
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfsKrbConfigConfigMap {
  /**
   * The key to select.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfsKrbConfigConfigMap#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfsKrbConfigConfigMap#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfsKrbConfigConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfsKrbKeytabSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfsKrbKeytabSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfsKrbKeytabSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfsKrbKeytabSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsHdfsKrbKeytabSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOssAccessKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOssAccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOssAccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOssAccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOssAccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOssSecretKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOssSecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOssSecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOssSecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsOssSecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3AccessKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3AccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3AccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3AccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3AccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3SecretKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3SecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3SecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3SecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesOutputsArtifactsS3SecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Selects a key from a ConfigMap.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromConfigMapKeyRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromConfigMapKeyRef {
  /**
   * The key to select.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * ObjectFieldSelector selects an APIVersioned field of an object.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromFieldRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromFieldRef {
  /**
   * Version of the schema the FieldPath is written in terms of, defaults to "v1".
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * Path of the field to select in the specified API version.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * ResourceFieldSelector represents container resources (cpu, memory) and their output format
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromResourceFieldRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromResourceFieldRef {
  /**
   * Container name: required for volumes, optional for env vars
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and Int64() accessors.

The serialization format is:

<quantity>        ::= <signedNumber><suffix>
  (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
<decimalSI>       ::= m | "" | k | M | G | T | P | E
  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
<decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  a. No precision is lost
  b. No fractional digits will be emitted
  c. The exponent (or suffix) is as large as possible.
The sign will be omitted unless the number is negative.

Examples:
  1.5 will be serialized as "1500m"
  1.5Gi will be serialized as "1536Mi"

Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.

Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromResourceFieldRef#divisor
   */
  readonly divisor?: string;

  /**
   * Required: resource to select
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromSecretKeyRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromSecretKeyRef {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptEnvValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartTcpSocket#port
   */
  readonly port: string;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopTcpSocket#port
   */
  readonly port: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLivenessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptReadinessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptStartupProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Selects a key from a ConfigMap.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromConfigMapKeyRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromConfigMapKeyRef {
  /**
   * The key to select.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * ObjectFieldSelector selects an APIVersioned field of an object.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromFieldRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromFieldRef {
  /**
   * Version of the schema the FieldPath is written in terms of, defaults to "v1".
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * Path of the field to select in the specified API version.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * ResourceFieldSelector represents container resources (cpu, memory) and their output format
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromResourceFieldRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromResourceFieldRef {
  /**
   * Container name: required for volumes, optional for env vars
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and Int64() accessors.

The serialization format is:

<quantity>        ::= <signedNumber><suffix>
  (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
<decimalSI>       ::= m | "" | k | M | G | T | P | E
  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
<decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  a. No precision is lost
  b. No fractional digits will be emitted
  c. The exponent (or suffix) is as large as possible.
The sign will be omitted unless the number is negative.

Examples:
  1.5 will be serialized as "1500m"
  1.5Gi will be serialized as "1536Mi"

Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.

Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromResourceFieldRef#divisor
   */
  readonly divisor?: string;

  /**
   * Required: resource to select
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromSecretKeyRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromSecretKeyRef {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsEnvValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartTcpSocket#port
   */
  readonly port: string;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopExec
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGet
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGet#httpHeaders
   */
  readonly httpHeaders?: CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopTcpSocket
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopTcpSocket#port
   */
  readonly port: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLivenessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsReadinessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsStartupProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * ArchiveStrategy describes how to archive files/directory when saving artifacts
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsArchive
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsArchive {
  /**
   * NoneStrategy indicates to skip tar process and upload the files or directory tree as independent files. Note that if the artifact is a directory, the artifact driver must support the ability to save/load the directory appropriately.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsArchive#none
   */
  readonly none?: any;

  /**
   * TarStrategy will tar and gzip the file or directory when saving
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsArchive#tar
   */
  readonly tar?: CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsArchiveTar;

}

/**
 * ArtifactoryArtifact is the location of an artifactory artifact
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsArtifactory
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsArtifactory {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsArtifactory#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsArtifactoryPasswordSecret;

  /**
   * URL of the artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsArtifactory#url
   */
  readonly url: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsArtifactory#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsArtifactoryUsernameSecret;

}

/**
 * GCSArtifact is the location of a GCS artifact
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsGcs
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsGcs {
  /**
   * Bucket is the name of the bucket
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsGcs#bucket
   */
  readonly bucket: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsGcs#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsGcs#serviceAccountKeySecret
   */
  readonly serviceAccountKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsGcsServiceAccountKeySecret;

}

/**
 * GitArtifact is the location of an git artifact
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsGit
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsGit {
  /**
   * Depth specifies clones/fetches should be shallow and include the given number of commits from the branch tip
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsGit#depth
   */
  readonly depth?: number;

  /**
   * Fetch specifies a number of refs that should be fetched before checkout
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsGit#fetch
   */
  readonly fetch?: string[];

  /**
   * InsecureIgnoreHostKey disables SSH strict host key checking during git clone
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsGit#insecureIgnoreHostKey
   */
  readonly insecureIgnoreHostKey?: boolean;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsGit#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsGitPasswordSecret;

  /**
   * Repo is the git repository
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsGit#repo
   */
  readonly repo: string;

  /**
   * Revision is the git commit, tag, branch to checkout
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsGit#revision
   */
  readonly revision?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsGit#sshPrivateKeySecret
   */
  readonly sshPrivateKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsGitSshPrivateKeySecret;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsGit#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsGitUsernameSecret;

}

/**
 * HDFSArtifact is the location of an HDFS artifact
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsHdfs
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsHdfs {
  /**
   * Addresses is accessible addresses of HDFS name nodes
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsHdfs#addresses
   */
  readonly addresses: string[];

  /**
   * Force copies a file forcibly even if it exists (default: false)
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsHdfs#force
   */
  readonly force?: boolean;

  /**
   * HDFSUser is the user to access HDFS file system. It is ignored if either ccache or keytab is used.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsHdfs#hdfsUser
   */
  readonly hdfsUser?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsHdfs#krbCCacheSecret
   */
  readonly krbCCacheSecret?: CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsHdfsKrbCCacheSecret;

  /**
   * Selects a key from a ConfigMap.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsHdfs#krbConfigConfigMap
   */
  readonly krbConfigConfigMap?: CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsHdfsKrbConfigConfigMap;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsHdfs#krbKeytabSecret
   */
  readonly krbKeytabSecret?: CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsHdfsKrbKeytabSecret;

  /**
   * KrbRealm is the Kerberos realm used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsHdfs#krbRealm
   */
  readonly krbRealm?: string;

  /**
   * KrbServicePrincipalName is the principal name of Kerberos service It must be set if either ccache or keytab is used.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsHdfs#krbServicePrincipalName
   */
  readonly krbServicePrincipalName?: string;

  /**
   * KrbUsername is the Kerberos username used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsHdfs#krbUsername
   */
  readonly krbUsername?: string;

  /**
   * Path is a file path in HDFS
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsHdfs#path
   */
  readonly path: string;

}

/**
 * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsHttp
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsHttp {
  /**
   * URL of the artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsHttp#url
   */
  readonly url: string;

}

/**
 * OSSArtifact is the location of an Alibaba Cloud OSS artifact
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsOss
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsOss {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsOss#accessKeySecret
   */
  readonly accessKeySecret: CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsOssAccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsOss#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsOss#endpoint
   */
  readonly endpoint: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsOss#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsOss#secretKeySecret
   */
  readonly secretKeySecret: CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsOssSecretKeySecret;

}

/**
 * RawArtifact allows raw string content to be placed as an artifact in a container
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsRaw
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsRaw {
  /**
   * Data is the string contents of the artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsRaw#data
   */
  readonly data: string;

}

/**
 * S3Artifact is the location of an S3 artifact
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsS3
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsS3 {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsS3#accessKeySecret
   */
  readonly accessKeySecret: CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsS3AccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsS3#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsS3#endpoint
   */
  readonly endpoint: string;

  /**
   * Insecure will connect to the service with TLS
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsS3#insecure
   */
  readonly insecure?: boolean;

  /**
   * Key is the key in the bucket where the artifact resides
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsS3#key
   */
  readonly key: string;

  /**
   * Region contains the optional bucket region
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsS3#region
   */
  readonly region?: string;

  /**
   * RoleARN is the Amazon Resource Name (ARN) of the role to assume.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsS3#roleARN
   */
  readonly roleARN?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsS3#secretKeySecret
   */
  readonly secretKeySecret: CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsS3SecretKeySecret;

  /**
   * UseSDKCreds tells the driver to figure out credentials based on sdk defaults.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsS3#useSDKCreds
   */
  readonly useSDKCreds?: boolean;

}

/**
 * ValueFrom describes a location in which to obtain the value to a parameter
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsParametersValueFrom
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsParametersValueFrom {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsParametersValueFrom#default
   */
  readonly default?: string;

  /**
   * JQFilter expression against the resource object in resource templates
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsParametersValueFrom#jqFilter
   */
  readonly jqFilter?: string;

  /**
   * JSONPath of a resource to retrieve an output parameter value from in resource templates
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsParametersValueFrom#jsonPath
   */
  readonly jsonPath?: string;

  /**
   * Parameter reference to a step or dag task in which to retrieve an output parameter value from (e.g. '{{steps.mystep.outputs.myparam}}')
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsParametersValueFrom#parameter
   */
  readonly parameter?: string;

  /**
   * Path in the container to retrieve an output parameter value from in container templates
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsParametersValueFrom#path
   */
  readonly path?: string;

}

/**
 * ObjectFieldSelector selects an APIVersioned field of an object.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApiItemsFieldRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApiItemsFieldRef {
  /**
   * Version of the schema the FieldPath is written in terms of, defaults to "v1".
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApiItemsFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * Path of the field to select in the specified API version.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApiItemsFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * ResourceFieldSelector represents container resources (cpu, memory) and their output format
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApiItemsResourceFieldRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApiItemsResourceFieldRef {
  /**
   * Container name: required for volumes, optional for env vars
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApiItemsResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and Int64() accessors.

The serialization format is:

<quantity>        ::= <signedNumber><suffix>
  (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
<decimalSI>       ::= m | "" | k | M | G | T | P | E
  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
<decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  a. No precision is lost
  b. No fractional digits will be emitted
  c. The exponent (or suffix) is as large as possible.
The sign will be omitted unless the number is negative.

Examples:
  1.5 will be serialized as "1500m"
  1.5Gi will be serialized as "1536Mi"

Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.

Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApiItemsResourceFieldRef#divisor
   */
  readonly divisor?: string;

  /**
   * Required: resource to select
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesDownwardApiItemsResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Adapts a ConfigMap into a projected volume.

The contents of the target ConfigMap's Data field will be presented in a projected volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. Note that this is identical to a configmap volume source without the default mode.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesConfigMap
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesConfigMap {
  /**
   * If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesConfigMap#items
   */
  readonly items?: CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesConfigMapItems[];

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesConfigMap#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its keys must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Represents downward API info for projecting into a projected volume. Note that this is identical to a downwardAPI volume source without the default mode.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApi
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApi {
  /**
   * Items is a list of DownwardAPIVolume file
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApi#items
   */
  readonly items?: CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItems[];

}

/**
 * Adapts a secret into a projected volume.

The contents of the target Secret's Data field will be presented in a projected volume as files using the keys in the Data field as the file names. Note that this is identical to a secret volume source without the default mode.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesSecret {
  /**
   * If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesSecret#items
   */
  readonly items?: CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesSecretItems[];

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * ServiceAccountTokenProjection represents a projected service account token volume. This projection can be used to insert a service account token into the pods runtime filesystem for use against APIs (Kubernetes API Server or otherwise).
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesServiceAccountToken
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesServiceAccountToken {
  /**
   * Audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesServiceAccountToken#audience
   */
  readonly audience?: string;

  /**
   * ExpirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.
   *
   * @default 1 hour and must be at least 10 minutes.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesServiceAccountToken#expirationSeconds
   */
  readonly expirationSeconds?: number;

  /**
   * Path is the path relative to the mount point of the file to project the token into.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesServiceAccountToken#path
   */
  readonly path: string;

}

/**
 * Maps a string key to a path within a volume.
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesConfigMapItems
 */
export interface CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesConfigMapItems {
  /**
   * The key to project.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesConfigMapItems#key
   */
  readonly key: string;

  /**
   * Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesConfigMapItems#mode
   */
  readonly mode?: number;

  /**
   * The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesConfigMapItems#path
   */
  readonly path: string;

}

/**
 * DownwardAPIVolumeFile represents information to create the file containing the pod field
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApiItems
 */
export interface CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApiItems {
  /**
   * ObjectFieldSelector selects an APIVersioned field of an object.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApiItems#fieldRef
   */
  readonly fieldRef?: CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApiItemsFieldRef;

  /**
   * Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApiItems#mode
   */
  readonly mode?: number;

  /**
   * Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApiItems#path
   */
  readonly path: string;

  /**
   * ResourceFieldSelector represents container resources (cpu, memory) and their output format
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApiItems#resourceFieldRef
   */
  readonly resourceFieldRef?: CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef;

}

/**
 * Maps a string key to a path within a volume.
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesSecretItems
 */
export interface CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesSecretItems {
  /**
   * The key to project.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesSecretItems#key
   */
  readonly key: string;

  /**
   * Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesSecretItems#mode
   */
  readonly mode?: number;

  /**
   * The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesSecretItems#path
   */
  readonly path: string;

}

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions
 */
export interface CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions
 */
export interface CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   *
   * @schema CronWorkflowSpecWorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
  /**
   * The label key that the selector applies to.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#key
   */
  readonly key: string;

  /**
   * Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
  /**
   * The label key that the selector applies to.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#key
   */
  readonly key: string;

  /**
   * Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#operator
   */
  readonly operator: string;

  /**
   * An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#values
   */
  readonly values?: string[];

}

/**
 * A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
  /**
   * The label key that the selector applies to.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#key
   */
  readonly key: string;

  /**
   * Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
  /**
   * The label key that the selector applies to.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#key
   */
  readonly key: string;

  /**
   * Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#operator
   */
  readonly operator: string;

  /**
   * An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#values
   */
  readonly values?: string[];

}

/**
 * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchExpressions
   */
  readonly matchExpressions?: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchExpressions
   */
  readonly matchExpressions?: CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePostStartHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesContainerLifecyclePreStopHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * ArchiveStrategy describes how to archive files/directory when saving artifacts
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArchive
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArchive {
  /**
   * NoneStrategy indicates to skip tar process and upload the files or directory tree as independent files. Note that if the artifact is a directory, the artifact driver must support the ability to save/load the directory appropriately.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArchive#none
   */
  readonly none?: any;

  /**
   * TarStrategy will tar and gzip the file or directory when saving
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArchive#tar
   */
  readonly tar?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArchiveTar;

}

/**
 * ArtifactoryArtifact is the location of an artifactory artifact
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactory
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactory {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactory#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactoryPasswordSecret;

  /**
   * URL of the artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactory#url
   */
  readonly url: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactory#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactoryUsernameSecret;

}

/**
 * GCSArtifact is the location of a GCS artifact
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGcs
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGcs {
  /**
   * Bucket is the name of the bucket
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGcs#bucket
   */
  readonly bucket: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGcs#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGcs#serviceAccountKeySecret
   */
  readonly serviceAccountKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGcsServiceAccountKeySecret;

}

/**
 * GitArtifact is the location of an git artifact
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGit
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGit {
  /**
   * Depth specifies clones/fetches should be shallow and include the given number of commits from the branch tip
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGit#depth
   */
  readonly depth?: number;

  /**
   * Fetch specifies a number of refs that should be fetched before checkout
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGit#fetch
   */
  readonly fetch?: string[];

  /**
   * InsecureIgnoreHostKey disables SSH strict host key checking during git clone
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGit#insecureIgnoreHostKey
   */
  readonly insecureIgnoreHostKey?: boolean;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGit#passwordSecret
   */
  readonly passwordSecret?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGitPasswordSecret;

  /**
   * Repo is the git repository
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGit#repo
   */
  readonly repo: string;

  /**
   * Revision is the git commit, tag, branch to checkout
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGit#revision
   */
  readonly revision?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGit#sshPrivateKeySecret
   */
  readonly sshPrivateKeySecret?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGitSshPrivateKeySecret;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGit#usernameSecret
   */
  readonly usernameSecret?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGitUsernameSecret;

}

/**
 * HDFSArtifact is the location of an HDFS artifact
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfs
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfs {
  /**
   * Addresses is accessible addresses of HDFS name nodes
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfs#addresses
   */
  readonly addresses: string[];

  /**
   * Force copies a file forcibly even if it exists (default: false)
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfs#force
   */
  readonly force?: boolean;

  /**
   * HDFSUser is the user to access HDFS file system. It is ignored if either ccache or keytab is used.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfs#hdfsUser
   */
  readonly hdfsUser?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfs#krbCCacheSecret
   */
  readonly krbCCacheSecret?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbCCacheSecret;

  /**
   * Selects a key from a ConfigMap.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfs#krbConfigConfigMap
   */
  readonly krbConfigConfigMap?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfs#krbKeytabSecret
   */
  readonly krbKeytabSecret?: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbKeytabSecret;

  /**
   * KrbRealm is the Kerberos realm used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfs#krbRealm
   */
  readonly krbRealm?: string;

  /**
   * KrbServicePrincipalName is the principal name of Kerberos service It must be set if either ccache or keytab is used.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfs#krbServicePrincipalName
   */
  readonly krbServicePrincipalName?: string;

  /**
   * KrbUsername is the Kerberos username used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfs#krbUsername
   */
  readonly krbUsername?: string;

  /**
   * Path is a file path in HDFS
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfs#path
   */
  readonly path: string;

}

/**
 * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttp
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttp {
  /**
   * URL of the artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHttp#url
   */
  readonly url: string;

}

/**
 * OSSArtifact is the location of an Alibaba Cloud OSS artifact
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOss
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOss {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOss#accessKeySecret
   */
  readonly accessKeySecret: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOssAccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOss#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOss#endpoint
   */
  readonly endpoint: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOss#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOss#secretKeySecret
   */
  readonly secretKeySecret: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOssSecretKeySecret;

}

/**
 * RawArtifact allows raw string content to be placed as an artifact in a container
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsRaw
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsRaw {
  /**
   * Data is the string contents of the artifact
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsRaw#data
   */
  readonly data: string;

}

/**
 * S3Artifact is the location of an S3 artifact
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3 {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3#accessKeySecret
   */
  readonly accessKeySecret: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3AccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3#endpoint
   */
  readonly endpoint: string;

  /**
   * Insecure will connect to the service with TLS
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3#insecure
   */
  readonly insecure?: boolean;

  /**
   * Key is the key in the bucket where the artifact resides
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3#key
   */
  readonly key: string;

  /**
   * Region contains the optional bucket region
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3#region
   */
  readonly region?: string;

  /**
   * RoleARN is the Amazon Resource Name (ARN) of the role to assume.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3#roleARN
   */
  readonly roleARN?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3#secretKeySecret
   */
  readonly secretKeySecret: CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3SecretKeySecret;

  /**
   * UseSDKCreds tells the driver to figure out credentials based on sdk defaults.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3#useSDKCreds
   */
  readonly useSDKCreds?: boolean;

}

/**
 * ValueFrom describes a location in which to obtain the value to a parameter
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParametersValueFrom
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParametersValueFrom {
  /**
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParametersValueFrom#default
   */
  readonly default?: string;

  /**
   * JQFilter expression against the resource object in resource templates
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParametersValueFrom#jqFilter
   */
  readonly jqFilter?: string;

  /**
   * JSONPath of a resource to retrieve an output parameter value from in resource templates
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParametersValueFrom#jsonPath
   */
  readonly jsonPath?: string;

  /**
   * Parameter reference to a step or dag task in which to retrieve an output parameter value from (e.g. '{{steps.mystep.outputs.myparam}}')
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParametersValueFrom#parameter
   */
  readonly parameter?: string;

  /**
   * Path in the container to retrieve an output parameter value from in container templates
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsParametersValueFrom#path
   */
  readonly path?: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePostStartHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesScriptLifecyclePreStopHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGetHttpHeaders
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * TarStrategy will tar and gzip the file or directory when saving
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsArchiveTar
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsArchiveTar {
  /**
   * CompressionLevel specifies the gzip compression level to use for the artifact. Defaults to gzip.DefaultCompression.
   *
   * @default gzip.DefaultCompression.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsArchiveTar#compressionLevel
   */
  readonly compressionLevel?: number;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsArtifactoryPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsArtifactoryPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsArtifactoryPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsArtifactoryPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsArtifactoryPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsArtifactoryUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsArtifactoryUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsArtifactoryUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsArtifactoryUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsArtifactoryUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsGcsServiceAccountKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsGcsServiceAccountKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsGcsServiceAccountKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsGcsServiceAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsGcsServiceAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsGitPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsGitPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsGitPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsGitPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsGitPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsGitSshPrivateKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsGitSshPrivateKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsGitSshPrivateKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsGitSshPrivateKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsGitSshPrivateKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsGitUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsGitUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsGitUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsGitUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsGitUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsHdfsKrbCCacheSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsHdfsKrbCCacheSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsHdfsKrbCCacheSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsHdfsKrbCCacheSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsHdfsKrbCCacheSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Selects a key from a ConfigMap.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsHdfsKrbConfigConfigMap
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsHdfsKrbConfigConfigMap {
  /**
   * The key to select.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsHdfsKrbConfigConfigMap#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsHdfsKrbConfigConfigMap#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsHdfsKrbConfigConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsHdfsKrbKeytabSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsHdfsKrbKeytabSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsHdfsKrbKeytabSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsHdfsKrbKeytabSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsHdfsKrbKeytabSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsOssAccessKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsOssAccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsOssAccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsOssAccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsOssAccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsOssSecretKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsOssSecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsOssSecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsOssSecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsOssSecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsS3AccessKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsS3AccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsS3AccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsS3AccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsS3AccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsS3SecretKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsS3SecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsS3SecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsS3SecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesStepsArgumentsArtifactsS3SecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Maps a string key to a path within a volume.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesConfigMapItems
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesConfigMapItems {
  /**
   * The key to project.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesConfigMapItems#key
   */
  readonly key: string;

  /**
   * Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesConfigMapItems#mode
   */
  readonly mode?: number;

  /**
   * The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesConfigMapItems#path
   */
  readonly path: string;

}

/**
 * DownwardAPIVolumeFile represents information to create the file containing the pod field
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItems
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItems {
  /**
   * ObjectFieldSelector selects an APIVersioned field of an object.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItems#fieldRef
   */
  readonly fieldRef?: CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItemsFieldRef;

  /**
   * Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItems#mode
   */
  readonly mode?: number;

  /**
   * Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItems#path
   */
  readonly path: string;

  /**
   * ResourceFieldSelector represents container resources (cpu, memory) and their output format
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItems#resourceFieldRef
   */
  readonly resourceFieldRef?: CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItemsResourceFieldRef;

}

/**
 * Maps a string key to a path within a volume.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesSecretItems
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesSecretItems {
  /**
   * The key to project.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesSecretItems#key
   */
  readonly key: string;

  /**
   * Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesSecretItems#mode
   */
  readonly mode?: number;

  /**
   * The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesSecretItems#path
   */
  readonly path: string;

}

/**
 * ObjectFieldSelector selects an APIVersioned field of an object.
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApiItemsFieldRef
 */
export interface CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApiItemsFieldRef {
  /**
   * Version of the schema the FieldPath is written in terms of, defaults to "v1".
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApiItemsFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * Path of the field to select in the specified API version.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApiItemsFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * ResourceFieldSelector represents container resources (cpu, memory) and their output format
 *
 * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef
 */
export interface CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef {
  /**
   * Container name: required for volumes, optional for env vars
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and Int64() accessors.

The serialization format is:

<quantity>        ::= <signedNumber><suffix>
  (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
<decimalSI>       ::= m | "" | k | M | G | T | P | E
  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
<decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  a. No precision is lost
  b. No fractional digits will be emitted
  c. The exponent (or suffix) is as large as possible.
The sign will be omitted unless the number is negative.

Examples:
  1.5 will be serialized as "1500m"
  1.5Gi will be serialized as "1536Mi"

Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.

Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#divisor
   */
  readonly divisor?: string;

  /**
   * Required: resource to select
   *
   * @schema CronWorkflowSpecWorkflowSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * TarStrategy will tar and gzip the file or directory when saving
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArchiveTar
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArchiveTar {
  /**
   * CompressionLevel specifies the gzip compression level to use for the artifact. Defaults to gzip.DefaultCompression.
   *
   * @default gzip.DefaultCompression.
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArchiveTar#compressionLevel
   */
  readonly compressionLevel?: number;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactoryPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactoryPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactoryPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactoryPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactoryPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactoryUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactoryUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactoryUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactoryUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactoryUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGcsServiceAccountKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGcsServiceAccountKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGcsServiceAccountKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGcsServiceAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGcsServiceAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGitPasswordSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGitPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGitPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGitPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGitPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGitSshPrivateKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGitSshPrivateKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGitSshPrivateKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGitSshPrivateKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGitSshPrivateKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGitUsernameSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGitUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGitUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGitUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsGitUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbCCacheSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbCCacheSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbCCacheSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbCCacheSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbCCacheSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Selects a key from a ConfigMap.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap {
  /**
   * The key to select.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbKeytabSecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbKeytabSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbKeytabSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbKeytabSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbKeytabSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOssAccessKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOssAccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOssAccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOssAccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOssAccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOssSecretKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOssSecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOssSecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOssSecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsOssSecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3AccessKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3AccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3AccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3AccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3AccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3SecretKeySecret
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3SecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3SecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3SecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesDagTasksArgumentsArtifactsS3SecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * ObjectFieldSelector selects an APIVersioned field of an object.
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItemsFieldRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItemsFieldRef {
  /**
   * Version of the schema the FieldPath is written in terms of, defaults to "v1".
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItemsFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * Path of the field to select in the specified API version.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItemsFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * ResourceFieldSelector represents container resources (cpu, memory) and their output format
 *
 * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItemsResourceFieldRef
 */
export interface CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItemsResourceFieldRef {
  /**
   * Container name: required for volumes, optional for env vars
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and Int64() accessors.

The serialization format is:

<quantity>        ::= <signedNumber><suffix>
  (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
<decimalSI>       ::= m | "" | k | M | G | T | P | E
  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
<decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  a. No precision is lost
  b. No fractional digits will be emitted
  c. The exponent (or suffix) is as large as possible.
The sign will be omitted unless the number is negative.

Examples:
  1.5 will be serialized as "1500m"
  1.5Gi will be serialized as "1536Mi"

Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.

Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#divisor
   */
  readonly divisor?: string;

  /**
   * Required: resource to select
   *
   * @schema CronWorkflowSpecWorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#resource
   */
  readonly resource: string;

}

