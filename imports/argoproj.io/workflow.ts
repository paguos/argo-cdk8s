// generated by cdk8s
import { ApiObject } from 'cdk8s';
import { Construct } from 'constructs';

/**
 * Workflow is the definition of a workflow resource
 *
 * @schema Workflow
 */
export class Workflow extends ApiObject {
  /**
   * Defines a "Workflow" API object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: WorkflowOptions) {
    super(scope, name, {
      ...options,
      kind: 'Workflow',
      apiVersion: 'argoproj.io/v1alpha1',
    });
  }
}

/**
 * Workflow is the definition of a workflow resource
 *
 * @schema Workflow
 */
export interface WorkflowOptions {
  /**
   * @schema Workflow#metadata
   */
  readonly metadata: any;

  /**
   * WorkflowSpec is the specification of a Workflow.
   *
   * @schema Workflow#spec
   */
  readonly spec: WorkflowSpec;

}

/**
 * WorkflowSpec is the specification of a Workflow.
 *
 * @schema WorkflowSpec
 */
export interface WorkflowSpec {
  /**
   * Optional duration in seconds relative to the workflow start time which the workflow is allowed to run before the controller terminates the io.argoproj.workflow.v1alpha1. A value of zero is used to terminate a Running workflow
   *
   * @schema WorkflowSpec#activeDeadlineSeconds
   */
  readonly activeDeadlineSeconds?: number;

  /**
   * Affinity is a group of affinity scheduling rules.
   *
   * @schema WorkflowSpec#affinity
   */
  readonly affinity?: WorkflowSpecAffinity;

  /**
   * Arguments to a template
   *
   * @schema WorkflowSpec#arguments
   */
  readonly arguments?: WorkflowSpecArguments;

  /**
   * @schema WorkflowSpec#artifactRepositoryRef
   */
  readonly artifactRepositoryRef?: WorkflowSpecArtifactRepositoryRef;

  /**
   * AutomountServiceAccountToken indicates whether a service account token should be automatically mounted in pods. ServiceAccountName of ExecutorConfig must be specified if this value is false.
   *
   * @schema WorkflowSpec#automountServiceAccountToken
   */
  readonly automountServiceAccountToken?: boolean;

  /**
   * PodDNSConfig defines the DNS parameters of a pod in addition to those generated from DNSPolicy.
   *
   * @schema WorkflowSpec#dnsConfig
   */
  readonly dnsConfig?: WorkflowSpecDnsConfig;

  /**
   * Set DNS policy for the pod. Defaults to "ClusterFirst". Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'.
   *
   * @default ClusterFirst". Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'.
   * @schema WorkflowSpec#dnsPolicy
   */
  readonly dnsPolicy?: string;

  /**
   * Entrypoint is a template reference to the starting point of the io.argoproj.workflow.v1alpha1.
   *
   * @schema WorkflowSpec#entrypoint
   */
  readonly entrypoint?: string;

  /**
   * ExecutorConfig holds configurations of an executor container.
   *
   * @schema WorkflowSpec#executor
   */
  readonly executor?: WorkflowSpecExecutor;

  /**
   * @schema WorkflowSpec#hostAliases
   */
  readonly hostAliases?: WorkflowSpecHostAliases[];

  /**
   * Host networking requested for this workflow pod. Default to false.
   *
   * @default false.
   * @schema WorkflowSpec#hostNetwork
   */
  readonly hostNetwork?: boolean;

  /**
   * ImagePullSecrets is a list of references to secrets in the same namespace to use for pulling any images in pods that reference this ServiceAccount. ImagePullSecrets are distinct from Secrets because Secrets can be mounted in the pod, but ImagePullSecrets are only accessed by the kubelet. More info: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
   *
   * @schema WorkflowSpec#imagePullSecrets
   */
  readonly imagePullSecrets?: WorkflowSpecImagePullSecrets[];

  /**
   * Metrics are a list of metrics emitted from a Workflow/Template
   *
   * @schema WorkflowSpec#metrics
   */
  readonly metrics?: WorkflowSpecMetrics;

  /**
   * NodeSelector is a selector which will result in all pods of the workflow to be scheduled on the selected node(s). This is able to be overridden by a nodeSelector specified in the template.
   *
   * @schema WorkflowSpec#nodeSelector
   */
  readonly nodeSelector?: { [key: string]: string };

  /**
   * OnExit is a template reference which is invoked at the end of the workflow, irrespective of the success, failure, or error of the primary io.argoproj.workflow.v1alpha1.
   *
   * @schema WorkflowSpec#onExit
   */
  readonly onExit?: string;

  /**
   * Parallelism limits the max total parallel pods that can execute at the same time in a workflow
   *
   * @schema WorkflowSpec#parallelism
   */
  readonly parallelism?: number;

  /**
   * PodDisruptionBudgetSpec is a description of a PodDisruptionBudget.
   *
   * @schema WorkflowSpec#podDisruptionBudget
   */
  readonly podDisruptionBudget?: WorkflowSpecPodDisruptionBudget;

  /**
   * PodGC describes how to delete completed pods as they complete
   *
   * @schema WorkflowSpec#podGC
   */
  readonly podGC?: WorkflowSpecPodGc;

  /**
   * Priority to apply to workflow pods.
   *
   * @schema WorkflowSpec#podPriority
   */
  readonly podPriority?: number;

  /**
   * PriorityClassName to apply to workflow pods.
   *
   * @schema WorkflowSpec#podPriorityClassName
   */
  readonly podPriorityClassName?: string;

  /**
   * PodSpecPatch holds strategic merge patch to apply against the pod spec. Allows parameterization of container fields which are not strings (e.g. resource limits).
   *
   * @schema WorkflowSpec#podSpecPatch
   */
  readonly podSpecPatch?: string;

  /**
   * Priority is used if controller is configured to process limited number of workflows in parallel. Workflows with higher priority are processed first.
   *
   * @schema WorkflowSpec#priority
   */
  readonly priority?: number;

  /**
   * Set scheduler name for all pods. Will be overridden if container/script template's scheduler name is set. Default scheduler will be used if neither specified.
   *
   * @schema WorkflowSpec#schedulerName
   */
  readonly schedulerName?: string;

  /**
   * PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext.
   *
   * @schema WorkflowSpec#securityContext
   */
  readonly securityContext?: WorkflowSpecSecurityContext;

  /**
   * ServiceAccountName is the name of the ServiceAccount to run all pods of the workflow as.
   *
   * @schema WorkflowSpec#serviceAccountName
   */
  readonly serviceAccountName?: string;

  /**
   * Shutdown will shutdown the workflow according to its ShutdownStrategy
   *
   * @schema WorkflowSpec#shutdown
   */
  readonly shutdown?: string;

  /**
   * Suspend will suspend the workflow and prevent execution of any future steps in the workflow
   *
   * @schema WorkflowSpec#suspend
   */
  readonly suspend?: boolean;

  /**
   * Templates is a list of workflow templates used in a workflow
   *
   * @schema WorkflowSpec#templates
   */
  readonly templates?: WorkflowSpecTemplates[];

  /**
   * Tolerations to apply to workflow pods.
   *
   * @schema WorkflowSpec#tolerations
   */
  readonly tolerations?: WorkflowSpecTolerations[];

  /**
   * TTLSecondsAfterFinished limits the lifetime of a Workflow that has finished execution (Succeeded, Failed, Error). If this field is set, once the Workflow finishes, it will be deleted after ttlSecondsAfterFinished expires. If this field is unset, ttlSecondsAfterFinished will not expire. If this field is set to zero, ttlSecondsAfterFinished expires immediately after the Workflow finishes. DEPRECATED: Use TTLStrategy.SecondsAfterCompletion instead.
   *
   * @schema WorkflowSpec#ttlSecondsAfterFinished
   */
  readonly ttlSecondsAfterFinished?: number;

  /**
   * TTLStrategy is the strategy for the time to live depending on if the workflow succeeded or failed
   *
   * @schema WorkflowSpec#ttlStrategy
   */
  readonly ttlStrategy?: WorkflowSpecTtlStrategy;

  /**
   * VolumeClaimTemplates is a list of claims that containers are allowed to reference. The Workflow controller will create the claims at the beginning of the workflow and delete the claims upon completion of the workflow
   *
   * @schema WorkflowSpec#volumeClaimTemplates
   */
  readonly volumeClaimTemplates?: WorkflowSpecVolumeClaimTemplates[];

  /**
   * Volumes is a list of volumes that can be mounted by containers in a io.argoproj.workflow.v1alpha1.
   *
   * @schema WorkflowSpec#volumes
   */
  readonly volumes?: WorkflowSpecVolumes[];

  /**
   * WorkflowTemplateRef is a reference to a WorkflowTemplate resource.
   *
   * @schema WorkflowSpec#workflowTemplateRef
   */
  readonly workflowTemplateRef?: WorkflowSpecWorkflowTemplateRef;

}

/**
 * Affinity is a group of affinity scheduling rules.
 *
 * @schema WorkflowSpecAffinity
 */
export interface WorkflowSpecAffinity {
  /**
   * Node affinity is a group of node affinity scheduling rules.
   *
   * @schema WorkflowSpecAffinity#nodeAffinity
   */
  readonly nodeAffinity?: WorkflowSpecAffinityNodeAffinity;

  /**
   * Pod affinity is a group of inter pod affinity scheduling rules.
   *
   * @schema WorkflowSpecAffinity#podAffinity
   */
  readonly podAffinity?: WorkflowSpecAffinityPodAffinity;

  /**
   * Pod anti affinity is a group of inter pod anti affinity scheduling rules.
   *
   * @schema WorkflowSpecAffinity#podAntiAffinity
   */
  readonly podAntiAffinity?: WorkflowSpecAffinityPodAntiAffinity;

}

/**
 * Arguments to a template
 *
 * @schema WorkflowSpecArguments
 */
export interface WorkflowSpecArguments {
  /**
   * Artifacts is the list of artifacts to pass to the template or workflow
   *
   * @schema WorkflowSpecArguments#artifacts
   */
  readonly artifacts?: WorkflowSpecArgumentsArtifacts[];

  /**
   * Parameters is the list of parameters to pass to the template or workflow
   *
   * @schema WorkflowSpecArguments#parameters
   */
  readonly parameters?: WorkflowSpecArgumentsParameters[];

}

/**
 * @schema WorkflowSpecArtifactRepositoryRef
 */
export interface WorkflowSpecArtifactRepositoryRef {
  /**
   * @schema WorkflowSpecArtifactRepositoryRef#configMap
   */
  readonly configMap?: string;

  /**
   * @schema WorkflowSpecArtifactRepositoryRef#key
   */
  readonly key?: string;

}

/**
 * PodDNSConfig defines the DNS parameters of a pod in addition to those generated from DNSPolicy.
 *
 * @schema WorkflowSpecDnsConfig
 */
export interface WorkflowSpecDnsConfig {
  /**
   * A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.
   *
   * @schema WorkflowSpecDnsConfig#nameservers
   */
  readonly nameservers?: string[];

  /**
   * A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.
   *
   * @schema WorkflowSpecDnsConfig#options
   */
  readonly options?: WorkflowSpecDnsConfigOptions[];

  /**
   * A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.
   *
   * @schema WorkflowSpecDnsConfig#searches
   */
  readonly searches?: string[];

}

/**
 * ExecutorConfig holds configurations of an executor container.
 *
 * @schema WorkflowSpecExecutor
 */
export interface WorkflowSpecExecutor {
  /**
   * ServiceAccountName specifies the service account name of the executor container.
   *
   * @schema WorkflowSpecExecutor#serviceAccountName
   */
  readonly serviceAccountName?: string;

}

/**
 * HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the pod's hosts file.
 *
 * @schema WorkflowSpecHostAliases
 */
export interface WorkflowSpecHostAliases {
  /**
   * Hostnames for the above IP address.
   *
   * @schema WorkflowSpecHostAliases#hostnames
   */
  readonly hostnames?: string[];

  /**
   * IP address of the host file entry.
   *
   * @schema WorkflowSpecHostAliases#ip
   */
  readonly ip?: string;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema WorkflowSpecImagePullSecrets
 */
export interface WorkflowSpecImagePullSecrets {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecImagePullSecrets#name
   */
  readonly name?: string;

}

/**
 * Metrics are a list of metrics emitted from a Workflow/Template
 *
 * @schema WorkflowSpecMetrics
 */
export interface WorkflowSpecMetrics {
  /**
   * Prometheus is a list of prometheus metrics to be emitted
   *
   * @schema WorkflowSpecMetrics#prometheus
   */
  readonly prometheus: WorkflowSpecMetricsPrometheus[];

}

/**
 * PodDisruptionBudgetSpec is a description of a PodDisruptionBudget.
 *
 * @schema WorkflowSpecPodDisruptionBudget
 */
export interface WorkflowSpecPodDisruptionBudget {
  /**
   * @schema WorkflowSpecPodDisruptionBudget#maxUnavailable
   */
  readonly maxUnavailable?: string;

  /**
   * @schema WorkflowSpecPodDisruptionBudget#minAvailable
   */
  readonly minAvailable?: string;

  /**
   * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
   *
   * @schema WorkflowSpecPodDisruptionBudget#selector
   */
  readonly selector?: WorkflowSpecPodDisruptionBudgetSelector;

}

/**
 * PodGC describes how to delete completed pods as they complete
 *
 * @schema WorkflowSpecPodGc
 */
export interface WorkflowSpecPodGc {
  /**
   * Strategy is the strategy to use. One of "OnPodCompletion", "OnPodSuccess", "OnWorkflowCompletion", "OnWorkflowSuccess"
   *
   * @schema WorkflowSpecPodGc#strategy
   */
  readonly strategy?: string;

}

/**
 * PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext.
 *
 * @schema WorkflowSpecSecurityContext
 */
export interface WorkflowSpecSecurityContext {
  /**
   * A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:

1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----

If unset, the Kubelet will not modify the ownership and permissions of any volume.
   *
   * @schema WorkflowSpecSecurityContext#fsGroup
   */
  readonly fsGroup?: number;

  /**
   * The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
   *
   * @schema WorkflowSpecSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema WorkflowSpecSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
   *
   * @default user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
   * @schema WorkflowSpecSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * SELinuxOptions are the labels to be applied to the container
   *
   * @schema WorkflowSpecSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: WorkflowSpecSecurityContextSeLinuxOptions;

  /**
   * A list of groups applied to the first process run in each container, in addition to the container's primary GID.  If unspecified, no groups will be added to any container.
   *
   * @schema WorkflowSpecSecurityContext#supplementalGroups
   */
  readonly supplementalGroups?: number[];

  /**
   * Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch.
   *
   * @schema WorkflowSpecSecurityContext#sysctls
   */
  readonly sysctls?: WorkflowSpecSecurityContextSysctls[];

  /**
   * WindowsSecurityContextOptions contain Windows-specific options and credentials.
   *
   * @schema WorkflowSpecSecurityContext#windowsOptions
   */
  readonly windowsOptions?: WorkflowSpecSecurityContextWindowsOptions;

}

/**
 * Template is a reusable and composable unit of execution in a workflow
 *
 * @schema WorkflowSpecTemplates
 */
export interface WorkflowSpecTemplates {
  /**
   * Optional duration in seconds relative to the StartTime that the pod may be active on a node before the system actively tries to terminate the pod; value must be positive integer This field is only applicable to container and script templates.
   *
   * @schema WorkflowSpecTemplates#activeDeadlineSeconds
   */
  readonly activeDeadlineSeconds?: number;

  /**
   * Affinity is a group of affinity scheduling rules.
   *
   * @schema WorkflowSpecTemplates#affinity
   */
  readonly affinity?: WorkflowSpecTemplatesAffinity;

  /**
   * ArtifactLocation describes a location for a single or multiple artifacts. It is used as single artifact in the context of inputs/outputs (e.g. outputs.artifacts.artname). It is also used to describe the location of multiple artifacts such as the archive location of a single workflow step, which the executor will use as a default location to store its files.
   *
   * @schema WorkflowSpecTemplates#archiveLocation
   */
  readonly archiveLocation?: WorkflowSpecTemplatesArchiveLocation;

  /**
   * Arguments to a template
   *
   * @schema WorkflowSpecTemplates#arguments
   */
  readonly arguments?: WorkflowSpecTemplatesArguments;

  /**
   * AutomountServiceAccountToken indicates whether a service account token should be automatically mounted in pods. ServiceAccountName of ExecutorConfig must be specified if this value is false.
   *
   * @schema WorkflowSpecTemplates#automountServiceAccountToken
   */
  readonly automountServiceAccountToken?: boolean;

  /**
   * A single application container that you want to run within a pod.
   *
   * @schema WorkflowSpecTemplates#container
   */
  readonly container?: WorkflowSpecTemplatesContainer;

  /**
   * Deamon will allow a workflow to proceed to the next step so long as the container reaches readiness
   *
   * @schema WorkflowSpecTemplates#daemon
   */
  readonly daemon?: boolean;

  /**
   * DAGTemplate is a template subtype for directed acyclic graph templates
   *
   * @schema WorkflowSpecTemplates#dag
   */
  readonly dag?: WorkflowSpecTemplatesDag;

  /**
   * ExecutorConfig holds configurations of an executor container.
   *
   * @schema WorkflowSpecTemplates#executor
   */
  readonly executor?: WorkflowSpecTemplatesExecutor;

  /**
   * HostAliases is an optional list of hosts and IPs that will be injected into the pod spec
   *
   * @schema WorkflowSpecTemplates#hostAliases
   */
  readonly hostAliases?: WorkflowSpecTemplatesHostAliases[];

  /**
   * InitContainers is a list of containers which run before the main container.
   *
   * @schema WorkflowSpecTemplates#initContainers
   */
  readonly initContainers?: WorkflowSpecTemplatesInitContainers[];

  /**
   * Inputs are the mechanism for passing parameters, artifacts, volumes from one template to another
   *
   * @schema WorkflowSpecTemplates#inputs
   */
  readonly inputs?: WorkflowSpecTemplatesInputs;

  /**
   * Pod metdata
   *
   * @schema WorkflowSpecTemplates#metadata
   */
  readonly metadata?: WorkflowSpecTemplatesMetadata;

  /**
   * Metrics are a list of metrics emitted from a Workflow/Template
   *
   * @schema WorkflowSpecTemplates#metrics
   */
  readonly metrics?: WorkflowSpecTemplatesMetrics;

  /**
   * Name is the name of the template
   *
   * @schema WorkflowSpecTemplates#name
   */
  readonly name: string;

  /**
   * NodeSelector is a selector to schedule this step of the workflow to be run on the selected node(s). Overrides the selector set at the workflow level.
   *
   * @schema WorkflowSpecTemplates#nodeSelector
   */
  readonly nodeSelector?: { [key: string]: string };

  /**
   * Outputs hold parameters, artifacts, and results from a step
   *
   * @schema WorkflowSpecTemplates#outputs
   */
  readonly outputs?: WorkflowSpecTemplatesOutputs;

  /**
   * Parallelism limits the max total parallel pods that can execute at the same time within the boundaries of this template invocation. If additional steps/dag templates are invoked, the pods created by those templates will not be counted towards this total.
   *
   * @schema WorkflowSpecTemplates#parallelism
   */
  readonly parallelism?: number;

  /**
   * PodSpecPatch holds strategic merge patch to apply against the pod spec. Allows parameterization of container fields which are not strings (e.g. resource limits).
   *
   * @schema WorkflowSpecTemplates#podSpecPatch
   */
  readonly podSpecPatch?: string;

  /**
   * Priority to apply to workflow pods.
   *
   * @schema WorkflowSpecTemplates#priority
   */
  readonly priority?: number;

  /**
   * PriorityClassName to apply to workflow pods.
   *
   * @schema WorkflowSpecTemplates#priorityClassName
   */
  readonly priorityClassName?: string;

  /**
   * ResourceTemplate is a template subtype to manipulate kubernetes resources
   *
   * @schema WorkflowSpecTemplates#resource
   */
  readonly resource?: WorkflowSpecTemplatesResource;

  /**
   * ResubmitPendingPods is a flag to enable resubmitting pods that remain Pending after initial submission
   *
   * @schema WorkflowSpecTemplates#resubmitPendingPods
   */
  readonly resubmitPendingPods?: boolean;

  /**
   * RetryStrategy provides controls on how to retry a workflow step
   *
   * @schema WorkflowSpecTemplates#retryStrategy
   */
  readonly retryStrategy?: WorkflowSpecTemplatesRetryStrategy;

  /**
   * If specified, the pod will be dispatched by specified scheduler. Or it will be dispatched by workflow scope scheduler if specified. If neither specified, the pod will be dispatched by default scheduler.
   *
   * @schema WorkflowSpecTemplates#schedulerName
   */
  readonly schedulerName?: string;

  /**
   * ScriptTemplate is a template subtype to enable scripting through code steps
   *
   * @schema WorkflowSpecTemplates#script
   */
  readonly script?: WorkflowSpecTemplatesScript;

  /**
   * PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext.
   *
   * @schema WorkflowSpecTemplates#securityContext
   */
  readonly securityContext?: WorkflowSpecTemplatesSecurityContext;

  /**
   * ServiceAccountName to apply to workflow pods
   *
   * @schema WorkflowSpecTemplates#serviceAccountName
   */
  readonly serviceAccountName?: string;

  /**
   * Sidecars is a list of containers which run alongside the main container Sidecars are automatically killed when the main container completes
   *
   * @schema WorkflowSpecTemplates#sidecars
   */
  readonly sidecars?: WorkflowSpecTemplatesSidecars[];

  /**
   * Steps define a series of sequential/parallel workflow steps
   *
   * @schema WorkflowSpecTemplates#steps
   */
  readonly steps?: WorkflowSpecTemplatesSteps[][];

  /**
   * SuspendTemplate is a template subtype to suspend a workflow at a predetermined point in time
   *
   * @schema WorkflowSpecTemplates#suspend
   */
  readonly suspend?: WorkflowSpecTemplatesSuspend;

  /**
   * Template is the name of the template which is used as the base of this template. DEPRECATED: This field is not used.
   *
   * @schema WorkflowSpecTemplates#template
   */
  readonly template?: string;

  /**
   * TemplateRef is a reference of template resource.
   *
   * @schema WorkflowSpecTemplates#templateRef
   */
  readonly templateRef?: WorkflowSpecTemplatesTemplateRef;

  /**
   * Tolerations to apply to workflow pods.
   *
   * @schema WorkflowSpecTemplates#tolerations
   */
  readonly tolerations?: WorkflowSpecTemplatesTolerations[];

  /**
   * Volumes is a list of volumes that can be mounted by containers in a template.
   *
   * @schema WorkflowSpecTemplates#volumes
   */
  readonly volumes?: WorkflowSpecTemplatesVolumes[];

}

/**
 * The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
 *
 * @schema WorkflowSpecTolerations
 */
export interface WorkflowSpecTolerations {
  /**
   * Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
   *
   * @schema WorkflowSpecTolerations#effect
   */
  readonly effect?: string;

  /**
   * Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
   *
   * @schema WorkflowSpecTolerations#key
   */
  readonly key?: string;

  /**
   * Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
   *
   * @default Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
   * @schema WorkflowSpecTolerations#operator
   */
  readonly operator?: string;

  /**
   * TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
   *
   * @schema WorkflowSpecTolerations#tolerationSeconds
   */
  readonly tolerationSeconds?: number;

  /**
   * Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
   *
   * @schema WorkflowSpecTolerations#value
   */
  readonly value?: string;

}

/**
 * TTLStrategy is the strategy for the time to live depending on if the workflow succeeded or failed
 *
 * @schema WorkflowSpecTtlStrategy
 */
export interface WorkflowSpecTtlStrategy {
  /**
   * SecondsAfterCompletion is the number of seconds to live after completion
   *
   * @schema WorkflowSpecTtlStrategy#secondsAfterCompletion
   */
  readonly secondsAfterCompletion?: number;

  /**
   * SecondsAfterFailure is the number of seconds to live after failure
   *
   * @schema WorkflowSpecTtlStrategy#secondsAfterFailure
   */
  readonly secondsAfterFailure?: number;

  /**
   * SecondsAfterSuccess is the number of seconds to live after success
   *
   * @schema WorkflowSpecTtlStrategy#secondsAfterSuccess
   */
  readonly secondsAfterSuccess?: number;

}

/**
 * PersistentVolumeClaim is a user's request for and claim to a persistent volume
 *
 * @schema WorkflowSpecVolumeClaimTemplates
 */
export interface WorkflowSpecVolumeClaimTemplates {
  /**
   * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
   *
   * @schema WorkflowSpecVolumeClaimTemplates#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
   *
   * @schema WorkflowSpecVolumeClaimTemplates#kind
   */
  readonly kind?: string;

  /**
   * @schema WorkflowSpecVolumeClaimTemplates#metadata
   */
  readonly metadata?: any;

  /**
   * PersistentVolumeClaimSpec describes the common attributes of storage devices and allows a Source for provider-specific attributes
   *
   * @schema WorkflowSpecVolumeClaimTemplates#spec
   */
  readonly spec?: WorkflowSpecVolumeClaimTemplatesSpec;

  /**
   * PersistentVolumeClaimStatus is the current status of a persistent volume claim.
   *
   * @schema WorkflowSpecVolumeClaimTemplates#status
   */
  readonly status?: WorkflowSpecVolumeClaimTemplatesStatus;

}

/**
 * Volume represents a named volume in a pod that may be accessed by any container in the pod.
 *
 * @schema WorkflowSpecVolumes
 */
export interface WorkflowSpecVolumes {
  /**
   * Represents a Persistent Disk resource in AWS.

An AWS EBS disk must exist before mounting to a container. The disk must also be in the same AWS zone as the kubelet. An AWS EBS disk can only be mounted as read/write once. AWS EBS volumes support ownership management and SELinux relabeling.
   *
   * @schema WorkflowSpecVolumes#awsElasticBlockStore
   */
  readonly awsElasticBlockStore?: WorkflowSpecVolumesAwsElasticBlockStore;

  /**
   * AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
   *
   * @schema WorkflowSpecVolumes#azureDisk
   */
  readonly azureDisk?: WorkflowSpecVolumesAzureDisk;

  /**
   * AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
   *
   * @schema WorkflowSpecVolumes#azureFile
   */
  readonly azureFile?: WorkflowSpecVolumesAzureFile;

  /**
   * Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling.
   *
   * @schema WorkflowSpecVolumes#cephfs
   */
  readonly cephfs?: WorkflowSpecVolumesCephfs;

  /**
   * Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling.
   *
   * @schema WorkflowSpecVolumes#cinder
   */
  readonly cinder?: WorkflowSpecVolumesCinder;

  /**
   * Adapts a ConfigMap into a volume.

The contents of the target ConfigMap's Data field will be presented in a volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. ConfigMap volumes support ownership management and SELinux relabeling.
   *
   * @schema WorkflowSpecVolumes#configMap
   */
  readonly configMap?: WorkflowSpecVolumesConfigMap;

  /**
   * Represents a source location of a volume to mount, managed by an external CSI driver
   *
   * @schema WorkflowSpecVolumes#csi
   */
  readonly csi?: WorkflowSpecVolumesCsi;

  /**
   * DownwardAPIVolumeSource represents a volume containing downward API info. Downward API volumes support ownership management and SELinux relabeling.
   *
   * @schema WorkflowSpecVolumes#downwardAPI
   */
  readonly downwardAPI?: WorkflowSpecVolumesDownwardApi;

  /**
   * Represents an empty directory for a pod. Empty directory volumes support ownership management and SELinux relabeling.
   *
   * @schema WorkflowSpecVolumes#emptyDir
   */
  readonly emptyDir?: WorkflowSpecVolumesEmptyDir;

  /**
   * Represents a Fibre Channel volume. Fibre Channel volumes can only be mounted as read/write once. Fibre Channel volumes support ownership management and SELinux relabeling.
   *
   * @schema WorkflowSpecVolumes#fc
   */
  readonly fc?: WorkflowSpecVolumesFc;

  /**
   * FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
   *
   * @schema WorkflowSpecVolumes#flexVolume
   */
  readonly flexVolume?: WorkflowSpecVolumesFlexVolume;

  /**
   * Represents a Flocker volume mounted by the Flocker agent. One and only one of datasetName and datasetUUID should be set. Flocker volumes do not support ownership management or SELinux relabeling.
   *
   * @schema WorkflowSpecVolumes#flocker
   */
  readonly flocker?: WorkflowSpecVolumesFlocker;

  /**
   * Represents a Persistent Disk resource in Google Compute Engine.

A GCE PD must exist before mounting to a container. The disk must also be in the same GCE project and zone as the kubelet. A GCE PD can only be mounted as read/write once or read-only many times. GCE PDs support ownership management and SELinux relabeling.
   *
   * @schema WorkflowSpecVolumes#gcePersistentDisk
   */
  readonly gcePersistentDisk?: WorkflowSpecVolumesGcePersistentDisk;

  /**
   * Represents a volume that is populated with the contents of a git repository. Git repo volumes do not support ownership management. Git repo volumes support SELinux relabeling.

DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.
   *
   * @schema WorkflowSpecVolumes#gitRepo
   */
  readonly gitRepo?: WorkflowSpecVolumesGitRepo;

  /**
   * Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling.
   *
   * @schema WorkflowSpecVolumes#glusterfs
   */
  readonly glusterfs?: WorkflowSpecVolumesGlusterfs;

  /**
   * Represents a host path mapped into a pod. Host path volumes do not support ownership management or SELinux relabeling.
   *
   * @schema WorkflowSpecVolumes#hostPath
   */
  readonly hostPath?: WorkflowSpecVolumesHostPath;

  /**
   * Represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling.
   *
   * @schema WorkflowSpecVolumes#iscsi
   */
  readonly iscsi?: WorkflowSpecVolumesIscsi;

  /**
   * Volume's name. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecVolumes#name
   */
  readonly name: string;

  /**
   * Represents an NFS mount that lasts the lifetime of a pod. NFS volumes do not support ownership management or SELinux relabeling.
   *
   * @schema WorkflowSpecVolumes#nfs
   */
  readonly nfs?: WorkflowSpecVolumesNfs;

  /**
   * PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace. This volume finds the bound PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another type of volume that is owned by someone else (the system).
   *
   * @schema WorkflowSpecVolumes#persistentVolumeClaim
   */
  readonly persistentVolumeClaim?: WorkflowSpecVolumesPersistentVolumeClaim;

  /**
   * Represents a Photon Controller persistent disk resource.
   *
   * @schema WorkflowSpecVolumes#photonPersistentDisk
   */
  readonly photonPersistentDisk?: WorkflowSpecVolumesPhotonPersistentDisk;

  /**
   * PortworxVolumeSource represents a Portworx volume resource.
   *
   * @schema WorkflowSpecVolumes#portworxVolume
   */
  readonly portworxVolume?: WorkflowSpecVolumesPortworxVolume;

  /**
   * Represents a projected volume source
   *
   * @schema WorkflowSpecVolumes#projected
   */
  readonly projected?: WorkflowSpecVolumesProjected;

  /**
   * Represents a Quobyte mount that lasts the lifetime of a pod. Quobyte volumes do not support ownership management or SELinux relabeling.
   *
   * @schema WorkflowSpecVolumes#quobyte
   */
  readonly quobyte?: WorkflowSpecVolumesQuobyte;

  /**
   * Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling.
   *
   * @schema WorkflowSpecVolumes#rbd
   */
  readonly rbd?: WorkflowSpecVolumesRbd;

  /**
   * ScaleIOVolumeSource represents a persistent ScaleIO volume
   *
   * @schema WorkflowSpecVolumes#scaleIO
   */
  readonly scaleIO?: WorkflowSpecVolumesScaleIo;

  /**
   * Adapts a Secret into a volume.

The contents of the target Secret's Data field will be presented in a volume as files using the keys in the Data field as the file names. Secret volumes support ownership management and SELinux relabeling.
   *
   * @schema WorkflowSpecVolumes#secret
   */
  readonly secret?: WorkflowSpecVolumesSecret;

  /**
   * Represents a StorageOS persistent volume resource.
   *
   * @schema WorkflowSpecVolumes#storageos
   */
  readonly storageos?: WorkflowSpecVolumesStorageos;

  /**
   * Represents a vSphere volume resource.
   *
   * @schema WorkflowSpecVolumes#vsphereVolume
   */
  readonly vsphereVolume?: WorkflowSpecVolumesVsphereVolume;

}

/**
 * WorkflowTemplateRef is a reference to a WorkflowTemplate resource.
 *
 * @schema WorkflowSpecWorkflowTemplateRef
 */
export interface WorkflowSpecWorkflowTemplateRef {
  /**
   * ClusterScope indicates the referred template is cluster scoped (i.e. a ClusterWorkflowTemplate).
   *
   * @schema WorkflowSpecWorkflowTemplateRef#clusterScope
   */
  readonly clusterScope?: boolean;

  /**
   * Name is the resource name of the workflow template.
   *
   * @schema WorkflowSpecWorkflowTemplateRef#name
   */
  readonly name?: string;

}

/**
 * Node affinity is a group of node affinity scheduling rules.
 *
 * @schema WorkflowSpecAffinityNodeAffinity
 */
export interface WorkflowSpecAffinityNodeAffinity {
  /**
   * The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
   *
   * @schema WorkflowSpecAffinityNodeAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: WorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms.
   *
   * @schema WorkflowSpecAffinityNodeAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: WorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution;

}

/**
 * Pod affinity is a group of inter pod affinity scheduling rules.
 *
 * @schema WorkflowSpecAffinityPodAffinity
 */
export interface WorkflowSpecAffinityPodAffinity {
  /**
   * The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
   *
   * @schema WorkflowSpecAffinityPodAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: WorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
   *
   * @schema WorkflowSpecAffinityPodAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: WorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution[];

}

/**
 * Pod anti affinity is a group of inter pod anti affinity scheduling rules.
 *
 * @schema WorkflowSpecAffinityPodAntiAffinity
 */
export interface WorkflowSpecAffinityPodAntiAffinity {
  /**
   * The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
   *
   * @schema WorkflowSpecAffinityPodAntiAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: WorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
   *
   * @schema WorkflowSpecAffinityPodAntiAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: WorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution[];

}

/**
 * Artifact indicates an artifact to place at a specified path
 *
 * @schema WorkflowSpecArgumentsArtifacts
 */
export interface WorkflowSpecArgumentsArtifacts {
  /**
   * ArchiveStrategy describes how to archive files/directory when saving artifacts
   *
   * @schema WorkflowSpecArgumentsArtifacts#archive
   */
  readonly archive?: WorkflowSpecArgumentsArtifactsArchive;

  /**
   * ArchiveLogs indicates if the container logs should be archived
   *
   * @schema WorkflowSpecArgumentsArtifacts#archiveLogs
   */
  readonly archiveLogs?: boolean;

  /**
   * ArtifactoryArtifact is the location of an artifactory artifact
   *
   * @schema WorkflowSpecArgumentsArtifacts#artifactory
   */
  readonly artifactory?: WorkflowSpecArgumentsArtifactsArtifactory;

  /**
   * From allows an artifact to reference an artifact from a previous step
   *
   * @schema WorkflowSpecArgumentsArtifacts#from
   */
  readonly from?: string;

  /**
   * GCSArtifact is the location of a GCS artifact
   *
   * @schema WorkflowSpecArgumentsArtifacts#gcs
   */
  readonly gcs?: WorkflowSpecArgumentsArtifactsGcs;

  /**
   * GitArtifact is the location of an git artifact
   *
   * @schema WorkflowSpecArgumentsArtifacts#git
   */
  readonly git?: WorkflowSpecArgumentsArtifactsGit;

  /**
   * GlobalName exports an output artifact to the global scope, making it available as '{{io.argoproj.workflow.v1alpha1.outputs.artifacts.XXXX}} and in workflow.status.outputs.artifacts
   *
   * @schema WorkflowSpecArgumentsArtifacts#globalName
   */
  readonly globalName?: string;

  /**
   * HDFSArtifact is the location of an HDFS artifact
   *
   * @schema WorkflowSpecArgumentsArtifacts#hdfs
   */
  readonly hdfs?: WorkflowSpecArgumentsArtifactsHdfs;

  /**
   * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
   *
   * @schema WorkflowSpecArgumentsArtifacts#http
   */
  readonly http?: WorkflowSpecArgumentsArtifactsHttp;

  /**
   * mode bits to use on this file, must be a value between 0 and 0777 set when loading input artifacts.
   *
   * @schema WorkflowSpecArgumentsArtifacts#mode
   */
  readonly mode?: number;

  /**
   * name of the artifact. must be unique within a template's inputs/outputs.
   *
   * @schema WorkflowSpecArgumentsArtifacts#name
   */
  readonly name: string;

  /**
   * Make Artifacts optional, if Artifacts doesn't generate or exist
   *
   * @schema WorkflowSpecArgumentsArtifacts#optional
   */
  readonly optional?: boolean;

  /**
   * OSSArtifact is the location of an Alibaba Cloud OSS artifact
   *
   * @schema WorkflowSpecArgumentsArtifacts#oss
   */
  readonly oss?: WorkflowSpecArgumentsArtifactsOss;

  /**
   * Path is the container path to the artifact
   *
   * @schema WorkflowSpecArgumentsArtifacts#path
   */
  readonly path?: string;

  /**
   * RawArtifact allows raw string content to be placed as an artifact in a container
   *
   * @schema WorkflowSpecArgumentsArtifacts#raw
   */
  readonly raw?: WorkflowSpecArgumentsArtifactsRaw;

  /**
   * S3Artifact is the location of an S3 artifact
   *
   * @schema WorkflowSpecArgumentsArtifacts#s3
   */
  readonly s3?: WorkflowSpecArgumentsArtifactsS3;

}

/**
 * Parameter indicate a passed string parameter to a service template with an optional default value
 *
 * @schema WorkflowSpecArgumentsParameters
 */
export interface WorkflowSpecArgumentsParameters {
  /**
   * @schema WorkflowSpecArgumentsParameters#default
   */
  readonly default?: string;

  /**
   * GlobalName exports an output parameter to the global scope, making it available as '{{io.argoproj.workflow.v1alpha1.outputs.parameters.XXXX}} and in workflow.status.outputs.parameters
   *
   * @schema WorkflowSpecArgumentsParameters#globalName
   */
  readonly globalName?: string;

  /**
   * Name is the parameter name
   *
   * @schema WorkflowSpecArgumentsParameters#name
   */
  readonly name: string;

  /**
   * @schema WorkflowSpecArgumentsParameters#value
   */
  readonly value?: string;

  /**
   * ValueFrom describes a location in which to obtain the value to a parameter
   *
   * @schema WorkflowSpecArgumentsParameters#valueFrom
   */
  readonly valueFrom?: WorkflowSpecArgumentsParametersValueFrom;

}

/**
 * PodDNSConfigOption defines DNS resolver options of a pod.
 *
 * @schema WorkflowSpecDnsConfigOptions
 */
export interface WorkflowSpecDnsConfigOptions {
  /**
   * Required.
   *
   * @schema WorkflowSpecDnsConfigOptions#name
   */
  readonly name?: string;

  /**
   * @schema WorkflowSpecDnsConfigOptions#value
   */
  readonly value?: string;

}

/**
 * Prometheus is a prometheus metric to be emitted
 *
 * @schema WorkflowSpecMetricsPrometheus
 */
export interface WorkflowSpecMetricsPrometheus {
  /**
   * Counter is a Counter prometheus metric
   *
   * @schema WorkflowSpecMetricsPrometheus#counter
   */
  readonly counter?: WorkflowSpecMetricsPrometheusCounter;

  /**
   * Gauge is a Gauge prometheus metric
   *
   * @schema WorkflowSpecMetricsPrometheus#gauge
   */
  readonly gauge?: WorkflowSpecMetricsPrometheusGauge;

  /**
   * Help is a string that describes the metric
   *
   * @schema WorkflowSpecMetricsPrometheus#help
   */
  readonly help: string;

  /**
   * Histogram is a Histogram prometheus metric
   *
   * @schema WorkflowSpecMetricsPrometheus#histogram
   */
  readonly histogram?: WorkflowSpecMetricsPrometheusHistogram;

  /**
   * Labels is a list of metric labels
   *
   * @schema WorkflowSpecMetricsPrometheus#labels
   */
  readonly labels?: WorkflowSpecMetricsPrometheusLabels[];

  /**
   * Name is the name of the metric
   *
   * @schema WorkflowSpecMetricsPrometheus#name
   */
  readonly name: string;

  /**
   * When is a conditional statement that decides when to emit the metric
   *
   * @schema WorkflowSpecMetricsPrometheus#when
   */
  readonly when?: string;

}

/**
 * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
 *
 * @schema WorkflowSpecPodDisruptionBudgetSelector
 */
export interface WorkflowSpecPodDisruptionBudgetSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema WorkflowSpecPodDisruptionBudgetSelector#matchExpressions
   */
  readonly matchExpressions?: WorkflowSpecPodDisruptionBudgetSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema WorkflowSpecPodDisruptionBudgetSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * SELinuxOptions are the labels to be applied to the container
 *
 * @schema WorkflowSpecSecurityContextSeLinuxOptions
 */
export interface WorkflowSpecSecurityContextSeLinuxOptions {
  /**
   * Level is SELinux level label that applies to the container.
   *
   * @schema WorkflowSpecSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * Role is a SELinux role label that applies to the container.
   *
   * @schema WorkflowSpecSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * Type is a SELinux type label that applies to the container.
   *
   * @schema WorkflowSpecSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * User is a SELinux user label that applies to the container.
   *
   * @schema WorkflowSpecSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * Sysctl defines a kernel parameter to be set
 *
 * @schema WorkflowSpecSecurityContextSysctls
 */
export interface WorkflowSpecSecurityContextSysctls {
  /**
   * Name of a property to set
   *
   * @schema WorkflowSpecSecurityContextSysctls#name
   */
  readonly name: string;

  /**
   * Value of a property to set
   *
   * @schema WorkflowSpecSecurityContextSysctls#value
   */
  readonly value: string;

}

/**
 * WindowsSecurityContextOptions contain Windows-specific options and credentials.
 *
 * @schema WorkflowSpecSecurityContextWindowsOptions
 */
export interface WorkflowSpecSecurityContextWindowsOptions {
  /**
   * GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
   *
   * @schema WorkflowSpecSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * GMSACredentialSpecName is the name of the GMSA credential spec to use. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
   *
   * @schema WorkflowSpecSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

}

/**
 * Affinity is a group of affinity scheduling rules.
 *
 * @schema WorkflowSpecTemplatesAffinity
 */
export interface WorkflowSpecTemplatesAffinity {
  /**
   * Node affinity is a group of node affinity scheduling rules.
   *
   * @schema WorkflowSpecTemplatesAffinity#nodeAffinity
   */
  readonly nodeAffinity?: WorkflowSpecTemplatesAffinityNodeAffinity;

  /**
   * Pod affinity is a group of inter pod affinity scheduling rules.
   *
   * @schema WorkflowSpecTemplatesAffinity#podAffinity
   */
  readonly podAffinity?: WorkflowSpecTemplatesAffinityPodAffinity;

  /**
   * Pod anti affinity is a group of inter pod anti affinity scheduling rules.
   *
   * @schema WorkflowSpecTemplatesAffinity#podAntiAffinity
   */
  readonly podAntiAffinity?: WorkflowSpecTemplatesAffinityPodAntiAffinity;

}

/**
 * ArtifactLocation describes a location for a single or multiple artifacts. It is used as single artifact in the context of inputs/outputs (e.g. outputs.artifacts.artname). It is also used to describe the location of multiple artifacts such as the archive location of a single workflow step, which the executor will use as a default location to store its files.
 *
 * @schema WorkflowSpecTemplatesArchiveLocation
 */
export interface WorkflowSpecTemplatesArchiveLocation {
  /**
   * ArchiveLogs indicates if the container logs should be archived
   *
   * @schema WorkflowSpecTemplatesArchiveLocation#archiveLogs
   */
  readonly archiveLogs?: boolean;

  /**
   * ArtifactoryArtifact is the location of an artifactory artifact
   *
   * @schema WorkflowSpecTemplatesArchiveLocation#artifactory
   */
  readonly artifactory?: WorkflowSpecTemplatesArchiveLocationArtifactory;

  /**
   * GCSArtifact is the location of a GCS artifact
   *
   * @schema WorkflowSpecTemplatesArchiveLocation#gcs
   */
  readonly gcs?: WorkflowSpecTemplatesArchiveLocationGcs;

  /**
   * GitArtifact is the location of an git artifact
   *
   * @schema WorkflowSpecTemplatesArchiveLocation#git
   */
  readonly git?: WorkflowSpecTemplatesArchiveLocationGit;

  /**
   * HDFSArtifact is the location of an HDFS artifact
   *
   * @schema WorkflowSpecTemplatesArchiveLocation#hdfs
   */
  readonly hdfs?: WorkflowSpecTemplatesArchiveLocationHdfs;

  /**
   * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
   *
   * @schema WorkflowSpecTemplatesArchiveLocation#http
   */
  readonly http?: WorkflowSpecTemplatesArchiveLocationHttp;

  /**
   * OSSArtifact is the location of an Alibaba Cloud OSS artifact
   *
   * @schema WorkflowSpecTemplatesArchiveLocation#oss
   */
  readonly oss?: WorkflowSpecTemplatesArchiveLocationOss;

  /**
   * RawArtifact allows raw string content to be placed as an artifact in a container
   *
   * @schema WorkflowSpecTemplatesArchiveLocation#raw
   */
  readonly raw?: WorkflowSpecTemplatesArchiveLocationRaw;

  /**
   * S3Artifact is the location of an S3 artifact
   *
   * @schema WorkflowSpecTemplatesArchiveLocation#s3
   */
  readonly s3?: WorkflowSpecTemplatesArchiveLocationS3;

}

/**
 * Arguments to a template
 *
 * @schema WorkflowSpecTemplatesArguments
 */
export interface WorkflowSpecTemplatesArguments {
  /**
   * Artifacts is the list of artifacts to pass to the template or workflow
   *
   * @schema WorkflowSpecTemplatesArguments#artifacts
   */
  readonly artifacts?: WorkflowSpecTemplatesArgumentsArtifacts[];

  /**
   * Parameters is the list of parameters to pass to the template or workflow
   *
   * @schema WorkflowSpecTemplatesArguments#parameters
   */
  readonly parameters?: WorkflowSpecTemplatesArgumentsParameters[];

}

/**
 * A single application container that you want to run within a pod.
 *
 * @schema WorkflowSpecTemplatesContainer
 */
export interface WorkflowSpecTemplatesContainer {
  /**
   * Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
   *
   * @schema WorkflowSpecTemplatesContainer#args
   */
  readonly args?: string[];

  /**
   * Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
   *
   * @schema WorkflowSpecTemplatesContainer#command
   */
  readonly command?: string[];

  /**
   * List of environment variables to set in the container. Cannot be updated.
   *
   * @schema WorkflowSpecTemplatesContainer#env
   */
  readonly env?: WorkflowSpecTemplatesContainerEnv[];

  /**
   * List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
   *
   * @schema WorkflowSpecTemplatesContainer#envFrom
   */
  readonly envFrom?: WorkflowSpecTemplatesContainerEnvFrom[];

  /**
   * Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.
   *
   * @schema WorkflowSpecTemplatesContainer#image
   */
  readonly image?: string;

  /**
   * Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
   *
   * @default Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
   * @schema WorkflowSpecTemplatesContainer#imagePullPolicy
   */
  readonly imagePullPolicy?: string;

  /**
   * Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.
   *
   * @schema WorkflowSpecTemplatesContainer#lifecycle
   */
  readonly lifecycle?: WorkflowSpecTemplatesContainerLifecycle;

  /**
   * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
   *
   * @schema WorkflowSpecTemplatesContainer#livenessProbe
   */
  readonly livenessProbe?: WorkflowSpecTemplatesContainerLivenessProbe;

  /**
   * Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
   *
   * @schema WorkflowSpecTemplatesContainer#name
   */
  readonly name?: string;

  /**
   * List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Cannot be updated.
   *
   * @schema WorkflowSpecTemplatesContainer#ports
   */
  readonly ports?: WorkflowSpecTemplatesContainerPorts[];

  /**
   * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
   *
   * @schema WorkflowSpecTemplatesContainer#readinessProbe
   */
  readonly readinessProbe?: WorkflowSpecTemplatesContainerReadinessProbe;

  /**
   * ResourceRequirements describes the compute resource requirements.
   *
   * @schema WorkflowSpecTemplatesContainer#resources
   */
  readonly resources?: WorkflowSpecTemplatesContainerResources;

  /**
   * SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.
   *
   * @schema WorkflowSpecTemplatesContainer#securityContext
   */
  readonly securityContext?: WorkflowSpecTemplatesContainerSecurityContext;

  /**
   * Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
   *
   * @default false.
   * @schema WorkflowSpecTemplatesContainer#stdin
   */
  readonly stdin?: boolean;

  /**
   * Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
   *
   * @default false
   * @schema WorkflowSpecTemplatesContainer#stdinOnce
   */
  readonly stdinOnce?: boolean;

  /**
   * Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.
   *
   * @default dev/termination-log. Cannot be updated.
   * @schema WorkflowSpecTemplatesContainer#terminationMessagePath
   */
  readonly terminationMessagePath?: string;

  /**
   * Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
   *
   * @default File. Cannot be updated.
   * @schema WorkflowSpecTemplatesContainer#terminationMessagePolicy
   */
  readonly terminationMessagePolicy?: string;

  /**
   * Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
   *
   * @default false.
   * @schema WorkflowSpecTemplatesContainer#tty
   */
  readonly tty?: boolean;

  /**
   * volumeDevices is the list of block devices to be used by the container. This is a beta feature.
   *
   * @schema WorkflowSpecTemplatesContainer#volumeDevices
   */
  readonly volumeDevices?: WorkflowSpecTemplatesContainerVolumeDevices[];

  /**
   * Pod volumes to mount into the container's filesystem. Cannot be updated.
   *
   * @schema WorkflowSpecTemplatesContainer#volumeMounts
   */
  readonly volumeMounts?: WorkflowSpecTemplatesContainerVolumeMounts[];

  /**
   * Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
   *
   * @schema WorkflowSpecTemplatesContainer#workingDir
   */
  readonly workingDir?: string;

}

/**
 * DAGTemplate is a template subtype for directed acyclic graph templates
 *
 * @schema WorkflowSpecTemplatesDag
 */
export interface WorkflowSpecTemplatesDag {
  /**
   * This flag is for DAG logic. The DAG logic has a built-in "fail fast" feature to stop scheduling new steps, as soon as it detects that one of the DAG nodes is failed. Then it waits until all DAG nodes are completed before failing the DAG itself. The FailFast flag default is true,  if set to false, it will allow a DAG to run all branches of the DAG to completion (either success or failure), regardless of the failed outcomes of branches in the DAG. More info and example about this feature at https://github.com/argoproj/argo/issues/1442
   *
   * @schema WorkflowSpecTemplatesDag#failFast
   */
  readonly failFast?: boolean;

  /**
   * Target are one or more names of targets to execute in a DAG
   *
   * @schema WorkflowSpecTemplatesDag#target
   */
  readonly target?: string;

  /**
   * Tasks are a list of DAG tasks
   *
   * @schema WorkflowSpecTemplatesDag#tasks
   */
  readonly tasks: WorkflowSpecTemplatesDagTasks[];

}

/**
 * ExecutorConfig holds configurations of an executor container.
 *
 * @schema WorkflowSpecTemplatesExecutor
 */
export interface WorkflowSpecTemplatesExecutor {
  /**
   * ServiceAccountName specifies the service account name of the executor container.
   *
   * @schema WorkflowSpecTemplatesExecutor#serviceAccountName
   */
  readonly serviceAccountName?: string;

}

/**
 * HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the pod's hosts file.
 *
 * @schema WorkflowSpecTemplatesHostAliases
 */
export interface WorkflowSpecTemplatesHostAliases {
  /**
   * Hostnames for the above IP address.
   *
   * @schema WorkflowSpecTemplatesHostAliases#hostnames
   */
  readonly hostnames?: string[];

  /**
   * IP address of the host file entry.
   *
   * @schema WorkflowSpecTemplatesHostAliases#ip
   */
  readonly ip?: string;

}

/**
 * UserContainer is a container specified by a user.
 *
 * @schema WorkflowSpecTemplatesInitContainers
 */
export interface WorkflowSpecTemplatesInitContainers {
  /**
   * Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
   *
   * @schema WorkflowSpecTemplatesInitContainers#args
   */
  readonly args?: string[];

  /**
   * Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
   *
   * @schema WorkflowSpecTemplatesInitContainers#command
   */
  readonly command?: string[];

  /**
   * List of environment variables to set in the container. Cannot be updated.
   *
   * @schema WorkflowSpecTemplatesInitContainers#env
   */
  readonly env?: WorkflowSpecTemplatesInitContainersEnv[];

  /**
   * List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
   *
   * @schema WorkflowSpecTemplatesInitContainers#envFrom
   */
  readonly envFrom?: WorkflowSpecTemplatesInitContainersEnvFrom[];

  /**
   * Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.
   *
   * @schema WorkflowSpecTemplatesInitContainers#image
   */
  readonly image?: string;

  /**
   * Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
   *
   * @default Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
   * @schema WorkflowSpecTemplatesInitContainers#imagePullPolicy
   */
  readonly imagePullPolicy?: string;

  /**
   * Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.
   *
   * @schema WorkflowSpecTemplatesInitContainers#lifecycle
   */
  readonly lifecycle?: WorkflowSpecTemplatesInitContainersLifecycle;

  /**
   * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
   *
   * @schema WorkflowSpecTemplatesInitContainers#livenessProbe
   */
  readonly livenessProbe?: WorkflowSpecTemplatesInitContainersLivenessProbe;

  /**
   * MirrorVolumeMounts will mount the same volumes specified in the main container to the container (including artifacts), at the same mountPaths. This enables dind daemon to partially see the same filesystem as the main container in order to use features such as docker volume binding
   *
   * @schema WorkflowSpecTemplatesInitContainers#mirrorVolumeMounts
   */
  readonly mirrorVolumeMounts?: boolean;

  /**
   * Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
   *
   * @schema WorkflowSpecTemplatesInitContainers#name
   */
  readonly name: string;

  /**
   * List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Cannot be updated.
   *
   * @schema WorkflowSpecTemplatesInitContainers#ports
   */
  readonly ports?: WorkflowSpecTemplatesInitContainersPorts[];

  /**
   * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
   *
   * @schema WorkflowSpecTemplatesInitContainers#readinessProbe
   */
  readonly readinessProbe?: WorkflowSpecTemplatesInitContainersReadinessProbe;

  /**
   * ResourceRequirements describes the compute resource requirements.
   *
   * @schema WorkflowSpecTemplatesInitContainers#resources
   */
  readonly resources?: WorkflowSpecTemplatesInitContainersResources;

  /**
   * SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.
   *
   * @schema WorkflowSpecTemplatesInitContainers#securityContext
   */
  readonly securityContext?: WorkflowSpecTemplatesInitContainersSecurityContext;

  /**
   * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
   *
   * @schema WorkflowSpecTemplatesInitContainers#startupProbe
   */
  readonly startupProbe?: WorkflowSpecTemplatesInitContainersStartupProbe;

  /**
   * Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
   *
   * @default false.
   * @schema WorkflowSpecTemplatesInitContainers#stdin
   */
  readonly stdin?: boolean;

  /**
   * Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
   *
   * @default false
   * @schema WorkflowSpecTemplatesInitContainers#stdinOnce
   */
  readonly stdinOnce?: boolean;

  /**
   * Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.
   *
   * @default dev/termination-log. Cannot be updated.
   * @schema WorkflowSpecTemplatesInitContainers#terminationMessagePath
   */
  readonly terminationMessagePath?: string;

  /**
   * Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
   *
   * @default File. Cannot be updated.
   * @schema WorkflowSpecTemplatesInitContainers#terminationMessagePolicy
   */
  readonly terminationMessagePolicy?: string;

  /**
   * Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
   *
   * @default false.
   * @schema WorkflowSpecTemplatesInitContainers#tty
   */
  readonly tty?: boolean;

  /**
   * volumeDevices is the list of block devices to be used by the container. This is a beta feature.
   *
   * @schema WorkflowSpecTemplatesInitContainers#volumeDevices
   */
  readonly volumeDevices?: WorkflowSpecTemplatesInitContainersVolumeDevices[];

  /**
   * Pod volumes to mount into the container's filesystem. Cannot be updated.
   *
   * @schema WorkflowSpecTemplatesInitContainers#volumeMounts
   */
  readonly volumeMounts?: WorkflowSpecTemplatesInitContainersVolumeMounts[];

  /**
   * Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
   *
   * @schema WorkflowSpecTemplatesInitContainers#workingDir
   */
  readonly workingDir?: string;

}

/**
 * Inputs are the mechanism for passing parameters, artifacts, volumes from one template to another
 *
 * @schema WorkflowSpecTemplatesInputs
 */
export interface WorkflowSpecTemplatesInputs {
  /**
   * Artifact are a list of artifacts passed as inputs
   *
   * @schema WorkflowSpecTemplatesInputs#artifacts
   */
  readonly artifacts?: WorkflowSpecTemplatesInputsArtifacts[];

  /**
   * Parameters are a list of parameters passed as inputs
   *
   * @schema WorkflowSpecTemplatesInputs#parameters
   */
  readonly parameters?: WorkflowSpecTemplatesInputsParameters[];

}

/**
 * Pod metdata
 *
 * @schema WorkflowSpecTemplatesMetadata
 */
export interface WorkflowSpecTemplatesMetadata {
  /**
   * @schema WorkflowSpecTemplatesMetadata#annotations
   */
  readonly annotations?: { [key: string]: string };

  /**
   * @schema WorkflowSpecTemplatesMetadata#labels
   */
  readonly labels?: { [key: string]: string };

}

/**
 * Metrics are a list of metrics emitted from a Workflow/Template
 *
 * @schema WorkflowSpecTemplatesMetrics
 */
export interface WorkflowSpecTemplatesMetrics {
  /**
   * Prometheus is a list of prometheus metrics to be emitted
   *
   * @schema WorkflowSpecTemplatesMetrics#prometheus
   */
  readonly prometheus: WorkflowSpecTemplatesMetricsPrometheus[];

}

/**
 * Outputs hold parameters, artifacts, and results from a step
 *
 * @schema WorkflowSpecTemplatesOutputs
 */
export interface WorkflowSpecTemplatesOutputs {
  /**
   * Artifacts holds the list of output artifacts produced by a step
   *
   * @schema WorkflowSpecTemplatesOutputs#artifacts
   */
  readonly artifacts?: WorkflowSpecTemplatesOutputsArtifacts[];

  /**
   * ExitCode holds the exit code of a script template
   *
   * @schema WorkflowSpecTemplatesOutputs#exitCode
   */
  readonly exitCode?: string;

  /**
   * Parameters holds the list of output parameters produced by a step
   *
   * @schema WorkflowSpecTemplatesOutputs#parameters
   */
  readonly parameters?: WorkflowSpecTemplatesOutputsParameters[];

  /**
   * Result holds the result (stdout) of a script template
   *
   * @schema WorkflowSpecTemplatesOutputs#result
   */
  readonly result?: string;

}

/**
 * ResourceTemplate is a template subtype to manipulate kubernetes resources
 *
 * @schema WorkflowSpecTemplatesResource
 */
export interface WorkflowSpecTemplatesResource {
  /**
   * Action is the action to perform to the resource. Must be one of: get, create, apply, delete, replace, patch
   *
   * @schema WorkflowSpecTemplatesResource#action
   */
  readonly action: string;

  /**
   * FailureCondition is a label selector expression which describes the conditions of the k8s resource in which the step was considered failed
   *
   * @schema WorkflowSpecTemplatesResource#failureCondition
   */
  readonly failureCondition?: string;

  /**
   * Flags is a set of additional options passed to kubectl before submitting a resource I.e. to disable resource validation: flags: [
	"--validate=false"  # disable resource validation
]
   *
   * @schema WorkflowSpecTemplatesResource#flags
   */
  readonly flags?: string[];

  /**
   * Manifest contains the kubernetes manifest
   *
   * @schema WorkflowSpecTemplatesResource#manifest
   */
  readonly manifest?: string;

  /**
   * MergeStrategy is the strategy used to merge a patch. It defaults to "strategic" Must be one of: strategic, merge, json
   *
   * @schema WorkflowSpecTemplatesResource#mergeStrategy
   */
  readonly mergeStrategy?: string;

  /**
   * SetOwnerReference sets the reference to the workflow on the OwnerReference of generated resource.
   *
   * @schema WorkflowSpecTemplatesResource#setOwnerReference
   */
  readonly setOwnerReference?: boolean;

  /**
   * SuccessCondition is a label selector expression which describes the conditions of the k8s resource in which it is acceptable to proceed to the following step
   *
   * @schema WorkflowSpecTemplatesResource#successCondition
   */
  readonly successCondition?: string;

}

/**
 * RetryStrategy provides controls on how to retry a workflow step
 *
 * @schema WorkflowSpecTemplatesRetryStrategy
 */
export interface WorkflowSpecTemplatesRetryStrategy {
  /**
   * Backoff is a backoff strategy to use within retryStrategy
   *
   * @schema WorkflowSpecTemplatesRetryStrategy#backoff
   */
  readonly backoff?: WorkflowSpecTemplatesRetryStrategyBackoff;

  /**
   * Limit is the maximum number of attempts when retrying a container
   *
   * @schema WorkflowSpecTemplatesRetryStrategy#limit
   */
  readonly limit?: number;

  /**
   * RetryPolicy is a policy of NodePhase statuses that will be retried
   *
   * @schema WorkflowSpecTemplatesRetryStrategy#retryPolicy
   */
  readonly retryPolicy?: string;

}

/**
 * ScriptTemplate is a template subtype to enable scripting through code steps
 *
 * @schema WorkflowSpecTemplatesScript
 */
export interface WorkflowSpecTemplatesScript {
  /**
   * Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
   *
   * @schema WorkflowSpecTemplatesScript#args
   */
  readonly args?: string[];

  /**
   * Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
   *
   * @schema WorkflowSpecTemplatesScript#command
   */
  readonly command?: string[];

  /**
   * List of environment variables to set in the container. Cannot be updated.
   *
   * @schema WorkflowSpecTemplatesScript#env
   */
  readonly env?: WorkflowSpecTemplatesScriptEnv[];

  /**
   * List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
   *
   * @schema WorkflowSpecTemplatesScript#envFrom
   */
  readonly envFrom?: WorkflowSpecTemplatesScriptEnvFrom[];

  /**
   * Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.
   *
   * @schema WorkflowSpecTemplatesScript#image
   */
  readonly image?: string;

  /**
   * Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
   *
   * @default Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
   * @schema WorkflowSpecTemplatesScript#imagePullPolicy
   */
  readonly imagePullPolicy?: string;

  /**
   * Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.
   *
   * @schema WorkflowSpecTemplatesScript#lifecycle
   */
  readonly lifecycle?: WorkflowSpecTemplatesScriptLifecycle;

  /**
   * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
   *
   * @schema WorkflowSpecTemplatesScript#livenessProbe
   */
  readonly livenessProbe?: WorkflowSpecTemplatesScriptLivenessProbe;

  /**
   * Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
   *
   * @schema WorkflowSpecTemplatesScript#name
   */
  readonly name?: string;

  /**
   * List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Cannot be updated.
   *
   * @schema WorkflowSpecTemplatesScript#ports
   */
  readonly ports?: WorkflowSpecTemplatesScriptPorts[];

  /**
   * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
   *
   * @schema WorkflowSpecTemplatesScript#readinessProbe
   */
  readonly readinessProbe?: WorkflowSpecTemplatesScriptReadinessProbe;

  /**
   * ResourceRequirements describes the compute resource requirements.
   *
   * @schema WorkflowSpecTemplatesScript#resources
   */
  readonly resources?: WorkflowSpecTemplatesScriptResources;

  /**
   * SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.
   *
   * @schema WorkflowSpecTemplatesScript#securityContext
   */
  readonly securityContext?: WorkflowSpecTemplatesScriptSecurityContext;

  /**
   * Source contains the source code of the script to execute
   *
   * @schema WorkflowSpecTemplatesScript#source
   */
  readonly source: string;

  /**
   * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
   *
   * @schema WorkflowSpecTemplatesScript#startupProbe
   */
  readonly startupProbe?: WorkflowSpecTemplatesScriptStartupProbe;

  /**
   * Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
   *
   * @default false.
   * @schema WorkflowSpecTemplatesScript#stdin
   */
  readonly stdin?: boolean;

  /**
   * Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
   *
   * @default false
   * @schema WorkflowSpecTemplatesScript#stdinOnce
   */
  readonly stdinOnce?: boolean;

  /**
   * Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.
   *
   * @default dev/termination-log. Cannot be updated.
   * @schema WorkflowSpecTemplatesScript#terminationMessagePath
   */
  readonly terminationMessagePath?: string;

  /**
   * Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
   *
   * @default File. Cannot be updated.
   * @schema WorkflowSpecTemplatesScript#terminationMessagePolicy
   */
  readonly terminationMessagePolicy?: string;

  /**
   * Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
   *
   * @default false.
   * @schema WorkflowSpecTemplatesScript#tty
   */
  readonly tty?: boolean;

  /**
   * volumeDevices is the list of block devices to be used by the container. This is a beta feature.
   *
   * @schema WorkflowSpecTemplatesScript#volumeDevices
   */
  readonly volumeDevices?: WorkflowSpecTemplatesScriptVolumeDevices[];

  /**
   * Pod volumes to mount into the container's filesystem. Cannot be updated.
   *
   * @schema WorkflowSpecTemplatesScript#volumeMounts
   */
  readonly volumeMounts?: WorkflowSpecTemplatesScriptVolumeMounts[];

  /**
   * Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
   *
   * @schema WorkflowSpecTemplatesScript#workingDir
   */
  readonly workingDir?: string;

}

/**
 * PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext.
 *
 * @schema WorkflowSpecTemplatesSecurityContext
 */
export interface WorkflowSpecTemplatesSecurityContext {
  /**
   * A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:

1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----

If unset, the Kubelet will not modify the ownership and permissions of any volume.
   *
   * @schema WorkflowSpecTemplatesSecurityContext#fsGroup
   */
  readonly fsGroup?: number;

  /**
   * The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
   *
   * @schema WorkflowSpecTemplatesSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema WorkflowSpecTemplatesSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
   *
   * @default user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
   * @schema WorkflowSpecTemplatesSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * SELinuxOptions are the labels to be applied to the container
   *
   * @schema WorkflowSpecTemplatesSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: WorkflowSpecTemplatesSecurityContextSeLinuxOptions;

  /**
   * A list of groups applied to the first process run in each container, in addition to the container's primary GID.  If unspecified, no groups will be added to any container.
   *
   * @schema WorkflowSpecTemplatesSecurityContext#supplementalGroups
   */
  readonly supplementalGroups?: number[];

  /**
   * Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch.
   *
   * @schema WorkflowSpecTemplatesSecurityContext#sysctls
   */
  readonly sysctls?: WorkflowSpecTemplatesSecurityContextSysctls[];

  /**
   * WindowsSecurityContextOptions contain Windows-specific options and credentials.
   *
   * @schema WorkflowSpecTemplatesSecurityContext#windowsOptions
   */
  readonly windowsOptions?: WorkflowSpecTemplatesSecurityContextWindowsOptions;

}

/**
 * UserContainer is a container specified by a user.
 *
 * @schema WorkflowSpecTemplatesSidecars
 */
export interface WorkflowSpecTemplatesSidecars {
  /**
   * Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
   *
   * @schema WorkflowSpecTemplatesSidecars#args
   */
  readonly args?: string[];

  /**
   * Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
   *
   * @schema WorkflowSpecTemplatesSidecars#command
   */
  readonly command?: string[];

  /**
   * List of environment variables to set in the container. Cannot be updated.
   *
   * @schema WorkflowSpecTemplatesSidecars#env
   */
  readonly env?: WorkflowSpecTemplatesSidecarsEnv[];

  /**
   * List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
   *
   * @schema WorkflowSpecTemplatesSidecars#envFrom
   */
  readonly envFrom?: WorkflowSpecTemplatesSidecarsEnvFrom[];

  /**
   * Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.
   *
   * @schema WorkflowSpecTemplatesSidecars#image
   */
  readonly image?: string;

  /**
   * Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
   *
   * @default Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
   * @schema WorkflowSpecTemplatesSidecars#imagePullPolicy
   */
  readonly imagePullPolicy?: string;

  /**
   * Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.
   *
   * @schema WorkflowSpecTemplatesSidecars#lifecycle
   */
  readonly lifecycle?: WorkflowSpecTemplatesSidecarsLifecycle;

  /**
   * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
   *
   * @schema WorkflowSpecTemplatesSidecars#livenessProbe
   */
  readonly livenessProbe?: WorkflowSpecTemplatesSidecarsLivenessProbe;

  /**
   * MirrorVolumeMounts will mount the same volumes specified in the main container to the container (including artifacts), at the same mountPaths. This enables dind daemon to partially see the same filesystem as the main container in order to use features such as docker volume binding
   *
   * @schema WorkflowSpecTemplatesSidecars#mirrorVolumeMounts
   */
  readonly mirrorVolumeMounts?: boolean;

  /**
   * Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
   *
   * @schema WorkflowSpecTemplatesSidecars#name
   */
  readonly name: string;

  /**
   * List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Cannot be updated.
   *
   * @schema WorkflowSpecTemplatesSidecars#ports
   */
  readonly ports?: WorkflowSpecTemplatesSidecarsPorts[];

  /**
   * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
   *
   * @schema WorkflowSpecTemplatesSidecars#readinessProbe
   */
  readonly readinessProbe?: WorkflowSpecTemplatesSidecarsReadinessProbe;

  /**
   * ResourceRequirements describes the compute resource requirements.
   *
   * @schema WorkflowSpecTemplatesSidecars#resources
   */
  readonly resources?: WorkflowSpecTemplatesSidecarsResources;

  /**
   * SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.
   *
   * @schema WorkflowSpecTemplatesSidecars#securityContext
   */
  readonly securityContext?: WorkflowSpecTemplatesSidecarsSecurityContext;

  /**
   * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
   *
   * @schema WorkflowSpecTemplatesSidecars#startupProbe
   */
  readonly startupProbe?: WorkflowSpecTemplatesSidecarsStartupProbe;

  /**
   * Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
   *
   * @default false.
   * @schema WorkflowSpecTemplatesSidecars#stdin
   */
  readonly stdin?: boolean;

  /**
   * Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
   *
   * @default false
   * @schema WorkflowSpecTemplatesSidecars#stdinOnce
   */
  readonly stdinOnce?: boolean;

  /**
   * Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.
   *
   * @default dev/termination-log. Cannot be updated.
   * @schema WorkflowSpecTemplatesSidecars#terminationMessagePath
   */
  readonly terminationMessagePath?: string;

  /**
   * Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
   *
   * @default File. Cannot be updated.
   * @schema WorkflowSpecTemplatesSidecars#terminationMessagePolicy
   */
  readonly terminationMessagePolicy?: string;

  /**
   * Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
   *
   * @default false.
   * @schema WorkflowSpecTemplatesSidecars#tty
   */
  readonly tty?: boolean;

  /**
   * volumeDevices is the list of block devices to be used by the container. This is a beta feature.
   *
   * @schema WorkflowSpecTemplatesSidecars#volumeDevices
   */
  readonly volumeDevices?: WorkflowSpecTemplatesSidecarsVolumeDevices[];

  /**
   * Pod volumes to mount into the container's filesystem. Cannot be updated.
   *
   * @schema WorkflowSpecTemplatesSidecars#volumeMounts
   */
  readonly volumeMounts?: WorkflowSpecTemplatesSidecarsVolumeMounts[];

  /**
   * Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
   *
   * @schema WorkflowSpecTemplatesSidecars#workingDir
   */
  readonly workingDir?: string;

}

/**
 * WorkflowStep is a reference to a template to execute in a series of step
 *
 * @schema WorkflowSpecTemplatesSteps
 */
export interface WorkflowSpecTemplatesSteps {
  /**
   * Arguments to a template
   *
   * @schema WorkflowSpecTemplatesSteps#arguments
   */
  readonly arguments?: WorkflowSpecTemplatesStepsArguments;

  /**
   * ContinueOn defines if a workflow should continue even if a task or step fails/errors. It can be specified if the workflow should continue when the pod errors, fails or both.
   *
   * @schema WorkflowSpecTemplatesSteps#continueOn
   */
  readonly continueOn?: WorkflowSpecTemplatesStepsContinueOn;

  /**
   * Name of the step
   *
   * @schema WorkflowSpecTemplatesSteps#name
   */
  readonly name?: string;

  /**
   * OnExit is a template reference which is invoked at the end of the template, irrespective of the success, failure, or error of the primary template.
   *
   * @schema WorkflowSpecTemplatesSteps#onExit
   */
  readonly onExit?: string;

  /**
   * Template is the name of the template to execute as the step
   *
   * @schema WorkflowSpecTemplatesSteps#template
   */
  readonly template?: string;

  /**
   * TemplateRef is a reference of template resource.
   *
   * @schema WorkflowSpecTemplatesSteps#templateRef
   */
  readonly templateRef?: WorkflowSpecTemplatesStepsTemplateRef;

  /**
   * When is an expression in which the step should conditionally execute
   *
   * @schema WorkflowSpecTemplatesSteps#when
   */
  readonly when?: string;

  /**
   * WithItems expands a step into multiple parallel steps from the items in the list
   *
   * @schema WorkflowSpecTemplatesSteps#withItems
   */
  readonly withItems?: string[];

  /**
   * WithParam expands a step into multiple parallel steps from the value in the parameter, which is expected to be a JSON list.
   *
   * @schema WorkflowSpecTemplatesSteps#withParam
   */
  readonly withParam?: string;

  /**
   * Sequence expands a workflow step into numeric range
   *
   * @schema WorkflowSpecTemplatesSteps#withSequence
   */
  readonly withSequence?: WorkflowSpecTemplatesStepsWithSequence;

}

/**
 * SuspendTemplate is a template subtype to suspend a workflow at a predetermined point in time
 *
 * @schema WorkflowSpecTemplatesSuspend
 */
export interface WorkflowSpecTemplatesSuspend {
  /**
   * Duration is the seconds to wait before automatically resuming a template
   *
   * @schema WorkflowSpecTemplatesSuspend#duration
   */
  readonly duration?: string;

}

/**
 * TemplateRef is a reference of template resource.
 *
 * @schema WorkflowSpecTemplatesTemplateRef
 */
export interface WorkflowSpecTemplatesTemplateRef {
  /**
   * ClusterScope indicates the referred template is cluster scoped (i.e. a ClusterWorkflowTemplate).
   *
   * @schema WorkflowSpecTemplatesTemplateRef#clusterScope
   */
  readonly clusterScope?: boolean;

  /**
   * Name is the resource name of the template.
   *
   * @schema WorkflowSpecTemplatesTemplateRef#name
   */
  readonly name?: string;

  /**
   * RuntimeResolution skips validation at creation time. By enabling this option, you can create the referred workflow template before the actual runtime.
   *
   * @schema WorkflowSpecTemplatesTemplateRef#runtimeResolution
   */
  readonly runtimeResolution?: boolean;

  /**
   * Template is the name of referred template in the resource.
   *
   * @schema WorkflowSpecTemplatesTemplateRef#template
   */
  readonly template?: string;

}

/**
 * The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
 *
 * @schema WorkflowSpecTemplatesTolerations
 */
export interface WorkflowSpecTemplatesTolerations {
  /**
   * Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
   *
   * @schema WorkflowSpecTemplatesTolerations#effect
   */
  readonly effect?: string;

  /**
   * Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
   *
   * @schema WorkflowSpecTemplatesTolerations#key
   */
  readonly key?: string;

  /**
   * Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
   *
   * @default Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
   * @schema WorkflowSpecTemplatesTolerations#operator
   */
  readonly operator?: string;

  /**
   * TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
   *
   * @schema WorkflowSpecTemplatesTolerations#tolerationSeconds
   */
  readonly tolerationSeconds?: number;

  /**
   * Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
   *
   * @schema WorkflowSpecTemplatesTolerations#value
   */
  readonly value?: string;

}

/**
 * Volume represents a named volume in a pod that may be accessed by any container in the pod.
 *
 * @schema WorkflowSpecTemplatesVolumes
 */
export interface WorkflowSpecTemplatesVolumes {
  /**
   * Represents a Persistent Disk resource in AWS.

An AWS EBS disk must exist before mounting to a container. The disk must also be in the same AWS zone as the kubelet. An AWS EBS disk can only be mounted as read/write once. AWS EBS volumes support ownership management and SELinux relabeling.
   *
   * @schema WorkflowSpecTemplatesVolumes#awsElasticBlockStore
   */
  readonly awsElasticBlockStore?: WorkflowSpecTemplatesVolumesAwsElasticBlockStore;

  /**
   * AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
   *
   * @schema WorkflowSpecTemplatesVolumes#azureDisk
   */
  readonly azureDisk?: WorkflowSpecTemplatesVolumesAzureDisk;

  /**
   * AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
   *
   * @schema WorkflowSpecTemplatesVolumes#azureFile
   */
  readonly azureFile?: WorkflowSpecTemplatesVolumesAzureFile;

  /**
   * Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling.
   *
   * @schema WorkflowSpecTemplatesVolumes#cephfs
   */
  readonly cephfs?: WorkflowSpecTemplatesVolumesCephfs;

  /**
   * Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling.
   *
   * @schema WorkflowSpecTemplatesVolumes#cinder
   */
  readonly cinder?: WorkflowSpecTemplatesVolumesCinder;

  /**
   * Adapts a ConfigMap into a volume.

The contents of the target ConfigMap's Data field will be presented in a volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. ConfigMap volumes support ownership management and SELinux relabeling.
   *
   * @schema WorkflowSpecTemplatesVolumes#configMap
   */
  readonly configMap?: WorkflowSpecTemplatesVolumesConfigMap;

  /**
   * Represents a source location of a volume to mount, managed by an external CSI driver
   *
   * @schema WorkflowSpecTemplatesVolumes#csi
   */
  readonly csi?: WorkflowSpecTemplatesVolumesCsi;

  /**
   * DownwardAPIVolumeSource represents a volume containing downward API info. Downward API volumes support ownership management and SELinux relabeling.
   *
   * @schema WorkflowSpecTemplatesVolumes#downwardAPI
   */
  readonly downwardAPI?: WorkflowSpecTemplatesVolumesDownwardApi;

  /**
   * Represents an empty directory for a pod. Empty directory volumes support ownership management and SELinux relabeling.
   *
   * @schema WorkflowSpecTemplatesVolumes#emptyDir
   */
  readonly emptyDir?: WorkflowSpecTemplatesVolumesEmptyDir;

  /**
   * Represents a Fibre Channel volume. Fibre Channel volumes can only be mounted as read/write once. Fibre Channel volumes support ownership management and SELinux relabeling.
   *
   * @schema WorkflowSpecTemplatesVolumes#fc
   */
  readonly fc?: WorkflowSpecTemplatesVolumesFc;

  /**
   * FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
   *
   * @schema WorkflowSpecTemplatesVolumes#flexVolume
   */
  readonly flexVolume?: WorkflowSpecTemplatesVolumesFlexVolume;

  /**
   * Represents a Flocker volume mounted by the Flocker agent. One and only one of datasetName and datasetUUID should be set. Flocker volumes do not support ownership management or SELinux relabeling.
   *
   * @schema WorkflowSpecTemplatesVolumes#flocker
   */
  readonly flocker?: WorkflowSpecTemplatesVolumesFlocker;

  /**
   * Represents a Persistent Disk resource in Google Compute Engine.

A GCE PD must exist before mounting to a container. The disk must also be in the same GCE project and zone as the kubelet. A GCE PD can only be mounted as read/write once or read-only many times. GCE PDs support ownership management and SELinux relabeling.
   *
   * @schema WorkflowSpecTemplatesVolumes#gcePersistentDisk
   */
  readonly gcePersistentDisk?: WorkflowSpecTemplatesVolumesGcePersistentDisk;

  /**
   * Represents a volume that is populated with the contents of a git repository. Git repo volumes do not support ownership management. Git repo volumes support SELinux relabeling.

DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.
   *
   * @schema WorkflowSpecTemplatesVolumes#gitRepo
   */
  readonly gitRepo?: WorkflowSpecTemplatesVolumesGitRepo;

  /**
   * Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling.
   *
   * @schema WorkflowSpecTemplatesVolumes#glusterfs
   */
  readonly glusterfs?: WorkflowSpecTemplatesVolumesGlusterfs;

  /**
   * Represents a host path mapped into a pod. Host path volumes do not support ownership management or SELinux relabeling.
   *
   * @schema WorkflowSpecTemplatesVolumes#hostPath
   */
  readonly hostPath?: WorkflowSpecTemplatesVolumesHostPath;

  /**
   * Represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling.
   *
   * @schema WorkflowSpecTemplatesVolumes#iscsi
   */
  readonly iscsi?: WorkflowSpecTemplatesVolumesIscsi;

  /**
   * Volume's name. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesVolumes#name
   */
  readonly name: string;

  /**
   * Represents an NFS mount that lasts the lifetime of a pod. NFS volumes do not support ownership management or SELinux relabeling.
   *
   * @schema WorkflowSpecTemplatesVolumes#nfs
   */
  readonly nfs?: WorkflowSpecTemplatesVolumesNfs;

  /**
   * PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace. This volume finds the bound PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another type of volume that is owned by someone else (the system).
   *
   * @schema WorkflowSpecTemplatesVolumes#persistentVolumeClaim
   */
  readonly persistentVolumeClaim?: WorkflowSpecTemplatesVolumesPersistentVolumeClaim;

  /**
   * Represents a Photon Controller persistent disk resource.
   *
   * @schema WorkflowSpecTemplatesVolumes#photonPersistentDisk
   */
  readonly photonPersistentDisk?: WorkflowSpecTemplatesVolumesPhotonPersistentDisk;

  /**
   * PortworxVolumeSource represents a Portworx volume resource.
   *
   * @schema WorkflowSpecTemplatesVolumes#portworxVolume
   */
  readonly portworxVolume?: WorkflowSpecTemplatesVolumesPortworxVolume;

  /**
   * Represents a projected volume source
   *
   * @schema WorkflowSpecTemplatesVolumes#projected
   */
  readonly projected?: WorkflowSpecTemplatesVolumesProjected;

  /**
   * Represents a Quobyte mount that lasts the lifetime of a pod. Quobyte volumes do not support ownership management or SELinux relabeling.
   *
   * @schema WorkflowSpecTemplatesVolumes#quobyte
   */
  readonly quobyte?: WorkflowSpecTemplatesVolumesQuobyte;

  /**
   * Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling.
   *
   * @schema WorkflowSpecTemplatesVolumes#rbd
   */
  readonly rbd?: WorkflowSpecTemplatesVolumesRbd;

  /**
   * ScaleIOVolumeSource represents a persistent ScaleIO volume
   *
   * @schema WorkflowSpecTemplatesVolumes#scaleIO
   */
  readonly scaleIO?: WorkflowSpecTemplatesVolumesScaleIo;

  /**
   * Adapts a Secret into a volume.

The contents of the target Secret's Data field will be presented in a volume as files using the keys in the Data field as the file names. Secret volumes support ownership management and SELinux relabeling.
   *
   * @schema WorkflowSpecTemplatesVolumes#secret
   */
  readonly secret?: WorkflowSpecTemplatesVolumesSecret;

  /**
   * Represents a StorageOS persistent volume resource.
   *
   * @schema WorkflowSpecTemplatesVolumes#storageos
   */
  readonly storageos?: WorkflowSpecTemplatesVolumesStorageos;

  /**
   * Represents a vSphere volume resource.
   *
   * @schema WorkflowSpecTemplatesVolumes#vsphereVolume
   */
  readonly vsphereVolume?: WorkflowSpecTemplatesVolumesVsphereVolume;

}

/**
 * PersistentVolumeClaimSpec describes the common attributes of storage devices and allows a Source for provider-specific attributes
 *
 * @schema WorkflowSpecVolumeClaimTemplatesSpec
 */
export interface WorkflowSpecVolumeClaimTemplatesSpec {
  /**
   * AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
   *
   * @schema WorkflowSpecVolumeClaimTemplatesSpec#accessModes
   */
  readonly accessModes?: string[];

  /**
   * TypedLocalObjectReference contains enough information to let you locate the typed referenced object inside the same namespace.
   *
   * @schema WorkflowSpecVolumeClaimTemplatesSpec#dataSource
   */
  readonly dataSource?: WorkflowSpecVolumeClaimTemplatesSpecDataSource;

  /**
   * ResourceRequirements describes the compute resource requirements.
   *
   * @schema WorkflowSpecVolumeClaimTemplatesSpec#resources
   */
  readonly resources?: WorkflowSpecVolumeClaimTemplatesSpecResources;

  /**
   * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
   *
   * @schema WorkflowSpecVolumeClaimTemplatesSpec#selector
   */
  readonly selector?: WorkflowSpecVolumeClaimTemplatesSpecSelector;

  /**
   * Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
   *
   * @schema WorkflowSpecVolumeClaimTemplatesSpec#storageClassName
   */
  readonly storageClassName?: string;

  /**
   * volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is a beta feature.
   *
   * @schema WorkflowSpecVolumeClaimTemplatesSpec#volumeMode
   */
  readonly volumeMode?: string;

  /**
   * VolumeName is the binding reference to the PersistentVolume backing this claim.
   *
   * @schema WorkflowSpecVolumeClaimTemplatesSpec#volumeName
   */
  readonly volumeName?: string;

}

/**
 * PersistentVolumeClaimStatus is the current status of a persistent volume claim.
 *
 * @schema WorkflowSpecVolumeClaimTemplatesStatus
 */
export interface WorkflowSpecVolumeClaimTemplatesStatus {
  /**
   * AccessModes contains the actual access modes the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
   *
   * @schema WorkflowSpecVolumeClaimTemplatesStatus#accessModes
   */
  readonly accessModes?: string[];

  /**
   * Represents the actual resources of the underlying volume.
   *
   * @schema WorkflowSpecVolumeClaimTemplatesStatus#capacity
   */
  readonly capacity?: { [key: string]: string };

  /**
   * Current Condition of persistent volume claim. If underlying persistent volume is being resized then the Condition will be set to 'ResizeStarted'.
   *
   * @schema WorkflowSpecVolumeClaimTemplatesStatus#conditions
   */
  readonly conditions?: WorkflowSpecVolumeClaimTemplatesStatusConditions[];

  /**
   * Phase represents the current phase of PersistentVolumeClaim.
   *
   * @schema WorkflowSpecVolumeClaimTemplatesStatus#phase
   */
  readonly phase?: string;

}

/**
 * Represents a Persistent Disk resource in AWS.

An AWS EBS disk must exist before mounting to a container. The disk must also be in the same AWS zone as the kubelet. An AWS EBS disk can only be mounted as read/write once. AWS EBS volumes support ownership management and SELinux relabeling.
 *
 * @schema WorkflowSpecVolumesAwsElasticBlockStore
 */
export interface WorkflowSpecVolumesAwsElasticBlockStore {
  /**
   * Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
   *
   * @schema WorkflowSpecVolumesAwsElasticBlockStore#fsType
   */
  readonly fsType?: string;

  /**
   * The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
   *
   * @schema WorkflowSpecVolumesAwsElasticBlockStore#partition
   */
  readonly partition?: number;

  /**
   * Specify "true" to force and set the ReadOnly property in VolumeMounts to "true". If omitted, the default is "false". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
   *
   * @schema WorkflowSpecVolumesAwsElasticBlockStore#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
   *
   * @schema WorkflowSpecVolumesAwsElasticBlockStore#volumeID
   */
  readonly volumeID: string;

}

/**
 * AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
 *
 * @schema WorkflowSpecVolumesAzureDisk
 */
export interface WorkflowSpecVolumesAzureDisk {
  /**
   * Host Caching mode: None, Read Only, Read Write.
   *
   * @schema WorkflowSpecVolumesAzureDisk#cachingMode
   */
  readonly cachingMode?: string;

  /**
   * The Name of the data disk in the blob storage
   *
   * @schema WorkflowSpecVolumesAzureDisk#diskName
   */
  readonly diskName: string;

  /**
   * The URI the data disk in the blob storage
   *
   * @schema WorkflowSpecVolumesAzureDisk#diskURI
   */
  readonly diskURI: string;

  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
   *
   * @schema WorkflowSpecVolumesAzureDisk#fsType
   */
  readonly fsType?: string;

  /**
   * Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared
   *
   * @schema WorkflowSpecVolumesAzureDisk#kind
   */
  readonly kind?: string;

  /**
   * Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema WorkflowSpecVolumesAzureDisk#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
 *
 * @schema WorkflowSpecVolumesAzureFile
 */
export interface WorkflowSpecVolumesAzureFile {
  /**
   * Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema WorkflowSpecVolumesAzureFile#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * the name of secret that contains Azure Storage Account Name and Key
   *
   * @schema WorkflowSpecVolumesAzureFile#secretName
   */
  readonly secretName: string;

  /**
   * Share Name
   *
   * @schema WorkflowSpecVolumesAzureFile#shareName
   */
  readonly shareName: string;

}

/**
 * Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling.
 *
 * @schema WorkflowSpecVolumesCephfs
 */
export interface WorkflowSpecVolumesCephfs {
  /**
   * Required: Monitors is a collection of Ceph monitors More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
   *
   * @schema WorkflowSpecVolumesCephfs#monitors
   */
  readonly monitors: string[];

  /**
   * Optional: Used as the mounted root, rather than the full Ceph tree, default is /
   *
   * @schema WorkflowSpecVolumesCephfs#path
   */
  readonly path?: string;

  /**
   * Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
   * @schema WorkflowSpecVolumesCephfs#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
   *
   * @schema WorkflowSpecVolumesCephfs#secretFile
   */
  readonly secretFile?: string;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema WorkflowSpecVolumesCephfs#secretRef
   */
  readonly secretRef?: WorkflowSpecVolumesCephfsSecretRef;

  /**
   * Optional: User is the rados user name, default is admin More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
   *
   * @schema WorkflowSpecVolumesCephfs#user
   */
  readonly user?: string;

}

/**
 * Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling.
 *
 * @schema WorkflowSpecVolumesCinder
 */
export interface WorkflowSpecVolumesCinder {
  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
   *
   * @schema WorkflowSpecVolumesCinder#fsType
   */
  readonly fsType?: string;

  /**
   * Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
   * @schema WorkflowSpecVolumesCinder#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema WorkflowSpecVolumesCinder#secretRef
   */
  readonly secretRef?: WorkflowSpecVolumesCinderSecretRef;

  /**
   * volume id used to identify the volume in cinder More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
   *
   * @schema WorkflowSpecVolumesCinder#volumeID
   */
  readonly volumeID: string;

}

/**
 * Adapts a ConfigMap into a volume.

The contents of the target ConfigMap's Data field will be presented in a volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. ConfigMap volumes support ownership management and SELinux relabeling.
 *
 * @schema WorkflowSpecVolumesConfigMap
 */
export interface WorkflowSpecVolumesConfigMap {
  /**
   * Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @default 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   * @schema WorkflowSpecVolumesConfigMap#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
   *
   * @schema WorkflowSpecVolumesConfigMap#items
   */
  readonly items?: WorkflowSpecVolumesConfigMapItems[];

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecVolumesConfigMap#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its keys must be defined
   *
   * @schema WorkflowSpecVolumesConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Represents a source location of a volume to mount, managed by an external CSI driver
 *
 * @schema WorkflowSpecVolumesCsi
 */
export interface WorkflowSpecVolumesCsi {
  /**
   * Driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster.
   *
   * @schema WorkflowSpecVolumesCsi#driver
   */
  readonly driver: string;

  /**
   * Filesystem type to mount. Ex. "ext4", "xfs", "ntfs". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.
   *
   * @schema WorkflowSpecVolumesCsi#fsType
   */
  readonly fsType?: string;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema WorkflowSpecVolumesCsi#nodePublishSecretRef
   */
  readonly nodePublishSecretRef?: WorkflowSpecVolumesCsiNodePublishSecretRef;

  /**
   * Specifies a read-only configuration for the volume. Defaults to false (read/write).
   *
   * @default false (read/write).
   * @schema WorkflowSpecVolumesCsi#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * VolumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.
   *
   * @schema WorkflowSpecVolumesCsi#volumeAttributes
   */
  readonly volumeAttributes?: { [key: string]: string };

}

/**
 * DownwardAPIVolumeSource represents a volume containing downward API info. Downward API volumes support ownership management and SELinux relabeling.
 *
 * @schema WorkflowSpecVolumesDownwardApi
 */
export interface WorkflowSpecVolumesDownwardApi {
  /**
   * Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @default 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   * @schema WorkflowSpecVolumesDownwardApi#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * Items is a list of downward API volume file
   *
   * @schema WorkflowSpecVolumesDownwardApi#items
   */
  readonly items?: WorkflowSpecVolumesDownwardApiItems[];

}

/**
 * Represents an empty directory for a pod. Empty directory volumes support ownership management and SELinux relabeling.
 *
 * @schema WorkflowSpecVolumesEmptyDir
 */
export interface WorkflowSpecVolumesEmptyDir {
  /**
   * What type of storage medium should back this directory. The default is "" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
   *
   * @schema WorkflowSpecVolumesEmptyDir#medium
   */
  readonly medium?: string;

  /**
   * Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and Int64() accessors.

The serialization format is:

<quantity>        ::= <signedNumber><suffix>
  (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
<decimalSI>       ::= m | "" | k | M | G | T | P | E
  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
<decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  a. No precision is lost
  b. No fractional digits will be emitted
  c. The exponent (or suffix) is as large as possible.
The sign will be omitted unless the number is negative.

Examples:
  1.5 will be serialized as "1500m"
  1.5Gi will be serialized as "1536Mi"

Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.

Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
   *
   * @schema WorkflowSpecVolumesEmptyDir#sizeLimit
   */
  readonly sizeLimit?: string;

}

/**
 * Represents a Fibre Channel volume. Fibre Channel volumes can only be mounted as read/write once. Fibre Channel volumes support ownership management and SELinux relabeling.
 *
 * @schema WorkflowSpecVolumesFc
 */
export interface WorkflowSpecVolumesFc {
  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
   *
   * @schema WorkflowSpecVolumesFc#fsType
   */
  readonly fsType?: string;

  /**
   * Optional: FC target lun number
   *
   * @schema WorkflowSpecVolumesFc#lun
   */
  readonly lun?: number;

  /**
   * Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema WorkflowSpecVolumesFc#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Optional: FC target worldwide names (WWNs)
   *
   * @schema WorkflowSpecVolumesFc#targetWWNs
   */
  readonly targetWWNs?: string[];

  /**
   * Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
   *
   * @schema WorkflowSpecVolumesFc#wwids
   */
  readonly wwids?: string[];

}

/**
 * FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
 *
 * @schema WorkflowSpecVolumesFlexVolume
 */
export interface WorkflowSpecVolumesFlexVolume {
  /**
   * Driver is the name of the driver to use for this volume.
   *
   * @schema WorkflowSpecVolumesFlexVolume#driver
   */
  readonly driver: string;

  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
   *
   * @schema WorkflowSpecVolumesFlexVolume#fsType
   */
  readonly fsType?: string;

  /**
   * Optional: Extra command options if any.
   *
   * @schema WorkflowSpecVolumesFlexVolume#options
   */
  readonly options?: { [key: string]: string };

  /**
   * Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema WorkflowSpecVolumesFlexVolume#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema WorkflowSpecVolumesFlexVolume#secretRef
   */
  readonly secretRef?: WorkflowSpecVolumesFlexVolumeSecretRef;

}

/**
 * Represents a Flocker volume mounted by the Flocker agent. One and only one of datasetName and datasetUUID should be set. Flocker volumes do not support ownership management or SELinux relabeling.
 *
 * @schema WorkflowSpecVolumesFlocker
 */
export interface WorkflowSpecVolumesFlocker {
  /**
   * Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated
   *
   * @schema WorkflowSpecVolumesFlocker#datasetName
   */
  readonly datasetName?: string;

  /**
   * UUID of the dataset. This is unique identifier of a Flocker dataset
   *
   * @schema WorkflowSpecVolumesFlocker#datasetUUID
   */
  readonly datasetUUID?: string;

}

/**
 * Represents a Persistent Disk resource in Google Compute Engine.

A GCE PD must exist before mounting to a container. The disk must also be in the same GCE project and zone as the kubelet. A GCE PD can only be mounted as read/write once or read-only many times. GCE PDs support ownership management and SELinux relabeling.
 *
 * @schema WorkflowSpecVolumesGcePersistentDisk
 */
export interface WorkflowSpecVolumesGcePersistentDisk {
  /**
   * Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
   *
   * @schema WorkflowSpecVolumesGcePersistentDisk#fsType
   */
  readonly fsType?: string;

  /**
   * The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
   *
   * @schema WorkflowSpecVolumesGcePersistentDisk#partition
   */
  readonly partition?: number;

  /**
   * Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
   *
   * @schema WorkflowSpecVolumesGcePersistentDisk#pdName
   */
  readonly pdName: string;

  /**
   * ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
   *
   * @default false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
   * @schema WorkflowSpecVolumesGcePersistentDisk#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Represents a volume that is populated with the contents of a git repository. Git repo volumes do not support ownership management. Git repo volumes support SELinux relabeling.

DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.
 *
 * @schema WorkflowSpecVolumesGitRepo
 */
export interface WorkflowSpecVolumesGitRepo {
  /**
   * Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.
   *
   * @schema WorkflowSpecVolumesGitRepo#directory
   */
  readonly directory?: string;

  /**
   * Repository URL
   *
   * @schema WorkflowSpecVolumesGitRepo#repository
   */
  readonly repository: string;

  /**
   * Commit hash for the specified revision.
   *
   * @schema WorkflowSpecVolumesGitRepo#revision
   */
  readonly revision?: string;

}

/**
 * Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling.
 *
 * @schema WorkflowSpecVolumesGlusterfs
 */
export interface WorkflowSpecVolumesGlusterfs {
  /**
   * EndpointsName is the endpoint name that details Glusterfs topology. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod
   *
   * @schema WorkflowSpecVolumesGlusterfs#endpoints
   */
  readonly endpoints: string;

  /**
   * Path is the Glusterfs volume path. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod
   *
   * @schema WorkflowSpecVolumesGlusterfs#path
   */
  readonly path: string;

  /**
   * ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod
   *
   * @default false. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod
   * @schema WorkflowSpecVolumesGlusterfs#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Represents a host path mapped into a pod. Host path volumes do not support ownership management or SELinux relabeling.
 *
 * @schema WorkflowSpecVolumesHostPath
 */
export interface WorkflowSpecVolumesHostPath {
  /**
   * Path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
   *
   * @schema WorkflowSpecVolumesHostPath#path
   */
  readonly path: string;

  /**
   * Type for HostPath Volume Defaults to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
   *
   * @default More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
   * @schema WorkflowSpecVolumesHostPath#type
   */
  readonly type?: string;

}

/**
 * Represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling.
 *
 * @schema WorkflowSpecVolumesIscsi
 */
export interface WorkflowSpecVolumesIscsi {
  /**
   * whether support iSCSI Discovery CHAP authentication
   *
   * @schema WorkflowSpecVolumesIscsi#chapAuthDiscovery
   */
  readonly chapAuthDiscovery?: boolean;

  /**
   * whether support iSCSI Session CHAP authentication
   *
   * @schema WorkflowSpecVolumesIscsi#chapAuthSession
   */
  readonly chapAuthSession?: boolean;

  /**
   * Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
   *
   * @schema WorkflowSpecVolumesIscsi#fsType
   */
  readonly fsType?: string;

  /**
   * Custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.
   *
   * @schema WorkflowSpecVolumesIscsi#initiatorName
   */
  readonly initiatorName?: string;

  /**
   * Target iSCSI Qualified Name.
   *
   * @schema WorkflowSpecVolumesIscsi#iqn
   */
  readonly iqn: string;

  /**
   * iSCSI Interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).
   *
   * @default default' (tcp).
   * @schema WorkflowSpecVolumesIscsi#iscsiInterface
   */
  readonly iscsiInterface?: string;

  /**
   * iSCSI Target Lun number.
   *
   * @schema WorkflowSpecVolumesIscsi#lun
   */
  readonly lun: number;

  /**
   * iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
   *
   * @schema WorkflowSpecVolumesIscsi#portals
   */
  readonly portals?: string[];

  /**
   * ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.
   *
   * @default false.
   * @schema WorkflowSpecVolumesIscsi#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema WorkflowSpecVolumesIscsi#secretRef
   */
  readonly secretRef?: WorkflowSpecVolumesIscsiSecretRef;

  /**
   * iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
   *
   * @schema WorkflowSpecVolumesIscsi#targetPortal
   */
  readonly targetPortal: string;

}

/**
 * Represents an NFS mount that lasts the lifetime of a pod. NFS volumes do not support ownership management or SELinux relabeling.
 *
 * @schema WorkflowSpecVolumesNfs
 */
export interface WorkflowSpecVolumesNfs {
  /**
   * Path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
   *
   * @schema WorkflowSpecVolumesNfs#path
   */
  readonly path: string;

  /**
   * ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
   *
   * @default false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
   * @schema WorkflowSpecVolumesNfs#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
   *
   * @schema WorkflowSpecVolumesNfs#server
   */
  readonly server: string;

}

/**
 * PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace. This volume finds the bound PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another type of volume that is owned by someone else (the system).
 *
 * @schema WorkflowSpecVolumesPersistentVolumeClaim
 */
export interface WorkflowSpecVolumesPersistentVolumeClaim {
  /**
   * ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
   *
   * @schema WorkflowSpecVolumesPersistentVolumeClaim#claimName
   */
  readonly claimName: string;

  /**
   * Will force the ReadOnly setting in VolumeMounts. Default false.
   *
   * @schema WorkflowSpecVolumesPersistentVolumeClaim#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Represents a Photon Controller persistent disk resource.
 *
 * @schema WorkflowSpecVolumesPhotonPersistentDisk
 */
export interface WorkflowSpecVolumesPhotonPersistentDisk {
  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
   *
   * @schema WorkflowSpecVolumesPhotonPersistentDisk#fsType
   */
  readonly fsType?: string;

  /**
   * ID that identifies Photon Controller persistent disk
   *
   * @schema WorkflowSpecVolumesPhotonPersistentDisk#pdID
   */
  readonly pdID: string;

}

/**
 * PortworxVolumeSource represents a Portworx volume resource.
 *
 * @schema WorkflowSpecVolumesPortworxVolume
 */
export interface WorkflowSpecVolumesPortworxVolume {
  /**
   * FSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
   *
   * @schema WorkflowSpecVolumesPortworxVolume#fsType
   */
  readonly fsType?: string;

  /**
   * Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema WorkflowSpecVolumesPortworxVolume#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * VolumeID uniquely identifies a Portworx volume
   *
   * @schema WorkflowSpecVolumesPortworxVolume#volumeID
   */
  readonly volumeID: string;

}

/**
 * Represents a projected volume source
 *
 * @schema WorkflowSpecVolumesProjected
 */
export interface WorkflowSpecVolumesProjected {
  /**
   * Mode bits to use on created files by default. Must be a value between 0 and 0777. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema WorkflowSpecVolumesProjected#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * list of volume projections
   *
   * @schema WorkflowSpecVolumesProjected#sources
   */
  readonly sources: WorkflowSpecVolumesProjectedSources[];

}

/**
 * Represents a Quobyte mount that lasts the lifetime of a pod. Quobyte volumes do not support ownership management or SELinux relabeling.
 *
 * @schema WorkflowSpecVolumesQuobyte
 */
export interface WorkflowSpecVolumesQuobyte {
  /**
   * Group to map volume access to Default is no group
   *
   * @default no group
   * @schema WorkflowSpecVolumesQuobyte#group
   */
  readonly group?: string;

  /**
   * ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.
   *
   * @default false.
   * @schema WorkflowSpecVolumesQuobyte#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes
   *
   * @schema WorkflowSpecVolumesQuobyte#registry
   */
  readonly registry: string;

  /**
   * Tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin
   *
   * @schema WorkflowSpecVolumesQuobyte#tenant
   */
  readonly tenant?: string;

  /**
   * User to map volume access to Defaults to serivceaccount user
   *
   * @default serivceaccount user
   * @schema WorkflowSpecVolumesQuobyte#user
   */
  readonly user?: string;

  /**
   * Volume is a string that references an already created Quobyte volume by name.
   *
   * @schema WorkflowSpecVolumesQuobyte#volume
   */
  readonly volume: string;

}

/**
 * Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling.
 *
 * @schema WorkflowSpecVolumesRbd
 */
export interface WorkflowSpecVolumesRbd {
  /**
   * Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
   *
   * @schema WorkflowSpecVolumesRbd#fsType
   */
  readonly fsType?: string;

  /**
   * The rados image name. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   *
   * @schema WorkflowSpecVolumesRbd#image
   */
  readonly image: string;

  /**
   * Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   *
   * @default etc/ceph/keyring. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   * @schema WorkflowSpecVolumesRbd#keyring
   */
  readonly keyring?: string;

  /**
   * A collection of Ceph monitors. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   *
   * @schema WorkflowSpecVolumesRbd#monitors
   */
  readonly monitors: string[];

  /**
   * The rados pool name. Default is rbd. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   *
   * @default rbd. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   * @schema WorkflowSpecVolumesRbd#pool
   */
  readonly pool?: string;

  /**
   * ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   *
   * @default false. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   * @schema WorkflowSpecVolumesRbd#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema WorkflowSpecVolumesRbd#secretRef
   */
  readonly secretRef?: WorkflowSpecVolumesRbdSecretRef;

  /**
   * The rados user name. Default is admin. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   *
   * @default admin. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   * @schema WorkflowSpecVolumesRbd#user
   */
  readonly user?: string;

}

/**
 * ScaleIOVolumeSource represents a persistent ScaleIO volume
 *
 * @schema WorkflowSpecVolumesScaleIo
 */
export interface WorkflowSpecVolumesScaleIo {
  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Default is "xfs".
   *
   * @default xfs".
   * @schema WorkflowSpecVolumesScaleIo#fsType
   */
  readonly fsType?: string;

  /**
   * The host address of the ScaleIO API Gateway.
   *
   * @schema WorkflowSpecVolumesScaleIo#gateway
   */
  readonly gateway: string;

  /**
   * The name of the ScaleIO Protection Domain for the configured storage.
   *
   * @schema WorkflowSpecVolumesScaleIo#protectionDomain
   */
  readonly protectionDomain?: string;

  /**
   * Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema WorkflowSpecVolumesScaleIo#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema WorkflowSpecVolumesScaleIo#secretRef
   */
  readonly secretRef: WorkflowSpecVolumesScaleIoSecretRef;

  /**
   * Flag to enable/disable SSL communication with Gateway, default false
   *
   * @schema WorkflowSpecVolumesScaleIo#sslEnabled
   */
  readonly sslEnabled?: boolean;

  /**
   * Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.
   *
   * @default ThinProvisioned.
   * @schema WorkflowSpecVolumesScaleIo#storageMode
   */
  readonly storageMode?: string;

  /**
   * The ScaleIO Storage Pool associated with the protection domain.
   *
   * @schema WorkflowSpecVolumesScaleIo#storagePool
   */
  readonly storagePool?: string;

  /**
   * The name of the storage system as configured in ScaleIO.
   *
   * @schema WorkflowSpecVolumesScaleIo#system
   */
  readonly system: string;

  /**
   * The name of a volume already created in the ScaleIO system that is associated with this volume source.
   *
   * @schema WorkflowSpecVolumesScaleIo#volumeName
   */
  readonly volumeName?: string;

}

/**
 * Adapts a Secret into a volume.

The contents of the target Secret's Data field will be presented in a volume as files using the keys in the Data field as the file names. Secret volumes support ownership management and SELinux relabeling.
 *
 * @schema WorkflowSpecVolumesSecret
 */
export interface WorkflowSpecVolumesSecret {
  /**
   * Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @default 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   * @schema WorkflowSpecVolumesSecret#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
   *
   * @schema WorkflowSpecVolumesSecret#items
   */
  readonly items?: WorkflowSpecVolumesSecretItems[];

  /**
   * Specify whether the Secret or its keys must be defined
   *
   * @schema WorkflowSpecVolumesSecret#optional
   */
  readonly optional?: boolean;

  /**
   * Name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
   *
   * @schema WorkflowSpecVolumesSecret#secretName
   */
  readonly secretName?: string;

}

/**
 * Represents a StorageOS persistent volume resource.
 *
 * @schema WorkflowSpecVolumesStorageos
 */
export interface WorkflowSpecVolumesStorageos {
  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
   *
   * @schema WorkflowSpecVolumesStorageos#fsType
   */
  readonly fsType?: string;

  /**
   * Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema WorkflowSpecVolumesStorageos#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema WorkflowSpecVolumesStorageos#secretRef
   */
  readonly secretRef?: WorkflowSpecVolumesStorageosSecretRef;

  /**
   * VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.
   *
   * @schema WorkflowSpecVolumesStorageos#volumeName
   */
  readonly volumeName?: string;

  /**
   * VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to "default" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.
   *
   * @schema WorkflowSpecVolumesStorageos#volumeNamespace
   */
  readonly volumeNamespace?: string;

}

/**
 * Represents a vSphere volume resource.
 *
 * @schema WorkflowSpecVolumesVsphereVolume
 */
export interface WorkflowSpecVolumesVsphereVolume {
  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
   *
   * @schema WorkflowSpecVolumesVsphereVolume#fsType
   */
  readonly fsType?: string;

  /**
   * Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
   *
   * @schema WorkflowSpecVolumesVsphereVolume#storagePolicyID
   */
  readonly storagePolicyID?: string;

  /**
   * Storage Policy Based Management (SPBM) profile name.
   *
   * @schema WorkflowSpecVolumesVsphereVolume#storagePolicyName
   */
  readonly storagePolicyName?: string;

  /**
   * Path that identifies vSphere volume vmdk
   *
   * @schema WorkflowSpecVolumesVsphereVolume#volumePath
   */
  readonly volumePath: string;

}

/**
 * An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
 *
 * @schema WorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface WorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
   *
   * @schema WorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution#preference
   */
  readonly preference: WorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference;

  /**
   * Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
   *
   * @schema WorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms.
 *
 * @schema WorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface WorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * Required. A list of node selector terms. The terms are ORed.
   *
   * @schema WorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution#nodeSelectorTerms
   */
  readonly nodeSelectorTerms: WorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms[];

}

/**
 * The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
 *
 * @schema WorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface WorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
   *
   * @schema WorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution#podAffinityTerm
   */
  readonly podAffinityTerm: WorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;

  /**
   * weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
   *
   * @schema WorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
 *
 * @schema WorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface WorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
   *
   * @schema WorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#labelSelector
   */
  readonly labelSelector?: WorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;

  /**
   * namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
   *
   * @schema WorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaces
   */
  readonly namespaces?: string[];

  /**
   * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
   *
   * @schema WorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
 *
 * @schema WorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface WorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
   *
   * @schema WorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution#podAffinityTerm
   */
  readonly podAffinityTerm: WorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;

  /**
   * weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
   *
   * @schema WorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
 *
 * @schema WorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface WorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
   *
   * @schema WorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#labelSelector
   */
  readonly labelSelector?: WorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;

  /**
   * namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
   *
   * @schema WorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaces
   */
  readonly namespaces?: string[];

  /**
   * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
   *
   * @schema WorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * ArchiveStrategy describes how to archive files/directory when saving artifacts
 *
 * @schema WorkflowSpecArgumentsArtifactsArchive
 */
export interface WorkflowSpecArgumentsArtifactsArchive {
  /**
   * NoneStrategy indicates to skip tar process and upload the files or directory tree as independent files. Note that if the artifact is a directory, the artifact driver must support the ability to save/load the directory appropriately.
   *
   * @schema WorkflowSpecArgumentsArtifactsArchive#none
   */
  readonly none?: any;

  /**
   * TarStrategy will tar and gzip the file or directory when saving
   *
   * @schema WorkflowSpecArgumentsArtifactsArchive#tar
   */
  readonly tar?: WorkflowSpecArgumentsArtifactsArchiveTar;

}

/**
 * ArtifactoryArtifact is the location of an artifactory artifact
 *
 * @schema WorkflowSpecArgumentsArtifactsArtifactory
 */
export interface WorkflowSpecArgumentsArtifactsArtifactory {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecArgumentsArtifactsArtifactory#passwordSecret
   */
  readonly passwordSecret?: WorkflowSpecArgumentsArtifactsArtifactoryPasswordSecret;

  /**
   * URL of the artifact
   *
   * @schema WorkflowSpecArgumentsArtifactsArtifactory#url
   */
  readonly url: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecArgumentsArtifactsArtifactory#usernameSecret
   */
  readonly usernameSecret?: WorkflowSpecArgumentsArtifactsArtifactoryUsernameSecret;

}

/**
 * GCSArtifact is the location of a GCS artifact
 *
 * @schema WorkflowSpecArgumentsArtifactsGcs
 */
export interface WorkflowSpecArgumentsArtifactsGcs {
  /**
   * Bucket is the name of the bucket
   *
   * @schema WorkflowSpecArgumentsArtifactsGcs#bucket
   */
  readonly bucket: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema WorkflowSpecArgumentsArtifactsGcs#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecArgumentsArtifactsGcs#serviceAccountKeySecret
   */
  readonly serviceAccountKeySecret?: WorkflowSpecArgumentsArtifactsGcsServiceAccountKeySecret;

}

/**
 * GitArtifact is the location of an git artifact
 *
 * @schema WorkflowSpecArgumentsArtifactsGit
 */
export interface WorkflowSpecArgumentsArtifactsGit {
  /**
   * Depth specifies clones/fetches should be shallow and include the given number of commits from the branch tip
   *
   * @schema WorkflowSpecArgumentsArtifactsGit#depth
   */
  readonly depth?: number;

  /**
   * Fetch specifies a number of refs that should be fetched before checkout
   *
   * @schema WorkflowSpecArgumentsArtifactsGit#fetch
   */
  readonly fetch?: string[];

  /**
   * InsecureIgnoreHostKey disables SSH strict host key checking during git clone
   *
   * @schema WorkflowSpecArgumentsArtifactsGit#insecureIgnoreHostKey
   */
  readonly insecureIgnoreHostKey?: boolean;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecArgumentsArtifactsGit#passwordSecret
   */
  readonly passwordSecret?: WorkflowSpecArgumentsArtifactsGitPasswordSecret;

  /**
   * Repo is the git repository
   *
   * @schema WorkflowSpecArgumentsArtifactsGit#repo
   */
  readonly repo: string;

  /**
   * Revision is the git commit, tag, branch to checkout
   *
   * @schema WorkflowSpecArgumentsArtifactsGit#revision
   */
  readonly revision?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecArgumentsArtifactsGit#sshPrivateKeySecret
   */
  readonly sshPrivateKeySecret?: WorkflowSpecArgumentsArtifactsGitSshPrivateKeySecret;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecArgumentsArtifactsGit#usernameSecret
   */
  readonly usernameSecret?: WorkflowSpecArgumentsArtifactsGitUsernameSecret;

}

/**
 * HDFSArtifact is the location of an HDFS artifact
 *
 * @schema WorkflowSpecArgumentsArtifactsHdfs
 */
export interface WorkflowSpecArgumentsArtifactsHdfs {
  /**
   * Addresses is accessible addresses of HDFS name nodes
   *
   * @schema WorkflowSpecArgumentsArtifactsHdfs#addresses
   */
  readonly addresses: string[];

  /**
   * Force copies a file forcibly even if it exists (default: false)
   *
   * @schema WorkflowSpecArgumentsArtifactsHdfs#force
   */
  readonly force?: boolean;

  /**
   * HDFSUser is the user to access HDFS file system. It is ignored if either ccache or keytab is used.
   *
   * @schema WorkflowSpecArgumentsArtifactsHdfs#hdfsUser
   */
  readonly hdfsUser?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecArgumentsArtifactsHdfs#krbCCacheSecret
   */
  readonly krbCCacheSecret?: WorkflowSpecArgumentsArtifactsHdfsKrbCCacheSecret;

  /**
   * Selects a key from a ConfigMap.
   *
   * @schema WorkflowSpecArgumentsArtifactsHdfs#krbConfigConfigMap
   */
  readonly krbConfigConfigMap?: WorkflowSpecArgumentsArtifactsHdfsKrbConfigConfigMap;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecArgumentsArtifactsHdfs#krbKeytabSecret
   */
  readonly krbKeytabSecret?: WorkflowSpecArgumentsArtifactsHdfsKrbKeytabSecret;

  /**
   * KrbRealm is the Kerberos realm used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema WorkflowSpecArgumentsArtifactsHdfs#krbRealm
   */
  readonly krbRealm?: string;

  /**
   * KrbServicePrincipalName is the principal name of Kerberos service It must be set if either ccache or keytab is used.
   *
   * @schema WorkflowSpecArgumentsArtifactsHdfs#krbServicePrincipalName
   */
  readonly krbServicePrincipalName?: string;

  /**
   * KrbUsername is the Kerberos username used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema WorkflowSpecArgumentsArtifactsHdfs#krbUsername
   */
  readonly krbUsername?: string;

  /**
   * Path is a file path in HDFS
   *
   * @schema WorkflowSpecArgumentsArtifactsHdfs#path
   */
  readonly path: string;

}

/**
 * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
 *
 * @schema WorkflowSpecArgumentsArtifactsHttp
 */
export interface WorkflowSpecArgumentsArtifactsHttp {
  /**
   * URL of the artifact
   *
   * @schema WorkflowSpecArgumentsArtifactsHttp#url
   */
  readonly url: string;

}

/**
 * OSSArtifact is the location of an Alibaba Cloud OSS artifact
 *
 * @schema WorkflowSpecArgumentsArtifactsOss
 */
export interface WorkflowSpecArgumentsArtifactsOss {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecArgumentsArtifactsOss#accessKeySecret
   */
  readonly accessKeySecret: WorkflowSpecArgumentsArtifactsOssAccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema WorkflowSpecArgumentsArtifactsOss#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema WorkflowSpecArgumentsArtifactsOss#endpoint
   */
  readonly endpoint: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema WorkflowSpecArgumentsArtifactsOss#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecArgumentsArtifactsOss#secretKeySecret
   */
  readonly secretKeySecret: WorkflowSpecArgumentsArtifactsOssSecretKeySecret;

}

/**
 * RawArtifact allows raw string content to be placed as an artifact in a container
 *
 * @schema WorkflowSpecArgumentsArtifactsRaw
 */
export interface WorkflowSpecArgumentsArtifactsRaw {
  /**
   * Data is the string contents of the artifact
   *
   * @schema WorkflowSpecArgumentsArtifactsRaw#data
   */
  readonly data: string;

}

/**
 * S3Artifact is the location of an S3 artifact
 *
 * @schema WorkflowSpecArgumentsArtifactsS3
 */
export interface WorkflowSpecArgumentsArtifactsS3 {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecArgumentsArtifactsS3#accessKeySecret
   */
  readonly accessKeySecret: WorkflowSpecArgumentsArtifactsS3AccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema WorkflowSpecArgumentsArtifactsS3#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema WorkflowSpecArgumentsArtifactsS3#endpoint
   */
  readonly endpoint: string;

  /**
   * Insecure will connect to the service with TLS
   *
   * @schema WorkflowSpecArgumentsArtifactsS3#insecure
   */
  readonly insecure?: boolean;

  /**
   * Key is the key in the bucket where the artifact resides
   *
   * @schema WorkflowSpecArgumentsArtifactsS3#key
   */
  readonly key: string;

  /**
   * Region contains the optional bucket region
   *
   * @schema WorkflowSpecArgumentsArtifactsS3#region
   */
  readonly region?: string;

  /**
   * RoleARN is the Amazon Resource Name (ARN) of the role to assume.
   *
   * @schema WorkflowSpecArgumentsArtifactsS3#roleARN
   */
  readonly roleARN?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecArgumentsArtifactsS3#secretKeySecret
   */
  readonly secretKeySecret: WorkflowSpecArgumentsArtifactsS3SecretKeySecret;

  /**
   * UseSDKCreds tells the driver to figure out credentials based on sdk defaults.
   *
   * @schema WorkflowSpecArgumentsArtifactsS3#useSDKCreds
   */
  readonly useSDKCreds?: boolean;

}

/**
 * ValueFrom describes a location in which to obtain the value to a parameter
 *
 * @schema WorkflowSpecArgumentsParametersValueFrom
 */
export interface WorkflowSpecArgumentsParametersValueFrom {
  /**
   * @schema WorkflowSpecArgumentsParametersValueFrom#default
   */
  readonly default?: string;

  /**
   * JQFilter expression against the resource object in resource templates
   *
   * @schema WorkflowSpecArgumentsParametersValueFrom#jqFilter
   */
  readonly jqFilter?: string;

  /**
   * JSONPath of a resource to retrieve an output parameter value from in resource templates
   *
   * @schema WorkflowSpecArgumentsParametersValueFrom#jsonPath
   */
  readonly jsonPath?: string;

  /**
   * Parameter reference to a step or dag task in which to retrieve an output parameter value from (e.g. '{{steps.mystep.outputs.myparam}}')
   *
   * @schema WorkflowSpecArgumentsParametersValueFrom#parameter
   */
  readonly parameter?: string;

  /**
   * Path in the container to retrieve an output parameter value from in container templates
   *
   * @schema WorkflowSpecArgumentsParametersValueFrom#path
   */
  readonly path?: string;

}

/**
 * Counter is a Counter prometheus metric
 *
 * @schema WorkflowSpecMetricsPrometheusCounter
 */
export interface WorkflowSpecMetricsPrometheusCounter {
  /**
   * Value is the value of the metric
   *
   * @schema WorkflowSpecMetricsPrometheusCounter#value
   */
  readonly value: string;

}

/**
 * Gauge is a Gauge prometheus metric
 *
 * @schema WorkflowSpecMetricsPrometheusGauge
 */
export interface WorkflowSpecMetricsPrometheusGauge {
  /**
   * Realtime emits this metric in real time if applicable
   *
   * @schema WorkflowSpecMetricsPrometheusGauge#realtime
   */
  readonly realtime: boolean;

  /**
   * Value is the value of the metric
   *
   * @schema WorkflowSpecMetricsPrometheusGauge#value
   */
  readonly value: string;

}

/**
 * Histogram is a Histogram prometheus metric
 *
 * @schema WorkflowSpecMetricsPrometheusHistogram
 */
export interface WorkflowSpecMetricsPrometheusHistogram {
  /**
   * Buckets is a list of bucket divisors for the histogram
   *
   * @schema WorkflowSpecMetricsPrometheusHistogram#buckets
   */
  readonly buckets: number[];

  /**
   * Value is the value of the metric
   *
   * @schema WorkflowSpecMetricsPrometheusHistogram#value
   */
  readonly value: string;

}

/**
 * MetricLabel is a single label for a prometheus metric
 *
 * @schema WorkflowSpecMetricsPrometheusLabels
 */
export interface WorkflowSpecMetricsPrometheusLabels {
  /**
   * @schema WorkflowSpecMetricsPrometheusLabels#key
   */
  readonly key: string;

  /**
   * @schema WorkflowSpecMetricsPrometheusLabels#value
   */
  readonly value: string;

}

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema WorkflowSpecPodDisruptionBudgetSelectorMatchExpressions
 */
export interface WorkflowSpecPodDisruptionBudgetSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema WorkflowSpecPodDisruptionBudgetSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema WorkflowSpecPodDisruptionBudgetSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   *
   * @schema WorkflowSpecPodDisruptionBudgetSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Node affinity is a group of node affinity scheduling rules.
 *
 * @schema WorkflowSpecTemplatesAffinityNodeAffinity
 */
export interface WorkflowSpecTemplatesAffinityNodeAffinity {
  /**
   * The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
   *
   * @schema WorkflowSpecTemplatesAffinityNodeAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: WorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms.
   *
   * @schema WorkflowSpecTemplatesAffinityNodeAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: WorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution;

}

/**
 * Pod affinity is a group of inter pod affinity scheduling rules.
 *
 * @schema WorkflowSpecTemplatesAffinityPodAffinity
 */
export interface WorkflowSpecTemplatesAffinityPodAffinity {
  /**
   * The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
   *
   * @schema WorkflowSpecTemplatesAffinityPodAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: WorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
   *
   * @schema WorkflowSpecTemplatesAffinityPodAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: WorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution[];

}

/**
 * Pod anti affinity is a group of inter pod anti affinity scheduling rules.
 *
 * @schema WorkflowSpecTemplatesAffinityPodAntiAffinity
 */
export interface WorkflowSpecTemplatesAffinityPodAntiAffinity {
  /**
   * The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
   *
   * @schema WorkflowSpecTemplatesAffinityPodAntiAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: WorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
   *
   * @schema WorkflowSpecTemplatesAffinityPodAntiAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: WorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution[];

}

/**
 * ArtifactoryArtifact is the location of an artifactory artifact
 *
 * @schema WorkflowSpecTemplatesArchiveLocationArtifactory
 */
export interface WorkflowSpecTemplatesArchiveLocationArtifactory {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesArchiveLocationArtifactory#passwordSecret
   */
  readonly passwordSecret?: WorkflowSpecTemplatesArchiveLocationArtifactoryPasswordSecret;

  /**
   * URL of the artifact
   *
   * @schema WorkflowSpecTemplatesArchiveLocationArtifactory#url
   */
  readonly url: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesArchiveLocationArtifactory#usernameSecret
   */
  readonly usernameSecret?: WorkflowSpecTemplatesArchiveLocationArtifactoryUsernameSecret;

}

/**
 * GCSArtifact is the location of a GCS artifact
 *
 * @schema WorkflowSpecTemplatesArchiveLocationGcs
 */
export interface WorkflowSpecTemplatesArchiveLocationGcs {
  /**
   * Bucket is the name of the bucket
   *
   * @schema WorkflowSpecTemplatesArchiveLocationGcs#bucket
   */
  readonly bucket: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema WorkflowSpecTemplatesArchiveLocationGcs#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesArchiveLocationGcs#serviceAccountKeySecret
   */
  readonly serviceAccountKeySecret?: WorkflowSpecTemplatesArchiveLocationGcsServiceAccountKeySecret;

}

/**
 * GitArtifact is the location of an git artifact
 *
 * @schema WorkflowSpecTemplatesArchiveLocationGit
 */
export interface WorkflowSpecTemplatesArchiveLocationGit {
  /**
   * Depth specifies clones/fetches should be shallow and include the given number of commits from the branch tip
   *
   * @schema WorkflowSpecTemplatesArchiveLocationGit#depth
   */
  readonly depth?: number;

  /**
   * Fetch specifies a number of refs that should be fetched before checkout
   *
   * @schema WorkflowSpecTemplatesArchiveLocationGit#fetch
   */
  readonly fetch?: string[];

  /**
   * InsecureIgnoreHostKey disables SSH strict host key checking during git clone
   *
   * @schema WorkflowSpecTemplatesArchiveLocationGit#insecureIgnoreHostKey
   */
  readonly insecureIgnoreHostKey?: boolean;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesArchiveLocationGit#passwordSecret
   */
  readonly passwordSecret?: WorkflowSpecTemplatesArchiveLocationGitPasswordSecret;

  /**
   * Repo is the git repository
   *
   * @schema WorkflowSpecTemplatesArchiveLocationGit#repo
   */
  readonly repo: string;

  /**
   * Revision is the git commit, tag, branch to checkout
   *
   * @schema WorkflowSpecTemplatesArchiveLocationGit#revision
   */
  readonly revision?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesArchiveLocationGit#sshPrivateKeySecret
   */
  readonly sshPrivateKeySecret?: WorkflowSpecTemplatesArchiveLocationGitSshPrivateKeySecret;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesArchiveLocationGit#usernameSecret
   */
  readonly usernameSecret?: WorkflowSpecTemplatesArchiveLocationGitUsernameSecret;

}

/**
 * HDFSArtifact is the location of an HDFS artifact
 *
 * @schema WorkflowSpecTemplatesArchiveLocationHdfs
 */
export interface WorkflowSpecTemplatesArchiveLocationHdfs {
  /**
   * Addresses is accessible addresses of HDFS name nodes
   *
   * @schema WorkflowSpecTemplatesArchiveLocationHdfs#addresses
   */
  readonly addresses: string[];

  /**
   * Force copies a file forcibly even if it exists (default: false)
   *
   * @schema WorkflowSpecTemplatesArchiveLocationHdfs#force
   */
  readonly force?: boolean;

  /**
   * HDFSUser is the user to access HDFS file system. It is ignored if either ccache or keytab is used.
   *
   * @schema WorkflowSpecTemplatesArchiveLocationHdfs#hdfsUser
   */
  readonly hdfsUser?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesArchiveLocationHdfs#krbCCacheSecret
   */
  readonly krbCCacheSecret?: WorkflowSpecTemplatesArchiveLocationHdfsKrbCCacheSecret;

  /**
   * Selects a key from a ConfigMap.
   *
   * @schema WorkflowSpecTemplatesArchiveLocationHdfs#krbConfigConfigMap
   */
  readonly krbConfigConfigMap?: WorkflowSpecTemplatesArchiveLocationHdfsKrbConfigConfigMap;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesArchiveLocationHdfs#krbKeytabSecret
   */
  readonly krbKeytabSecret?: WorkflowSpecTemplatesArchiveLocationHdfsKrbKeytabSecret;

  /**
   * KrbRealm is the Kerberos realm used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema WorkflowSpecTemplatesArchiveLocationHdfs#krbRealm
   */
  readonly krbRealm?: string;

  /**
   * KrbServicePrincipalName is the principal name of Kerberos service It must be set if either ccache or keytab is used.
   *
   * @schema WorkflowSpecTemplatesArchiveLocationHdfs#krbServicePrincipalName
   */
  readonly krbServicePrincipalName?: string;

  /**
   * KrbUsername is the Kerberos username used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema WorkflowSpecTemplatesArchiveLocationHdfs#krbUsername
   */
  readonly krbUsername?: string;

  /**
   * Path is a file path in HDFS
   *
   * @schema WorkflowSpecTemplatesArchiveLocationHdfs#path
   */
  readonly path: string;

}

/**
 * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
 *
 * @schema WorkflowSpecTemplatesArchiveLocationHttp
 */
export interface WorkflowSpecTemplatesArchiveLocationHttp {
  /**
   * URL of the artifact
   *
   * @schema WorkflowSpecTemplatesArchiveLocationHttp#url
   */
  readonly url: string;

}

/**
 * OSSArtifact is the location of an Alibaba Cloud OSS artifact
 *
 * @schema WorkflowSpecTemplatesArchiveLocationOss
 */
export interface WorkflowSpecTemplatesArchiveLocationOss {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesArchiveLocationOss#accessKeySecret
   */
  readonly accessKeySecret: WorkflowSpecTemplatesArchiveLocationOssAccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema WorkflowSpecTemplatesArchiveLocationOss#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema WorkflowSpecTemplatesArchiveLocationOss#endpoint
   */
  readonly endpoint: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema WorkflowSpecTemplatesArchiveLocationOss#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesArchiveLocationOss#secretKeySecret
   */
  readonly secretKeySecret: WorkflowSpecTemplatesArchiveLocationOssSecretKeySecret;

}

/**
 * RawArtifact allows raw string content to be placed as an artifact in a container
 *
 * @schema WorkflowSpecTemplatesArchiveLocationRaw
 */
export interface WorkflowSpecTemplatesArchiveLocationRaw {
  /**
   * Data is the string contents of the artifact
   *
   * @schema WorkflowSpecTemplatesArchiveLocationRaw#data
   */
  readonly data: string;

}

/**
 * S3Artifact is the location of an S3 artifact
 *
 * @schema WorkflowSpecTemplatesArchiveLocationS3
 */
export interface WorkflowSpecTemplatesArchiveLocationS3 {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesArchiveLocationS3#accessKeySecret
   */
  readonly accessKeySecret: WorkflowSpecTemplatesArchiveLocationS3AccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema WorkflowSpecTemplatesArchiveLocationS3#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema WorkflowSpecTemplatesArchiveLocationS3#endpoint
   */
  readonly endpoint: string;

  /**
   * Insecure will connect to the service with TLS
   *
   * @schema WorkflowSpecTemplatesArchiveLocationS3#insecure
   */
  readonly insecure?: boolean;

  /**
   * Key is the key in the bucket where the artifact resides
   *
   * @schema WorkflowSpecTemplatesArchiveLocationS3#key
   */
  readonly key: string;

  /**
   * Region contains the optional bucket region
   *
   * @schema WorkflowSpecTemplatesArchiveLocationS3#region
   */
  readonly region?: string;

  /**
   * RoleARN is the Amazon Resource Name (ARN) of the role to assume.
   *
   * @schema WorkflowSpecTemplatesArchiveLocationS3#roleARN
   */
  readonly roleARN?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesArchiveLocationS3#secretKeySecret
   */
  readonly secretKeySecret: WorkflowSpecTemplatesArchiveLocationS3SecretKeySecret;

  /**
   * UseSDKCreds tells the driver to figure out credentials based on sdk defaults.
   *
   * @schema WorkflowSpecTemplatesArchiveLocationS3#useSDKCreds
   */
  readonly useSDKCreds?: boolean;

}

/**
 * Artifact indicates an artifact to place at a specified path
 *
 * @schema WorkflowSpecTemplatesArgumentsArtifacts
 */
export interface WorkflowSpecTemplatesArgumentsArtifacts {
  /**
   * ArchiveStrategy describes how to archive files/directory when saving artifacts
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifacts#archive
   */
  readonly archive?: WorkflowSpecTemplatesArgumentsArtifactsArchive;

  /**
   * ArchiveLogs indicates if the container logs should be archived
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifacts#archiveLogs
   */
  readonly archiveLogs?: boolean;

  /**
   * ArtifactoryArtifact is the location of an artifactory artifact
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifacts#artifactory
   */
  readonly artifactory?: WorkflowSpecTemplatesArgumentsArtifactsArtifactory;

  /**
   * From allows an artifact to reference an artifact from a previous step
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifacts#from
   */
  readonly from?: string;

  /**
   * GCSArtifact is the location of a GCS artifact
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifacts#gcs
   */
  readonly gcs?: WorkflowSpecTemplatesArgumentsArtifactsGcs;

  /**
   * GitArtifact is the location of an git artifact
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifacts#git
   */
  readonly git?: WorkflowSpecTemplatesArgumentsArtifactsGit;

  /**
   * GlobalName exports an output artifact to the global scope, making it available as '{{io.argoproj.workflow.v1alpha1.outputs.artifacts.XXXX}} and in workflow.status.outputs.artifacts
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifacts#globalName
   */
  readonly globalName?: string;

  /**
   * HDFSArtifact is the location of an HDFS artifact
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifacts#hdfs
   */
  readonly hdfs?: WorkflowSpecTemplatesArgumentsArtifactsHdfs;

  /**
   * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifacts#http
   */
  readonly http?: WorkflowSpecTemplatesArgumentsArtifactsHttp;

  /**
   * mode bits to use on this file, must be a value between 0 and 0777 set when loading input artifacts.
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifacts#mode
   */
  readonly mode?: number;

  /**
   * name of the artifact. must be unique within a template's inputs/outputs.
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifacts#name
   */
  readonly name: string;

  /**
   * Make Artifacts optional, if Artifacts doesn't generate or exist
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifacts#optional
   */
  readonly optional?: boolean;

  /**
   * OSSArtifact is the location of an Alibaba Cloud OSS artifact
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifacts#oss
   */
  readonly oss?: WorkflowSpecTemplatesArgumentsArtifactsOss;

  /**
   * Path is the container path to the artifact
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifacts#path
   */
  readonly path?: string;

  /**
   * RawArtifact allows raw string content to be placed as an artifact in a container
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifacts#raw
   */
  readonly raw?: WorkflowSpecTemplatesArgumentsArtifactsRaw;

  /**
   * S3Artifact is the location of an S3 artifact
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifacts#s3
   */
  readonly s3?: WorkflowSpecTemplatesArgumentsArtifactsS3;

}

/**
 * Parameter indicate a passed string parameter to a service template with an optional default value
 *
 * @schema WorkflowSpecTemplatesArgumentsParameters
 */
export interface WorkflowSpecTemplatesArgumentsParameters {
  /**
   * @schema WorkflowSpecTemplatesArgumentsParameters#default
   */
  readonly default?: string;

  /**
   * GlobalName exports an output parameter to the global scope, making it available as '{{io.argoproj.workflow.v1alpha1.outputs.parameters.XXXX}} and in workflow.status.outputs.parameters
   *
   * @schema WorkflowSpecTemplatesArgumentsParameters#globalName
   */
  readonly globalName?: string;

  /**
   * Name is the parameter name
   *
   * @schema WorkflowSpecTemplatesArgumentsParameters#name
   */
  readonly name: string;

  /**
   * @schema WorkflowSpecTemplatesArgumentsParameters#value
   */
  readonly value?: string;

  /**
   * ValueFrom describes a location in which to obtain the value to a parameter
   *
   * @schema WorkflowSpecTemplatesArgumentsParameters#valueFrom
   */
  readonly valueFrom?: WorkflowSpecTemplatesArgumentsParametersValueFrom;

}

/**
 * EnvVar represents an environment variable present in a Container.
 *
 * @schema WorkflowSpecTemplatesContainerEnv
 */
export interface WorkflowSpecTemplatesContainerEnv {
  /**
   * Name of the environment variable. Must be a C_IDENTIFIER.
   *
   * @schema WorkflowSpecTemplatesContainerEnv#name
   */
  readonly name: string;

  /**
   * Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
   *
   * @default .
   * @schema WorkflowSpecTemplatesContainerEnv#value
   */
  readonly value?: string;

  /**
   * EnvVarSource represents a source for the value of an EnvVar.
   *
   * @schema WorkflowSpecTemplatesContainerEnv#valueFrom
   */
  readonly valueFrom?: WorkflowSpecTemplatesContainerEnvValueFrom;

}

/**
 * EnvFromSource represents the source of a set of ConfigMaps
 *
 * @schema WorkflowSpecTemplatesContainerEnvFrom
 */
export interface WorkflowSpecTemplatesContainerEnvFrom {
  /**
   * ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.

The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
   *
   * @schema WorkflowSpecTemplatesContainerEnvFrom#configMapRef
   */
  readonly configMapRef?: WorkflowSpecTemplatesContainerEnvFromConfigMapRef;

  /**
   * An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
   *
   * @schema WorkflowSpecTemplatesContainerEnvFrom#prefix
   */
  readonly prefix?: string;

  /**
   * SecretEnvSource selects a Secret to populate the environment variables with.

The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
   *
   * @schema WorkflowSpecTemplatesContainerEnvFrom#secretRef
   */
  readonly secretRef?: WorkflowSpecTemplatesContainerEnvFromSecretRef;

}

/**
 * Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.
 *
 * @schema WorkflowSpecTemplatesContainerLifecycle
 */
export interface WorkflowSpecTemplatesContainerLifecycle {
  /**
   * Handler defines a specific action that should be taken
   *
   * @schema WorkflowSpecTemplatesContainerLifecycle#postStart
   */
  readonly postStart?: WorkflowSpecTemplatesContainerLifecyclePostStart;

  /**
   * Handler defines a specific action that should be taken
   *
   * @schema WorkflowSpecTemplatesContainerLifecycle#preStop
   */
  readonly preStop?: WorkflowSpecTemplatesContainerLifecyclePreStop;

}

/**
 * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
 *
 * @schema WorkflowSpecTemplatesContainerLivenessProbe
 */
export interface WorkflowSpecTemplatesContainerLivenessProbe {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema WorkflowSpecTemplatesContainerLivenessProbe#exec
   */
  readonly exec?: WorkflowSpecTemplatesContainerLivenessProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema WorkflowSpecTemplatesContainerLivenessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema WorkflowSpecTemplatesContainerLivenessProbe#httpGet
   */
  readonly httpGet?: WorkflowSpecTemplatesContainerLivenessProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema WorkflowSpecTemplatesContainerLivenessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema WorkflowSpecTemplatesContainerLivenessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness. Minimum value is 1.
   * @schema WorkflowSpecTemplatesContainerLivenessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema WorkflowSpecTemplatesContainerLivenessProbe#tcpSocket
   */
  readonly tcpSocket?: WorkflowSpecTemplatesContainerLivenessProbeTcpSocket;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema WorkflowSpecTemplatesContainerLivenessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * ContainerPort represents a network port in a single container.
 *
 * @schema WorkflowSpecTemplatesContainerPorts
 */
export interface WorkflowSpecTemplatesContainerPorts {
  /**
   * Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
   *
   * @schema WorkflowSpecTemplatesContainerPorts#containerPort
   */
  readonly containerPort: number;

  /**
   * What host IP to bind the external port to.
   *
   * @schema WorkflowSpecTemplatesContainerPorts#hostIP
   */
  readonly hostIP?: string;

  /**
   * Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
   *
   * @schema WorkflowSpecTemplatesContainerPorts#hostPort
   */
  readonly hostPort?: number;

  /**
   * If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
   *
   * @schema WorkflowSpecTemplatesContainerPorts#name
   */
  readonly name?: string;

  /**
   * Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
   *
   * @default TCP".
   * @schema WorkflowSpecTemplatesContainerPorts#protocol
   */
  readonly protocol?: string;

}

/**
 * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
 *
 * @schema WorkflowSpecTemplatesContainerReadinessProbe
 */
export interface WorkflowSpecTemplatesContainerReadinessProbe {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema WorkflowSpecTemplatesContainerReadinessProbe#exec
   */
  readonly exec?: WorkflowSpecTemplatesContainerReadinessProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema WorkflowSpecTemplatesContainerReadinessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema WorkflowSpecTemplatesContainerReadinessProbe#httpGet
   */
  readonly httpGet?: WorkflowSpecTemplatesContainerReadinessProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema WorkflowSpecTemplatesContainerReadinessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema WorkflowSpecTemplatesContainerReadinessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness. Minimum value is 1.
   * @schema WorkflowSpecTemplatesContainerReadinessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema WorkflowSpecTemplatesContainerReadinessProbe#tcpSocket
   */
  readonly tcpSocket?: WorkflowSpecTemplatesContainerReadinessProbeTcpSocket;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema WorkflowSpecTemplatesContainerReadinessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * ResourceRequirements describes the compute resource requirements.
 *
 * @schema WorkflowSpecTemplatesContainerResources
 */
export interface WorkflowSpecTemplatesContainerResources {
  /**
   * Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
   *
   * @schema WorkflowSpecTemplatesContainerResources#limits
   */
  readonly limits?: { [key: string]: string };

  /**
   * Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
   *
   * @schema WorkflowSpecTemplatesContainerResources#requests
   */
  readonly requests?: { [key: string]: string };

}

/**
 * SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.
 *
 * @schema WorkflowSpecTemplatesContainerSecurityContext
 */
export interface WorkflowSpecTemplatesContainerSecurityContext {
  /**
   * AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN
   *
   * @schema WorkflowSpecTemplatesContainerSecurityContext#allowPrivilegeEscalation
   */
  readonly allowPrivilegeEscalation?: boolean;

  /**
   * Adds and removes POSIX capabilities from running containers.
   *
   * @schema WorkflowSpecTemplatesContainerSecurityContext#capabilities
   */
  readonly capabilities?: WorkflowSpecTemplatesContainerSecurityContextCapabilities;

  /**
   * Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.
   *
   * @default false.
   * @schema WorkflowSpecTemplatesContainerSecurityContext#privileged
   */
  readonly privileged?: boolean;

  /**
   * procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.
   *
   * @schema WorkflowSpecTemplatesContainerSecurityContext#procMount
   */
  readonly procMount?: string;

  /**
   * Whether this container has a read-only root filesystem. Default is false.
   *
   * @default false.
   * @schema WorkflowSpecTemplatesContainerSecurityContext#readOnlyRootFilesystem
   */
  readonly readOnlyRootFilesystem?: boolean;

  /**
   * The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema WorkflowSpecTemplatesContainerSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema WorkflowSpecTemplatesContainerSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @default user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   * @schema WorkflowSpecTemplatesContainerSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * SELinuxOptions are the labels to be applied to the container
   *
   * @schema WorkflowSpecTemplatesContainerSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: WorkflowSpecTemplatesContainerSecurityContextSeLinuxOptions;

  /**
   * WindowsSecurityContextOptions contain Windows-specific options and credentials.
   *
   * @schema WorkflowSpecTemplatesContainerSecurityContext#windowsOptions
   */
  readonly windowsOptions?: WorkflowSpecTemplatesContainerSecurityContextWindowsOptions;

}

/**
 * volumeDevice describes a mapping of a raw block device within a container.
 *
 * @schema WorkflowSpecTemplatesContainerVolumeDevices
 */
export interface WorkflowSpecTemplatesContainerVolumeDevices {
  /**
   * devicePath is the path inside of the container that the device will be mapped to.
   *
   * @schema WorkflowSpecTemplatesContainerVolumeDevices#devicePath
   */
  readonly devicePath: string;

  /**
   * name must match the name of a persistentVolumeClaim in the pod
   *
   * @schema WorkflowSpecTemplatesContainerVolumeDevices#name
   */
  readonly name: string;

}

/**
 * VolumeMount describes a mounting of a Volume within a container.
 *
 * @schema WorkflowSpecTemplatesContainerVolumeMounts
 */
export interface WorkflowSpecTemplatesContainerVolumeMounts {
  /**
   * Path within the container at which the volume should be mounted.  Must not contain ':'.
   *
   * @schema WorkflowSpecTemplatesContainerVolumeMounts#mountPath
   */
  readonly mountPath: string;

  /**
   * mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
   *
   * @schema WorkflowSpecTemplatesContainerVolumeMounts#mountPropagation
   */
  readonly mountPropagation?: string;

  /**
   * This must match the Name of a Volume.
   *
   * @schema WorkflowSpecTemplatesContainerVolumeMounts#name
   */
  readonly name: string;

  /**
   * Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
   *
   * @default false.
   * @schema WorkflowSpecTemplatesContainerVolumeMounts#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
   *
   * @default volume's root).
   * @schema WorkflowSpecTemplatesContainerVolumeMounts#subPath
   */
  readonly subPath?: string;

  /**
   * Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive. This field is beta in 1.15.
   *
   * @default volume's root). SubPathExpr and SubPath are mutually exclusive. This field is beta in 1.15.
   * @schema WorkflowSpecTemplatesContainerVolumeMounts#subPathExpr
   */
  readonly subPathExpr?: string;

}

/**
 * DAGTask represents a node in the graph during DAG execution
 *
 * @schema WorkflowSpecTemplatesDagTasks
 */
export interface WorkflowSpecTemplatesDagTasks {
  /**
   * Arguments to a template
   *
   * @schema WorkflowSpecTemplatesDagTasks#arguments
   */
  readonly arguments?: WorkflowSpecTemplatesDagTasksArguments;

  /**
   * ContinueOn defines if a workflow should continue even if a task or step fails/errors. It can be specified if the workflow should continue when the pod errors, fails or both.
   *
   * @schema WorkflowSpecTemplatesDagTasks#continueOn
   */
  readonly continueOn?: WorkflowSpecTemplatesDagTasksContinueOn;

  /**
   * Dependencies are name of other targets which this depends on
   *
   * @schema WorkflowSpecTemplatesDagTasks#dependencies
   */
  readonly dependencies?: string[];

  /**
   * Depends are name of other targets which this depends on
   *
   * @schema WorkflowSpecTemplatesDagTasks#depends
   */
  readonly depends?: string;

  /**
   * Name is the name of the target
   *
   * @schema WorkflowSpecTemplatesDagTasks#name
   */
  readonly name: string;

  /**
   * OnExit is a template reference which is invoked at the end of the template, irrespective of the success, failure, or error of the primary template.
   *
   * @schema WorkflowSpecTemplatesDagTasks#onExit
   */
  readonly onExit?: string;

  /**
   * Name of template to execute
   *
   * @schema WorkflowSpecTemplatesDagTasks#template
   */
  readonly template: string;

  /**
   * TemplateRef is a reference of template resource.
   *
   * @schema WorkflowSpecTemplatesDagTasks#templateRef
   */
  readonly templateRef?: WorkflowSpecTemplatesDagTasksTemplateRef;

  /**
   * When is an expression in which the task should conditionally execute
   *
   * @schema WorkflowSpecTemplatesDagTasks#when
   */
  readonly when?: string;

  /**
   * WithItems expands a task into multiple parallel tasks from the items in the list
   *
   * @schema WorkflowSpecTemplatesDagTasks#withItems
   */
  readonly withItems?: string[];

  /**
   * WithParam expands a task into multiple parallel tasks from the value in the parameter, which is expected to be a JSON list.
   *
   * @schema WorkflowSpecTemplatesDagTasks#withParam
   */
  readonly withParam?: string;

  /**
   * Sequence expands a workflow step into numeric range
   *
   * @schema WorkflowSpecTemplatesDagTasks#withSequence
   */
  readonly withSequence?: WorkflowSpecTemplatesDagTasksWithSequence;

}

/**
 * EnvVar represents an environment variable present in a Container.
 *
 * @schema WorkflowSpecTemplatesInitContainersEnv
 */
export interface WorkflowSpecTemplatesInitContainersEnv {
  /**
   * Name of the environment variable. Must be a C_IDENTIFIER.
   *
   * @schema WorkflowSpecTemplatesInitContainersEnv#name
   */
  readonly name: string;

  /**
   * Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
   *
   * @default .
   * @schema WorkflowSpecTemplatesInitContainersEnv#value
   */
  readonly value?: string;

  /**
   * EnvVarSource represents a source for the value of an EnvVar.
   *
   * @schema WorkflowSpecTemplatesInitContainersEnv#valueFrom
   */
  readonly valueFrom?: WorkflowSpecTemplatesInitContainersEnvValueFrom;

}

/**
 * EnvFromSource represents the source of a set of ConfigMaps
 *
 * @schema WorkflowSpecTemplatesInitContainersEnvFrom
 */
export interface WorkflowSpecTemplatesInitContainersEnvFrom {
  /**
   * ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.

The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
   *
   * @schema WorkflowSpecTemplatesInitContainersEnvFrom#configMapRef
   */
  readonly configMapRef?: WorkflowSpecTemplatesInitContainersEnvFromConfigMapRef;

  /**
   * An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
   *
   * @schema WorkflowSpecTemplatesInitContainersEnvFrom#prefix
   */
  readonly prefix?: string;

  /**
   * SecretEnvSource selects a Secret to populate the environment variables with.

The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
   *
   * @schema WorkflowSpecTemplatesInitContainersEnvFrom#secretRef
   */
  readonly secretRef?: WorkflowSpecTemplatesInitContainersEnvFromSecretRef;

}

/**
 * Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.
 *
 * @schema WorkflowSpecTemplatesInitContainersLifecycle
 */
export interface WorkflowSpecTemplatesInitContainersLifecycle {
  /**
   * Handler defines a specific action that should be taken
   *
   * @schema WorkflowSpecTemplatesInitContainersLifecycle#postStart
   */
  readonly postStart?: WorkflowSpecTemplatesInitContainersLifecyclePostStart;

  /**
   * Handler defines a specific action that should be taken
   *
   * @schema WorkflowSpecTemplatesInitContainersLifecycle#preStop
   */
  readonly preStop?: WorkflowSpecTemplatesInitContainersLifecyclePreStop;

}

/**
 * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
 *
 * @schema WorkflowSpecTemplatesInitContainersLivenessProbe
 */
export interface WorkflowSpecTemplatesInitContainersLivenessProbe {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema WorkflowSpecTemplatesInitContainersLivenessProbe#exec
   */
  readonly exec?: WorkflowSpecTemplatesInitContainersLivenessProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema WorkflowSpecTemplatesInitContainersLivenessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema WorkflowSpecTemplatesInitContainersLivenessProbe#httpGet
   */
  readonly httpGet?: WorkflowSpecTemplatesInitContainersLivenessProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema WorkflowSpecTemplatesInitContainersLivenessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema WorkflowSpecTemplatesInitContainersLivenessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness. Minimum value is 1.
   * @schema WorkflowSpecTemplatesInitContainersLivenessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema WorkflowSpecTemplatesInitContainersLivenessProbe#tcpSocket
   */
  readonly tcpSocket?: WorkflowSpecTemplatesInitContainersLivenessProbeTcpSocket;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema WorkflowSpecTemplatesInitContainersLivenessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * ContainerPort represents a network port in a single container.
 *
 * @schema WorkflowSpecTemplatesInitContainersPorts
 */
export interface WorkflowSpecTemplatesInitContainersPorts {
  /**
   * Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
   *
   * @schema WorkflowSpecTemplatesInitContainersPorts#containerPort
   */
  readonly containerPort: number;

  /**
   * What host IP to bind the external port to.
   *
   * @schema WorkflowSpecTemplatesInitContainersPorts#hostIP
   */
  readonly hostIP?: string;

  /**
   * Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
   *
   * @schema WorkflowSpecTemplatesInitContainersPorts#hostPort
   */
  readonly hostPort?: number;

  /**
   * If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
   *
   * @schema WorkflowSpecTemplatesInitContainersPorts#name
   */
  readonly name?: string;

  /**
   * Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
   *
   * @default TCP".
   * @schema WorkflowSpecTemplatesInitContainersPorts#protocol
   */
  readonly protocol?: string;

}

/**
 * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
 *
 * @schema WorkflowSpecTemplatesInitContainersReadinessProbe
 */
export interface WorkflowSpecTemplatesInitContainersReadinessProbe {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema WorkflowSpecTemplatesInitContainersReadinessProbe#exec
   */
  readonly exec?: WorkflowSpecTemplatesInitContainersReadinessProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema WorkflowSpecTemplatesInitContainersReadinessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema WorkflowSpecTemplatesInitContainersReadinessProbe#httpGet
   */
  readonly httpGet?: WorkflowSpecTemplatesInitContainersReadinessProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema WorkflowSpecTemplatesInitContainersReadinessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema WorkflowSpecTemplatesInitContainersReadinessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness. Minimum value is 1.
   * @schema WorkflowSpecTemplatesInitContainersReadinessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema WorkflowSpecTemplatesInitContainersReadinessProbe#tcpSocket
   */
  readonly tcpSocket?: WorkflowSpecTemplatesInitContainersReadinessProbeTcpSocket;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema WorkflowSpecTemplatesInitContainersReadinessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * ResourceRequirements describes the compute resource requirements.
 *
 * @schema WorkflowSpecTemplatesInitContainersResources
 */
export interface WorkflowSpecTemplatesInitContainersResources {
  /**
   * Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
   *
   * @schema WorkflowSpecTemplatesInitContainersResources#limits
   */
  readonly limits?: { [key: string]: string };

  /**
   * Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
   *
   * @schema WorkflowSpecTemplatesInitContainersResources#requests
   */
  readonly requests?: { [key: string]: string };

}

/**
 * SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.
 *
 * @schema WorkflowSpecTemplatesInitContainersSecurityContext
 */
export interface WorkflowSpecTemplatesInitContainersSecurityContext {
  /**
   * AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN
   *
   * @schema WorkflowSpecTemplatesInitContainersSecurityContext#allowPrivilegeEscalation
   */
  readonly allowPrivilegeEscalation?: boolean;

  /**
   * Adds and removes POSIX capabilities from running containers.
   *
   * @schema WorkflowSpecTemplatesInitContainersSecurityContext#capabilities
   */
  readonly capabilities?: WorkflowSpecTemplatesInitContainersSecurityContextCapabilities;

  /**
   * Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.
   *
   * @default false.
   * @schema WorkflowSpecTemplatesInitContainersSecurityContext#privileged
   */
  readonly privileged?: boolean;

  /**
   * procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.
   *
   * @schema WorkflowSpecTemplatesInitContainersSecurityContext#procMount
   */
  readonly procMount?: string;

  /**
   * Whether this container has a read-only root filesystem. Default is false.
   *
   * @default false.
   * @schema WorkflowSpecTemplatesInitContainersSecurityContext#readOnlyRootFilesystem
   */
  readonly readOnlyRootFilesystem?: boolean;

  /**
   * The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema WorkflowSpecTemplatesInitContainersSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema WorkflowSpecTemplatesInitContainersSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @default user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   * @schema WorkflowSpecTemplatesInitContainersSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * SELinuxOptions are the labels to be applied to the container
   *
   * @schema WorkflowSpecTemplatesInitContainersSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: WorkflowSpecTemplatesInitContainersSecurityContextSeLinuxOptions;

  /**
   * WindowsSecurityContextOptions contain Windows-specific options and credentials.
   *
   * @schema WorkflowSpecTemplatesInitContainersSecurityContext#windowsOptions
   */
  readonly windowsOptions?: WorkflowSpecTemplatesInitContainersSecurityContextWindowsOptions;

}

/**
 * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
 *
 * @schema WorkflowSpecTemplatesInitContainersStartupProbe
 */
export interface WorkflowSpecTemplatesInitContainersStartupProbe {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema WorkflowSpecTemplatesInitContainersStartupProbe#exec
   */
  readonly exec?: WorkflowSpecTemplatesInitContainersStartupProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema WorkflowSpecTemplatesInitContainersStartupProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema WorkflowSpecTemplatesInitContainersStartupProbe#httpGet
   */
  readonly httpGet?: WorkflowSpecTemplatesInitContainersStartupProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema WorkflowSpecTemplatesInitContainersStartupProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema WorkflowSpecTemplatesInitContainersStartupProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness. Minimum value is 1.
   * @schema WorkflowSpecTemplatesInitContainersStartupProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema WorkflowSpecTemplatesInitContainersStartupProbe#tcpSocket
   */
  readonly tcpSocket?: WorkflowSpecTemplatesInitContainersStartupProbeTcpSocket;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema WorkflowSpecTemplatesInitContainersStartupProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * volumeDevice describes a mapping of a raw block device within a container.
 *
 * @schema WorkflowSpecTemplatesInitContainersVolumeDevices
 */
export interface WorkflowSpecTemplatesInitContainersVolumeDevices {
  /**
   * devicePath is the path inside of the container that the device will be mapped to.
   *
   * @schema WorkflowSpecTemplatesInitContainersVolumeDevices#devicePath
   */
  readonly devicePath: string;

  /**
   * name must match the name of a persistentVolumeClaim in the pod
   *
   * @schema WorkflowSpecTemplatesInitContainersVolumeDevices#name
   */
  readonly name: string;

}

/**
 * VolumeMount describes a mounting of a Volume within a container.
 *
 * @schema WorkflowSpecTemplatesInitContainersVolumeMounts
 */
export interface WorkflowSpecTemplatesInitContainersVolumeMounts {
  /**
   * Path within the container at which the volume should be mounted.  Must not contain ':'.
   *
   * @schema WorkflowSpecTemplatesInitContainersVolumeMounts#mountPath
   */
  readonly mountPath: string;

  /**
   * mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
   *
   * @schema WorkflowSpecTemplatesInitContainersVolumeMounts#mountPropagation
   */
  readonly mountPropagation?: string;

  /**
   * This must match the Name of a Volume.
   *
   * @schema WorkflowSpecTemplatesInitContainersVolumeMounts#name
   */
  readonly name: string;

  /**
   * Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
   *
   * @default false.
   * @schema WorkflowSpecTemplatesInitContainersVolumeMounts#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
   *
   * @default volume's root).
   * @schema WorkflowSpecTemplatesInitContainersVolumeMounts#subPath
   */
  readonly subPath?: string;

  /**
   * Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive. This field is beta in 1.15.
   *
   * @default volume's root). SubPathExpr and SubPath are mutually exclusive. This field is beta in 1.15.
   * @schema WorkflowSpecTemplatesInitContainersVolumeMounts#subPathExpr
   */
  readonly subPathExpr?: string;

}

/**
 * Artifact indicates an artifact to place at a specified path
 *
 * @schema WorkflowSpecTemplatesInputsArtifacts
 */
export interface WorkflowSpecTemplatesInputsArtifacts {
  /**
   * ArchiveStrategy describes how to archive files/directory when saving artifacts
   *
   * @schema WorkflowSpecTemplatesInputsArtifacts#archive
   */
  readonly archive?: WorkflowSpecTemplatesInputsArtifactsArchive;

  /**
   * ArchiveLogs indicates if the container logs should be archived
   *
   * @schema WorkflowSpecTemplatesInputsArtifacts#archiveLogs
   */
  readonly archiveLogs?: boolean;

  /**
   * ArtifactoryArtifact is the location of an artifactory artifact
   *
   * @schema WorkflowSpecTemplatesInputsArtifacts#artifactory
   */
  readonly artifactory?: WorkflowSpecTemplatesInputsArtifactsArtifactory;

  /**
   * From allows an artifact to reference an artifact from a previous step
   *
   * @schema WorkflowSpecTemplatesInputsArtifacts#from
   */
  readonly from?: string;

  /**
   * GCSArtifact is the location of a GCS artifact
   *
   * @schema WorkflowSpecTemplatesInputsArtifacts#gcs
   */
  readonly gcs?: WorkflowSpecTemplatesInputsArtifactsGcs;

  /**
   * GitArtifact is the location of an git artifact
   *
   * @schema WorkflowSpecTemplatesInputsArtifacts#git
   */
  readonly git?: WorkflowSpecTemplatesInputsArtifactsGit;

  /**
   * GlobalName exports an output artifact to the global scope, making it available as '{{io.argoproj.workflow.v1alpha1.outputs.artifacts.XXXX}} and in workflow.status.outputs.artifacts
   *
   * @schema WorkflowSpecTemplatesInputsArtifacts#globalName
   */
  readonly globalName?: string;

  /**
   * HDFSArtifact is the location of an HDFS artifact
   *
   * @schema WorkflowSpecTemplatesInputsArtifacts#hdfs
   */
  readonly hdfs?: WorkflowSpecTemplatesInputsArtifactsHdfs;

  /**
   * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
   *
   * @schema WorkflowSpecTemplatesInputsArtifacts#http
   */
  readonly http?: WorkflowSpecTemplatesInputsArtifactsHttp;

  /**
   * mode bits to use on this file, must be a value between 0 and 0777 set when loading input artifacts.
   *
   * @schema WorkflowSpecTemplatesInputsArtifacts#mode
   */
  readonly mode?: number;

  /**
   * name of the artifact. must be unique within a template's inputs/outputs.
   *
   * @schema WorkflowSpecTemplatesInputsArtifacts#name
   */
  readonly name: string;

  /**
   * Make Artifacts optional, if Artifacts doesn't generate or exist
   *
   * @schema WorkflowSpecTemplatesInputsArtifacts#optional
   */
  readonly optional?: boolean;

  /**
   * OSSArtifact is the location of an Alibaba Cloud OSS artifact
   *
   * @schema WorkflowSpecTemplatesInputsArtifacts#oss
   */
  readonly oss?: WorkflowSpecTemplatesInputsArtifactsOss;

  /**
   * Path is the container path to the artifact
   *
   * @schema WorkflowSpecTemplatesInputsArtifacts#path
   */
  readonly path?: string;

  /**
   * RawArtifact allows raw string content to be placed as an artifact in a container
   *
   * @schema WorkflowSpecTemplatesInputsArtifacts#raw
   */
  readonly raw?: WorkflowSpecTemplatesInputsArtifactsRaw;

  /**
   * S3Artifact is the location of an S3 artifact
   *
   * @schema WorkflowSpecTemplatesInputsArtifacts#s3
   */
  readonly s3?: WorkflowSpecTemplatesInputsArtifactsS3;

}

/**
 * Parameter indicate a passed string parameter to a service template with an optional default value
 *
 * @schema WorkflowSpecTemplatesInputsParameters
 */
export interface WorkflowSpecTemplatesInputsParameters {
  /**
   * @schema WorkflowSpecTemplatesInputsParameters#default
   */
  readonly default?: string;

  /**
   * GlobalName exports an output parameter to the global scope, making it available as '{{io.argoproj.workflow.v1alpha1.outputs.parameters.XXXX}} and in workflow.status.outputs.parameters
   *
   * @schema WorkflowSpecTemplatesInputsParameters#globalName
   */
  readonly globalName?: string;

  /**
   * Name is the parameter name
   *
   * @schema WorkflowSpecTemplatesInputsParameters#name
   */
  readonly name: string;

  /**
   * @schema WorkflowSpecTemplatesInputsParameters#value
   */
  readonly value?: string;

  /**
   * ValueFrom describes a location in which to obtain the value to a parameter
   *
   * @schema WorkflowSpecTemplatesInputsParameters#valueFrom
   */
  readonly valueFrom?: WorkflowSpecTemplatesInputsParametersValueFrom;

}

/**
 * Prometheus is a prometheus metric to be emitted
 *
 * @schema WorkflowSpecTemplatesMetricsPrometheus
 */
export interface WorkflowSpecTemplatesMetricsPrometheus {
  /**
   * Counter is a Counter prometheus metric
   *
   * @schema WorkflowSpecTemplatesMetricsPrometheus#counter
   */
  readonly counter?: WorkflowSpecTemplatesMetricsPrometheusCounter;

  /**
   * Gauge is a Gauge prometheus metric
   *
   * @schema WorkflowSpecTemplatesMetricsPrometheus#gauge
   */
  readonly gauge?: WorkflowSpecTemplatesMetricsPrometheusGauge;

  /**
   * Help is a string that describes the metric
   *
   * @schema WorkflowSpecTemplatesMetricsPrometheus#help
   */
  readonly help: string;

  /**
   * Histogram is a Histogram prometheus metric
   *
   * @schema WorkflowSpecTemplatesMetricsPrometheus#histogram
   */
  readonly histogram?: WorkflowSpecTemplatesMetricsPrometheusHistogram;

  /**
   * Labels is a list of metric labels
   *
   * @schema WorkflowSpecTemplatesMetricsPrometheus#labels
   */
  readonly labels?: WorkflowSpecTemplatesMetricsPrometheusLabels[];

  /**
   * Name is the name of the metric
   *
   * @schema WorkflowSpecTemplatesMetricsPrometheus#name
   */
  readonly name: string;

  /**
   * When is a conditional statement that decides when to emit the metric
   *
   * @schema WorkflowSpecTemplatesMetricsPrometheus#when
   */
  readonly when?: string;

}

/**
 * Artifact indicates an artifact to place at a specified path
 *
 * @schema WorkflowSpecTemplatesOutputsArtifacts
 */
export interface WorkflowSpecTemplatesOutputsArtifacts {
  /**
   * ArchiveStrategy describes how to archive files/directory when saving artifacts
   *
   * @schema WorkflowSpecTemplatesOutputsArtifacts#archive
   */
  readonly archive?: WorkflowSpecTemplatesOutputsArtifactsArchive;

  /**
   * ArchiveLogs indicates if the container logs should be archived
   *
   * @schema WorkflowSpecTemplatesOutputsArtifacts#archiveLogs
   */
  readonly archiveLogs?: boolean;

  /**
   * ArtifactoryArtifact is the location of an artifactory artifact
   *
   * @schema WorkflowSpecTemplatesOutputsArtifacts#artifactory
   */
  readonly artifactory?: WorkflowSpecTemplatesOutputsArtifactsArtifactory;

  /**
   * From allows an artifact to reference an artifact from a previous step
   *
   * @schema WorkflowSpecTemplatesOutputsArtifacts#from
   */
  readonly from?: string;

  /**
   * GCSArtifact is the location of a GCS artifact
   *
   * @schema WorkflowSpecTemplatesOutputsArtifacts#gcs
   */
  readonly gcs?: WorkflowSpecTemplatesOutputsArtifactsGcs;

  /**
   * GitArtifact is the location of an git artifact
   *
   * @schema WorkflowSpecTemplatesOutputsArtifacts#git
   */
  readonly git?: WorkflowSpecTemplatesOutputsArtifactsGit;

  /**
   * GlobalName exports an output artifact to the global scope, making it available as '{{io.argoproj.workflow.v1alpha1.outputs.artifacts.XXXX}} and in workflow.status.outputs.artifacts
   *
   * @schema WorkflowSpecTemplatesOutputsArtifacts#globalName
   */
  readonly globalName?: string;

  /**
   * HDFSArtifact is the location of an HDFS artifact
   *
   * @schema WorkflowSpecTemplatesOutputsArtifacts#hdfs
   */
  readonly hdfs?: WorkflowSpecTemplatesOutputsArtifactsHdfs;

  /**
   * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
   *
   * @schema WorkflowSpecTemplatesOutputsArtifacts#http
   */
  readonly http?: WorkflowSpecTemplatesOutputsArtifactsHttp;

  /**
   * mode bits to use on this file, must be a value between 0 and 0777 set when loading input artifacts.
   *
   * @schema WorkflowSpecTemplatesOutputsArtifacts#mode
   */
  readonly mode?: number;

  /**
   * name of the artifact. must be unique within a template's inputs/outputs.
   *
   * @schema WorkflowSpecTemplatesOutputsArtifacts#name
   */
  readonly name: string;

  /**
   * Make Artifacts optional, if Artifacts doesn't generate or exist
   *
   * @schema WorkflowSpecTemplatesOutputsArtifacts#optional
   */
  readonly optional?: boolean;

  /**
   * OSSArtifact is the location of an Alibaba Cloud OSS artifact
   *
   * @schema WorkflowSpecTemplatesOutputsArtifacts#oss
   */
  readonly oss?: WorkflowSpecTemplatesOutputsArtifactsOss;

  /**
   * Path is the container path to the artifact
   *
   * @schema WorkflowSpecTemplatesOutputsArtifacts#path
   */
  readonly path?: string;

  /**
   * RawArtifact allows raw string content to be placed as an artifact in a container
   *
   * @schema WorkflowSpecTemplatesOutputsArtifacts#raw
   */
  readonly raw?: WorkflowSpecTemplatesOutputsArtifactsRaw;

  /**
   * S3Artifact is the location of an S3 artifact
   *
   * @schema WorkflowSpecTemplatesOutputsArtifacts#s3
   */
  readonly s3?: WorkflowSpecTemplatesOutputsArtifactsS3;

}

/**
 * Parameter indicate a passed string parameter to a service template with an optional default value
 *
 * @schema WorkflowSpecTemplatesOutputsParameters
 */
export interface WorkflowSpecTemplatesOutputsParameters {
  /**
   * @schema WorkflowSpecTemplatesOutputsParameters#default
   */
  readonly default?: string;

  /**
   * GlobalName exports an output parameter to the global scope, making it available as '{{io.argoproj.workflow.v1alpha1.outputs.parameters.XXXX}} and in workflow.status.outputs.parameters
   *
   * @schema WorkflowSpecTemplatesOutputsParameters#globalName
   */
  readonly globalName?: string;

  /**
   * Name is the parameter name
   *
   * @schema WorkflowSpecTemplatesOutputsParameters#name
   */
  readonly name: string;

  /**
   * @schema WorkflowSpecTemplatesOutputsParameters#value
   */
  readonly value?: string;

  /**
   * ValueFrom describes a location in which to obtain the value to a parameter
   *
   * @schema WorkflowSpecTemplatesOutputsParameters#valueFrom
   */
  readonly valueFrom?: WorkflowSpecTemplatesOutputsParametersValueFrom;

}

/**
 * Backoff is a backoff strategy to use within retryStrategy
 *
 * @schema WorkflowSpecTemplatesRetryStrategyBackoff
 */
export interface WorkflowSpecTemplatesRetryStrategyBackoff {
  /**
   * Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
   *
   * @schema WorkflowSpecTemplatesRetryStrategyBackoff#duration
   */
  readonly duration?: string;

  /**
   * Factor is a factor to multiply the base duration after each failed retry
   *
   * @schema WorkflowSpecTemplatesRetryStrategyBackoff#factor
   */
  readonly factor?: number;

  /**
   * MaxDuration is the maximum amount of time allowed for the backoff strategy
   *
   * @schema WorkflowSpecTemplatesRetryStrategyBackoff#maxDuration
   */
  readonly maxDuration?: string;

}

/**
 * EnvVar represents an environment variable present in a Container.
 *
 * @schema WorkflowSpecTemplatesScriptEnv
 */
export interface WorkflowSpecTemplatesScriptEnv {
  /**
   * Name of the environment variable. Must be a C_IDENTIFIER.
   *
   * @schema WorkflowSpecTemplatesScriptEnv#name
   */
  readonly name: string;

  /**
   * Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
   *
   * @default .
   * @schema WorkflowSpecTemplatesScriptEnv#value
   */
  readonly value?: string;

  /**
   * EnvVarSource represents a source for the value of an EnvVar.
   *
   * @schema WorkflowSpecTemplatesScriptEnv#valueFrom
   */
  readonly valueFrom?: WorkflowSpecTemplatesScriptEnvValueFrom;

}

/**
 * EnvFromSource represents the source of a set of ConfigMaps
 *
 * @schema WorkflowSpecTemplatesScriptEnvFrom
 */
export interface WorkflowSpecTemplatesScriptEnvFrom {
  /**
   * ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.

The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
   *
   * @schema WorkflowSpecTemplatesScriptEnvFrom#configMapRef
   */
  readonly configMapRef?: WorkflowSpecTemplatesScriptEnvFromConfigMapRef;

  /**
   * An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
   *
   * @schema WorkflowSpecTemplatesScriptEnvFrom#prefix
   */
  readonly prefix?: string;

  /**
   * SecretEnvSource selects a Secret to populate the environment variables with.

The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
   *
   * @schema WorkflowSpecTemplatesScriptEnvFrom#secretRef
   */
  readonly secretRef?: WorkflowSpecTemplatesScriptEnvFromSecretRef;

}

/**
 * Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.
 *
 * @schema WorkflowSpecTemplatesScriptLifecycle
 */
export interface WorkflowSpecTemplatesScriptLifecycle {
  /**
   * Handler defines a specific action that should be taken
   *
   * @schema WorkflowSpecTemplatesScriptLifecycle#postStart
   */
  readonly postStart?: WorkflowSpecTemplatesScriptLifecyclePostStart;

  /**
   * Handler defines a specific action that should be taken
   *
   * @schema WorkflowSpecTemplatesScriptLifecycle#preStop
   */
  readonly preStop?: WorkflowSpecTemplatesScriptLifecyclePreStop;

}

/**
 * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
 *
 * @schema WorkflowSpecTemplatesScriptLivenessProbe
 */
export interface WorkflowSpecTemplatesScriptLivenessProbe {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema WorkflowSpecTemplatesScriptLivenessProbe#exec
   */
  readonly exec?: WorkflowSpecTemplatesScriptLivenessProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema WorkflowSpecTemplatesScriptLivenessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema WorkflowSpecTemplatesScriptLivenessProbe#httpGet
   */
  readonly httpGet?: WorkflowSpecTemplatesScriptLivenessProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema WorkflowSpecTemplatesScriptLivenessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema WorkflowSpecTemplatesScriptLivenessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness. Minimum value is 1.
   * @schema WorkflowSpecTemplatesScriptLivenessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema WorkflowSpecTemplatesScriptLivenessProbe#tcpSocket
   */
  readonly tcpSocket?: WorkflowSpecTemplatesScriptLivenessProbeTcpSocket;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema WorkflowSpecTemplatesScriptLivenessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * ContainerPort represents a network port in a single container.
 *
 * @schema WorkflowSpecTemplatesScriptPorts
 */
export interface WorkflowSpecTemplatesScriptPorts {
  /**
   * Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
   *
   * @schema WorkflowSpecTemplatesScriptPorts#containerPort
   */
  readonly containerPort: number;

  /**
   * What host IP to bind the external port to.
   *
   * @schema WorkflowSpecTemplatesScriptPorts#hostIP
   */
  readonly hostIP?: string;

  /**
   * Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
   *
   * @schema WorkflowSpecTemplatesScriptPorts#hostPort
   */
  readonly hostPort?: number;

  /**
   * If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
   *
   * @schema WorkflowSpecTemplatesScriptPorts#name
   */
  readonly name?: string;

  /**
   * Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
   *
   * @default TCP".
   * @schema WorkflowSpecTemplatesScriptPorts#protocol
   */
  readonly protocol?: string;

}

/**
 * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
 *
 * @schema WorkflowSpecTemplatesScriptReadinessProbe
 */
export interface WorkflowSpecTemplatesScriptReadinessProbe {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema WorkflowSpecTemplatesScriptReadinessProbe#exec
   */
  readonly exec?: WorkflowSpecTemplatesScriptReadinessProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema WorkflowSpecTemplatesScriptReadinessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema WorkflowSpecTemplatesScriptReadinessProbe#httpGet
   */
  readonly httpGet?: WorkflowSpecTemplatesScriptReadinessProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema WorkflowSpecTemplatesScriptReadinessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema WorkflowSpecTemplatesScriptReadinessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness. Minimum value is 1.
   * @schema WorkflowSpecTemplatesScriptReadinessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema WorkflowSpecTemplatesScriptReadinessProbe#tcpSocket
   */
  readonly tcpSocket?: WorkflowSpecTemplatesScriptReadinessProbeTcpSocket;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema WorkflowSpecTemplatesScriptReadinessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * ResourceRequirements describes the compute resource requirements.
 *
 * @schema WorkflowSpecTemplatesScriptResources
 */
export interface WorkflowSpecTemplatesScriptResources {
  /**
   * Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
   *
   * @schema WorkflowSpecTemplatesScriptResources#limits
   */
  readonly limits?: { [key: string]: string };

  /**
   * Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
   *
   * @schema WorkflowSpecTemplatesScriptResources#requests
   */
  readonly requests?: { [key: string]: string };

}

/**
 * SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.
 *
 * @schema WorkflowSpecTemplatesScriptSecurityContext
 */
export interface WorkflowSpecTemplatesScriptSecurityContext {
  /**
   * AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN
   *
   * @schema WorkflowSpecTemplatesScriptSecurityContext#allowPrivilegeEscalation
   */
  readonly allowPrivilegeEscalation?: boolean;

  /**
   * Adds and removes POSIX capabilities from running containers.
   *
   * @schema WorkflowSpecTemplatesScriptSecurityContext#capabilities
   */
  readonly capabilities?: WorkflowSpecTemplatesScriptSecurityContextCapabilities;

  /**
   * Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.
   *
   * @default false.
   * @schema WorkflowSpecTemplatesScriptSecurityContext#privileged
   */
  readonly privileged?: boolean;

  /**
   * procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.
   *
   * @schema WorkflowSpecTemplatesScriptSecurityContext#procMount
   */
  readonly procMount?: string;

  /**
   * Whether this container has a read-only root filesystem. Default is false.
   *
   * @default false.
   * @schema WorkflowSpecTemplatesScriptSecurityContext#readOnlyRootFilesystem
   */
  readonly readOnlyRootFilesystem?: boolean;

  /**
   * The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema WorkflowSpecTemplatesScriptSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema WorkflowSpecTemplatesScriptSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @default user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   * @schema WorkflowSpecTemplatesScriptSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * SELinuxOptions are the labels to be applied to the container
   *
   * @schema WorkflowSpecTemplatesScriptSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: WorkflowSpecTemplatesScriptSecurityContextSeLinuxOptions;

  /**
   * WindowsSecurityContextOptions contain Windows-specific options and credentials.
   *
   * @schema WorkflowSpecTemplatesScriptSecurityContext#windowsOptions
   */
  readonly windowsOptions?: WorkflowSpecTemplatesScriptSecurityContextWindowsOptions;

}

/**
 * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
 *
 * @schema WorkflowSpecTemplatesScriptStartupProbe
 */
export interface WorkflowSpecTemplatesScriptStartupProbe {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema WorkflowSpecTemplatesScriptStartupProbe#exec
   */
  readonly exec?: WorkflowSpecTemplatesScriptStartupProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema WorkflowSpecTemplatesScriptStartupProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema WorkflowSpecTemplatesScriptStartupProbe#httpGet
   */
  readonly httpGet?: WorkflowSpecTemplatesScriptStartupProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema WorkflowSpecTemplatesScriptStartupProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema WorkflowSpecTemplatesScriptStartupProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness. Minimum value is 1.
   * @schema WorkflowSpecTemplatesScriptStartupProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema WorkflowSpecTemplatesScriptStartupProbe#tcpSocket
   */
  readonly tcpSocket?: WorkflowSpecTemplatesScriptStartupProbeTcpSocket;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema WorkflowSpecTemplatesScriptStartupProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * volumeDevice describes a mapping of a raw block device within a container.
 *
 * @schema WorkflowSpecTemplatesScriptVolumeDevices
 */
export interface WorkflowSpecTemplatesScriptVolumeDevices {
  /**
   * devicePath is the path inside of the container that the device will be mapped to.
   *
   * @schema WorkflowSpecTemplatesScriptVolumeDevices#devicePath
   */
  readonly devicePath: string;

  /**
   * name must match the name of a persistentVolumeClaim in the pod
   *
   * @schema WorkflowSpecTemplatesScriptVolumeDevices#name
   */
  readonly name: string;

}

/**
 * VolumeMount describes a mounting of a Volume within a container.
 *
 * @schema WorkflowSpecTemplatesScriptVolumeMounts
 */
export interface WorkflowSpecTemplatesScriptVolumeMounts {
  /**
   * Path within the container at which the volume should be mounted.  Must not contain ':'.
   *
   * @schema WorkflowSpecTemplatesScriptVolumeMounts#mountPath
   */
  readonly mountPath: string;

  /**
   * mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
   *
   * @schema WorkflowSpecTemplatesScriptVolumeMounts#mountPropagation
   */
  readonly mountPropagation?: string;

  /**
   * This must match the Name of a Volume.
   *
   * @schema WorkflowSpecTemplatesScriptVolumeMounts#name
   */
  readonly name: string;

  /**
   * Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
   *
   * @default false.
   * @schema WorkflowSpecTemplatesScriptVolumeMounts#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
   *
   * @default volume's root).
   * @schema WorkflowSpecTemplatesScriptVolumeMounts#subPath
   */
  readonly subPath?: string;

  /**
   * Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive. This field is beta in 1.15.
   *
   * @default volume's root). SubPathExpr and SubPath are mutually exclusive. This field is beta in 1.15.
   * @schema WorkflowSpecTemplatesScriptVolumeMounts#subPathExpr
   */
  readonly subPathExpr?: string;

}

/**
 * SELinuxOptions are the labels to be applied to the container
 *
 * @schema WorkflowSpecTemplatesSecurityContextSeLinuxOptions
 */
export interface WorkflowSpecTemplatesSecurityContextSeLinuxOptions {
  /**
   * Level is SELinux level label that applies to the container.
   *
   * @schema WorkflowSpecTemplatesSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * Role is a SELinux role label that applies to the container.
   *
   * @schema WorkflowSpecTemplatesSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * Type is a SELinux type label that applies to the container.
   *
   * @schema WorkflowSpecTemplatesSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * User is a SELinux user label that applies to the container.
   *
   * @schema WorkflowSpecTemplatesSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * Sysctl defines a kernel parameter to be set
 *
 * @schema WorkflowSpecTemplatesSecurityContextSysctls
 */
export interface WorkflowSpecTemplatesSecurityContextSysctls {
  /**
   * Name of a property to set
   *
   * @schema WorkflowSpecTemplatesSecurityContextSysctls#name
   */
  readonly name: string;

  /**
   * Value of a property to set
   *
   * @schema WorkflowSpecTemplatesSecurityContextSysctls#value
   */
  readonly value: string;

}

/**
 * WindowsSecurityContextOptions contain Windows-specific options and credentials.
 *
 * @schema WorkflowSpecTemplatesSecurityContextWindowsOptions
 */
export interface WorkflowSpecTemplatesSecurityContextWindowsOptions {
  /**
   * GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
   *
   * @schema WorkflowSpecTemplatesSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * GMSACredentialSpecName is the name of the GMSA credential spec to use. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
   *
   * @schema WorkflowSpecTemplatesSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

}

/**
 * EnvVar represents an environment variable present in a Container.
 *
 * @schema WorkflowSpecTemplatesSidecarsEnv
 */
export interface WorkflowSpecTemplatesSidecarsEnv {
  /**
   * Name of the environment variable. Must be a C_IDENTIFIER.
   *
   * @schema WorkflowSpecTemplatesSidecarsEnv#name
   */
  readonly name: string;

  /**
   * Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
   *
   * @default .
   * @schema WorkflowSpecTemplatesSidecarsEnv#value
   */
  readonly value?: string;

  /**
   * EnvVarSource represents a source for the value of an EnvVar.
   *
   * @schema WorkflowSpecTemplatesSidecarsEnv#valueFrom
   */
  readonly valueFrom?: WorkflowSpecTemplatesSidecarsEnvValueFrom;

}

/**
 * EnvFromSource represents the source of a set of ConfigMaps
 *
 * @schema WorkflowSpecTemplatesSidecarsEnvFrom
 */
export interface WorkflowSpecTemplatesSidecarsEnvFrom {
  /**
   * ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.

The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
   *
   * @schema WorkflowSpecTemplatesSidecarsEnvFrom#configMapRef
   */
  readonly configMapRef?: WorkflowSpecTemplatesSidecarsEnvFromConfigMapRef;

  /**
   * An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
   *
   * @schema WorkflowSpecTemplatesSidecarsEnvFrom#prefix
   */
  readonly prefix?: string;

  /**
   * SecretEnvSource selects a Secret to populate the environment variables with.

The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
   *
   * @schema WorkflowSpecTemplatesSidecarsEnvFrom#secretRef
   */
  readonly secretRef?: WorkflowSpecTemplatesSidecarsEnvFromSecretRef;

}

/**
 * Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.
 *
 * @schema WorkflowSpecTemplatesSidecarsLifecycle
 */
export interface WorkflowSpecTemplatesSidecarsLifecycle {
  /**
   * Handler defines a specific action that should be taken
   *
   * @schema WorkflowSpecTemplatesSidecarsLifecycle#postStart
   */
  readonly postStart?: WorkflowSpecTemplatesSidecarsLifecyclePostStart;

  /**
   * Handler defines a specific action that should be taken
   *
   * @schema WorkflowSpecTemplatesSidecarsLifecycle#preStop
   */
  readonly preStop?: WorkflowSpecTemplatesSidecarsLifecyclePreStop;

}

/**
 * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
 *
 * @schema WorkflowSpecTemplatesSidecarsLivenessProbe
 */
export interface WorkflowSpecTemplatesSidecarsLivenessProbe {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema WorkflowSpecTemplatesSidecarsLivenessProbe#exec
   */
  readonly exec?: WorkflowSpecTemplatesSidecarsLivenessProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema WorkflowSpecTemplatesSidecarsLivenessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema WorkflowSpecTemplatesSidecarsLivenessProbe#httpGet
   */
  readonly httpGet?: WorkflowSpecTemplatesSidecarsLivenessProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema WorkflowSpecTemplatesSidecarsLivenessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema WorkflowSpecTemplatesSidecarsLivenessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness. Minimum value is 1.
   * @schema WorkflowSpecTemplatesSidecarsLivenessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema WorkflowSpecTemplatesSidecarsLivenessProbe#tcpSocket
   */
  readonly tcpSocket?: WorkflowSpecTemplatesSidecarsLivenessProbeTcpSocket;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema WorkflowSpecTemplatesSidecarsLivenessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * ContainerPort represents a network port in a single container.
 *
 * @schema WorkflowSpecTemplatesSidecarsPorts
 */
export interface WorkflowSpecTemplatesSidecarsPorts {
  /**
   * Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
   *
   * @schema WorkflowSpecTemplatesSidecarsPorts#containerPort
   */
  readonly containerPort: number;

  /**
   * What host IP to bind the external port to.
   *
   * @schema WorkflowSpecTemplatesSidecarsPorts#hostIP
   */
  readonly hostIP?: string;

  /**
   * Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
   *
   * @schema WorkflowSpecTemplatesSidecarsPorts#hostPort
   */
  readonly hostPort?: number;

  /**
   * If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
   *
   * @schema WorkflowSpecTemplatesSidecarsPorts#name
   */
  readonly name?: string;

  /**
   * Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
   *
   * @default TCP".
   * @schema WorkflowSpecTemplatesSidecarsPorts#protocol
   */
  readonly protocol?: string;

}

/**
 * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
 *
 * @schema WorkflowSpecTemplatesSidecarsReadinessProbe
 */
export interface WorkflowSpecTemplatesSidecarsReadinessProbe {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema WorkflowSpecTemplatesSidecarsReadinessProbe#exec
   */
  readonly exec?: WorkflowSpecTemplatesSidecarsReadinessProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema WorkflowSpecTemplatesSidecarsReadinessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema WorkflowSpecTemplatesSidecarsReadinessProbe#httpGet
   */
  readonly httpGet?: WorkflowSpecTemplatesSidecarsReadinessProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema WorkflowSpecTemplatesSidecarsReadinessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema WorkflowSpecTemplatesSidecarsReadinessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness. Minimum value is 1.
   * @schema WorkflowSpecTemplatesSidecarsReadinessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema WorkflowSpecTemplatesSidecarsReadinessProbe#tcpSocket
   */
  readonly tcpSocket?: WorkflowSpecTemplatesSidecarsReadinessProbeTcpSocket;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema WorkflowSpecTemplatesSidecarsReadinessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * ResourceRequirements describes the compute resource requirements.
 *
 * @schema WorkflowSpecTemplatesSidecarsResources
 */
export interface WorkflowSpecTemplatesSidecarsResources {
  /**
   * Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
   *
   * @schema WorkflowSpecTemplatesSidecarsResources#limits
   */
  readonly limits?: { [key: string]: string };

  /**
   * Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
   *
   * @schema WorkflowSpecTemplatesSidecarsResources#requests
   */
  readonly requests?: { [key: string]: string };

}

/**
 * SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.
 *
 * @schema WorkflowSpecTemplatesSidecarsSecurityContext
 */
export interface WorkflowSpecTemplatesSidecarsSecurityContext {
  /**
   * AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN
   *
   * @schema WorkflowSpecTemplatesSidecarsSecurityContext#allowPrivilegeEscalation
   */
  readonly allowPrivilegeEscalation?: boolean;

  /**
   * Adds and removes POSIX capabilities from running containers.
   *
   * @schema WorkflowSpecTemplatesSidecarsSecurityContext#capabilities
   */
  readonly capabilities?: WorkflowSpecTemplatesSidecarsSecurityContextCapabilities;

  /**
   * Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.
   *
   * @default false.
   * @schema WorkflowSpecTemplatesSidecarsSecurityContext#privileged
   */
  readonly privileged?: boolean;

  /**
   * procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.
   *
   * @schema WorkflowSpecTemplatesSidecarsSecurityContext#procMount
   */
  readonly procMount?: string;

  /**
   * Whether this container has a read-only root filesystem. Default is false.
   *
   * @default false.
   * @schema WorkflowSpecTemplatesSidecarsSecurityContext#readOnlyRootFilesystem
   */
  readonly readOnlyRootFilesystem?: boolean;

  /**
   * The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema WorkflowSpecTemplatesSidecarsSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema WorkflowSpecTemplatesSidecarsSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @default user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   * @schema WorkflowSpecTemplatesSidecarsSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * SELinuxOptions are the labels to be applied to the container
   *
   * @schema WorkflowSpecTemplatesSidecarsSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: WorkflowSpecTemplatesSidecarsSecurityContextSeLinuxOptions;

  /**
   * WindowsSecurityContextOptions contain Windows-specific options and credentials.
   *
   * @schema WorkflowSpecTemplatesSidecarsSecurityContext#windowsOptions
   */
  readonly windowsOptions?: WorkflowSpecTemplatesSidecarsSecurityContextWindowsOptions;

}

/**
 * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
 *
 * @schema WorkflowSpecTemplatesSidecarsStartupProbe
 */
export interface WorkflowSpecTemplatesSidecarsStartupProbe {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema WorkflowSpecTemplatesSidecarsStartupProbe#exec
   */
  readonly exec?: WorkflowSpecTemplatesSidecarsStartupProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema WorkflowSpecTemplatesSidecarsStartupProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema WorkflowSpecTemplatesSidecarsStartupProbe#httpGet
   */
  readonly httpGet?: WorkflowSpecTemplatesSidecarsStartupProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema WorkflowSpecTemplatesSidecarsStartupProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema WorkflowSpecTemplatesSidecarsStartupProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness. Minimum value is 1.
   * @schema WorkflowSpecTemplatesSidecarsStartupProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema WorkflowSpecTemplatesSidecarsStartupProbe#tcpSocket
   */
  readonly tcpSocket?: WorkflowSpecTemplatesSidecarsStartupProbeTcpSocket;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema WorkflowSpecTemplatesSidecarsStartupProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * volumeDevice describes a mapping of a raw block device within a container.
 *
 * @schema WorkflowSpecTemplatesSidecarsVolumeDevices
 */
export interface WorkflowSpecTemplatesSidecarsVolumeDevices {
  /**
   * devicePath is the path inside of the container that the device will be mapped to.
   *
   * @schema WorkflowSpecTemplatesSidecarsVolumeDevices#devicePath
   */
  readonly devicePath: string;

  /**
   * name must match the name of a persistentVolumeClaim in the pod
   *
   * @schema WorkflowSpecTemplatesSidecarsVolumeDevices#name
   */
  readonly name: string;

}

/**
 * VolumeMount describes a mounting of a Volume within a container.
 *
 * @schema WorkflowSpecTemplatesSidecarsVolumeMounts
 */
export interface WorkflowSpecTemplatesSidecarsVolumeMounts {
  /**
   * Path within the container at which the volume should be mounted.  Must not contain ':'.
   *
   * @schema WorkflowSpecTemplatesSidecarsVolumeMounts#mountPath
   */
  readonly mountPath: string;

  /**
   * mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
   *
   * @schema WorkflowSpecTemplatesSidecarsVolumeMounts#mountPropagation
   */
  readonly mountPropagation?: string;

  /**
   * This must match the Name of a Volume.
   *
   * @schema WorkflowSpecTemplatesSidecarsVolumeMounts#name
   */
  readonly name: string;

  /**
   * Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
   *
   * @default false.
   * @schema WorkflowSpecTemplatesSidecarsVolumeMounts#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
   *
   * @default volume's root).
   * @schema WorkflowSpecTemplatesSidecarsVolumeMounts#subPath
   */
  readonly subPath?: string;

  /**
   * Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive. This field is beta in 1.15.
   *
   * @default volume's root). SubPathExpr and SubPath are mutually exclusive. This field is beta in 1.15.
   * @schema WorkflowSpecTemplatesSidecarsVolumeMounts#subPathExpr
   */
  readonly subPathExpr?: string;

}

/**
 * Arguments to a template
 *
 * @schema WorkflowSpecTemplatesStepsArguments
 */
export interface WorkflowSpecTemplatesStepsArguments {
  /**
   * Artifacts is the list of artifacts to pass to the template or workflow
   *
   * @schema WorkflowSpecTemplatesStepsArguments#artifacts
   */
  readonly artifacts?: WorkflowSpecTemplatesStepsArgumentsArtifacts[];

  /**
   * Parameters is the list of parameters to pass to the template or workflow
   *
   * @schema WorkflowSpecTemplatesStepsArguments#parameters
   */
  readonly parameters?: WorkflowSpecTemplatesStepsArgumentsParameters[];

}

/**
 * ContinueOn defines if a workflow should continue even if a task or step fails/errors. It can be specified if the workflow should continue when the pod errors, fails or both.
 *
 * @schema WorkflowSpecTemplatesStepsContinueOn
 */
export interface WorkflowSpecTemplatesStepsContinueOn {
  /**
   * @schema WorkflowSpecTemplatesStepsContinueOn#error
   */
  readonly error?: boolean;

  /**
   * @schema WorkflowSpecTemplatesStepsContinueOn#failed
   */
  readonly failed?: boolean;

}

/**
 * TemplateRef is a reference of template resource.
 *
 * @schema WorkflowSpecTemplatesStepsTemplateRef
 */
export interface WorkflowSpecTemplatesStepsTemplateRef {
  /**
   * ClusterScope indicates the referred template is cluster scoped (i.e. a ClusterWorkflowTemplate).
   *
   * @schema WorkflowSpecTemplatesStepsTemplateRef#clusterScope
   */
  readonly clusterScope?: boolean;

  /**
   * Name is the resource name of the template.
   *
   * @schema WorkflowSpecTemplatesStepsTemplateRef#name
   */
  readonly name?: string;

  /**
   * RuntimeResolution skips validation at creation time. By enabling this option, you can create the referred workflow template before the actual runtime.
   *
   * @schema WorkflowSpecTemplatesStepsTemplateRef#runtimeResolution
   */
  readonly runtimeResolution?: boolean;

  /**
   * Template is the name of referred template in the resource.
   *
   * @schema WorkflowSpecTemplatesStepsTemplateRef#template
   */
  readonly template?: string;

}

/**
 * Sequence expands a workflow step into numeric range
 *
 * @schema WorkflowSpecTemplatesStepsWithSequence
 */
export interface WorkflowSpecTemplatesStepsWithSequence {
  /**
   * Count is number of elements in the sequence (default: 0). Not to be used with end
   *
   * @schema WorkflowSpecTemplatesStepsWithSequence#count
   */
  readonly count?: string;

  /**
   * Number at which to end the sequence (default: 0). Not to be used with Count
   *
   * @schema WorkflowSpecTemplatesStepsWithSequence#end
   */
  readonly end?: string;

  /**
   * Format is a printf format string to format the value in the sequence
   *
   * @schema WorkflowSpecTemplatesStepsWithSequence#format
   */
  readonly format?: string;

  /**
   * Number at which to start the sequence (default: 0)
   *
   * @schema WorkflowSpecTemplatesStepsWithSequence#start
   */
  readonly start?: string;

}

/**
 * Represents a Persistent Disk resource in AWS.

An AWS EBS disk must exist before mounting to a container. The disk must also be in the same AWS zone as the kubelet. An AWS EBS disk can only be mounted as read/write once. AWS EBS volumes support ownership management and SELinux relabeling.
 *
 * @schema WorkflowSpecTemplatesVolumesAwsElasticBlockStore
 */
export interface WorkflowSpecTemplatesVolumesAwsElasticBlockStore {
  /**
   * Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
   *
   * @schema WorkflowSpecTemplatesVolumesAwsElasticBlockStore#fsType
   */
  readonly fsType?: string;

  /**
   * The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
   *
   * @schema WorkflowSpecTemplatesVolumesAwsElasticBlockStore#partition
   */
  readonly partition?: number;

  /**
   * Specify "true" to force and set the ReadOnly property in VolumeMounts to "true". If omitted, the default is "false". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
   *
   * @schema WorkflowSpecTemplatesVolumesAwsElasticBlockStore#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
   *
   * @schema WorkflowSpecTemplatesVolumesAwsElasticBlockStore#volumeID
   */
  readonly volumeID: string;

}

/**
 * AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
 *
 * @schema WorkflowSpecTemplatesVolumesAzureDisk
 */
export interface WorkflowSpecTemplatesVolumesAzureDisk {
  /**
   * Host Caching mode: None, Read Only, Read Write.
   *
   * @schema WorkflowSpecTemplatesVolumesAzureDisk#cachingMode
   */
  readonly cachingMode?: string;

  /**
   * The Name of the data disk in the blob storage
   *
   * @schema WorkflowSpecTemplatesVolumesAzureDisk#diskName
   */
  readonly diskName: string;

  /**
   * The URI the data disk in the blob storage
   *
   * @schema WorkflowSpecTemplatesVolumesAzureDisk#diskURI
   */
  readonly diskURI: string;

  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
   *
   * @schema WorkflowSpecTemplatesVolumesAzureDisk#fsType
   */
  readonly fsType?: string;

  /**
   * Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared
   *
   * @schema WorkflowSpecTemplatesVolumesAzureDisk#kind
   */
  readonly kind?: string;

  /**
   * Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema WorkflowSpecTemplatesVolumesAzureDisk#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
 *
 * @schema WorkflowSpecTemplatesVolumesAzureFile
 */
export interface WorkflowSpecTemplatesVolumesAzureFile {
  /**
   * Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema WorkflowSpecTemplatesVolumesAzureFile#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * the name of secret that contains Azure Storage Account Name and Key
   *
   * @schema WorkflowSpecTemplatesVolumesAzureFile#secretName
   */
  readonly secretName: string;

  /**
   * Share Name
   *
   * @schema WorkflowSpecTemplatesVolumesAzureFile#shareName
   */
  readonly shareName: string;

}

/**
 * Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling.
 *
 * @schema WorkflowSpecTemplatesVolumesCephfs
 */
export interface WorkflowSpecTemplatesVolumesCephfs {
  /**
   * Required: Monitors is a collection of Ceph monitors More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
   *
   * @schema WorkflowSpecTemplatesVolumesCephfs#monitors
   */
  readonly monitors: string[];

  /**
   * Optional: Used as the mounted root, rather than the full Ceph tree, default is /
   *
   * @schema WorkflowSpecTemplatesVolumesCephfs#path
   */
  readonly path?: string;

  /**
   * Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
   * @schema WorkflowSpecTemplatesVolumesCephfs#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
   *
   * @schema WorkflowSpecTemplatesVolumesCephfs#secretFile
   */
  readonly secretFile?: string;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema WorkflowSpecTemplatesVolumesCephfs#secretRef
   */
  readonly secretRef?: WorkflowSpecTemplatesVolumesCephfsSecretRef;

  /**
   * Optional: User is the rados user name, default is admin More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
   *
   * @schema WorkflowSpecTemplatesVolumesCephfs#user
   */
  readonly user?: string;

}

/**
 * Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling.
 *
 * @schema WorkflowSpecTemplatesVolumesCinder
 */
export interface WorkflowSpecTemplatesVolumesCinder {
  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
   *
   * @schema WorkflowSpecTemplatesVolumesCinder#fsType
   */
  readonly fsType?: string;

  /**
   * Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
   * @schema WorkflowSpecTemplatesVolumesCinder#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema WorkflowSpecTemplatesVolumesCinder#secretRef
   */
  readonly secretRef?: WorkflowSpecTemplatesVolumesCinderSecretRef;

  /**
   * volume id used to identify the volume in cinder More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
   *
   * @schema WorkflowSpecTemplatesVolumesCinder#volumeID
   */
  readonly volumeID: string;

}

/**
 * Adapts a ConfigMap into a volume.

The contents of the target ConfigMap's Data field will be presented in a volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. ConfigMap volumes support ownership management and SELinux relabeling.
 *
 * @schema WorkflowSpecTemplatesVolumesConfigMap
 */
export interface WorkflowSpecTemplatesVolumesConfigMap {
  /**
   * Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @default 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   * @schema WorkflowSpecTemplatesVolumesConfigMap#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
   *
   * @schema WorkflowSpecTemplatesVolumesConfigMap#items
   */
  readonly items?: WorkflowSpecTemplatesVolumesConfigMapItems[];

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesVolumesConfigMap#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its keys must be defined
   *
   * @schema WorkflowSpecTemplatesVolumesConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Represents a source location of a volume to mount, managed by an external CSI driver
 *
 * @schema WorkflowSpecTemplatesVolumesCsi
 */
export interface WorkflowSpecTemplatesVolumesCsi {
  /**
   * Driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster.
   *
   * @schema WorkflowSpecTemplatesVolumesCsi#driver
   */
  readonly driver: string;

  /**
   * Filesystem type to mount. Ex. "ext4", "xfs", "ntfs". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.
   *
   * @schema WorkflowSpecTemplatesVolumesCsi#fsType
   */
  readonly fsType?: string;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema WorkflowSpecTemplatesVolumesCsi#nodePublishSecretRef
   */
  readonly nodePublishSecretRef?: WorkflowSpecTemplatesVolumesCsiNodePublishSecretRef;

  /**
   * Specifies a read-only configuration for the volume. Defaults to false (read/write).
   *
   * @default false (read/write).
   * @schema WorkflowSpecTemplatesVolumesCsi#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * VolumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.
   *
   * @schema WorkflowSpecTemplatesVolumesCsi#volumeAttributes
   */
  readonly volumeAttributes?: { [key: string]: string };

}

/**
 * DownwardAPIVolumeSource represents a volume containing downward API info. Downward API volumes support ownership management and SELinux relabeling.
 *
 * @schema WorkflowSpecTemplatesVolumesDownwardApi
 */
export interface WorkflowSpecTemplatesVolumesDownwardApi {
  /**
   * Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @default 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   * @schema WorkflowSpecTemplatesVolumesDownwardApi#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * Items is a list of downward API volume file
   *
   * @schema WorkflowSpecTemplatesVolumesDownwardApi#items
   */
  readonly items?: WorkflowSpecTemplatesVolumesDownwardApiItems[];

}

/**
 * Represents an empty directory for a pod. Empty directory volumes support ownership management and SELinux relabeling.
 *
 * @schema WorkflowSpecTemplatesVolumesEmptyDir
 */
export interface WorkflowSpecTemplatesVolumesEmptyDir {
  /**
   * What type of storage medium should back this directory. The default is "" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
   *
   * @schema WorkflowSpecTemplatesVolumesEmptyDir#medium
   */
  readonly medium?: string;

  /**
   * Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and Int64() accessors.

The serialization format is:

<quantity>        ::= <signedNumber><suffix>
  (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
<decimalSI>       ::= m | "" | k | M | G | T | P | E
  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
<decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  a. No precision is lost
  b. No fractional digits will be emitted
  c. The exponent (or suffix) is as large as possible.
The sign will be omitted unless the number is negative.

Examples:
  1.5 will be serialized as "1500m"
  1.5Gi will be serialized as "1536Mi"

Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.

Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
   *
   * @schema WorkflowSpecTemplatesVolumesEmptyDir#sizeLimit
   */
  readonly sizeLimit?: string;

}

/**
 * Represents a Fibre Channel volume. Fibre Channel volumes can only be mounted as read/write once. Fibre Channel volumes support ownership management and SELinux relabeling.
 *
 * @schema WorkflowSpecTemplatesVolumesFc
 */
export interface WorkflowSpecTemplatesVolumesFc {
  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
   *
   * @schema WorkflowSpecTemplatesVolumesFc#fsType
   */
  readonly fsType?: string;

  /**
   * Optional: FC target lun number
   *
   * @schema WorkflowSpecTemplatesVolumesFc#lun
   */
  readonly lun?: number;

  /**
   * Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema WorkflowSpecTemplatesVolumesFc#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Optional: FC target worldwide names (WWNs)
   *
   * @schema WorkflowSpecTemplatesVolumesFc#targetWWNs
   */
  readonly targetWWNs?: string[];

  /**
   * Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
   *
   * @schema WorkflowSpecTemplatesVolumesFc#wwids
   */
  readonly wwids?: string[];

}

/**
 * FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
 *
 * @schema WorkflowSpecTemplatesVolumesFlexVolume
 */
export interface WorkflowSpecTemplatesVolumesFlexVolume {
  /**
   * Driver is the name of the driver to use for this volume.
   *
   * @schema WorkflowSpecTemplatesVolumesFlexVolume#driver
   */
  readonly driver: string;

  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
   *
   * @schema WorkflowSpecTemplatesVolumesFlexVolume#fsType
   */
  readonly fsType?: string;

  /**
   * Optional: Extra command options if any.
   *
   * @schema WorkflowSpecTemplatesVolumesFlexVolume#options
   */
  readonly options?: { [key: string]: string };

  /**
   * Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema WorkflowSpecTemplatesVolumesFlexVolume#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema WorkflowSpecTemplatesVolumesFlexVolume#secretRef
   */
  readonly secretRef?: WorkflowSpecTemplatesVolumesFlexVolumeSecretRef;

}

/**
 * Represents a Flocker volume mounted by the Flocker agent. One and only one of datasetName and datasetUUID should be set. Flocker volumes do not support ownership management or SELinux relabeling.
 *
 * @schema WorkflowSpecTemplatesVolumesFlocker
 */
export interface WorkflowSpecTemplatesVolumesFlocker {
  /**
   * Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated
   *
   * @schema WorkflowSpecTemplatesVolumesFlocker#datasetName
   */
  readonly datasetName?: string;

  /**
   * UUID of the dataset. This is unique identifier of a Flocker dataset
   *
   * @schema WorkflowSpecTemplatesVolumesFlocker#datasetUUID
   */
  readonly datasetUUID?: string;

}

/**
 * Represents a Persistent Disk resource in Google Compute Engine.

A GCE PD must exist before mounting to a container. The disk must also be in the same GCE project and zone as the kubelet. A GCE PD can only be mounted as read/write once or read-only many times. GCE PDs support ownership management and SELinux relabeling.
 *
 * @schema WorkflowSpecTemplatesVolumesGcePersistentDisk
 */
export interface WorkflowSpecTemplatesVolumesGcePersistentDisk {
  /**
   * Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
   *
   * @schema WorkflowSpecTemplatesVolumesGcePersistentDisk#fsType
   */
  readonly fsType?: string;

  /**
   * The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
   *
   * @schema WorkflowSpecTemplatesVolumesGcePersistentDisk#partition
   */
  readonly partition?: number;

  /**
   * Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
   *
   * @schema WorkflowSpecTemplatesVolumesGcePersistentDisk#pdName
   */
  readonly pdName: string;

  /**
   * ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
   *
   * @default false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
   * @schema WorkflowSpecTemplatesVolumesGcePersistentDisk#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Represents a volume that is populated with the contents of a git repository. Git repo volumes do not support ownership management. Git repo volumes support SELinux relabeling.

DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.
 *
 * @schema WorkflowSpecTemplatesVolumesGitRepo
 */
export interface WorkflowSpecTemplatesVolumesGitRepo {
  /**
   * Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.
   *
   * @schema WorkflowSpecTemplatesVolumesGitRepo#directory
   */
  readonly directory?: string;

  /**
   * Repository URL
   *
   * @schema WorkflowSpecTemplatesVolumesGitRepo#repository
   */
  readonly repository: string;

  /**
   * Commit hash for the specified revision.
   *
   * @schema WorkflowSpecTemplatesVolumesGitRepo#revision
   */
  readonly revision?: string;

}

/**
 * Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling.
 *
 * @schema WorkflowSpecTemplatesVolumesGlusterfs
 */
export interface WorkflowSpecTemplatesVolumesGlusterfs {
  /**
   * EndpointsName is the endpoint name that details Glusterfs topology. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod
   *
   * @schema WorkflowSpecTemplatesVolumesGlusterfs#endpoints
   */
  readonly endpoints: string;

  /**
   * Path is the Glusterfs volume path. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod
   *
   * @schema WorkflowSpecTemplatesVolumesGlusterfs#path
   */
  readonly path: string;

  /**
   * ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod
   *
   * @default false. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod
   * @schema WorkflowSpecTemplatesVolumesGlusterfs#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Represents a host path mapped into a pod. Host path volumes do not support ownership management or SELinux relabeling.
 *
 * @schema WorkflowSpecTemplatesVolumesHostPath
 */
export interface WorkflowSpecTemplatesVolumesHostPath {
  /**
   * Path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
   *
   * @schema WorkflowSpecTemplatesVolumesHostPath#path
   */
  readonly path: string;

  /**
   * Type for HostPath Volume Defaults to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
   *
   * @default More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
   * @schema WorkflowSpecTemplatesVolumesHostPath#type
   */
  readonly type?: string;

}

/**
 * Represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling.
 *
 * @schema WorkflowSpecTemplatesVolumesIscsi
 */
export interface WorkflowSpecTemplatesVolumesIscsi {
  /**
   * whether support iSCSI Discovery CHAP authentication
   *
   * @schema WorkflowSpecTemplatesVolumesIscsi#chapAuthDiscovery
   */
  readonly chapAuthDiscovery?: boolean;

  /**
   * whether support iSCSI Session CHAP authentication
   *
   * @schema WorkflowSpecTemplatesVolumesIscsi#chapAuthSession
   */
  readonly chapAuthSession?: boolean;

  /**
   * Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
   *
   * @schema WorkflowSpecTemplatesVolumesIscsi#fsType
   */
  readonly fsType?: string;

  /**
   * Custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.
   *
   * @schema WorkflowSpecTemplatesVolumesIscsi#initiatorName
   */
  readonly initiatorName?: string;

  /**
   * Target iSCSI Qualified Name.
   *
   * @schema WorkflowSpecTemplatesVolumesIscsi#iqn
   */
  readonly iqn: string;

  /**
   * iSCSI Interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).
   *
   * @default default' (tcp).
   * @schema WorkflowSpecTemplatesVolumesIscsi#iscsiInterface
   */
  readonly iscsiInterface?: string;

  /**
   * iSCSI Target Lun number.
   *
   * @schema WorkflowSpecTemplatesVolumesIscsi#lun
   */
  readonly lun: number;

  /**
   * iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
   *
   * @schema WorkflowSpecTemplatesVolumesIscsi#portals
   */
  readonly portals?: string[];

  /**
   * ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.
   *
   * @default false.
   * @schema WorkflowSpecTemplatesVolumesIscsi#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema WorkflowSpecTemplatesVolumesIscsi#secretRef
   */
  readonly secretRef?: WorkflowSpecTemplatesVolumesIscsiSecretRef;

  /**
   * iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
   *
   * @schema WorkflowSpecTemplatesVolumesIscsi#targetPortal
   */
  readonly targetPortal: string;

}

/**
 * Represents an NFS mount that lasts the lifetime of a pod. NFS volumes do not support ownership management or SELinux relabeling.
 *
 * @schema WorkflowSpecTemplatesVolumesNfs
 */
export interface WorkflowSpecTemplatesVolumesNfs {
  /**
   * Path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
   *
   * @schema WorkflowSpecTemplatesVolumesNfs#path
   */
  readonly path: string;

  /**
   * ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
   *
   * @default false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
   * @schema WorkflowSpecTemplatesVolumesNfs#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
   *
   * @schema WorkflowSpecTemplatesVolumesNfs#server
   */
  readonly server: string;

}

/**
 * PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace. This volume finds the bound PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another type of volume that is owned by someone else (the system).
 *
 * @schema WorkflowSpecTemplatesVolumesPersistentVolumeClaim
 */
export interface WorkflowSpecTemplatesVolumesPersistentVolumeClaim {
  /**
   * ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
   *
   * @schema WorkflowSpecTemplatesVolumesPersistentVolumeClaim#claimName
   */
  readonly claimName: string;

  /**
   * Will force the ReadOnly setting in VolumeMounts. Default false.
   *
   * @schema WorkflowSpecTemplatesVolumesPersistentVolumeClaim#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Represents a Photon Controller persistent disk resource.
 *
 * @schema WorkflowSpecTemplatesVolumesPhotonPersistentDisk
 */
export interface WorkflowSpecTemplatesVolumesPhotonPersistentDisk {
  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
   *
   * @schema WorkflowSpecTemplatesVolumesPhotonPersistentDisk#fsType
   */
  readonly fsType?: string;

  /**
   * ID that identifies Photon Controller persistent disk
   *
   * @schema WorkflowSpecTemplatesVolumesPhotonPersistentDisk#pdID
   */
  readonly pdID: string;

}

/**
 * PortworxVolumeSource represents a Portworx volume resource.
 *
 * @schema WorkflowSpecTemplatesVolumesPortworxVolume
 */
export interface WorkflowSpecTemplatesVolumesPortworxVolume {
  /**
   * FSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
   *
   * @schema WorkflowSpecTemplatesVolumesPortworxVolume#fsType
   */
  readonly fsType?: string;

  /**
   * Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema WorkflowSpecTemplatesVolumesPortworxVolume#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * VolumeID uniquely identifies a Portworx volume
   *
   * @schema WorkflowSpecTemplatesVolumesPortworxVolume#volumeID
   */
  readonly volumeID: string;

}

/**
 * Represents a projected volume source
 *
 * @schema WorkflowSpecTemplatesVolumesProjected
 */
export interface WorkflowSpecTemplatesVolumesProjected {
  /**
   * Mode bits to use on created files by default. Must be a value between 0 and 0777. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema WorkflowSpecTemplatesVolumesProjected#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * list of volume projections
   *
   * @schema WorkflowSpecTemplatesVolumesProjected#sources
   */
  readonly sources: WorkflowSpecTemplatesVolumesProjectedSources[];

}

/**
 * Represents a Quobyte mount that lasts the lifetime of a pod. Quobyte volumes do not support ownership management or SELinux relabeling.
 *
 * @schema WorkflowSpecTemplatesVolumesQuobyte
 */
export interface WorkflowSpecTemplatesVolumesQuobyte {
  /**
   * Group to map volume access to Default is no group
   *
   * @default no group
   * @schema WorkflowSpecTemplatesVolumesQuobyte#group
   */
  readonly group?: string;

  /**
   * ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.
   *
   * @default false.
   * @schema WorkflowSpecTemplatesVolumesQuobyte#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes
   *
   * @schema WorkflowSpecTemplatesVolumesQuobyte#registry
   */
  readonly registry: string;

  /**
   * Tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin
   *
   * @schema WorkflowSpecTemplatesVolumesQuobyte#tenant
   */
  readonly tenant?: string;

  /**
   * User to map volume access to Defaults to serivceaccount user
   *
   * @default serivceaccount user
   * @schema WorkflowSpecTemplatesVolumesQuobyte#user
   */
  readonly user?: string;

  /**
   * Volume is a string that references an already created Quobyte volume by name.
   *
   * @schema WorkflowSpecTemplatesVolumesQuobyte#volume
   */
  readonly volume: string;

}

/**
 * Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling.
 *
 * @schema WorkflowSpecTemplatesVolumesRbd
 */
export interface WorkflowSpecTemplatesVolumesRbd {
  /**
   * Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
   *
   * @schema WorkflowSpecTemplatesVolumesRbd#fsType
   */
  readonly fsType?: string;

  /**
   * The rados image name. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   *
   * @schema WorkflowSpecTemplatesVolumesRbd#image
   */
  readonly image: string;

  /**
   * Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   *
   * @default etc/ceph/keyring. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   * @schema WorkflowSpecTemplatesVolumesRbd#keyring
   */
  readonly keyring?: string;

  /**
   * A collection of Ceph monitors. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   *
   * @schema WorkflowSpecTemplatesVolumesRbd#monitors
   */
  readonly monitors: string[];

  /**
   * The rados pool name. Default is rbd. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   *
   * @default rbd. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   * @schema WorkflowSpecTemplatesVolumesRbd#pool
   */
  readonly pool?: string;

  /**
   * ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   *
   * @default false. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   * @schema WorkflowSpecTemplatesVolumesRbd#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema WorkflowSpecTemplatesVolumesRbd#secretRef
   */
  readonly secretRef?: WorkflowSpecTemplatesVolumesRbdSecretRef;

  /**
   * The rados user name. Default is admin. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   *
   * @default admin. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
   * @schema WorkflowSpecTemplatesVolumesRbd#user
   */
  readonly user?: string;

}

/**
 * ScaleIOVolumeSource represents a persistent ScaleIO volume
 *
 * @schema WorkflowSpecTemplatesVolumesScaleIo
 */
export interface WorkflowSpecTemplatesVolumesScaleIo {
  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Default is "xfs".
   *
   * @default xfs".
   * @schema WorkflowSpecTemplatesVolumesScaleIo#fsType
   */
  readonly fsType?: string;

  /**
   * The host address of the ScaleIO API Gateway.
   *
   * @schema WorkflowSpecTemplatesVolumesScaleIo#gateway
   */
  readonly gateway: string;

  /**
   * The name of the ScaleIO Protection Domain for the configured storage.
   *
   * @schema WorkflowSpecTemplatesVolumesScaleIo#protectionDomain
   */
  readonly protectionDomain?: string;

  /**
   * Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema WorkflowSpecTemplatesVolumesScaleIo#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema WorkflowSpecTemplatesVolumesScaleIo#secretRef
   */
  readonly secretRef: WorkflowSpecTemplatesVolumesScaleIoSecretRef;

  /**
   * Flag to enable/disable SSL communication with Gateway, default false
   *
   * @schema WorkflowSpecTemplatesVolumesScaleIo#sslEnabled
   */
  readonly sslEnabled?: boolean;

  /**
   * Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.
   *
   * @default ThinProvisioned.
   * @schema WorkflowSpecTemplatesVolumesScaleIo#storageMode
   */
  readonly storageMode?: string;

  /**
   * The ScaleIO Storage Pool associated with the protection domain.
   *
   * @schema WorkflowSpecTemplatesVolumesScaleIo#storagePool
   */
  readonly storagePool?: string;

  /**
   * The name of the storage system as configured in ScaleIO.
   *
   * @schema WorkflowSpecTemplatesVolumesScaleIo#system
   */
  readonly system: string;

  /**
   * The name of a volume already created in the ScaleIO system that is associated with this volume source.
   *
   * @schema WorkflowSpecTemplatesVolumesScaleIo#volumeName
   */
  readonly volumeName?: string;

}

/**
 * Adapts a Secret into a volume.

The contents of the target Secret's Data field will be presented in a volume as files using the keys in the Data field as the file names. Secret volumes support ownership management and SELinux relabeling.
 *
 * @schema WorkflowSpecTemplatesVolumesSecret
 */
export interface WorkflowSpecTemplatesVolumesSecret {
  /**
   * Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @default 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   * @schema WorkflowSpecTemplatesVolumesSecret#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
   *
   * @schema WorkflowSpecTemplatesVolumesSecret#items
   */
  readonly items?: WorkflowSpecTemplatesVolumesSecretItems[];

  /**
   * Specify whether the Secret or its keys must be defined
   *
   * @schema WorkflowSpecTemplatesVolumesSecret#optional
   */
  readonly optional?: boolean;

  /**
   * Name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
   *
   * @schema WorkflowSpecTemplatesVolumesSecret#secretName
   */
  readonly secretName?: string;

}

/**
 * Represents a StorageOS persistent volume resource.
 *
 * @schema WorkflowSpecTemplatesVolumesStorageos
 */
export interface WorkflowSpecTemplatesVolumesStorageos {
  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
   *
   * @schema WorkflowSpecTemplatesVolumesStorageos#fsType
   */
  readonly fsType?: string;

  /**
   * Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema WorkflowSpecTemplatesVolumesStorageos#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
   *
   * @schema WorkflowSpecTemplatesVolumesStorageos#secretRef
   */
  readonly secretRef?: WorkflowSpecTemplatesVolumesStorageosSecretRef;

  /**
   * VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.
   *
   * @schema WorkflowSpecTemplatesVolumesStorageos#volumeName
   */
  readonly volumeName?: string;

  /**
   * VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to "default" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.
   *
   * @schema WorkflowSpecTemplatesVolumesStorageos#volumeNamespace
   */
  readonly volumeNamespace?: string;

}

/**
 * Represents a vSphere volume resource.
 *
 * @schema WorkflowSpecTemplatesVolumesVsphereVolume
 */
export interface WorkflowSpecTemplatesVolumesVsphereVolume {
  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
   *
   * @schema WorkflowSpecTemplatesVolumesVsphereVolume#fsType
   */
  readonly fsType?: string;

  /**
   * Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
   *
   * @schema WorkflowSpecTemplatesVolumesVsphereVolume#storagePolicyID
   */
  readonly storagePolicyID?: string;

  /**
   * Storage Policy Based Management (SPBM) profile name.
   *
   * @schema WorkflowSpecTemplatesVolumesVsphereVolume#storagePolicyName
   */
  readonly storagePolicyName?: string;

  /**
   * Path that identifies vSphere volume vmdk
   *
   * @schema WorkflowSpecTemplatesVolumesVsphereVolume#volumePath
   */
  readonly volumePath: string;

}

/**
 * TypedLocalObjectReference contains enough information to let you locate the typed referenced object inside the same namespace.
 *
 * @schema WorkflowSpecVolumeClaimTemplatesSpecDataSource
 */
export interface WorkflowSpecVolumeClaimTemplatesSpecDataSource {
  /**
   * APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
   *
   * @schema WorkflowSpecVolumeClaimTemplatesSpecDataSource#apiGroup
   */
  readonly apiGroup?: string;

  /**
   * Kind is the type of resource being referenced
   *
   * @schema WorkflowSpecVolumeClaimTemplatesSpecDataSource#kind
   */
  readonly kind: string;

  /**
   * Name is the name of resource being referenced
   *
   * @schema WorkflowSpecVolumeClaimTemplatesSpecDataSource#name
   */
  readonly name: string;

}

/**
 * ResourceRequirements describes the compute resource requirements.
 *
 * @schema WorkflowSpecVolumeClaimTemplatesSpecResources
 */
export interface WorkflowSpecVolumeClaimTemplatesSpecResources {
  /**
   * Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
   *
   * @schema WorkflowSpecVolumeClaimTemplatesSpecResources#limits
   */
  readonly limits?: { [key: string]: string };

  /**
   * Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
   *
   * @schema WorkflowSpecVolumeClaimTemplatesSpecResources#requests
   */
  readonly requests?: { [key: string]: string };

}

/**
 * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
 *
 * @schema WorkflowSpecVolumeClaimTemplatesSpecSelector
 */
export interface WorkflowSpecVolumeClaimTemplatesSpecSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema WorkflowSpecVolumeClaimTemplatesSpecSelector#matchExpressions
   */
  readonly matchExpressions?: WorkflowSpecVolumeClaimTemplatesSpecSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema WorkflowSpecVolumeClaimTemplatesSpecSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * PersistentVolumeClaimCondition contails details about state of pvc
 *
 * @schema WorkflowSpecVolumeClaimTemplatesStatusConditions
 */
export interface WorkflowSpecVolumeClaimTemplatesStatusConditions {
  /**
   * Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
   *
   * @schema WorkflowSpecVolumeClaimTemplatesStatusConditions#lastProbeTime
   */
  readonly lastProbeTime?: Date;

  /**
   * Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
   *
   * @schema WorkflowSpecVolumeClaimTemplatesStatusConditions#lastTransitionTime
   */
  readonly lastTransitionTime?: Date;

  /**
   * Human-readable message indicating details about last transition.
   *
   * @schema WorkflowSpecVolumeClaimTemplatesStatusConditions#message
   */
  readonly message?: string;

  /**
   * Unique, this should be a short, machine understandable string that gives the reason for condition's last transition. If it reports "ResizeStarted" that means the underlying persistent volume is being resized.
   *
   * @schema WorkflowSpecVolumeClaimTemplatesStatusConditions#reason
   */
  readonly reason?: string;

  /**
   * @schema WorkflowSpecVolumeClaimTemplatesStatusConditions#status
   */
  readonly status: string;

  /**
   * @schema WorkflowSpecVolumeClaimTemplatesStatusConditions#type
   */
  readonly type: string;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema WorkflowSpecVolumesCephfsSecretRef
 */
export interface WorkflowSpecVolumesCephfsSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecVolumesCephfsSecretRef#name
   */
  readonly name?: string;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema WorkflowSpecVolumesCinderSecretRef
 */
export interface WorkflowSpecVolumesCinderSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecVolumesCinderSecretRef#name
   */
  readonly name?: string;

}

/**
 * Maps a string key to a path within a volume.
 *
 * @schema WorkflowSpecVolumesConfigMapItems
 */
export interface WorkflowSpecVolumesConfigMapItems {
  /**
   * The key to project.
   *
   * @schema WorkflowSpecVolumesConfigMapItems#key
   */
  readonly key: string;

  /**
   * Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema WorkflowSpecVolumesConfigMapItems#mode
   */
  readonly mode?: number;

  /**
   * The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
   *
   * @schema WorkflowSpecVolumesConfigMapItems#path
   */
  readonly path: string;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema WorkflowSpecVolumesCsiNodePublishSecretRef
 */
export interface WorkflowSpecVolumesCsiNodePublishSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecVolumesCsiNodePublishSecretRef#name
   */
  readonly name?: string;

}

/**
 * DownwardAPIVolumeFile represents information to create the file containing the pod field
 *
 * @schema WorkflowSpecVolumesDownwardApiItems
 */
export interface WorkflowSpecVolumesDownwardApiItems {
  /**
   * ObjectFieldSelector selects an APIVersioned field of an object.
   *
   * @schema WorkflowSpecVolumesDownwardApiItems#fieldRef
   */
  readonly fieldRef?: WorkflowSpecVolumesDownwardApiItemsFieldRef;

  /**
   * Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema WorkflowSpecVolumesDownwardApiItems#mode
   */
  readonly mode?: number;

  /**
   * Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
   *
   * @schema WorkflowSpecVolumesDownwardApiItems#path
   */
  readonly path: string;

  /**
   * ResourceFieldSelector represents container resources (cpu, memory) and their output format
   *
   * @schema WorkflowSpecVolumesDownwardApiItems#resourceFieldRef
   */
  readonly resourceFieldRef?: WorkflowSpecVolumesDownwardApiItemsResourceFieldRef;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema WorkflowSpecVolumesFlexVolumeSecretRef
 */
export interface WorkflowSpecVolumesFlexVolumeSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecVolumesFlexVolumeSecretRef#name
   */
  readonly name?: string;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema WorkflowSpecVolumesIscsiSecretRef
 */
export interface WorkflowSpecVolumesIscsiSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecVolumesIscsiSecretRef#name
   */
  readonly name?: string;

}

/**
 * Projection that may be projected along with other supported volume types
 *
 * @schema WorkflowSpecVolumesProjectedSources
 */
export interface WorkflowSpecVolumesProjectedSources {
  /**
   * Adapts a ConfigMap into a projected volume.

The contents of the target ConfigMap's Data field will be presented in a projected volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. Note that this is identical to a configmap volume source without the default mode.
   *
   * @schema WorkflowSpecVolumesProjectedSources#configMap
   */
  readonly configMap?: WorkflowSpecVolumesProjectedSourcesConfigMap;

  /**
   * Represents downward API info for projecting into a projected volume. Note that this is identical to a downwardAPI volume source without the default mode.
   *
   * @schema WorkflowSpecVolumesProjectedSources#downwardAPI
   */
  readonly downwardAPI?: WorkflowSpecVolumesProjectedSourcesDownwardApi;

  /**
   * Adapts a secret into a projected volume.

The contents of the target Secret's Data field will be presented in a projected volume as files using the keys in the Data field as the file names. Note that this is identical to a secret volume source without the default mode.
   *
   * @schema WorkflowSpecVolumesProjectedSources#secret
   */
  readonly secret?: WorkflowSpecVolumesProjectedSourcesSecret;

  /**
   * ServiceAccountTokenProjection represents a projected service account token volume. This projection can be used to insert a service account token into the pods runtime filesystem for use against APIs (Kubernetes API Server or otherwise).
   *
   * @schema WorkflowSpecVolumesProjectedSources#serviceAccountToken
   */
  readonly serviceAccountToken?: WorkflowSpecVolumesProjectedSourcesServiceAccountToken;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema WorkflowSpecVolumesRbdSecretRef
 */
export interface WorkflowSpecVolumesRbdSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecVolumesRbdSecretRef#name
   */
  readonly name?: string;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema WorkflowSpecVolumesScaleIoSecretRef
 */
export interface WorkflowSpecVolumesScaleIoSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecVolumesScaleIoSecretRef#name
   */
  readonly name?: string;

}

/**
 * Maps a string key to a path within a volume.
 *
 * @schema WorkflowSpecVolumesSecretItems
 */
export interface WorkflowSpecVolumesSecretItems {
  /**
   * The key to project.
   *
   * @schema WorkflowSpecVolumesSecretItems#key
   */
  readonly key: string;

  /**
   * Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema WorkflowSpecVolumesSecretItems#mode
   */
  readonly mode?: number;

  /**
   * The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
   *
   * @schema WorkflowSpecVolumesSecretItems#path
   */
  readonly path: string;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema WorkflowSpecVolumesStorageosSecretRef
 */
export interface WorkflowSpecVolumesStorageosSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecVolumesStorageosSecretRef#name
   */
  readonly name?: string;

}

/**
 * A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
 *
 * @schema WorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference
 */
export interface WorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
  /**
   * A list of node selector requirements by node's labels.
   *
   * @schema WorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference#matchExpressions
   */
  readonly matchExpressions?: WorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions[];

  /**
   * A list of node selector requirements by node's fields.
   *
   * @schema WorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference#matchFields
   */
  readonly matchFields?: WorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields[];

}

/**
 * A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
 *
 * @schema WorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms
 */
export interface WorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
  /**
   * A list of node selector requirements by node's labels.
   *
   * @schema WorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms#matchExpressions
   */
  readonly matchExpressions?: WorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions[];

  /**
   * A list of node selector requirements by node's fields.
   *
   * @schema WorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms#matchFields
   */
  readonly matchFields?: WorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields[];

}

/**
 * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
 *
 * @schema WorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm
 */
export interface WorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
  /**
   * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
   *
   * @schema WorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#labelSelector
   */
  readonly labelSelector?: WorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;

  /**
   * namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
   *
   * @schema WorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaces
   */
  readonly namespaces?: string[];

  /**
   * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
   *
   * @schema WorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
 *
 * @schema WorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector
 */
export interface WorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema WorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchExpressions
   */
  readonly matchExpressions?: WorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema WorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
 *
 * @schema WorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm
 */
export interface WorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
  /**
   * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
   *
   * @schema WorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#labelSelector
   */
  readonly labelSelector?: WorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;

  /**
   * namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
   *
   * @schema WorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaces
   */
  readonly namespaces?: string[];

  /**
   * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
   *
   * @schema WorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
 *
 * @schema WorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector
 */
export interface WorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema WorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchExpressions
   */
  readonly matchExpressions?: WorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema WorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * TarStrategy will tar and gzip the file or directory when saving
 *
 * @schema WorkflowSpecArgumentsArtifactsArchiveTar
 */
export interface WorkflowSpecArgumentsArtifactsArchiveTar {
  /**
   * CompressionLevel specifies the gzip compression level to use for the artifact. Defaults to gzip.DefaultCompression.
   *
   * @default gzip.DefaultCompression.
   * @schema WorkflowSpecArgumentsArtifactsArchiveTar#compressionLevel
   */
  readonly compressionLevel?: number;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecArgumentsArtifactsArtifactoryPasswordSecret
 */
export interface WorkflowSpecArgumentsArtifactsArtifactoryPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecArgumentsArtifactsArtifactoryPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecArgumentsArtifactsArtifactoryPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecArgumentsArtifactsArtifactoryPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecArgumentsArtifactsArtifactoryUsernameSecret
 */
export interface WorkflowSpecArgumentsArtifactsArtifactoryUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecArgumentsArtifactsArtifactoryUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecArgumentsArtifactsArtifactoryUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecArgumentsArtifactsArtifactoryUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecArgumentsArtifactsGcsServiceAccountKeySecret
 */
export interface WorkflowSpecArgumentsArtifactsGcsServiceAccountKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecArgumentsArtifactsGcsServiceAccountKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecArgumentsArtifactsGcsServiceAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecArgumentsArtifactsGcsServiceAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecArgumentsArtifactsGitPasswordSecret
 */
export interface WorkflowSpecArgumentsArtifactsGitPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecArgumentsArtifactsGitPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecArgumentsArtifactsGitPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecArgumentsArtifactsGitPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecArgumentsArtifactsGitSshPrivateKeySecret
 */
export interface WorkflowSpecArgumentsArtifactsGitSshPrivateKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecArgumentsArtifactsGitSshPrivateKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecArgumentsArtifactsGitSshPrivateKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecArgumentsArtifactsGitSshPrivateKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecArgumentsArtifactsGitUsernameSecret
 */
export interface WorkflowSpecArgumentsArtifactsGitUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecArgumentsArtifactsGitUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecArgumentsArtifactsGitUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecArgumentsArtifactsGitUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecArgumentsArtifactsHdfsKrbCCacheSecret
 */
export interface WorkflowSpecArgumentsArtifactsHdfsKrbCCacheSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecArgumentsArtifactsHdfsKrbCCacheSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecArgumentsArtifactsHdfsKrbCCacheSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecArgumentsArtifactsHdfsKrbCCacheSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Selects a key from a ConfigMap.
 *
 * @schema WorkflowSpecArgumentsArtifactsHdfsKrbConfigConfigMap
 */
export interface WorkflowSpecArgumentsArtifactsHdfsKrbConfigConfigMap {
  /**
   * The key to select.
   *
   * @schema WorkflowSpecArgumentsArtifactsHdfsKrbConfigConfigMap#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecArgumentsArtifactsHdfsKrbConfigConfigMap#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its key must be defined
   *
   * @schema WorkflowSpecArgumentsArtifactsHdfsKrbConfigConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecArgumentsArtifactsHdfsKrbKeytabSecret
 */
export interface WorkflowSpecArgumentsArtifactsHdfsKrbKeytabSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecArgumentsArtifactsHdfsKrbKeytabSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecArgumentsArtifactsHdfsKrbKeytabSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecArgumentsArtifactsHdfsKrbKeytabSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecArgumentsArtifactsOssAccessKeySecret
 */
export interface WorkflowSpecArgumentsArtifactsOssAccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecArgumentsArtifactsOssAccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecArgumentsArtifactsOssAccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecArgumentsArtifactsOssAccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecArgumentsArtifactsOssSecretKeySecret
 */
export interface WorkflowSpecArgumentsArtifactsOssSecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecArgumentsArtifactsOssSecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecArgumentsArtifactsOssSecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecArgumentsArtifactsOssSecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecArgumentsArtifactsS3AccessKeySecret
 */
export interface WorkflowSpecArgumentsArtifactsS3AccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecArgumentsArtifactsS3AccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecArgumentsArtifactsS3AccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecArgumentsArtifactsS3AccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecArgumentsArtifactsS3SecretKeySecret
 */
export interface WorkflowSpecArgumentsArtifactsS3SecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecArgumentsArtifactsS3SecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecArgumentsArtifactsS3SecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecArgumentsArtifactsS3SecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
 *
 * @schema WorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface WorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
   *
   * @schema WorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution#preference
   */
  readonly preference: WorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference;

  /**
   * Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
   *
   * @schema WorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms.
 *
 * @schema WorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface WorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * Required. A list of node selector terms. The terms are ORed.
   *
   * @schema WorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution#nodeSelectorTerms
   */
  readonly nodeSelectorTerms: WorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms[];

}

/**
 * The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
 *
 * @schema WorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface WorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
   *
   * @schema WorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution#podAffinityTerm
   */
  readonly podAffinityTerm: WorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;

  /**
   * weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
   *
   * @schema WorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
 *
 * @schema WorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface WorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
   *
   * @schema WorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#labelSelector
   */
  readonly labelSelector?: WorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;

  /**
   * namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
   *
   * @schema WorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaces
   */
  readonly namespaces?: string[];

  /**
   * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
   *
   * @schema WorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
 *
 * @schema WorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface WorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
   *
   * @schema WorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution#podAffinityTerm
   */
  readonly podAffinityTerm: WorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;

  /**
   * weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
   *
   * @schema WorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
 *
 * @schema WorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface WorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
   *
   * @schema WorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#labelSelector
   */
  readonly labelSelector?: WorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;

  /**
   * namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
   *
   * @schema WorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaces
   */
  readonly namespaces?: string[];

  /**
   * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
   *
   * @schema WorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesArchiveLocationArtifactoryPasswordSecret
 */
export interface WorkflowSpecTemplatesArchiveLocationArtifactoryPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesArchiveLocationArtifactoryPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesArchiveLocationArtifactoryPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesArchiveLocationArtifactoryPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesArchiveLocationArtifactoryUsernameSecret
 */
export interface WorkflowSpecTemplatesArchiveLocationArtifactoryUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesArchiveLocationArtifactoryUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesArchiveLocationArtifactoryUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesArchiveLocationArtifactoryUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesArchiveLocationGcsServiceAccountKeySecret
 */
export interface WorkflowSpecTemplatesArchiveLocationGcsServiceAccountKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesArchiveLocationGcsServiceAccountKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesArchiveLocationGcsServiceAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesArchiveLocationGcsServiceAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesArchiveLocationGitPasswordSecret
 */
export interface WorkflowSpecTemplatesArchiveLocationGitPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesArchiveLocationGitPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesArchiveLocationGitPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesArchiveLocationGitPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesArchiveLocationGitSshPrivateKeySecret
 */
export interface WorkflowSpecTemplatesArchiveLocationGitSshPrivateKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesArchiveLocationGitSshPrivateKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesArchiveLocationGitSshPrivateKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesArchiveLocationGitSshPrivateKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesArchiveLocationGitUsernameSecret
 */
export interface WorkflowSpecTemplatesArchiveLocationGitUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesArchiveLocationGitUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesArchiveLocationGitUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesArchiveLocationGitUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesArchiveLocationHdfsKrbCCacheSecret
 */
export interface WorkflowSpecTemplatesArchiveLocationHdfsKrbCCacheSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesArchiveLocationHdfsKrbCCacheSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesArchiveLocationHdfsKrbCCacheSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesArchiveLocationHdfsKrbCCacheSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Selects a key from a ConfigMap.
 *
 * @schema WorkflowSpecTemplatesArchiveLocationHdfsKrbConfigConfigMap
 */
export interface WorkflowSpecTemplatesArchiveLocationHdfsKrbConfigConfigMap {
  /**
   * The key to select.
   *
   * @schema WorkflowSpecTemplatesArchiveLocationHdfsKrbConfigConfigMap#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesArchiveLocationHdfsKrbConfigConfigMap#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its key must be defined
   *
   * @schema WorkflowSpecTemplatesArchiveLocationHdfsKrbConfigConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesArchiveLocationHdfsKrbKeytabSecret
 */
export interface WorkflowSpecTemplatesArchiveLocationHdfsKrbKeytabSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesArchiveLocationHdfsKrbKeytabSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesArchiveLocationHdfsKrbKeytabSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesArchiveLocationHdfsKrbKeytabSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesArchiveLocationOssAccessKeySecret
 */
export interface WorkflowSpecTemplatesArchiveLocationOssAccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesArchiveLocationOssAccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesArchiveLocationOssAccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesArchiveLocationOssAccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesArchiveLocationOssSecretKeySecret
 */
export interface WorkflowSpecTemplatesArchiveLocationOssSecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesArchiveLocationOssSecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesArchiveLocationOssSecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesArchiveLocationOssSecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesArchiveLocationS3AccessKeySecret
 */
export interface WorkflowSpecTemplatesArchiveLocationS3AccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesArchiveLocationS3AccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesArchiveLocationS3AccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesArchiveLocationS3AccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesArchiveLocationS3SecretKeySecret
 */
export interface WorkflowSpecTemplatesArchiveLocationS3SecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesArchiveLocationS3SecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesArchiveLocationS3SecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesArchiveLocationS3SecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * ArchiveStrategy describes how to archive files/directory when saving artifacts
 *
 * @schema WorkflowSpecTemplatesArgumentsArtifactsArchive
 */
export interface WorkflowSpecTemplatesArgumentsArtifactsArchive {
  /**
   * NoneStrategy indicates to skip tar process and upload the files or directory tree as independent files. Note that if the artifact is a directory, the artifact driver must support the ability to save/load the directory appropriately.
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsArchive#none
   */
  readonly none?: any;

  /**
   * TarStrategy will tar and gzip the file or directory when saving
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsArchive#tar
   */
  readonly tar?: WorkflowSpecTemplatesArgumentsArtifactsArchiveTar;

}

/**
 * ArtifactoryArtifact is the location of an artifactory artifact
 *
 * @schema WorkflowSpecTemplatesArgumentsArtifactsArtifactory
 */
export interface WorkflowSpecTemplatesArgumentsArtifactsArtifactory {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsArtifactory#passwordSecret
   */
  readonly passwordSecret?: WorkflowSpecTemplatesArgumentsArtifactsArtifactoryPasswordSecret;

  /**
   * URL of the artifact
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsArtifactory#url
   */
  readonly url: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsArtifactory#usernameSecret
   */
  readonly usernameSecret?: WorkflowSpecTemplatesArgumentsArtifactsArtifactoryUsernameSecret;

}

/**
 * GCSArtifact is the location of a GCS artifact
 *
 * @schema WorkflowSpecTemplatesArgumentsArtifactsGcs
 */
export interface WorkflowSpecTemplatesArgumentsArtifactsGcs {
  /**
   * Bucket is the name of the bucket
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsGcs#bucket
   */
  readonly bucket: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsGcs#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsGcs#serviceAccountKeySecret
   */
  readonly serviceAccountKeySecret?: WorkflowSpecTemplatesArgumentsArtifactsGcsServiceAccountKeySecret;

}

/**
 * GitArtifact is the location of an git artifact
 *
 * @schema WorkflowSpecTemplatesArgumentsArtifactsGit
 */
export interface WorkflowSpecTemplatesArgumentsArtifactsGit {
  /**
   * Depth specifies clones/fetches should be shallow and include the given number of commits from the branch tip
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsGit#depth
   */
  readonly depth?: number;

  /**
   * Fetch specifies a number of refs that should be fetched before checkout
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsGit#fetch
   */
  readonly fetch?: string[];

  /**
   * InsecureIgnoreHostKey disables SSH strict host key checking during git clone
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsGit#insecureIgnoreHostKey
   */
  readonly insecureIgnoreHostKey?: boolean;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsGit#passwordSecret
   */
  readonly passwordSecret?: WorkflowSpecTemplatesArgumentsArtifactsGitPasswordSecret;

  /**
   * Repo is the git repository
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsGit#repo
   */
  readonly repo: string;

  /**
   * Revision is the git commit, tag, branch to checkout
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsGit#revision
   */
  readonly revision?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsGit#sshPrivateKeySecret
   */
  readonly sshPrivateKeySecret?: WorkflowSpecTemplatesArgumentsArtifactsGitSshPrivateKeySecret;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsGit#usernameSecret
   */
  readonly usernameSecret?: WorkflowSpecTemplatesArgumentsArtifactsGitUsernameSecret;

}

/**
 * HDFSArtifact is the location of an HDFS artifact
 *
 * @schema WorkflowSpecTemplatesArgumentsArtifactsHdfs
 */
export interface WorkflowSpecTemplatesArgumentsArtifactsHdfs {
  /**
   * Addresses is accessible addresses of HDFS name nodes
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsHdfs#addresses
   */
  readonly addresses: string[];

  /**
   * Force copies a file forcibly even if it exists (default: false)
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsHdfs#force
   */
  readonly force?: boolean;

  /**
   * HDFSUser is the user to access HDFS file system. It is ignored if either ccache or keytab is used.
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsHdfs#hdfsUser
   */
  readonly hdfsUser?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsHdfs#krbCCacheSecret
   */
  readonly krbCCacheSecret?: WorkflowSpecTemplatesArgumentsArtifactsHdfsKrbCCacheSecret;

  /**
   * Selects a key from a ConfigMap.
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsHdfs#krbConfigConfigMap
   */
  readonly krbConfigConfigMap?: WorkflowSpecTemplatesArgumentsArtifactsHdfsKrbConfigConfigMap;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsHdfs#krbKeytabSecret
   */
  readonly krbKeytabSecret?: WorkflowSpecTemplatesArgumentsArtifactsHdfsKrbKeytabSecret;

  /**
   * KrbRealm is the Kerberos realm used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsHdfs#krbRealm
   */
  readonly krbRealm?: string;

  /**
   * KrbServicePrincipalName is the principal name of Kerberos service It must be set if either ccache or keytab is used.
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsHdfs#krbServicePrincipalName
   */
  readonly krbServicePrincipalName?: string;

  /**
   * KrbUsername is the Kerberos username used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsHdfs#krbUsername
   */
  readonly krbUsername?: string;

  /**
   * Path is a file path in HDFS
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsHdfs#path
   */
  readonly path: string;

}

/**
 * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
 *
 * @schema WorkflowSpecTemplatesArgumentsArtifactsHttp
 */
export interface WorkflowSpecTemplatesArgumentsArtifactsHttp {
  /**
   * URL of the artifact
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsHttp#url
   */
  readonly url: string;

}

/**
 * OSSArtifact is the location of an Alibaba Cloud OSS artifact
 *
 * @schema WorkflowSpecTemplatesArgumentsArtifactsOss
 */
export interface WorkflowSpecTemplatesArgumentsArtifactsOss {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsOss#accessKeySecret
   */
  readonly accessKeySecret: WorkflowSpecTemplatesArgumentsArtifactsOssAccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsOss#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsOss#endpoint
   */
  readonly endpoint: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsOss#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsOss#secretKeySecret
   */
  readonly secretKeySecret: WorkflowSpecTemplatesArgumentsArtifactsOssSecretKeySecret;

}

/**
 * RawArtifact allows raw string content to be placed as an artifact in a container
 *
 * @schema WorkflowSpecTemplatesArgumentsArtifactsRaw
 */
export interface WorkflowSpecTemplatesArgumentsArtifactsRaw {
  /**
   * Data is the string contents of the artifact
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsRaw#data
   */
  readonly data: string;

}

/**
 * S3Artifact is the location of an S3 artifact
 *
 * @schema WorkflowSpecTemplatesArgumentsArtifactsS3
 */
export interface WorkflowSpecTemplatesArgumentsArtifactsS3 {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsS3#accessKeySecret
   */
  readonly accessKeySecret: WorkflowSpecTemplatesArgumentsArtifactsS3AccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsS3#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsS3#endpoint
   */
  readonly endpoint: string;

  /**
   * Insecure will connect to the service with TLS
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsS3#insecure
   */
  readonly insecure?: boolean;

  /**
   * Key is the key in the bucket where the artifact resides
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsS3#key
   */
  readonly key: string;

  /**
   * Region contains the optional bucket region
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsS3#region
   */
  readonly region?: string;

  /**
   * RoleARN is the Amazon Resource Name (ARN) of the role to assume.
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsS3#roleARN
   */
  readonly roleARN?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsS3#secretKeySecret
   */
  readonly secretKeySecret: WorkflowSpecTemplatesArgumentsArtifactsS3SecretKeySecret;

  /**
   * UseSDKCreds tells the driver to figure out credentials based on sdk defaults.
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsS3#useSDKCreds
   */
  readonly useSDKCreds?: boolean;

}

/**
 * ValueFrom describes a location in which to obtain the value to a parameter
 *
 * @schema WorkflowSpecTemplatesArgumentsParametersValueFrom
 */
export interface WorkflowSpecTemplatesArgumentsParametersValueFrom {
  /**
   * @schema WorkflowSpecTemplatesArgumentsParametersValueFrom#default
   */
  readonly default?: string;

  /**
   * JQFilter expression against the resource object in resource templates
   *
   * @schema WorkflowSpecTemplatesArgumentsParametersValueFrom#jqFilter
   */
  readonly jqFilter?: string;

  /**
   * JSONPath of a resource to retrieve an output parameter value from in resource templates
   *
   * @schema WorkflowSpecTemplatesArgumentsParametersValueFrom#jsonPath
   */
  readonly jsonPath?: string;

  /**
   * Parameter reference to a step or dag task in which to retrieve an output parameter value from (e.g. '{{steps.mystep.outputs.myparam}}')
   *
   * @schema WorkflowSpecTemplatesArgumentsParametersValueFrom#parameter
   */
  readonly parameter?: string;

  /**
   * Path in the container to retrieve an output parameter value from in container templates
   *
   * @schema WorkflowSpecTemplatesArgumentsParametersValueFrom#path
   */
  readonly path?: string;

}

/**
 * EnvVarSource represents a source for the value of an EnvVar.
 *
 * @schema WorkflowSpecTemplatesContainerEnvValueFrom
 */
export interface WorkflowSpecTemplatesContainerEnvValueFrom {
  /**
   * Selects a key from a ConfigMap.
   *
   * @schema WorkflowSpecTemplatesContainerEnvValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: WorkflowSpecTemplatesContainerEnvValueFromConfigMapKeyRef;

  /**
   * ObjectFieldSelector selects an APIVersioned field of an object.
   *
   * @schema WorkflowSpecTemplatesContainerEnvValueFrom#fieldRef
   */
  readonly fieldRef?: WorkflowSpecTemplatesContainerEnvValueFromFieldRef;

  /**
   * ResourceFieldSelector represents container resources (cpu, memory) and their output format
   *
   * @schema WorkflowSpecTemplatesContainerEnvValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: WorkflowSpecTemplatesContainerEnvValueFromResourceFieldRef;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesContainerEnvValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: WorkflowSpecTemplatesContainerEnvValueFromSecretKeyRef;

}

/**
 * ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.

The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
 *
 * @schema WorkflowSpecTemplatesContainerEnvFromConfigMapRef
 */
export interface WorkflowSpecTemplatesContainerEnvFromConfigMapRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesContainerEnvFromConfigMapRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap must be defined
   *
   * @schema WorkflowSpecTemplatesContainerEnvFromConfigMapRef#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretEnvSource selects a Secret to populate the environment variables with.

The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
 *
 * @schema WorkflowSpecTemplatesContainerEnvFromSecretRef
 */
export interface WorkflowSpecTemplatesContainerEnvFromSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesContainerEnvFromSecretRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret must be defined
   *
   * @schema WorkflowSpecTemplatesContainerEnvFromSecretRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Handler defines a specific action that should be taken
 *
 * @schema WorkflowSpecTemplatesContainerLifecyclePostStart
 */
export interface WorkflowSpecTemplatesContainerLifecyclePostStart {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema WorkflowSpecTemplatesContainerLifecyclePostStart#exec
   */
  readonly exec?: WorkflowSpecTemplatesContainerLifecyclePostStartExec;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema WorkflowSpecTemplatesContainerLifecyclePostStart#httpGet
   */
  readonly httpGet?: WorkflowSpecTemplatesContainerLifecyclePostStartHttpGet;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema WorkflowSpecTemplatesContainerLifecyclePostStart#tcpSocket
   */
  readonly tcpSocket?: WorkflowSpecTemplatesContainerLifecyclePostStartTcpSocket;

}

/**
 * Handler defines a specific action that should be taken
 *
 * @schema WorkflowSpecTemplatesContainerLifecyclePreStop
 */
export interface WorkflowSpecTemplatesContainerLifecyclePreStop {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema WorkflowSpecTemplatesContainerLifecyclePreStop#exec
   */
  readonly exec?: WorkflowSpecTemplatesContainerLifecyclePreStopExec;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema WorkflowSpecTemplatesContainerLifecyclePreStop#httpGet
   */
  readonly httpGet?: WorkflowSpecTemplatesContainerLifecyclePreStopHttpGet;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema WorkflowSpecTemplatesContainerLifecyclePreStop#tcpSocket
   */
  readonly tcpSocket?: WorkflowSpecTemplatesContainerLifecyclePreStopTcpSocket;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema WorkflowSpecTemplatesContainerLivenessProbeExec
 */
export interface WorkflowSpecTemplatesContainerLivenessProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema WorkflowSpecTemplatesContainerLivenessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema WorkflowSpecTemplatesContainerLivenessProbeHttpGet
 */
export interface WorkflowSpecTemplatesContainerLivenessProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema WorkflowSpecTemplatesContainerLivenessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema WorkflowSpecTemplatesContainerLivenessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: WorkflowSpecTemplatesContainerLivenessProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema WorkflowSpecTemplatesContainerLivenessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema WorkflowSpecTemplatesContainerLivenessProbeHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema WorkflowSpecTemplatesContainerLivenessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema WorkflowSpecTemplatesContainerLivenessProbeTcpSocket
 */
export interface WorkflowSpecTemplatesContainerLivenessProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema WorkflowSpecTemplatesContainerLivenessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema WorkflowSpecTemplatesContainerLivenessProbeTcpSocket#port
   */
  readonly port: string;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema WorkflowSpecTemplatesContainerReadinessProbeExec
 */
export interface WorkflowSpecTemplatesContainerReadinessProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema WorkflowSpecTemplatesContainerReadinessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema WorkflowSpecTemplatesContainerReadinessProbeHttpGet
 */
export interface WorkflowSpecTemplatesContainerReadinessProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema WorkflowSpecTemplatesContainerReadinessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema WorkflowSpecTemplatesContainerReadinessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: WorkflowSpecTemplatesContainerReadinessProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema WorkflowSpecTemplatesContainerReadinessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema WorkflowSpecTemplatesContainerReadinessProbeHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema WorkflowSpecTemplatesContainerReadinessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema WorkflowSpecTemplatesContainerReadinessProbeTcpSocket
 */
export interface WorkflowSpecTemplatesContainerReadinessProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema WorkflowSpecTemplatesContainerReadinessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema WorkflowSpecTemplatesContainerReadinessProbeTcpSocket#port
   */
  readonly port: string;

}

/**
 * Adds and removes POSIX capabilities from running containers.
 *
 * @schema WorkflowSpecTemplatesContainerSecurityContextCapabilities
 */
export interface WorkflowSpecTemplatesContainerSecurityContextCapabilities {
  /**
   * Added capabilities
   *
   * @schema WorkflowSpecTemplatesContainerSecurityContextCapabilities#add
   */
  readonly add?: string[];

  /**
   * Removed capabilities
   *
   * @schema WorkflowSpecTemplatesContainerSecurityContextCapabilities#drop
   */
  readonly drop?: string[];

}

/**
 * SELinuxOptions are the labels to be applied to the container
 *
 * @schema WorkflowSpecTemplatesContainerSecurityContextSeLinuxOptions
 */
export interface WorkflowSpecTemplatesContainerSecurityContextSeLinuxOptions {
  /**
   * Level is SELinux level label that applies to the container.
   *
   * @schema WorkflowSpecTemplatesContainerSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * Role is a SELinux role label that applies to the container.
   *
   * @schema WorkflowSpecTemplatesContainerSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * Type is a SELinux type label that applies to the container.
   *
   * @schema WorkflowSpecTemplatesContainerSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * User is a SELinux user label that applies to the container.
   *
   * @schema WorkflowSpecTemplatesContainerSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * WindowsSecurityContextOptions contain Windows-specific options and credentials.
 *
 * @schema WorkflowSpecTemplatesContainerSecurityContextWindowsOptions
 */
export interface WorkflowSpecTemplatesContainerSecurityContextWindowsOptions {
  /**
   * GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
   *
   * @schema WorkflowSpecTemplatesContainerSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * GMSACredentialSpecName is the name of the GMSA credential spec to use. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
   *
   * @schema WorkflowSpecTemplatesContainerSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

}

/**
 * Arguments to a template
 *
 * @schema WorkflowSpecTemplatesDagTasksArguments
 */
export interface WorkflowSpecTemplatesDagTasksArguments {
  /**
   * Artifacts is the list of artifacts to pass to the template or workflow
   *
   * @schema WorkflowSpecTemplatesDagTasksArguments#artifacts
   */
  readonly artifacts?: WorkflowSpecTemplatesDagTasksArgumentsArtifacts[];

  /**
   * Parameters is the list of parameters to pass to the template or workflow
   *
   * @schema WorkflowSpecTemplatesDagTasksArguments#parameters
   */
  readonly parameters?: WorkflowSpecTemplatesDagTasksArgumentsParameters[];

}

/**
 * ContinueOn defines if a workflow should continue even if a task or step fails/errors. It can be specified if the workflow should continue when the pod errors, fails or both.
 *
 * @schema WorkflowSpecTemplatesDagTasksContinueOn
 */
export interface WorkflowSpecTemplatesDagTasksContinueOn {
  /**
   * @schema WorkflowSpecTemplatesDagTasksContinueOn#error
   */
  readonly error?: boolean;

  /**
   * @schema WorkflowSpecTemplatesDagTasksContinueOn#failed
   */
  readonly failed?: boolean;

}

/**
 * TemplateRef is a reference of template resource.
 *
 * @schema WorkflowSpecTemplatesDagTasksTemplateRef
 */
export interface WorkflowSpecTemplatesDagTasksTemplateRef {
  /**
   * ClusterScope indicates the referred template is cluster scoped (i.e. a ClusterWorkflowTemplate).
   *
   * @schema WorkflowSpecTemplatesDagTasksTemplateRef#clusterScope
   */
  readonly clusterScope?: boolean;

  /**
   * Name is the resource name of the template.
   *
   * @schema WorkflowSpecTemplatesDagTasksTemplateRef#name
   */
  readonly name?: string;

  /**
   * RuntimeResolution skips validation at creation time. By enabling this option, you can create the referred workflow template before the actual runtime.
   *
   * @schema WorkflowSpecTemplatesDagTasksTemplateRef#runtimeResolution
   */
  readonly runtimeResolution?: boolean;

  /**
   * Template is the name of referred template in the resource.
   *
   * @schema WorkflowSpecTemplatesDagTasksTemplateRef#template
   */
  readonly template?: string;

}

/**
 * Sequence expands a workflow step into numeric range
 *
 * @schema WorkflowSpecTemplatesDagTasksWithSequence
 */
export interface WorkflowSpecTemplatesDagTasksWithSequence {
  /**
   * Count is number of elements in the sequence (default: 0). Not to be used with end
   *
   * @schema WorkflowSpecTemplatesDagTasksWithSequence#count
   */
  readonly count?: string;

  /**
   * Number at which to end the sequence (default: 0). Not to be used with Count
   *
   * @schema WorkflowSpecTemplatesDagTasksWithSequence#end
   */
  readonly end?: string;

  /**
   * Format is a printf format string to format the value in the sequence
   *
   * @schema WorkflowSpecTemplatesDagTasksWithSequence#format
   */
  readonly format?: string;

  /**
   * Number at which to start the sequence (default: 0)
   *
   * @schema WorkflowSpecTemplatesDagTasksWithSequence#start
   */
  readonly start?: string;

}

/**
 * EnvVarSource represents a source for the value of an EnvVar.
 *
 * @schema WorkflowSpecTemplatesInitContainersEnvValueFrom
 */
export interface WorkflowSpecTemplatesInitContainersEnvValueFrom {
  /**
   * Selects a key from a ConfigMap.
   *
   * @schema WorkflowSpecTemplatesInitContainersEnvValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: WorkflowSpecTemplatesInitContainersEnvValueFromConfigMapKeyRef;

  /**
   * ObjectFieldSelector selects an APIVersioned field of an object.
   *
   * @schema WorkflowSpecTemplatesInitContainersEnvValueFrom#fieldRef
   */
  readonly fieldRef?: WorkflowSpecTemplatesInitContainersEnvValueFromFieldRef;

  /**
   * ResourceFieldSelector represents container resources (cpu, memory) and their output format
   *
   * @schema WorkflowSpecTemplatesInitContainersEnvValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: WorkflowSpecTemplatesInitContainersEnvValueFromResourceFieldRef;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesInitContainersEnvValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: WorkflowSpecTemplatesInitContainersEnvValueFromSecretKeyRef;

}

/**
 * ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.

The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
 *
 * @schema WorkflowSpecTemplatesInitContainersEnvFromConfigMapRef
 */
export interface WorkflowSpecTemplatesInitContainersEnvFromConfigMapRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesInitContainersEnvFromConfigMapRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap must be defined
   *
   * @schema WorkflowSpecTemplatesInitContainersEnvFromConfigMapRef#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretEnvSource selects a Secret to populate the environment variables with.

The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
 *
 * @schema WorkflowSpecTemplatesInitContainersEnvFromSecretRef
 */
export interface WorkflowSpecTemplatesInitContainersEnvFromSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesInitContainersEnvFromSecretRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret must be defined
   *
   * @schema WorkflowSpecTemplatesInitContainersEnvFromSecretRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Handler defines a specific action that should be taken
 *
 * @schema WorkflowSpecTemplatesInitContainersLifecyclePostStart
 */
export interface WorkflowSpecTemplatesInitContainersLifecyclePostStart {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema WorkflowSpecTemplatesInitContainersLifecyclePostStart#exec
   */
  readonly exec?: WorkflowSpecTemplatesInitContainersLifecyclePostStartExec;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema WorkflowSpecTemplatesInitContainersLifecyclePostStart#httpGet
   */
  readonly httpGet?: WorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGet;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema WorkflowSpecTemplatesInitContainersLifecyclePostStart#tcpSocket
   */
  readonly tcpSocket?: WorkflowSpecTemplatesInitContainersLifecyclePostStartTcpSocket;

}

/**
 * Handler defines a specific action that should be taken
 *
 * @schema WorkflowSpecTemplatesInitContainersLifecyclePreStop
 */
export interface WorkflowSpecTemplatesInitContainersLifecyclePreStop {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema WorkflowSpecTemplatesInitContainersLifecyclePreStop#exec
   */
  readonly exec?: WorkflowSpecTemplatesInitContainersLifecyclePreStopExec;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema WorkflowSpecTemplatesInitContainersLifecyclePreStop#httpGet
   */
  readonly httpGet?: WorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGet;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema WorkflowSpecTemplatesInitContainersLifecyclePreStop#tcpSocket
   */
  readonly tcpSocket?: WorkflowSpecTemplatesInitContainersLifecyclePreStopTcpSocket;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema WorkflowSpecTemplatesInitContainersLivenessProbeExec
 */
export interface WorkflowSpecTemplatesInitContainersLivenessProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema WorkflowSpecTemplatesInitContainersLivenessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema WorkflowSpecTemplatesInitContainersLivenessProbeHttpGet
 */
export interface WorkflowSpecTemplatesInitContainersLivenessProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema WorkflowSpecTemplatesInitContainersLivenessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema WorkflowSpecTemplatesInitContainersLivenessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: WorkflowSpecTemplatesInitContainersLivenessProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema WorkflowSpecTemplatesInitContainersLivenessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema WorkflowSpecTemplatesInitContainersLivenessProbeHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema WorkflowSpecTemplatesInitContainersLivenessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema WorkflowSpecTemplatesInitContainersLivenessProbeTcpSocket
 */
export interface WorkflowSpecTemplatesInitContainersLivenessProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema WorkflowSpecTemplatesInitContainersLivenessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema WorkflowSpecTemplatesInitContainersLivenessProbeTcpSocket#port
   */
  readonly port: string;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema WorkflowSpecTemplatesInitContainersReadinessProbeExec
 */
export interface WorkflowSpecTemplatesInitContainersReadinessProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema WorkflowSpecTemplatesInitContainersReadinessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema WorkflowSpecTemplatesInitContainersReadinessProbeHttpGet
 */
export interface WorkflowSpecTemplatesInitContainersReadinessProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema WorkflowSpecTemplatesInitContainersReadinessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema WorkflowSpecTemplatesInitContainersReadinessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: WorkflowSpecTemplatesInitContainersReadinessProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema WorkflowSpecTemplatesInitContainersReadinessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema WorkflowSpecTemplatesInitContainersReadinessProbeHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema WorkflowSpecTemplatesInitContainersReadinessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema WorkflowSpecTemplatesInitContainersReadinessProbeTcpSocket
 */
export interface WorkflowSpecTemplatesInitContainersReadinessProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema WorkflowSpecTemplatesInitContainersReadinessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema WorkflowSpecTemplatesInitContainersReadinessProbeTcpSocket#port
   */
  readonly port: string;

}

/**
 * Adds and removes POSIX capabilities from running containers.
 *
 * @schema WorkflowSpecTemplatesInitContainersSecurityContextCapabilities
 */
export interface WorkflowSpecTemplatesInitContainersSecurityContextCapabilities {
  /**
   * Added capabilities
   *
   * @schema WorkflowSpecTemplatesInitContainersSecurityContextCapabilities#add
   */
  readonly add?: string[];

  /**
   * Removed capabilities
   *
   * @schema WorkflowSpecTemplatesInitContainersSecurityContextCapabilities#drop
   */
  readonly drop?: string[];

}

/**
 * SELinuxOptions are the labels to be applied to the container
 *
 * @schema WorkflowSpecTemplatesInitContainersSecurityContextSeLinuxOptions
 */
export interface WorkflowSpecTemplatesInitContainersSecurityContextSeLinuxOptions {
  /**
   * Level is SELinux level label that applies to the container.
   *
   * @schema WorkflowSpecTemplatesInitContainersSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * Role is a SELinux role label that applies to the container.
   *
   * @schema WorkflowSpecTemplatesInitContainersSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * Type is a SELinux type label that applies to the container.
   *
   * @schema WorkflowSpecTemplatesInitContainersSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * User is a SELinux user label that applies to the container.
   *
   * @schema WorkflowSpecTemplatesInitContainersSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * WindowsSecurityContextOptions contain Windows-specific options and credentials.
 *
 * @schema WorkflowSpecTemplatesInitContainersSecurityContextWindowsOptions
 */
export interface WorkflowSpecTemplatesInitContainersSecurityContextWindowsOptions {
  /**
   * GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
   *
   * @schema WorkflowSpecTemplatesInitContainersSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * GMSACredentialSpecName is the name of the GMSA credential spec to use. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
   *
   * @schema WorkflowSpecTemplatesInitContainersSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema WorkflowSpecTemplatesInitContainersStartupProbeExec
 */
export interface WorkflowSpecTemplatesInitContainersStartupProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema WorkflowSpecTemplatesInitContainersStartupProbeExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema WorkflowSpecTemplatesInitContainersStartupProbeHttpGet
 */
export interface WorkflowSpecTemplatesInitContainersStartupProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema WorkflowSpecTemplatesInitContainersStartupProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema WorkflowSpecTemplatesInitContainersStartupProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: WorkflowSpecTemplatesInitContainersStartupProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema WorkflowSpecTemplatesInitContainersStartupProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema WorkflowSpecTemplatesInitContainersStartupProbeHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema WorkflowSpecTemplatesInitContainersStartupProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema WorkflowSpecTemplatesInitContainersStartupProbeTcpSocket
 */
export interface WorkflowSpecTemplatesInitContainersStartupProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema WorkflowSpecTemplatesInitContainersStartupProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema WorkflowSpecTemplatesInitContainersStartupProbeTcpSocket#port
   */
  readonly port: string;

}

/**
 * ArchiveStrategy describes how to archive files/directory when saving artifacts
 *
 * @schema WorkflowSpecTemplatesInputsArtifactsArchive
 */
export interface WorkflowSpecTemplatesInputsArtifactsArchive {
  /**
   * NoneStrategy indicates to skip tar process and upload the files or directory tree as independent files. Note that if the artifact is a directory, the artifact driver must support the ability to save/load the directory appropriately.
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsArchive#none
   */
  readonly none?: any;

  /**
   * TarStrategy will tar and gzip the file or directory when saving
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsArchive#tar
   */
  readonly tar?: WorkflowSpecTemplatesInputsArtifactsArchiveTar;

}

/**
 * ArtifactoryArtifact is the location of an artifactory artifact
 *
 * @schema WorkflowSpecTemplatesInputsArtifactsArtifactory
 */
export interface WorkflowSpecTemplatesInputsArtifactsArtifactory {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsArtifactory#passwordSecret
   */
  readonly passwordSecret?: WorkflowSpecTemplatesInputsArtifactsArtifactoryPasswordSecret;

  /**
   * URL of the artifact
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsArtifactory#url
   */
  readonly url: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsArtifactory#usernameSecret
   */
  readonly usernameSecret?: WorkflowSpecTemplatesInputsArtifactsArtifactoryUsernameSecret;

}

/**
 * GCSArtifact is the location of a GCS artifact
 *
 * @schema WorkflowSpecTemplatesInputsArtifactsGcs
 */
export interface WorkflowSpecTemplatesInputsArtifactsGcs {
  /**
   * Bucket is the name of the bucket
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsGcs#bucket
   */
  readonly bucket: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsGcs#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsGcs#serviceAccountKeySecret
   */
  readonly serviceAccountKeySecret?: WorkflowSpecTemplatesInputsArtifactsGcsServiceAccountKeySecret;

}

/**
 * GitArtifact is the location of an git artifact
 *
 * @schema WorkflowSpecTemplatesInputsArtifactsGit
 */
export interface WorkflowSpecTemplatesInputsArtifactsGit {
  /**
   * Depth specifies clones/fetches should be shallow and include the given number of commits from the branch tip
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsGit#depth
   */
  readonly depth?: number;

  /**
   * Fetch specifies a number of refs that should be fetched before checkout
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsGit#fetch
   */
  readonly fetch?: string[];

  /**
   * InsecureIgnoreHostKey disables SSH strict host key checking during git clone
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsGit#insecureIgnoreHostKey
   */
  readonly insecureIgnoreHostKey?: boolean;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsGit#passwordSecret
   */
  readonly passwordSecret?: WorkflowSpecTemplatesInputsArtifactsGitPasswordSecret;

  /**
   * Repo is the git repository
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsGit#repo
   */
  readonly repo: string;

  /**
   * Revision is the git commit, tag, branch to checkout
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsGit#revision
   */
  readonly revision?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsGit#sshPrivateKeySecret
   */
  readonly sshPrivateKeySecret?: WorkflowSpecTemplatesInputsArtifactsGitSshPrivateKeySecret;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsGit#usernameSecret
   */
  readonly usernameSecret?: WorkflowSpecTemplatesInputsArtifactsGitUsernameSecret;

}

/**
 * HDFSArtifact is the location of an HDFS artifact
 *
 * @schema WorkflowSpecTemplatesInputsArtifactsHdfs
 */
export interface WorkflowSpecTemplatesInputsArtifactsHdfs {
  /**
   * Addresses is accessible addresses of HDFS name nodes
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsHdfs#addresses
   */
  readonly addresses: string[];

  /**
   * Force copies a file forcibly even if it exists (default: false)
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsHdfs#force
   */
  readonly force?: boolean;

  /**
   * HDFSUser is the user to access HDFS file system. It is ignored if either ccache or keytab is used.
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsHdfs#hdfsUser
   */
  readonly hdfsUser?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsHdfs#krbCCacheSecret
   */
  readonly krbCCacheSecret?: WorkflowSpecTemplatesInputsArtifactsHdfsKrbCCacheSecret;

  /**
   * Selects a key from a ConfigMap.
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsHdfs#krbConfigConfigMap
   */
  readonly krbConfigConfigMap?: WorkflowSpecTemplatesInputsArtifactsHdfsKrbConfigConfigMap;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsHdfs#krbKeytabSecret
   */
  readonly krbKeytabSecret?: WorkflowSpecTemplatesInputsArtifactsHdfsKrbKeytabSecret;

  /**
   * KrbRealm is the Kerberos realm used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsHdfs#krbRealm
   */
  readonly krbRealm?: string;

  /**
   * KrbServicePrincipalName is the principal name of Kerberos service It must be set if either ccache or keytab is used.
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsHdfs#krbServicePrincipalName
   */
  readonly krbServicePrincipalName?: string;

  /**
   * KrbUsername is the Kerberos username used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsHdfs#krbUsername
   */
  readonly krbUsername?: string;

  /**
   * Path is a file path in HDFS
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsHdfs#path
   */
  readonly path: string;

}

/**
 * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
 *
 * @schema WorkflowSpecTemplatesInputsArtifactsHttp
 */
export interface WorkflowSpecTemplatesInputsArtifactsHttp {
  /**
   * URL of the artifact
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsHttp#url
   */
  readonly url: string;

}

/**
 * OSSArtifact is the location of an Alibaba Cloud OSS artifact
 *
 * @schema WorkflowSpecTemplatesInputsArtifactsOss
 */
export interface WorkflowSpecTemplatesInputsArtifactsOss {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsOss#accessKeySecret
   */
  readonly accessKeySecret: WorkflowSpecTemplatesInputsArtifactsOssAccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsOss#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsOss#endpoint
   */
  readonly endpoint: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsOss#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsOss#secretKeySecret
   */
  readonly secretKeySecret: WorkflowSpecTemplatesInputsArtifactsOssSecretKeySecret;

}

/**
 * RawArtifact allows raw string content to be placed as an artifact in a container
 *
 * @schema WorkflowSpecTemplatesInputsArtifactsRaw
 */
export interface WorkflowSpecTemplatesInputsArtifactsRaw {
  /**
   * Data is the string contents of the artifact
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsRaw#data
   */
  readonly data: string;

}

/**
 * S3Artifact is the location of an S3 artifact
 *
 * @schema WorkflowSpecTemplatesInputsArtifactsS3
 */
export interface WorkflowSpecTemplatesInputsArtifactsS3 {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsS3#accessKeySecret
   */
  readonly accessKeySecret: WorkflowSpecTemplatesInputsArtifactsS3AccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsS3#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsS3#endpoint
   */
  readonly endpoint: string;

  /**
   * Insecure will connect to the service with TLS
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsS3#insecure
   */
  readonly insecure?: boolean;

  /**
   * Key is the key in the bucket where the artifact resides
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsS3#key
   */
  readonly key: string;

  /**
   * Region contains the optional bucket region
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsS3#region
   */
  readonly region?: string;

  /**
   * RoleARN is the Amazon Resource Name (ARN) of the role to assume.
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsS3#roleARN
   */
  readonly roleARN?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsS3#secretKeySecret
   */
  readonly secretKeySecret: WorkflowSpecTemplatesInputsArtifactsS3SecretKeySecret;

  /**
   * UseSDKCreds tells the driver to figure out credentials based on sdk defaults.
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsS3#useSDKCreds
   */
  readonly useSDKCreds?: boolean;

}

/**
 * ValueFrom describes a location in which to obtain the value to a parameter
 *
 * @schema WorkflowSpecTemplatesInputsParametersValueFrom
 */
export interface WorkflowSpecTemplatesInputsParametersValueFrom {
  /**
   * @schema WorkflowSpecTemplatesInputsParametersValueFrom#default
   */
  readonly default?: string;

  /**
   * JQFilter expression against the resource object in resource templates
   *
   * @schema WorkflowSpecTemplatesInputsParametersValueFrom#jqFilter
   */
  readonly jqFilter?: string;

  /**
   * JSONPath of a resource to retrieve an output parameter value from in resource templates
   *
   * @schema WorkflowSpecTemplatesInputsParametersValueFrom#jsonPath
   */
  readonly jsonPath?: string;

  /**
   * Parameter reference to a step or dag task in which to retrieve an output parameter value from (e.g. '{{steps.mystep.outputs.myparam}}')
   *
   * @schema WorkflowSpecTemplatesInputsParametersValueFrom#parameter
   */
  readonly parameter?: string;

  /**
   * Path in the container to retrieve an output parameter value from in container templates
   *
   * @schema WorkflowSpecTemplatesInputsParametersValueFrom#path
   */
  readonly path?: string;

}

/**
 * Counter is a Counter prometheus metric
 *
 * @schema WorkflowSpecTemplatesMetricsPrometheusCounter
 */
export interface WorkflowSpecTemplatesMetricsPrometheusCounter {
  /**
   * Value is the value of the metric
   *
   * @schema WorkflowSpecTemplatesMetricsPrometheusCounter#value
   */
  readonly value: string;

}

/**
 * Gauge is a Gauge prometheus metric
 *
 * @schema WorkflowSpecTemplatesMetricsPrometheusGauge
 */
export interface WorkflowSpecTemplatesMetricsPrometheusGauge {
  /**
   * Realtime emits this metric in real time if applicable
   *
   * @schema WorkflowSpecTemplatesMetricsPrometheusGauge#realtime
   */
  readonly realtime: boolean;

  /**
   * Value is the value of the metric
   *
   * @schema WorkflowSpecTemplatesMetricsPrometheusGauge#value
   */
  readonly value: string;

}

/**
 * Histogram is a Histogram prometheus metric
 *
 * @schema WorkflowSpecTemplatesMetricsPrometheusHistogram
 */
export interface WorkflowSpecTemplatesMetricsPrometheusHistogram {
  /**
   * Buckets is a list of bucket divisors for the histogram
   *
   * @schema WorkflowSpecTemplatesMetricsPrometheusHistogram#buckets
   */
  readonly buckets: number[];

  /**
   * Value is the value of the metric
   *
   * @schema WorkflowSpecTemplatesMetricsPrometheusHistogram#value
   */
  readonly value: string;

}

/**
 * MetricLabel is a single label for a prometheus metric
 *
 * @schema WorkflowSpecTemplatesMetricsPrometheusLabels
 */
export interface WorkflowSpecTemplatesMetricsPrometheusLabels {
  /**
   * @schema WorkflowSpecTemplatesMetricsPrometheusLabels#key
   */
  readonly key: string;

  /**
   * @schema WorkflowSpecTemplatesMetricsPrometheusLabels#value
   */
  readonly value: string;

}

/**
 * ArchiveStrategy describes how to archive files/directory when saving artifacts
 *
 * @schema WorkflowSpecTemplatesOutputsArtifactsArchive
 */
export interface WorkflowSpecTemplatesOutputsArtifactsArchive {
  /**
   * NoneStrategy indicates to skip tar process and upload the files or directory tree as independent files. Note that if the artifact is a directory, the artifact driver must support the ability to save/load the directory appropriately.
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsArchive#none
   */
  readonly none?: any;

  /**
   * TarStrategy will tar and gzip the file or directory when saving
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsArchive#tar
   */
  readonly tar?: WorkflowSpecTemplatesOutputsArtifactsArchiveTar;

}

/**
 * ArtifactoryArtifact is the location of an artifactory artifact
 *
 * @schema WorkflowSpecTemplatesOutputsArtifactsArtifactory
 */
export interface WorkflowSpecTemplatesOutputsArtifactsArtifactory {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsArtifactory#passwordSecret
   */
  readonly passwordSecret?: WorkflowSpecTemplatesOutputsArtifactsArtifactoryPasswordSecret;

  /**
   * URL of the artifact
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsArtifactory#url
   */
  readonly url: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsArtifactory#usernameSecret
   */
  readonly usernameSecret?: WorkflowSpecTemplatesOutputsArtifactsArtifactoryUsernameSecret;

}

/**
 * GCSArtifact is the location of a GCS artifact
 *
 * @schema WorkflowSpecTemplatesOutputsArtifactsGcs
 */
export interface WorkflowSpecTemplatesOutputsArtifactsGcs {
  /**
   * Bucket is the name of the bucket
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsGcs#bucket
   */
  readonly bucket: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsGcs#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsGcs#serviceAccountKeySecret
   */
  readonly serviceAccountKeySecret?: WorkflowSpecTemplatesOutputsArtifactsGcsServiceAccountKeySecret;

}

/**
 * GitArtifact is the location of an git artifact
 *
 * @schema WorkflowSpecTemplatesOutputsArtifactsGit
 */
export interface WorkflowSpecTemplatesOutputsArtifactsGit {
  /**
   * Depth specifies clones/fetches should be shallow and include the given number of commits from the branch tip
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsGit#depth
   */
  readonly depth?: number;

  /**
   * Fetch specifies a number of refs that should be fetched before checkout
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsGit#fetch
   */
  readonly fetch?: string[];

  /**
   * InsecureIgnoreHostKey disables SSH strict host key checking during git clone
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsGit#insecureIgnoreHostKey
   */
  readonly insecureIgnoreHostKey?: boolean;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsGit#passwordSecret
   */
  readonly passwordSecret?: WorkflowSpecTemplatesOutputsArtifactsGitPasswordSecret;

  /**
   * Repo is the git repository
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsGit#repo
   */
  readonly repo: string;

  /**
   * Revision is the git commit, tag, branch to checkout
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsGit#revision
   */
  readonly revision?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsGit#sshPrivateKeySecret
   */
  readonly sshPrivateKeySecret?: WorkflowSpecTemplatesOutputsArtifactsGitSshPrivateKeySecret;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsGit#usernameSecret
   */
  readonly usernameSecret?: WorkflowSpecTemplatesOutputsArtifactsGitUsernameSecret;

}

/**
 * HDFSArtifact is the location of an HDFS artifact
 *
 * @schema WorkflowSpecTemplatesOutputsArtifactsHdfs
 */
export interface WorkflowSpecTemplatesOutputsArtifactsHdfs {
  /**
   * Addresses is accessible addresses of HDFS name nodes
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsHdfs#addresses
   */
  readonly addresses: string[];

  /**
   * Force copies a file forcibly even if it exists (default: false)
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsHdfs#force
   */
  readonly force?: boolean;

  /**
   * HDFSUser is the user to access HDFS file system. It is ignored if either ccache or keytab is used.
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsHdfs#hdfsUser
   */
  readonly hdfsUser?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsHdfs#krbCCacheSecret
   */
  readonly krbCCacheSecret?: WorkflowSpecTemplatesOutputsArtifactsHdfsKrbCCacheSecret;

  /**
   * Selects a key from a ConfigMap.
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsHdfs#krbConfigConfigMap
   */
  readonly krbConfigConfigMap?: WorkflowSpecTemplatesOutputsArtifactsHdfsKrbConfigConfigMap;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsHdfs#krbKeytabSecret
   */
  readonly krbKeytabSecret?: WorkflowSpecTemplatesOutputsArtifactsHdfsKrbKeytabSecret;

  /**
   * KrbRealm is the Kerberos realm used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsHdfs#krbRealm
   */
  readonly krbRealm?: string;

  /**
   * KrbServicePrincipalName is the principal name of Kerberos service It must be set if either ccache or keytab is used.
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsHdfs#krbServicePrincipalName
   */
  readonly krbServicePrincipalName?: string;

  /**
   * KrbUsername is the Kerberos username used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsHdfs#krbUsername
   */
  readonly krbUsername?: string;

  /**
   * Path is a file path in HDFS
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsHdfs#path
   */
  readonly path: string;

}

/**
 * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
 *
 * @schema WorkflowSpecTemplatesOutputsArtifactsHttp
 */
export interface WorkflowSpecTemplatesOutputsArtifactsHttp {
  /**
   * URL of the artifact
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsHttp#url
   */
  readonly url: string;

}

/**
 * OSSArtifact is the location of an Alibaba Cloud OSS artifact
 *
 * @schema WorkflowSpecTemplatesOutputsArtifactsOss
 */
export interface WorkflowSpecTemplatesOutputsArtifactsOss {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsOss#accessKeySecret
   */
  readonly accessKeySecret: WorkflowSpecTemplatesOutputsArtifactsOssAccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsOss#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsOss#endpoint
   */
  readonly endpoint: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsOss#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsOss#secretKeySecret
   */
  readonly secretKeySecret: WorkflowSpecTemplatesOutputsArtifactsOssSecretKeySecret;

}

/**
 * RawArtifact allows raw string content to be placed as an artifact in a container
 *
 * @schema WorkflowSpecTemplatesOutputsArtifactsRaw
 */
export interface WorkflowSpecTemplatesOutputsArtifactsRaw {
  /**
   * Data is the string contents of the artifact
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsRaw#data
   */
  readonly data: string;

}

/**
 * S3Artifact is the location of an S3 artifact
 *
 * @schema WorkflowSpecTemplatesOutputsArtifactsS3
 */
export interface WorkflowSpecTemplatesOutputsArtifactsS3 {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsS3#accessKeySecret
   */
  readonly accessKeySecret: WorkflowSpecTemplatesOutputsArtifactsS3AccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsS3#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsS3#endpoint
   */
  readonly endpoint: string;

  /**
   * Insecure will connect to the service with TLS
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsS3#insecure
   */
  readonly insecure?: boolean;

  /**
   * Key is the key in the bucket where the artifact resides
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsS3#key
   */
  readonly key: string;

  /**
   * Region contains the optional bucket region
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsS3#region
   */
  readonly region?: string;

  /**
   * RoleARN is the Amazon Resource Name (ARN) of the role to assume.
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsS3#roleARN
   */
  readonly roleARN?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsS3#secretKeySecret
   */
  readonly secretKeySecret: WorkflowSpecTemplatesOutputsArtifactsS3SecretKeySecret;

  /**
   * UseSDKCreds tells the driver to figure out credentials based on sdk defaults.
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsS3#useSDKCreds
   */
  readonly useSDKCreds?: boolean;

}

/**
 * ValueFrom describes a location in which to obtain the value to a parameter
 *
 * @schema WorkflowSpecTemplatesOutputsParametersValueFrom
 */
export interface WorkflowSpecTemplatesOutputsParametersValueFrom {
  /**
   * @schema WorkflowSpecTemplatesOutputsParametersValueFrom#default
   */
  readonly default?: string;

  /**
   * JQFilter expression against the resource object in resource templates
   *
   * @schema WorkflowSpecTemplatesOutputsParametersValueFrom#jqFilter
   */
  readonly jqFilter?: string;

  /**
   * JSONPath of a resource to retrieve an output parameter value from in resource templates
   *
   * @schema WorkflowSpecTemplatesOutputsParametersValueFrom#jsonPath
   */
  readonly jsonPath?: string;

  /**
   * Parameter reference to a step or dag task in which to retrieve an output parameter value from (e.g. '{{steps.mystep.outputs.myparam}}')
   *
   * @schema WorkflowSpecTemplatesOutputsParametersValueFrom#parameter
   */
  readonly parameter?: string;

  /**
   * Path in the container to retrieve an output parameter value from in container templates
   *
   * @schema WorkflowSpecTemplatesOutputsParametersValueFrom#path
   */
  readonly path?: string;

}

/**
 * EnvVarSource represents a source for the value of an EnvVar.
 *
 * @schema WorkflowSpecTemplatesScriptEnvValueFrom
 */
export interface WorkflowSpecTemplatesScriptEnvValueFrom {
  /**
   * Selects a key from a ConfigMap.
   *
   * @schema WorkflowSpecTemplatesScriptEnvValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: WorkflowSpecTemplatesScriptEnvValueFromConfigMapKeyRef;

  /**
   * ObjectFieldSelector selects an APIVersioned field of an object.
   *
   * @schema WorkflowSpecTemplatesScriptEnvValueFrom#fieldRef
   */
  readonly fieldRef?: WorkflowSpecTemplatesScriptEnvValueFromFieldRef;

  /**
   * ResourceFieldSelector represents container resources (cpu, memory) and their output format
   *
   * @schema WorkflowSpecTemplatesScriptEnvValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: WorkflowSpecTemplatesScriptEnvValueFromResourceFieldRef;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesScriptEnvValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: WorkflowSpecTemplatesScriptEnvValueFromSecretKeyRef;

}

/**
 * ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.

The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
 *
 * @schema WorkflowSpecTemplatesScriptEnvFromConfigMapRef
 */
export interface WorkflowSpecTemplatesScriptEnvFromConfigMapRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesScriptEnvFromConfigMapRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap must be defined
   *
   * @schema WorkflowSpecTemplatesScriptEnvFromConfigMapRef#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretEnvSource selects a Secret to populate the environment variables with.

The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
 *
 * @schema WorkflowSpecTemplatesScriptEnvFromSecretRef
 */
export interface WorkflowSpecTemplatesScriptEnvFromSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesScriptEnvFromSecretRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret must be defined
   *
   * @schema WorkflowSpecTemplatesScriptEnvFromSecretRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Handler defines a specific action that should be taken
 *
 * @schema WorkflowSpecTemplatesScriptLifecyclePostStart
 */
export interface WorkflowSpecTemplatesScriptLifecyclePostStart {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema WorkflowSpecTemplatesScriptLifecyclePostStart#exec
   */
  readonly exec?: WorkflowSpecTemplatesScriptLifecyclePostStartExec;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema WorkflowSpecTemplatesScriptLifecyclePostStart#httpGet
   */
  readonly httpGet?: WorkflowSpecTemplatesScriptLifecyclePostStartHttpGet;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema WorkflowSpecTemplatesScriptLifecyclePostStart#tcpSocket
   */
  readonly tcpSocket?: WorkflowSpecTemplatesScriptLifecyclePostStartTcpSocket;

}

/**
 * Handler defines a specific action that should be taken
 *
 * @schema WorkflowSpecTemplatesScriptLifecyclePreStop
 */
export interface WorkflowSpecTemplatesScriptLifecyclePreStop {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema WorkflowSpecTemplatesScriptLifecyclePreStop#exec
   */
  readonly exec?: WorkflowSpecTemplatesScriptLifecyclePreStopExec;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema WorkflowSpecTemplatesScriptLifecyclePreStop#httpGet
   */
  readonly httpGet?: WorkflowSpecTemplatesScriptLifecyclePreStopHttpGet;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema WorkflowSpecTemplatesScriptLifecyclePreStop#tcpSocket
   */
  readonly tcpSocket?: WorkflowSpecTemplatesScriptLifecyclePreStopTcpSocket;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema WorkflowSpecTemplatesScriptLivenessProbeExec
 */
export interface WorkflowSpecTemplatesScriptLivenessProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema WorkflowSpecTemplatesScriptLivenessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema WorkflowSpecTemplatesScriptLivenessProbeHttpGet
 */
export interface WorkflowSpecTemplatesScriptLivenessProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema WorkflowSpecTemplatesScriptLivenessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema WorkflowSpecTemplatesScriptLivenessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: WorkflowSpecTemplatesScriptLivenessProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema WorkflowSpecTemplatesScriptLivenessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema WorkflowSpecTemplatesScriptLivenessProbeHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema WorkflowSpecTemplatesScriptLivenessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema WorkflowSpecTemplatesScriptLivenessProbeTcpSocket
 */
export interface WorkflowSpecTemplatesScriptLivenessProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema WorkflowSpecTemplatesScriptLivenessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema WorkflowSpecTemplatesScriptLivenessProbeTcpSocket#port
   */
  readonly port: string;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema WorkflowSpecTemplatesScriptReadinessProbeExec
 */
export interface WorkflowSpecTemplatesScriptReadinessProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema WorkflowSpecTemplatesScriptReadinessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema WorkflowSpecTemplatesScriptReadinessProbeHttpGet
 */
export interface WorkflowSpecTemplatesScriptReadinessProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema WorkflowSpecTemplatesScriptReadinessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema WorkflowSpecTemplatesScriptReadinessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: WorkflowSpecTemplatesScriptReadinessProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema WorkflowSpecTemplatesScriptReadinessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema WorkflowSpecTemplatesScriptReadinessProbeHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema WorkflowSpecTemplatesScriptReadinessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema WorkflowSpecTemplatesScriptReadinessProbeTcpSocket
 */
export interface WorkflowSpecTemplatesScriptReadinessProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema WorkflowSpecTemplatesScriptReadinessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema WorkflowSpecTemplatesScriptReadinessProbeTcpSocket#port
   */
  readonly port: string;

}

/**
 * Adds and removes POSIX capabilities from running containers.
 *
 * @schema WorkflowSpecTemplatesScriptSecurityContextCapabilities
 */
export interface WorkflowSpecTemplatesScriptSecurityContextCapabilities {
  /**
   * Added capabilities
   *
   * @schema WorkflowSpecTemplatesScriptSecurityContextCapabilities#add
   */
  readonly add?: string[];

  /**
   * Removed capabilities
   *
   * @schema WorkflowSpecTemplatesScriptSecurityContextCapabilities#drop
   */
  readonly drop?: string[];

}

/**
 * SELinuxOptions are the labels to be applied to the container
 *
 * @schema WorkflowSpecTemplatesScriptSecurityContextSeLinuxOptions
 */
export interface WorkflowSpecTemplatesScriptSecurityContextSeLinuxOptions {
  /**
   * Level is SELinux level label that applies to the container.
   *
   * @schema WorkflowSpecTemplatesScriptSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * Role is a SELinux role label that applies to the container.
   *
   * @schema WorkflowSpecTemplatesScriptSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * Type is a SELinux type label that applies to the container.
   *
   * @schema WorkflowSpecTemplatesScriptSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * User is a SELinux user label that applies to the container.
   *
   * @schema WorkflowSpecTemplatesScriptSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * WindowsSecurityContextOptions contain Windows-specific options and credentials.
 *
 * @schema WorkflowSpecTemplatesScriptSecurityContextWindowsOptions
 */
export interface WorkflowSpecTemplatesScriptSecurityContextWindowsOptions {
  /**
   * GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
   *
   * @schema WorkflowSpecTemplatesScriptSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * GMSACredentialSpecName is the name of the GMSA credential spec to use. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
   *
   * @schema WorkflowSpecTemplatesScriptSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema WorkflowSpecTemplatesScriptStartupProbeExec
 */
export interface WorkflowSpecTemplatesScriptStartupProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema WorkflowSpecTemplatesScriptStartupProbeExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema WorkflowSpecTemplatesScriptStartupProbeHttpGet
 */
export interface WorkflowSpecTemplatesScriptStartupProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema WorkflowSpecTemplatesScriptStartupProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema WorkflowSpecTemplatesScriptStartupProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: WorkflowSpecTemplatesScriptStartupProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema WorkflowSpecTemplatesScriptStartupProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema WorkflowSpecTemplatesScriptStartupProbeHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema WorkflowSpecTemplatesScriptStartupProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema WorkflowSpecTemplatesScriptStartupProbeTcpSocket
 */
export interface WorkflowSpecTemplatesScriptStartupProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema WorkflowSpecTemplatesScriptStartupProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema WorkflowSpecTemplatesScriptStartupProbeTcpSocket#port
   */
  readonly port: string;

}

/**
 * EnvVarSource represents a source for the value of an EnvVar.
 *
 * @schema WorkflowSpecTemplatesSidecarsEnvValueFrom
 */
export interface WorkflowSpecTemplatesSidecarsEnvValueFrom {
  /**
   * Selects a key from a ConfigMap.
   *
   * @schema WorkflowSpecTemplatesSidecarsEnvValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: WorkflowSpecTemplatesSidecarsEnvValueFromConfigMapKeyRef;

  /**
   * ObjectFieldSelector selects an APIVersioned field of an object.
   *
   * @schema WorkflowSpecTemplatesSidecarsEnvValueFrom#fieldRef
   */
  readonly fieldRef?: WorkflowSpecTemplatesSidecarsEnvValueFromFieldRef;

  /**
   * ResourceFieldSelector represents container resources (cpu, memory) and their output format
   *
   * @schema WorkflowSpecTemplatesSidecarsEnvValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: WorkflowSpecTemplatesSidecarsEnvValueFromResourceFieldRef;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesSidecarsEnvValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: WorkflowSpecTemplatesSidecarsEnvValueFromSecretKeyRef;

}

/**
 * ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.

The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
 *
 * @schema WorkflowSpecTemplatesSidecarsEnvFromConfigMapRef
 */
export interface WorkflowSpecTemplatesSidecarsEnvFromConfigMapRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesSidecarsEnvFromConfigMapRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap must be defined
   *
   * @schema WorkflowSpecTemplatesSidecarsEnvFromConfigMapRef#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretEnvSource selects a Secret to populate the environment variables with.

The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
 *
 * @schema WorkflowSpecTemplatesSidecarsEnvFromSecretRef
 */
export interface WorkflowSpecTemplatesSidecarsEnvFromSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesSidecarsEnvFromSecretRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret must be defined
   *
   * @schema WorkflowSpecTemplatesSidecarsEnvFromSecretRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Handler defines a specific action that should be taken
 *
 * @schema WorkflowSpecTemplatesSidecarsLifecyclePostStart
 */
export interface WorkflowSpecTemplatesSidecarsLifecyclePostStart {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema WorkflowSpecTemplatesSidecarsLifecyclePostStart#exec
   */
  readonly exec?: WorkflowSpecTemplatesSidecarsLifecyclePostStartExec;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema WorkflowSpecTemplatesSidecarsLifecyclePostStart#httpGet
   */
  readonly httpGet?: WorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGet;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema WorkflowSpecTemplatesSidecarsLifecyclePostStart#tcpSocket
   */
  readonly tcpSocket?: WorkflowSpecTemplatesSidecarsLifecyclePostStartTcpSocket;

}

/**
 * Handler defines a specific action that should be taken
 *
 * @schema WorkflowSpecTemplatesSidecarsLifecyclePreStop
 */
export interface WorkflowSpecTemplatesSidecarsLifecyclePreStop {
  /**
   * ExecAction describes a "run in container" action.
   *
   * @schema WorkflowSpecTemplatesSidecarsLifecyclePreStop#exec
   */
  readonly exec?: WorkflowSpecTemplatesSidecarsLifecyclePreStopExec;

  /**
   * HTTPGetAction describes an action based on HTTP Get requests.
   *
   * @schema WorkflowSpecTemplatesSidecarsLifecyclePreStop#httpGet
   */
  readonly httpGet?: WorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGet;

  /**
   * TCPSocketAction describes an action based on opening a socket
   *
   * @schema WorkflowSpecTemplatesSidecarsLifecyclePreStop#tcpSocket
   */
  readonly tcpSocket?: WorkflowSpecTemplatesSidecarsLifecyclePreStopTcpSocket;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema WorkflowSpecTemplatesSidecarsLivenessProbeExec
 */
export interface WorkflowSpecTemplatesSidecarsLivenessProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema WorkflowSpecTemplatesSidecarsLivenessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema WorkflowSpecTemplatesSidecarsLivenessProbeHttpGet
 */
export interface WorkflowSpecTemplatesSidecarsLivenessProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema WorkflowSpecTemplatesSidecarsLivenessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema WorkflowSpecTemplatesSidecarsLivenessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: WorkflowSpecTemplatesSidecarsLivenessProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema WorkflowSpecTemplatesSidecarsLivenessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema WorkflowSpecTemplatesSidecarsLivenessProbeHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema WorkflowSpecTemplatesSidecarsLivenessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema WorkflowSpecTemplatesSidecarsLivenessProbeTcpSocket
 */
export interface WorkflowSpecTemplatesSidecarsLivenessProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema WorkflowSpecTemplatesSidecarsLivenessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema WorkflowSpecTemplatesSidecarsLivenessProbeTcpSocket#port
   */
  readonly port: string;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema WorkflowSpecTemplatesSidecarsReadinessProbeExec
 */
export interface WorkflowSpecTemplatesSidecarsReadinessProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema WorkflowSpecTemplatesSidecarsReadinessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema WorkflowSpecTemplatesSidecarsReadinessProbeHttpGet
 */
export interface WorkflowSpecTemplatesSidecarsReadinessProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema WorkflowSpecTemplatesSidecarsReadinessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema WorkflowSpecTemplatesSidecarsReadinessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: WorkflowSpecTemplatesSidecarsReadinessProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema WorkflowSpecTemplatesSidecarsReadinessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema WorkflowSpecTemplatesSidecarsReadinessProbeHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema WorkflowSpecTemplatesSidecarsReadinessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema WorkflowSpecTemplatesSidecarsReadinessProbeTcpSocket
 */
export interface WorkflowSpecTemplatesSidecarsReadinessProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema WorkflowSpecTemplatesSidecarsReadinessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema WorkflowSpecTemplatesSidecarsReadinessProbeTcpSocket#port
   */
  readonly port: string;

}

/**
 * Adds and removes POSIX capabilities from running containers.
 *
 * @schema WorkflowSpecTemplatesSidecarsSecurityContextCapabilities
 */
export interface WorkflowSpecTemplatesSidecarsSecurityContextCapabilities {
  /**
   * Added capabilities
   *
   * @schema WorkflowSpecTemplatesSidecarsSecurityContextCapabilities#add
   */
  readonly add?: string[];

  /**
   * Removed capabilities
   *
   * @schema WorkflowSpecTemplatesSidecarsSecurityContextCapabilities#drop
   */
  readonly drop?: string[];

}

/**
 * SELinuxOptions are the labels to be applied to the container
 *
 * @schema WorkflowSpecTemplatesSidecarsSecurityContextSeLinuxOptions
 */
export interface WorkflowSpecTemplatesSidecarsSecurityContextSeLinuxOptions {
  /**
   * Level is SELinux level label that applies to the container.
   *
   * @schema WorkflowSpecTemplatesSidecarsSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * Role is a SELinux role label that applies to the container.
   *
   * @schema WorkflowSpecTemplatesSidecarsSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * Type is a SELinux type label that applies to the container.
   *
   * @schema WorkflowSpecTemplatesSidecarsSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * User is a SELinux user label that applies to the container.
   *
   * @schema WorkflowSpecTemplatesSidecarsSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * WindowsSecurityContextOptions contain Windows-specific options and credentials.
 *
 * @schema WorkflowSpecTemplatesSidecarsSecurityContextWindowsOptions
 */
export interface WorkflowSpecTemplatesSidecarsSecurityContextWindowsOptions {
  /**
   * GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
   *
   * @schema WorkflowSpecTemplatesSidecarsSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * GMSACredentialSpecName is the name of the GMSA credential spec to use. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
   *
   * @schema WorkflowSpecTemplatesSidecarsSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema WorkflowSpecTemplatesSidecarsStartupProbeExec
 */
export interface WorkflowSpecTemplatesSidecarsStartupProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema WorkflowSpecTemplatesSidecarsStartupProbeExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema WorkflowSpecTemplatesSidecarsStartupProbeHttpGet
 */
export interface WorkflowSpecTemplatesSidecarsStartupProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema WorkflowSpecTemplatesSidecarsStartupProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema WorkflowSpecTemplatesSidecarsStartupProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: WorkflowSpecTemplatesSidecarsStartupProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema WorkflowSpecTemplatesSidecarsStartupProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema WorkflowSpecTemplatesSidecarsStartupProbeHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema WorkflowSpecTemplatesSidecarsStartupProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema WorkflowSpecTemplatesSidecarsStartupProbeTcpSocket
 */
export interface WorkflowSpecTemplatesSidecarsStartupProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema WorkflowSpecTemplatesSidecarsStartupProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema WorkflowSpecTemplatesSidecarsStartupProbeTcpSocket#port
   */
  readonly port: string;

}

/**
 * Artifact indicates an artifact to place at a specified path
 *
 * @schema WorkflowSpecTemplatesStepsArgumentsArtifacts
 */
export interface WorkflowSpecTemplatesStepsArgumentsArtifacts {
  /**
   * ArchiveStrategy describes how to archive files/directory when saving artifacts
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifacts#archive
   */
  readonly archive?: WorkflowSpecTemplatesStepsArgumentsArtifactsArchive;

  /**
   * ArchiveLogs indicates if the container logs should be archived
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifacts#archiveLogs
   */
  readonly archiveLogs?: boolean;

  /**
   * ArtifactoryArtifact is the location of an artifactory artifact
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifacts#artifactory
   */
  readonly artifactory?: WorkflowSpecTemplatesStepsArgumentsArtifactsArtifactory;

  /**
   * From allows an artifact to reference an artifact from a previous step
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifacts#from
   */
  readonly from?: string;

  /**
   * GCSArtifact is the location of a GCS artifact
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifacts#gcs
   */
  readonly gcs?: WorkflowSpecTemplatesStepsArgumentsArtifactsGcs;

  /**
   * GitArtifact is the location of an git artifact
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifacts#git
   */
  readonly git?: WorkflowSpecTemplatesStepsArgumentsArtifactsGit;

  /**
   * GlobalName exports an output artifact to the global scope, making it available as '{{io.argoproj.workflow.v1alpha1.outputs.artifacts.XXXX}} and in workflow.status.outputs.artifacts
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifacts#globalName
   */
  readonly globalName?: string;

  /**
   * HDFSArtifact is the location of an HDFS artifact
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifacts#hdfs
   */
  readonly hdfs?: WorkflowSpecTemplatesStepsArgumentsArtifactsHdfs;

  /**
   * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifacts#http
   */
  readonly http?: WorkflowSpecTemplatesStepsArgumentsArtifactsHttp;

  /**
   * mode bits to use on this file, must be a value between 0 and 0777 set when loading input artifacts.
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifacts#mode
   */
  readonly mode?: number;

  /**
   * name of the artifact. must be unique within a template's inputs/outputs.
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifacts#name
   */
  readonly name: string;

  /**
   * Make Artifacts optional, if Artifacts doesn't generate or exist
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifacts#optional
   */
  readonly optional?: boolean;

  /**
   * OSSArtifact is the location of an Alibaba Cloud OSS artifact
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifacts#oss
   */
  readonly oss?: WorkflowSpecTemplatesStepsArgumentsArtifactsOss;

  /**
   * Path is the container path to the artifact
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifacts#path
   */
  readonly path?: string;

  /**
   * RawArtifact allows raw string content to be placed as an artifact in a container
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifacts#raw
   */
  readonly raw?: WorkflowSpecTemplatesStepsArgumentsArtifactsRaw;

  /**
   * S3Artifact is the location of an S3 artifact
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifacts#s3
   */
  readonly s3?: WorkflowSpecTemplatesStepsArgumentsArtifactsS3;

}

/**
 * Parameter indicate a passed string parameter to a service template with an optional default value
 *
 * @schema WorkflowSpecTemplatesStepsArgumentsParameters
 */
export interface WorkflowSpecTemplatesStepsArgumentsParameters {
  /**
   * @schema WorkflowSpecTemplatesStepsArgumentsParameters#default
   */
  readonly default?: string;

  /**
   * GlobalName exports an output parameter to the global scope, making it available as '{{io.argoproj.workflow.v1alpha1.outputs.parameters.XXXX}} and in workflow.status.outputs.parameters
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsParameters#globalName
   */
  readonly globalName?: string;

  /**
   * Name is the parameter name
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsParameters#name
   */
  readonly name: string;

  /**
   * @schema WorkflowSpecTemplatesStepsArgumentsParameters#value
   */
  readonly value?: string;

  /**
   * ValueFrom describes a location in which to obtain the value to a parameter
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsParameters#valueFrom
   */
  readonly valueFrom?: WorkflowSpecTemplatesStepsArgumentsParametersValueFrom;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema WorkflowSpecTemplatesVolumesCephfsSecretRef
 */
export interface WorkflowSpecTemplatesVolumesCephfsSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesVolumesCephfsSecretRef#name
   */
  readonly name?: string;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema WorkflowSpecTemplatesVolumesCinderSecretRef
 */
export interface WorkflowSpecTemplatesVolumesCinderSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesVolumesCinderSecretRef#name
   */
  readonly name?: string;

}

/**
 * Maps a string key to a path within a volume.
 *
 * @schema WorkflowSpecTemplatesVolumesConfigMapItems
 */
export interface WorkflowSpecTemplatesVolumesConfigMapItems {
  /**
   * The key to project.
   *
   * @schema WorkflowSpecTemplatesVolumesConfigMapItems#key
   */
  readonly key: string;

  /**
   * Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema WorkflowSpecTemplatesVolumesConfigMapItems#mode
   */
  readonly mode?: number;

  /**
   * The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
   *
   * @schema WorkflowSpecTemplatesVolumesConfigMapItems#path
   */
  readonly path: string;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema WorkflowSpecTemplatesVolumesCsiNodePublishSecretRef
 */
export interface WorkflowSpecTemplatesVolumesCsiNodePublishSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesVolumesCsiNodePublishSecretRef#name
   */
  readonly name?: string;

}

/**
 * DownwardAPIVolumeFile represents information to create the file containing the pod field
 *
 * @schema WorkflowSpecTemplatesVolumesDownwardApiItems
 */
export interface WorkflowSpecTemplatesVolumesDownwardApiItems {
  /**
   * ObjectFieldSelector selects an APIVersioned field of an object.
   *
   * @schema WorkflowSpecTemplatesVolumesDownwardApiItems#fieldRef
   */
  readonly fieldRef?: WorkflowSpecTemplatesVolumesDownwardApiItemsFieldRef;

  /**
   * Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema WorkflowSpecTemplatesVolumesDownwardApiItems#mode
   */
  readonly mode?: number;

  /**
   * Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
   *
   * @schema WorkflowSpecTemplatesVolumesDownwardApiItems#path
   */
  readonly path: string;

  /**
   * ResourceFieldSelector represents container resources (cpu, memory) and their output format
   *
   * @schema WorkflowSpecTemplatesVolumesDownwardApiItems#resourceFieldRef
   */
  readonly resourceFieldRef?: WorkflowSpecTemplatesVolumesDownwardApiItemsResourceFieldRef;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema WorkflowSpecTemplatesVolumesFlexVolumeSecretRef
 */
export interface WorkflowSpecTemplatesVolumesFlexVolumeSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesVolumesFlexVolumeSecretRef#name
   */
  readonly name?: string;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema WorkflowSpecTemplatesVolumesIscsiSecretRef
 */
export interface WorkflowSpecTemplatesVolumesIscsiSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesVolumesIscsiSecretRef#name
   */
  readonly name?: string;

}

/**
 * Projection that may be projected along with other supported volume types
 *
 * @schema WorkflowSpecTemplatesVolumesProjectedSources
 */
export interface WorkflowSpecTemplatesVolumesProjectedSources {
  /**
   * Adapts a ConfigMap into a projected volume.

The contents of the target ConfigMap's Data field will be presented in a projected volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. Note that this is identical to a configmap volume source without the default mode.
   *
   * @schema WorkflowSpecTemplatesVolumesProjectedSources#configMap
   */
  readonly configMap?: WorkflowSpecTemplatesVolumesProjectedSourcesConfigMap;

  /**
   * Represents downward API info for projecting into a projected volume. Note that this is identical to a downwardAPI volume source without the default mode.
   *
   * @schema WorkflowSpecTemplatesVolumesProjectedSources#downwardAPI
   */
  readonly downwardAPI?: WorkflowSpecTemplatesVolumesProjectedSourcesDownwardApi;

  /**
   * Adapts a secret into a projected volume.

The contents of the target Secret's Data field will be presented in a projected volume as files using the keys in the Data field as the file names. Note that this is identical to a secret volume source without the default mode.
   *
   * @schema WorkflowSpecTemplatesVolumesProjectedSources#secret
   */
  readonly secret?: WorkflowSpecTemplatesVolumesProjectedSourcesSecret;

  /**
   * ServiceAccountTokenProjection represents a projected service account token volume. This projection can be used to insert a service account token into the pods runtime filesystem for use against APIs (Kubernetes API Server or otherwise).
   *
   * @schema WorkflowSpecTemplatesVolumesProjectedSources#serviceAccountToken
   */
  readonly serviceAccountToken?: WorkflowSpecTemplatesVolumesProjectedSourcesServiceAccountToken;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema WorkflowSpecTemplatesVolumesRbdSecretRef
 */
export interface WorkflowSpecTemplatesVolumesRbdSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesVolumesRbdSecretRef#name
   */
  readonly name?: string;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema WorkflowSpecTemplatesVolumesScaleIoSecretRef
 */
export interface WorkflowSpecTemplatesVolumesScaleIoSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesVolumesScaleIoSecretRef#name
   */
  readonly name?: string;

}

/**
 * Maps a string key to a path within a volume.
 *
 * @schema WorkflowSpecTemplatesVolumesSecretItems
 */
export interface WorkflowSpecTemplatesVolumesSecretItems {
  /**
   * The key to project.
   *
   * @schema WorkflowSpecTemplatesVolumesSecretItems#key
   */
  readonly key: string;

  /**
   * Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema WorkflowSpecTemplatesVolumesSecretItems#mode
   */
  readonly mode?: number;

  /**
   * The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
   *
   * @schema WorkflowSpecTemplatesVolumesSecretItems#path
   */
  readonly path: string;

}

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema WorkflowSpecTemplatesVolumesStorageosSecretRef
 */
export interface WorkflowSpecTemplatesVolumesStorageosSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesVolumesStorageosSecretRef#name
   */
  readonly name?: string;

}

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema WorkflowSpecVolumeClaimTemplatesSpecSelectorMatchExpressions
 */
export interface WorkflowSpecVolumeClaimTemplatesSpecSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema WorkflowSpecVolumeClaimTemplatesSpecSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema WorkflowSpecVolumeClaimTemplatesSpecSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   *
   * @schema WorkflowSpecVolumeClaimTemplatesSpecSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * ObjectFieldSelector selects an APIVersioned field of an object.
 *
 * @schema WorkflowSpecVolumesDownwardApiItemsFieldRef
 */
export interface WorkflowSpecVolumesDownwardApiItemsFieldRef {
  /**
   * Version of the schema the FieldPath is written in terms of, defaults to "v1".
   *
   * @schema WorkflowSpecVolumesDownwardApiItemsFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * Path of the field to select in the specified API version.
   *
   * @schema WorkflowSpecVolumesDownwardApiItemsFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * ResourceFieldSelector represents container resources (cpu, memory) and their output format
 *
 * @schema WorkflowSpecVolumesDownwardApiItemsResourceFieldRef
 */
export interface WorkflowSpecVolumesDownwardApiItemsResourceFieldRef {
  /**
   * Container name: required for volumes, optional for env vars
   *
   * @schema WorkflowSpecVolumesDownwardApiItemsResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and Int64() accessors.

The serialization format is:

<quantity>        ::= <signedNumber><suffix>
  (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
<decimalSI>       ::= m | "" | k | M | G | T | P | E
  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
<decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  a. No precision is lost
  b. No fractional digits will be emitted
  c. The exponent (or suffix) is as large as possible.
The sign will be omitted unless the number is negative.

Examples:
  1.5 will be serialized as "1500m"
  1.5Gi will be serialized as "1536Mi"

Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.

Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
   *
   * @schema WorkflowSpecVolumesDownwardApiItemsResourceFieldRef#divisor
   */
  readonly divisor?: string;

  /**
   * Required: resource to select
   *
   * @schema WorkflowSpecVolumesDownwardApiItemsResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Adapts a ConfigMap into a projected volume.

The contents of the target ConfigMap's Data field will be presented in a projected volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. Note that this is identical to a configmap volume source without the default mode.
 *
 * @schema WorkflowSpecVolumesProjectedSourcesConfigMap
 */
export interface WorkflowSpecVolumesProjectedSourcesConfigMap {
  /**
   * If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
   *
   * @schema WorkflowSpecVolumesProjectedSourcesConfigMap#items
   */
  readonly items?: WorkflowSpecVolumesProjectedSourcesConfigMapItems[];

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecVolumesProjectedSourcesConfigMap#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its keys must be defined
   *
   * @schema WorkflowSpecVolumesProjectedSourcesConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Represents downward API info for projecting into a projected volume. Note that this is identical to a downwardAPI volume source without the default mode.
 *
 * @schema WorkflowSpecVolumesProjectedSourcesDownwardApi
 */
export interface WorkflowSpecVolumesProjectedSourcesDownwardApi {
  /**
   * Items is a list of DownwardAPIVolume file
   *
   * @schema WorkflowSpecVolumesProjectedSourcesDownwardApi#items
   */
  readonly items?: WorkflowSpecVolumesProjectedSourcesDownwardApiItems[];

}

/**
 * Adapts a secret into a projected volume.

The contents of the target Secret's Data field will be presented in a projected volume as files using the keys in the Data field as the file names. Note that this is identical to a secret volume source without the default mode.
 *
 * @schema WorkflowSpecVolumesProjectedSourcesSecret
 */
export interface WorkflowSpecVolumesProjectedSourcesSecret {
  /**
   * If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
   *
   * @schema WorkflowSpecVolumesProjectedSourcesSecret#items
   */
  readonly items?: WorkflowSpecVolumesProjectedSourcesSecretItems[];

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecVolumesProjectedSourcesSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecVolumesProjectedSourcesSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * ServiceAccountTokenProjection represents a projected service account token volume. This projection can be used to insert a service account token into the pods runtime filesystem for use against APIs (Kubernetes API Server or otherwise).
 *
 * @schema WorkflowSpecVolumesProjectedSourcesServiceAccountToken
 */
export interface WorkflowSpecVolumesProjectedSourcesServiceAccountToken {
  /**
   * Audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.
   *
   * @schema WorkflowSpecVolumesProjectedSourcesServiceAccountToken#audience
   */
  readonly audience?: string;

  /**
   * ExpirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.
   *
   * @default 1 hour and must be at least 10 minutes.
   * @schema WorkflowSpecVolumesProjectedSourcesServiceAccountToken#expirationSeconds
   */
  readonly expirationSeconds?: number;

  /**
   * Path is the path relative to the mount point of the file to project the token into.
   *
   * @schema WorkflowSpecVolumesProjectedSourcesServiceAccountToken#path
   */
  readonly path: string;

}

/**
 * A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema WorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions
 */
export interface WorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
  /**
   * The label key that the selector applies to.
   *
   * @schema WorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#key
   */
  readonly key: string;

  /**
   * Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
   *
   * @schema WorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
   *
   * @schema WorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema WorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields
 */
export interface WorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
  /**
   * The label key that the selector applies to.
   *
   * @schema WorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#key
   */
  readonly key: string;

  /**
   * Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
   *
   * @schema WorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#operator
   */
  readonly operator: string;

  /**
   * An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
   *
   * @schema WorkflowSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#values
   */
  readonly values?: string[];

}

/**
 * A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema WorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions
 */
export interface WorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
  /**
   * The label key that the selector applies to.
   *
   * @schema WorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#key
   */
  readonly key: string;

  /**
   * Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
   *
   * @schema WorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
   *
   * @schema WorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema WorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields
 */
export interface WorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
  /**
   * The label key that the selector applies to.
   *
   * @schema WorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#key
   */
  readonly key: string;

  /**
   * Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
   *
   * @schema WorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#operator
   */
  readonly operator: string;

  /**
   * An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
   *
   * @schema WorkflowSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#values
   */
  readonly values?: string[];

}

/**
 * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
 *
 * @schema WorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector
 */
export interface WorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema WorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchExpressions
   */
  readonly matchExpressions?: WorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema WorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema WorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions
 */
export interface WorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema WorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema WorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   *
   * @schema WorkflowSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
 *
 * @schema WorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector
 */
export interface WorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema WorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchExpressions
   */
  readonly matchExpressions?: WorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema WorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema WorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions
 */
export interface WorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema WorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema WorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   *
   * @schema WorkflowSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
 *
 * @schema WorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference
 */
export interface WorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
  /**
   * A list of node selector requirements by node's labels.
   *
   * @schema WorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference#matchExpressions
   */
  readonly matchExpressions?: WorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions[];

  /**
   * A list of node selector requirements by node's fields.
   *
   * @schema WorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference#matchFields
   */
  readonly matchFields?: WorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields[];

}

/**
 * A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
 *
 * @schema WorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms
 */
export interface WorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
  /**
   * A list of node selector requirements by node's labels.
   *
   * @schema WorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms#matchExpressions
   */
  readonly matchExpressions?: WorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions[];

  /**
   * A list of node selector requirements by node's fields.
   *
   * @schema WorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms#matchFields
   */
  readonly matchFields?: WorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields[];

}

/**
 * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
 *
 * @schema WorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm
 */
export interface WorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
  /**
   * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
   *
   * @schema WorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#labelSelector
   */
  readonly labelSelector?: WorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;

  /**
   * namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
   *
   * @schema WorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaces
   */
  readonly namespaces?: string[];

  /**
   * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
   *
   * @schema WorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
 *
 * @schema WorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector
 */
export interface WorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema WorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchExpressions
   */
  readonly matchExpressions?: WorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema WorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
 *
 * @schema WorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm
 */
export interface WorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
  /**
   * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
   *
   * @schema WorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#labelSelector
   */
  readonly labelSelector?: WorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;

  /**
   * namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
   *
   * @schema WorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaces
   */
  readonly namespaces?: string[];

  /**
   * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
   *
   * @schema WorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
 *
 * @schema WorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector
 */
export interface WorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema WorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchExpressions
   */
  readonly matchExpressions?: WorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema WorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * TarStrategy will tar and gzip the file or directory when saving
 *
 * @schema WorkflowSpecTemplatesArgumentsArtifactsArchiveTar
 */
export interface WorkflowSpecTemplatesArgumentsArtifactsArchiveTar {
  /**
   * CompressionLevel specifies the gzip compression level to use for the artifact. Defaults to gzip.DefaultCompression.
   *
   * @default gzip.DefaultCompression.
   * @schema WorkflowSpecTemplatesArgumentsArtifactsArchiveTar#compressionLevel
   */
  readonly compressionLevel?: number;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesArgumentsArtifactsArtifactoryPasswordSecret
 */
export interface WorkflowSpecTemplatesArgumentsArtifactsArtifactoryPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsArtifactoryPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsArtifactoryPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsArtifactoryPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesArgumentsArtifactsArtifactoryUsernameSecret
 */
export interface WorkflowSpecTemplatesArgumentsArtifactsArtifactoryUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsArtifactoryUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsArtifactoryUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsArtifactoryUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesArgumentsArtifactsGcsServiceAccountKeySecret
 */
export interface WorkflowSpecTemplatesArgumentsArtifactsGcsServiceAccountKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsGcsServiceAccountKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsGcsServiceAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsGcsServiceAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesArgumentsArtifactsGitPasswordSecret
 */
export interface WorkflowSpecTemplatesArgumentsArtifactsGitPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsGitPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsGitPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsGitPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesArgumentsArtifactsGitSshPrivateKeySecret
 */
export interface WorkflowSpecTemplatesArgumentsArtifactsGitSshPrivateKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsGitSshPrivateKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsGitSshPrivateKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsGitSshPrivateKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesArgumentsArtifactsGitUsernameSecret
 */
export interface WorkflowSpecTemplatesArgumentsArtifactsGitUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsGitUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsGitUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsGitUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesArgumentsArtifactsHdfsKrbCCacheSecret
 */
export interface WorkflowSpecTemplatesArgumentsArtifactsHdfsKrbCCacheSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsHdfsKrbCCacheSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsHdfsKrbCCacheSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsHdfsKrbCCacheSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Selects a key from a ConfigMap.
 *
 * @schema WorkflowSpecTemplatesArgumentsArtifactsHdfsKrbConfigConfigMap
 */
export interface WorkflowSpecTemplatesArgumentsArtifactsHdfsKrbConfigConfigMap {
  /**
   * The key to select.
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsHdfsKrbConfigConfigMap#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsHdfsKrbConfigConfigMap#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its key must be defined
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsHdfsKrbConfigConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesArgumentsArtifactsHdfsKrbKeytabSecret
 */
export interface WorkflowSpecTemplatesArgumentsArtifactsHdfsKrbKeytabSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsHdfsKrbKeytabSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsHdfsKrbKeytabSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsHdfsKrbKeytabSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesArgumentsArtifactsOssAccessKeySecret
 */
export interface WorkflowSpecTemplatesArgumentsArtifactsOssAccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsOssAccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsOssAccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsOssAccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesArgumentsArtifactsOssSecretKeySecret
 */
export interface WorkflowSpecTemplatesArgumentsArtifactsOssSecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsOssSecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsOssSecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsOssSecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesArgumentsArtifactsS3AccessKeySecret
 */
export interface WorkflowSpecTemplatesArgumentsArtifactsS3AccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsS3AccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsS3AccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsS3AccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesArgumentsArtifactsS3SecretKeySecret
 */
export interface WorkflowSpecTemplatesArgumentsArtifactsS3SecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsS3SecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsS3SecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesArgumentsArtifactsS3SecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Selects a key from a ConfigMap.
 *
 * @schema WorkflowSpecTemplatesContainerEnvValueFromConfigMapKeyRef
 */
export interface WorkflowSpecTemplatesContainerEnvValueFromConfigMapKeyRef {
  /**
   * The key to select.
   *
   * @schema WorkflowSpecTemplatesContainerEnvValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesContainerEnvValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its key must be defined
   *
   * @schema WorkflowSpecTemplatesContainerEnvValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * ObjectFieldSelector selects an APIVersioned field of an object.
 *
 * @schema WorkflowSpecTemplatesContainerEnvValueFromFieldRef
 */
export interface WorkflowSpecTemplatesContainerEnvValueFromFieldRef {
  /**
   * Version of the schema the FieldPath is written in terms of, defaults to "v1".
   *
   * @schema WorkflowSpecTemplatesContainerEnvValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * Path of the field to select in the specified API version.
   *
   * @schema WorkflowSpecTemplatesContainerEnvValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * ResourceFieldSelector represents container resources (cpu, memory) and their output format
 *
 * @schema WorkflowSpecTemplatesContainerEnvValueFromResourceFieldRef
 */
export interface WorkflowSpecTemplatesContainerEnvValueFromResourceFieldRef {
  /**
   * Container name: required for volumes, optional for env vars
   *
   * @schema WorkflowSpecTemplatesContainerEnvValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and Int64() accessors.

The serialization format is:

<quantity>        ::= <signedNumber><suffix>
  (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
<decimalSI>       ::= m | "" | k | M | G | T | P | E
  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
<decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  a. No precision is lost
  b. No fractional digits will be emitted
  c. The exponent (or suffix) is as large as possible.
The sign will be omitted unless the number is negative.

Examples:
  1.5 will be serialized as "1500m"
  1.5Gi will be serialized as "1536Mi"

Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.

Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
   *
   * @schema WorkflowSpecTemplatesContainerEnvValueFromResourceFieldRef#divisor
   */
  readonly divisor?: string;

  /**
   * Required: resource to select
   *
   * @schema WorkflowSpecTemplatesContainerEnvValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesContainerEnvValueFromSecretKeyRef
 */
export interface WorkflowSpecTemplatesContainerEnvValueFromSecretKeyRef {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesContainerEnvValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesContainerEnvValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesContainerEnvValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema WorkflowSpecTemplatesContainerLifecyclePostStartExec
 */
export interface WorkflowSpecTemplatesContainerLifecyclePostStartExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema WorkflowSpecTemplatesContainerLifecyclePostStartExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema WorkflowSpecTemplatesContainerLifecyclePostStartHttpGet
 */
export interface WorkflowSpecTemplatesContainerLifecyclePostStartHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema WorkflowSpecTemplatesContainerLifecyclePostStartHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema WorkflowSpecTemplatesContainerLifecyclePostStartHttpGet#httpHeaders
   */
  readonly httpHeaders?: WorkflowSpecTemplatesContainerLifecyclePostStartHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema WorkflowSpecTemplatesContainerLifecyclePostStartHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema WorkflowSpecTemplatesContainerLifecyclePostStartHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema WorkflowSpecTemplatesContainerLifecyclePostStartHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema WorkflowSpecTemplatesContainerLifecyclePostStartTcpSocket
 */
export interface WorkflowSpecTemplatesContainerLifecyclePostStartTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema WorkflowSpecTemplatesContainerLifecyclePostStartTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema WorkflowSpecTemplatesContainerLifecyclePostStartTcpSocket#port
   */
  readonly port: string;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema WorkflowSpecTemplatesContainerLifecyclePreStopExec
 */
export interface WorkflowSpecTemplatesContainerLifecyclePreStopExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema WorkflowSpecTemplatesContainerLifecyclePreStopExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema WorkflowSpecTemplatesContainerLifecyclePreStopHttpGet
 */
export interface WorkflowSpecTemplatesContainerLifecyclePreStopHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema WorkflowSpecTemplatesContainerLifecyclePreStopHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema WorkflowSpecTemplatesContainerLifecyclePreStopHttpGet#httpHeaders
   */
  readonly httpHeaders?: WorkflowSpecTemplatesContainerLifecyclePreStopHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema WorkflowSpecTemplatesContainerLifecyclePreStopHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema WorkflowSpecTemplatesContainerLifecyclePreStopHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema WorkflowSpecTemplatesContainerLifecyclePreStopHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema WorkflowSpecTemplatesContainerLifecyclePreStopTcpSocket
 */
export interface WorkflowSpecTemplatesContainerLifecyclePreStopTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema WorkflowSpecTemplatesContainerLifecyclePreStopTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema WorkflowSpecTemplatesContainerLifecyclePreStopTcpSocket#port
   */
  readonly port: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema WorkflowSpecTemplatesContainerLivenessProbeHttpGetHttpHeaders
 */
export interface WorkflowSpecTemplatesContainerLivenessProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema WorkflowSpecTemplatesContainerLivenessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema WorkflowSpecTemplatesContainerLivenessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema WorkflowSpecTemplatesContainerReadinessProbeHttpGetHttpHeaders
 */
export interface WorkflowSpecTemplatesContainerReadinessProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema WorkflowSpecTemplatesContainerReadinessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema WorkflowSpecTemplatesContainerReadinessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Artifact indicates an artifact to place at a specified path
 *
 * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifacts
 */
export interface WorkflowSpecTemplatesDagTasksArgumentsArtifacts {
  /**
   * ArchiveStrategy describes how to archive files/directory when saving artifacts
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifacts#archive
   */
  readonly archive?: WorkflowSpecTemplatesDagTasksArgumentsArtifactsArchive;

  /**
   * ArchiveLogs indicates if the container logs should be archived
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifacts#archiveLogs
   */
  readonly archiveLogs?: boolean;

  /**
   * ArtifactoryArtifact is the location of an artifactory artifact
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifacts#artifactory
   */
  readonly artifactory?: WorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactory;

  /**
   * From allows an artifact to reference an artifact from a previous step
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifacts#from
   */
  readonly from?: string;

  /**
   * GCSArtifact is the location of a GCS artifact
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifacts#gcs
   */
  readonly gcs?: WorkflowSpecTemplatesDagTasksArgumentsArtifactsGcs;

  /**
   * GitArtifact is the location of an git artifact
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifacts#git
   */
  readonly git?: WorkflowSpecTemplatesDagTasksArgumentsArtifactsGit;

  /**
   * GlobalName exports an output artifact to the global scope, making it available as '{{io.argoproj.workflow.v1alpha1.outputs.artifacts.XXXX}} and in workflow.status.outputs.artifacts
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifacts#globalName
   */
  readonly globalName?: string;

  /**
   * HDFSArtifact is the location of an HDFS artifact
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifacts#hdfs
   */
  readonly hdfs?: WorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfs;

  /**
   * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifacts#http
   */
  readonly http?: WorkflowSpecTemplatesDagTasksArgumentsArtifactsHttp;

  /**
   * mode bits to use on this file, must be a value between 0 and 0777 set when loading input artifacts.
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifacts#mode
   */
  readonly mode?: number;

  /**
   * name of the artifact. must be unique within a template's inputs/outputs.
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifacts#name
   */
  readonly name: string;

  /**
   * Make Artifacts optional, if Artifacts doesn't generate or exist
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifacts#optional
   */
  readonly optional?: boolean;

  /**
   * OSSArtifact is the location of an Alibaba Cloud OSS artifact
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifacts#oss
   */
  readonly oss?: WorkflowSpecTemplatesDagTasksArgumentsArtifactsOss;

  /**
   * Path is the container path to the artifact
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifacts#path
   */
  readonly path?: string;

  /**
   * RawArtifact allows raw string content to be placed as an artifact in a container
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifacts#raw
   */
  readonly raw?: WorkflowSpecTemplatesDagTasksArgumentsArtifactsRaw;

  /**
   * S3Artifact is the location of an S3 artifact
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifacts#s3
   */
  readonly s3?: WorkflowSpecTemplatesDagTasksArgumentsArtifactsS3;

}

/**
 * Parameter indicate a passed string parameter to a service template with an optional default value
 *
 * @schema WorkflowSpecTemplatesDagTasksArgumentsParameters
 */
export interface WorkflowSpecTemplatesDagTasksArgumentsParameters {
  /**
   * @schema WorkflowSpecTemplatesDagTasksArgumentsParameters#default
   */
  readonly default?: string;

  /**
   * GlobalName exports an output parameter to the global scope, making it available as '{{io.argoproj.workflow.v1alpha1.outputs.parameters.XXXX}} and in workflow.status.outputs.parameters
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsParameters#globalName
   */
  readonly globalName?: string;

  /**
   * Name is the parameter name
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsParameters#name
   */
  readonly name: string;

  /**
   * @schema WorkflowSpecTemplatesDagTasksArgumentsParameters#value
   */
  readonly value?: string;

  /**
   * ValueFrom describes a location in which to obtain the value to a parameter
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsParameters#valueFrom
   */
  readonly valueFrom?: WorkflowSpecTemplatesDagTasksArgumentsParametersValueFrom;

}

/**
 * Selects a key from a ConfigMap.
 *
 * @schema WorkflowSpecTemplatesInitContainersEnvValueFromConfigMapKeyRef
 */
export interface WorkflowSpecTemplatesInitContainersEnvValueFromConfigMapKeyRef {
  /**
   * The key to select.
   *
   * @schema WorkflowSpecTemplatesInitContainersEnvValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesInitContainersEnvValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its key must be defined
   *
   * @schema WorkflowSpecTemplatesInitContainersEnvValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * ObjectFieldSelector selects an APIVersioned field of an object.
 *
 * @schema WorkflowSpecTemplatesInitContainersEnvValueFromFieldRef
 */
export interface WorkflowSpecTemplatesInitContainersEnvValueFromFieldRef {
  /**
   * Version of the schema the FieldPath is written in terms of, defaults to "v1".
   *
   * @schema WorkflowSpecTemplatesInitContainersEnvValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * Path of the field to select in the specified API version.
   *
   * @schema WorkflowSpecTemplatesInitContainersEnvValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * ResourceFieldSelector represents container resources (cpu, memory) and their output format
 *
 * @schema WorkflowSpecTemplatesInitContainersEnvValueFromResourceFieldRef
 */
export interface WorkflowSpecTemplatesInitContainersEnvValueFromResourceFieldRef {
  /**
   * Container name: required for volumes, optional for env vars
   *
   * @schema WorkflowSpecTemplatesInitContainersEnvValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and Int64() accessors.

The serialization format is:

<quantity>        ::= <signedNumber><suffix>
  (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
<decimalSI>       ::= m | "" | k | M | G | T | P | E
  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
<decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  a. No precision is lost
  b. No fractional digits will be emitted
  c. The exponent (or suffix) is as large as possible.
The sign will be omitted unless the number is negative.

Examples:
  1.5 will be serialized as "1500m"
  1.5Gi will be serialized as "1536Mi"

Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.

Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
   *
   * @schema WorkflowSpecTemplatesInitContainersEnvValueFromResourceFieldRef#divisor
   */
  readonly divisor?: string;

  /**
   * Required: resource to select
   *
   * @schema WorkflowSpecTemplatesInitContainersEnvValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesInitContainersEnvValueFromSecretKeyRef
 */
export interface WorkflowSpecTemplatesInitContainersEnvValueFromSecretKeyRef {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesInitContainersEnvValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesInitContainersEnvValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesInitContainersEnvValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema WorkflowSpecTemplatesInitContainersLifecyclePostStartExec
 */
export interface WorkflowSpecTemplatesInitContainersLifecyclePostStartExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema WorkflowSpecTemplatesInitContainersLifecyclePostStartExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema WorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGet
 */
export interface WorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema WorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema WorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGet#httpHeaders
   */
  readonly httpHeaders?: WorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema WorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema WorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema WorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema WorkflowSpecTemplatesInitContainersLifecyclePostStartTcpSocket
 */
export interface WorkflowSpecTemplatesInitContainersLifecyclePostStartTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema WorkflowSpecTemplatesInitContainersLifecyclePostStartTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema WorkflowSpecTemplatesInitContainersLifecyclePostStartTcpSocket#port
   */
  readonly port: string;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema WorkflowSpecTemplatesInitContainersLifecyclePreStopExec
 */
export interface WorkflowSpecTemplatesInitContainersLifecyclePreStopExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema WorkflowSpecTemplatesInitContainersLifecyclePreStopExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema WorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGet
 */
export interface WorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema WorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema WorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGet#httpHeaders
   */
  readonly httpHeaders?: WorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema WorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema WorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema WorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema WorkflowSpecTemplatesInitContainersLifecyclePreStopTcpSocket
 */
export interface WorkflowSpecTemplatesInitContainersLifecyclePreStopTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema WorkflowSpecTemplatesInitContainersLifecyclePreStopTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema WorkflowSpecTemplatesInitContainersLifecyclePreStopTcpSocket#port
   */
  readonly port: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema WorkflowSpecTemplatesInitContainersLivenessProbeHttpGetHttpHeaders
 */
export interface WorkflowSpecTemplatesInitContainersLivenessProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema WorkflowSpecTemplatesInitContainersLivenessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema WorkflowSpecTemplatesInitContainersLivenessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema WorkflowSpecTemplatesInitContainersReadinessProbeHttpGetHttpHeaders
 */
export interface WorkflowSpecTemplatesInitContainersReadinessProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema WorkflowSpecTemplatesInitContainersReadinessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema WorkflowSpecTemplatesInitContainersReadinessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema WorkflowSpecTemplatesInitContainersStartupProbeHttpGetHttpHeaders
 */
export interface WorkflowSpecTemplatesInitContainersStartupProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema WorkflowSpecTemplatesInitContainersStartupProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema WorkflowSpecTemplatesInitContainersStartupProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * TarStrategy will tar and gzip the file or directory when saving
 *
 * @schema WorkflowSpecTemplatesInputsArtifactsArchiveTar
 */
export interface WorkflowSpecTemplatesInputsArtifactsArchiveTar {
  /**
   * CompressionLevel specifies the gzip compression level to use for the artifact. Defaults to gzip.DefaultCompression.
   *
   * @default gzip.DefaultCompression.
   * @schema WorkflowSpecTemplatesInputsArtifactsArchiveTar#compressionLevel
   */
  readonly compressionLevel?: number;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesInputsArtifactsArtifactoryPasswordSecret
 */
export interface WorkflowSpecTemplatesInputsArtifactsArtifactoryPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsArtifactoryPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsArtifactoryPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsArtifactoryPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesInputsArtifactsArtifactoryUsernameSecret
 */
export interface WorkflowSpecTemplatesInputsArtifactsArtifactoryUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsArtifactoryUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsArtifactoryUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsArtifactoryUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesInputsArtifactsGcsServiceAccountKeySecret
 */
export interface WorkflowSpecTemplatesInputsArtifactsGcsServiceAccountKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsGcsServiceAccountKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsGcsServiceAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsGcsServiceAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesInputsArtifactsGitPasswordSecret
 */
export interface WorkflowSpecTemplatesInputsArtifactsGitPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsGitPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsGitPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsGitPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesInputsArtifactsGitSshPrivateKeySecret
 */
export interface WorkflowSpecTemplatesInputsArtifactsGitSshPrivateKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsGitSshPrivateKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsGitSshPrivateKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsGitSshPrivateKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesInputsArtifactsGitUsernameSecret
 */
export interface WorkflowSpecTemplatesInputsArtifactsGitUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsGitUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsGitUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsGitUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesInputsArtifactsHdfsKrbCCacheSecret
 */
export interface WorkflowSpecTemplatesInputsArtifactsHdfsKrbCCacheSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsHdfsKrbCCacheSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsHdfsKrbCCacheSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsHdfsKrbCCacheSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Selects a key from a ConfigMap.
 *
 * @schema WorkflowSpecTemplatesInputsArtifactsHdfsKrbConfigConfigMap
 */
export interface WorkflowSpecTemplatesInputsArtifactsHdfsKrbConfigConfigMap {
  /**
   * The key to select.
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsHdfsKrbConfigConfigMap#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsHdfsKrbConfigConfigMap#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its key must be defined
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsHdfsKrbConfigConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesInputsArtifactsHdfsKrbKeytabSecret
 */
export interface WorkflowSpecTemplatesInputsArtifactsHdfsKrbKeytabSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsHdfsKrbKeytabSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsHdfsKrbKeytabSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsHdfsKrbKeytabSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesInputsArtifactsOssAccessKeySecret
 */
export interface WorkflowSpecTemplatesInputsArtifactsOssAccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsOssAccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsOssAccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsOssAccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesInputsArtifactsOssSecretKeySecret
 */
export interface WorkflowSpecTemplatesInputsArtifactsOssSecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsOssSecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsOssSecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsOssSecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesInputsArtifactsS3AccessKeySecret
 */
export interface WorkflowSpecTemplatesInputsArtifactsS3AccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsS3AccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsS3AccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsS3AccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesInputsArtifactsS3SecretKeySecret
 */
export interface WorkflowSpecTemplatesInputsArtifactsS3SecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsS3SecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsS3SecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesInputsArtifactsS3SecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * TarStrategy will tar and gzip the file or directory when saving
 *
 * @schema WorkflowSpecTemplatesOutputsArtifactsArchiveTar
 */
export interface WorkflowSpecTemplatesOutputsArtifactsArchiveTar {
  /**
   * CompressionLevel specifies the gzip compression level to use for the artifact. Defaults to gzip.DefaultCompression.
   *
   * @default gzip.DefaultCompression.
   * @schema WorkflowSpecTemplatesOutputsArtifactsArchiveTar#compressionLevel
   */
  readonly compressionLevel?: number;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesOutputsArtifactsArtifactoryPasswordSecret
 */
export interface WorkflowSpecTemplatesOutputsArtifactsArtifactoryPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsArtifactoryPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsArtifactoryPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsArtifactoryPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesOutputsArtifactsArtifactoryUsernameSecret
 */
export interface WorkflowSpecTemplatesOutputsArtifactsArtifactoryUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsArtifactoryUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsArtifactoryUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsArtifactoryUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesOutputsArtifactsGcsServiceAccountKeySecret
 */
export interface WorkflowSpecTemplatesOutputsArtifactsGcsServiceAccountKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsGcsServiceAccountKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsGcsServiceAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsGcsServiceAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesOutputsArtifactsGitPasswordSecret
 */
export interface WorkflowSpecTemplatesOutputsArtifactsGitPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsGitPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsGitPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsGitPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesOutputsArtifactsGitSshPrivateKeySecret
 */
export interface WorkflowSpecTemplatesOutputsArtifactsGitSshPrivateKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsGitSshPrivateKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsGitSshPrivateKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsGitSshPrivateKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesOutputsArtifactsGitUsernameSecret
 */
export interface WorkflowSpecTemplatesOutputsArtifactsGitUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsGitUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsGitUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsGitUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesOutputsArtifactsHdfsKrbCCacheSecret
 */
export interface WorkflowSpecTemplatesOutputsArtifactsHdfsKrbCCacheSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsHdfsKrbCCacheSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsHdfsKrbCCacheSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsHdfsKrbCCacheSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Selects a key from a ConfigMap.
 *
 * @schema WorkflowSpecTemplatesOutputsArtifactsHdfsKrbConfigConfigMap
 */
export interface WorkflowSpecTemplatesOutputsArtifactsHdfsKrbConfigConfigMap {
  /**
   * The key to select.
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsHdfsKrbConfigConfigMap#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsHdfsKrbConfigConfigMap#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its key must be defined
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsHdfsKrbConfigConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesOutputsArtifactsHdfsKrbKeytabSecret
 */
export interface WorkflowSpecTemplatesOutputsArtifactsHdfsKrbKeytabSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsHdfsKrbKeytabSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsHdfsKrbKeytabSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsHdfsKrbKeytabSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesOutputsArtifactsOssAccessKeySecret
 */
export interface WorkflowSpecTemplatesOutputsArtifactsOssAccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsOssAccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsOssAccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsOssAccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesOutputsArtifactsOssSecretKeySecret
 */
export interface WorkflowSpecTemplatesOutputsArtifactsOssSecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsOssSecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsOssSecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsOssSecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesOutputsArtifactsS3AccessKeySecret
 */
export interface WorkflowSpecTemplatesOutputsArtifactsS3AccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsS3AccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsS3AccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsS3AccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesOutputsArtifactsS3SecretKeySecret
 */
export interface WorkflowSpecTemplatesOutputsArtifactsS3SecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsS3SecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsS3SecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesOutputsArtifactsS3SecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Selects a key from a ConfigMap.
 *
 * @schema WorkflowSpecTemplatesScriptEnvValueFromConfigMapKeyRef
 */
export interface WorkflowSpecTemplatesScriptEnvValueFromConfigMapKeyRef {
  /**
   * The key to select.
   *
   * @schema WorkflowSpecTemplatesScriptEnvValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesScriptEnvValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its key must be defined
   *
   * @schema WorkflowSpecTemplatesScriptEnvValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * ObjectFieldSelector selects an APIVersioned field of an object.
 *
 * @schema WorkflowSpecTemplatesScriptEnvValueFromFieldRef
 */
export interface WorkflowSpecTemplatesScriptEnvValueFromFieldRef {
  /**
   * Version of the schema the FieldPath is written in terms of, defaults to "v1".
   *
   * @schema WorkflowSpecTemplatesScriptEnvValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * Path of the field to select in the specified API version.
   *
   * @schema WorkflowSpecTemplatesScriptEnvValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * ResourceFieldSelector represents container resources (cpu, memory) and their output format
 *
 * @schema WorkflowSpecTemplatesScriptEnvValueFromResourceFieldRef
 */
export interface WorkflowSpecTemplatesScriptEnvValueFromResourceFieldRef {
  /**
   * Container name: required for volumes, optional for env vars
   *
   * @schema WorkflowSpecTemplatesScriptEnvValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and Int64() accessors.

The serialization format is:

<quantity>        ::= <signedNumber><suffix>
  (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
<decimalSI>       ::= m | "" | k | M | G | T | P | E
  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
<decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  a. No precision is lost
  b. No fractional digits will be emitted
  c. The exponent (or suffix) is as large as possible.
The sign will be omitted unless the number is negative.

Examples:
  1.5 will be serialized as "1500m"
  1.5Gi will be serialized as "1536Mi"

Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.

Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
   *
   * @schema WorkflowSpecTemplatesScriptEnvValueFromResourceFieldRef#divisor
   */
  readonly divisor?: string;

  /**
   * Required: resource to select
   *
   * @schema WorkflowSpecTemplatesScriptEnvValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesScriptEnvValueFromSecretKeyRef
 */
export interface WorkflowSpecTemplatesScriptEnvValueFromSecretKeyRef {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesScriptEnvValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesScriptEnvValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesScriptEnvValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema WorkflowSpecTemplatesScriptLifecyclePostStartExec
 */
export interface WorkflowSpecTemplatesScriptLifecyclePostStartExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema WorkflowSpecTemplatesScriptLifecyclePostStartExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema WorkflowSpecTemplatesScriptLifecyclePostStartHttpGet
 */
export interface WorkflowSpecTemplatesScriptLifecyclePostStartHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema WorkflowSpecTemplatesScriptLifecyclePostStartHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema WorkflowSpecTemplatesScriptLifecyclePostStartHttpGet#httpHeaders
   */
  readonly httpHeaders?: WorkflowSpecTemplatesScriptLifecyclePostStartHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema WorkflowSpecTemplatesScriptLifecyclePostStartHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema WorkflowSpecTemplatesScriptLifecyclePostStartHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema WorkflowSpecTemplatesScriptLifecyclePostStartHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema WorkflowSpecTemplatesScriptLifecyclePostStartTcpSocket
 */
export interface WorkflowSpecTemplatesScriptLifecyclePostStartTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema WorkflowSpecTemplatesScriptLifecyclePostStartTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema WorkflowSpecTemplatesScriptLifecyclePostStartTcpSocket#port
   */
  readonly port: string;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema WorkflowSpecTemplatesScriptLifecyclePreStopExec
 */
export interface WorkflowSpecTemplatesScriptLifecyclePreStopExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema WorkflowSpecTemplatesScriptLifecyclePreStopExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema WorkflowSpecTemplatesScriptLifecyclePreStopHttpGet
 */
export interface WorkflowSpecTemplatesScriptLifecyclePreStopHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema WorkflowSpecTemplatesScriptLifecyclePreStopHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema WorkflowSpecTemplatesScriptLifecyclePreStopHttpGet#httpHeaders
   */
  readonly httpHeaders?: WorkflowSpecTemplatesScriptLifecyclePreStopHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema WorkflowSpecTemplatesScriptLifecyclePreStopHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema WorkflowSpecTemplatesScriptLifecyclePreStopHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema WorkflowSpecTemplatesScriptLifecyclePreStopHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema WorkflowSpecTemplatesScriptLifecyclePreStopTcpSocket
 */
export interface WorkflowSpecTemplatesScriptLifecyclePreStopTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema WorkflowSpecTemplatesScriptLifecyclePreStopTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema WorkflowSpecTemplatesScriptLifecyclePreStopTcpSocket#port
   */
  readonly port: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema WorkflowSpecTemplatesScriptLivenessProbeHttpGetHttpHeaders
 */
export interface WorkflowSpecTemplatesScriptLivenessProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema WorkflowSpecTemplatesScriptLivenessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema WorkflowSpecTemplatesScriptLivenessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema WorkflowSpecTemplatesScriptReadinessProbeHttpGetHttpHeaders
 */
export interface WorkflowSpecTemplatesScriptReadinessProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema WorkflowSpecTemplatesScriptReadinessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema WorkflowSpecTemplatesScriptReadinessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema WorkflowSpecTemplatesScriptStartupProbeHttpGetHttpHeaders
 */
export interface WorkflowSpecTemplatesScriptStartupProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema WorkflowSpecTemplatesScriptStartupProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema WorkflowSpecTemplatesScriptStartupProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Selects a key from a ConfigMap.
 *
 * @schema WorkflowSpecTemplatesSidecarsEnvValueFromConfigMapKeyRef
 */
export interface WorkflowSpecTemplatesSidecarsEnvValueFromConfigMapKeyRef {
  /**
   * The key to select.
   *
   * @schema WorkflowSpecTemplatesSidecarsEnvValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesSidecarsEnvValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its key must be defined
   *
   * @schema WorkflowSpecTemplatesSidecarsEnvValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * ObjectFieldSelector selects an APIVersioned field of an object.
 *
 * @schema WorkflowSpecTemplatesSidecarsEnvValueFromFieldRef
 */
export interface WorkflowSpecTemplatesSidecarsEnvValueFromFieldRef {
  /**
   * Version of the schema the FieldPath is written in terms of, defaults to "v1".
   *
   * @schema WorkflowSpecTemplatesSidecarsEnvValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * Path of the field to select in the specified API version.
   *
   * @schema WorkflowSpecTemplatesSidecarsEnvValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * ResourceFieldSelector represents container resources (cpu, memory) and their output format
 *
 * @schema WorkflowSpecTemplatesSidecarsEnvValueFromResourceFieldRef
 */
export interface WorkflowSpecTemplatesSidecarsEnvValueFromResourceFieldRef {
  /**
   * Container name: required for volumes, optional for env vars
   *
   * @schema WorkflowSpecTemplatesSidecarsEnvValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and Int64() accessors.

The serialization format is:

<quantity>        ::= <signedNumber><suffix>
  (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
<decimalSI>       ::= m | "" | k | M | G | T | P | E
  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
<decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  a. No precision is lost
  b. No fractional digits will be emitted
  c. The exponent (or suffix) is as large as possible.
The sign will be omitted unless the number is negative.

Examples:
  1.5 will be serialized as "1500m"
  1.5Gi will be serialized as "1536Mi"

Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.

Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
   *
   * @schema WorkflowSpecTemplatesSidecarsEnvValueFromResourceFieldRef#divisor
   */
  readonly divisor?: string;

  /**
   * Required: resource to select
   *
   * @schema WorkflowSpecTemplatesSidecarsEnvValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesSidecarsEnvValueFromSecretKeyRef
 */
export interface WorkflowSpecTemplatesSidecarsEnvValueFromSecretKeyRef {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesSidecarsEnvValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesSidecarsEnvValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesSidecarsEnvValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema WorkflowSpecTemplatesSidecarsLifecyclePostStartExec
 */
export interface WorkflowSpecTemplatesSidecarsLifecyclePostStartExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema WorkflowSpecTemplatesSidecarsLifecyclePostStartExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema WorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGet
 */
export interface WorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema WorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema WorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGet#httpHeaders
   */
  readonly httpHeaders?: WorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema WorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema WorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema WorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema WorkflowSpecTemplatesSidecarsLifecyclePostStartTcpSocket
 */
export interface WorkflowSpecTemplatesSidecarsLifecyclePostStartTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema WorkflowSpecTemplatesSidecarsLifecyclePostStartTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema WorkflowSpecTemplatesSidecarsLifecyclePostStartTcpSocket#port
   */
  readonly port: string;

}

/**
 * ExecAction describes a "run in container" action.
 *
 * @schema WorkflowSpecTemplatesSidecarsLifecyclePreStopExec
 */
export interface WorkflowSpecTemplatesSidecarsLifecyclePreStopExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema WorkflowSpecTemplatesSidecarsLifecyclePreStopExec#command
   */
  readonly command?: string[];

}

/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 *
 * @schema WorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGet
 */
export interface WorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema WorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema WorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGet#httpHeaders
   */
  readonly httpHeaders?: WorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema WorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGet#path
   */
  readonly path?: string;

  /**
   * @schema WorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGet#port
   */
  readonly port: string;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema WorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * TCPSocketAction describes an action based on opening a socket
 *
 * @schema WorkflowSpecTemplatesSidecarsLifecyclePreStopTcpSocket
 */
export interface WorkflowSpecTemplatesSidecarsLifecyclePreStopTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema WorkflowSpecTemplatesSidecarsLifecyclePreStopTcpSocket#host
   */
  readonly host?: string;

  /**
   * @schema WorkflowSpecTemplatesSidecarsLifecyclePreStopTcpSocket#port
   */
  readonly port: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema WorkflowSpecTemplatesSidecarsLivenessProbeHttpGetHttpHeaders
 */
export interface WorkflowSpecTemplatesSidecarsLivenessProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema WorkflowSpecTemplatesSidecarsLivenessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema WorkflowSpecTemplatesSidecarsLivenessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema WorkflowSpecTemplatesSidecarsReadinessProbeHttpGetHttpHeaders
 */
export interface WorkflowSpecTemplatesSidecarsReadinessProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema WorkflowSpecTemplatesSidecarsReadinessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema WorkflowSpecTemplatesSidecarsReadinessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema WorkflowSpecTemplatesSidecarsStartupProbeHttpGetHttpHeaders
 */
export interface WorkflowSpecTemplatesSidecarsStartupProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema WorkflowSpecTemplatesSidecarsStartupProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema WorkflowSpecTemplatesSidecarsStartupProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * ArchiveStrategy describes how to archive files/directory when saving artifacts
 *
 * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsArchive
 */
export interface WorkflowSpecTemplatesStepsArgumentsArtifactsArchive {
  /**
   * NoneStrategy indicates to skip tar process and upload the files or directory tree as independent files. Note that if the artifact is a directory, the artifact driver must support the ability to save/load the directory appropriately.
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsArchive#none
   */
  readonly none?: any;

  /**
   * TarStrategy will tar and gzip the file or directory when saving
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsArchive#tar
   */
  readonly tar?: WorkflowSpecTemplatesStepsArgumentsArtifactsArchiveTar;

}

/**
 * ArtifactoryArtifact is the location of an artifactory artifact
 *
 * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsArtifactory
 */
export interface WorkflowSpecTemplatesStepsArgumentsArtifactsArtifactory {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsArtifactory#passwordSecret
   */
  readonly passwordSecret?: WorkflowSpecTemplatesStepsArgumentsArtifactsArtifactoryPasswordSecret;

  /**
   * URL of the artifact
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsArtifactory#url
   */
  readonly url: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsArtifactory#usernameSecret
   */
  readonly usernameSecret?: WorkflowSpecTemplatesStepsArgumentsArtifactsArtifactoryUsernameSecret;

}

/**
 * GCSArtifact is the location of a GCS artifact
 *
 * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsGcs
 */
export interface WorkflowSpecTemplatesStepsArgumentsArtifactsGcs {
  /**
   * Bucket is the name of the bucket
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsGcs#bucket
   */
  readonly bucket: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsGcs#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsGcs#serviceAccountKeySecret
   */
  readonly serviceAccountKeySecret?: WorkflowSpecTemplatesStepsArgumentsArtifactsGcsServiceAccountKeySecret;

}

/**
 * GitArtifact is the location of an git artifact
 *
 * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsGit
 */
export interface WorkflowSpecTemplatesStepsArgumentsArtifactsGit {
  /**
   * Depth specifies clones/fetches should be shallow and include the given number of commits from the branch tip
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsGit#depth
   */
  readonly depth?: number;

  /**
   * Fetch specifies a number of refs that should be fetched before checkout
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsGit#fetch
   */
  readonly fetch?: string[];

  /**
   * InsecureIgnoreHostKey disables SSH strict host key checking during git clone
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsGit#insecureIgnoreHostKey
   */
  readonly insecureIgnoreHostKey?: boolean;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsGit#passwordSecret
   */
  readonly passwordSecret?: WorkflowSpecTemplatesStepsArgumentsArtifactsGitPasswordSecret;

  /**
   * Repo is the git repository
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsGit#repo
   */
  readonly repo: string;

  /**
   * Revision is the git commit, tag, branch to checkout
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsGit#revision
   */
  readonly revision?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsGit#sshPrivateKeySecret
   */
  readonly sshPrivateKeySecret?: WorkflowSpecTemplatesStepsArgumentsArtifactsGitSshPrivateKeySecret;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsGit#usernameSecret
   */
  readonly usernameSecret?: WorkflowSpecTemplatesStepsArgumentsArtifactsGitUsernameSecret;

}

/**
 * HDFSArtifact is the location of an HDFS artifact
 *
 * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsHdfs
 */
export interface WorkflowSpecTemplatesStepsArgumentsArtifactsHdfs {
  /**
   * Addresses is accessible addresses of HDFS name nodes
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsHdfs#addresses
   */
  readonly addresses: string[];

  /**
   * Force copies a file forcibly even if it exists (default: false)
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsHdfs#force
   */
  readonly force?: boolean;

  /**
   * HDFSUser is the user to access HDFS file system. It is ignored if either ccache or keytab is used.
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsHdfs#hdfsUser
   */
  readonly hdfsUser?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsHdfs#krbCCacheSecret
   */
  readonly krbCCacheSecret?: WorkflowSpecTemplatesStepsArgumentsArtifactsHdfsKrbCCacheSecret;

  /**
   * Selects a key from a ConfigMap.
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsHdfs#krbConfigConfigMap
   */
  readonly krbConfigConfigMap?: WorkflowSpecTemplatesStepsArgumentsArtifactsHdfsKrbConfigConfigMap;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsHdfs#krbKeytabSecret
   */
  readonly krbKeytabSecret?: WorkflowSpecTemplatesStepsArgumentsArtifactsHdfsKrbKeytabSecret;

  /**
   * KrbRealm is the Kerberos realm used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsHdfs#krbRealm
   */
  readonly krbRealm?: string;

  /**
   * KrbServicePrincipalName is the principal name of Kerberos service It must be set if either ccache or keytab is used.
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsHdfs#krbServicePrincipalName
   */
  readonly krbServicePrincipalName?: string;

  /**
   * KrbUsername is the Kerberos username used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsHdfs#krbUsername
   */
  readonly krbUsername?: string;

  /**
   * Path is a file path in HDFS
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsHdfs#path
   */
  readonly path: string;

}

/**
 * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
 *
 * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsHttp
 */
export interface WorkflowSpecTemplatesStepsArgumentsArtifactsHttp {
  /**
   * URL of the artifact
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsHttp#url
   */
  readonly url: string;

}

/**
 * OSSArtifact is the location of an Alibaba Cloud OSS artifact
 *
 * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsOss
 */
export interface WorkflowSpecTemplatesStepsArgumentsArtifactsOss {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsOss#accessKeySecret
   */
  readonly accessKeySecret: WorkflowSpecTemplatesStepsArgumentsArtifactsOssAccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsOss#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsOss#endpoint
   */
  readonly endpoint: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsOss#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsOss#secretKeySecret
   */
  readonly secretKeySecret: WorkflowSpecTemplatesStepsArgumentsArtifactsOssSecretKeySecret;

}

/**
 * RawArtifact allows raw string content to be placed as an artifact in a container
 *
 * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsRaw
 */
export interface WorkflowSpecTemplatesStepsArgumentsArtifactsRaw {
  /**
   * Data is the string contents of the artifact
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsRaw#data
   */
  readonly data: string;

}

/**
 * S3Artifact is the location of an S3 artifact
 *
 * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsS3
 */
export interface WorkflowSpecTemplatesStepsArgumentsArtifactsS3 {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsS3#accessKeySecret
   */
  readonly accessKeySecret: WorkflowSpecTemplatesStepsArgumentsArtifactsS3AccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsS3#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsS3#endpoint
   */
  readonly endpoint: string;

  /**
   * Insecure will connect to the service with TLS
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsS3#insecure
   */
  readonly insecure?: boolean;

  /**
   * Key is the key in the bucket where the artifact resides
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsS3#key
   */
  readonly key: string;

  /**
   * Region contains the optional bucket region
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsS3#region
   */
  readonly region?: string;

  /**
   * RoleARN is the Amazon Resource Name (ARN) of the role to assume.
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsS3#roleARN
   */
  readonly roleARN?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsS3#secretKeySecret
   */
  readonly secretKeySecret: WorkflowSpecTemplatesStepsArgumentsArtifactsS3SecretKeySecret;

  /**
   * UseSDKCreds tells the driver to figure out credentials based on sdk defaults.
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsS3#useSDKCreds
   */
  readonly useSDKCreds?: boolean;

}

/**
 * ValueFrom describes a location in which to obtain the value to a parameter
 *
 * @schema WorkflowSpecTemplatesStepsArgumentsParametersValueFrom
 */
export interface WorkflowSpecTemplatesStepsArgumentsParametersValueFrom {
  /**
   * @schema WorkflowSpecTemplatesStepsArgumentsParametersValueFrom#default
   */
  readonly default?: string;

  /**
   * JQFilter expression against the resource object in resource templates
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsParametersValueFrom#jqFilter
   */
  readonly jqFilter?: string;

  /**
   * JSONPath of a resource to retrieve an output parameter value from in resource templates
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsParametersValueFrom#jsonPath
   */
  readonly jsonPath?: string;

  /**
   * Parameter reference to a step or dag task in which to retrieve an output parameter value from (e.g. '{{steps.mystep.outputs.myparam}}')
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsParametersValueFrom#parameter
   */
  readonly parameter?: string;

  /**
   * Path in the container to retrieve an output parameter value from in container templates
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsParametersValueFrom#path
   */
  readonly path?: string;

}

/**
 * ObjectFieldSelector selects an APIVersioned field of an object.
 *
 * @schema WorkflowSpecTemplatesVolumesDownwardApiItemsFieldRef
 */
export interface WorkflowSpecTemplatesVolumesDownwardApiItemsFieldRef {
  /**
   * Version of the schema the FieldPath is written in terms of, defaults to "v1".
   *
   * @schema WorkflowSpecTemplatesVolumesDownwardApiItemsFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * Path of the field to select in the specified API version.
   *
   * @schema WorkflowSpecTemplatesVolumesDownwardApiItemsFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * ResourceFieldSelector represents container resources (cpu, memory) and their output format
 *
 * @schema WorkflowSpecTemplatesVolumesDownwardApiItemsResourceFieldRef
 */
export interface WorkflowSpecTemplatesVolumesDownwardApiItemsResourceFieldRef {
  /**
   * Container name: required for volumes, optional for env vars
   *
   * @schema WorkflowSpecTemplatesVolumesDownwardApiItemsResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and Int64() accessors.

The serialization format is:

<quantity>        ::= <signedNumber><suffix>
  (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
<decimalSI>       ::= m | "" | k | M | G | T | P | E
  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
<decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  a. No precision is lost
  b. No fractional digits will be emitted
  c. The exponent (or suffix) is as large as possible.
The sign will be omitted unless the number is negative.

Examples:
  1.5 will be serialized as "1500m"
  1.5Gi will be serialized as "1536Mi"

Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.

Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
   *
   * @schema WorkflowSpecTemplatesVolumesDownwardApiItemsResourceFieldRef#divisor
   */
  readonly divisor?: string;

  /**
   * Required: resource to select
   *
   * @schema WorkflowSpecTemplatesVolumesDownwardApiItemsResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Adapts a ConfigMap into a projected volume.

The contents of the target ConfigMap's Data field will be presented in a projected volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. Note that this is identical to a configmap volume source without the default mode.
 *
 * @schema WorkflowSpecTemplatesVolumesProjectedSourcesConfigMap
 */
export interface WorkflowSpecTemplatesVolumesProjectedSourcesConfigMap {
  /**
   * If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
   *
   * @schema WorkflowSpecTemplatesVolumesProjectedSourcesConfigMap#items
   */
  readonly items?: WorkflowSpecTemplatesVolumesProjectedSourcesConfigMapItems[];

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesVolumesProjectedSourcesConfigMap#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its keys must be defined
   *
   * @schema WorkflowSpecTemplatesVolumesProjectedSourcesConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Represents downward API info for projecting into a projected volume. Note that this is identical to a downwardAPI volume source without the default mode.
 *
 * @schema WorkflowSpecTemplatesVolumesProjectedSourcesDownwardApi
 */
export interface WorkflowSpecTemplatesVolumesProjectedSourcesDownwardApi {
  /**
   * Items is a list of DownwardAPIVolume file
   *
   * @schema WorkflowSpecTemplatesVolumesProjectedSourcesDownwardApi#items
   */
  readonly items?: WorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItems[];

}

/**
 * Adapts a secret into a projected volume.

The contents of the target Secret's Data field will be presented in a projected volume as files using the keys in the Data field as the file names. Note that this is identical to a secret volume source without the default mode.
 *
 * @schema WorkflowSpecTemplatesVolumesProjectedSourcesSecret
 */
export interface WorkflowSpecTemplatesVolumesProjectedSourcesSecret {
  /**
   * If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
   *
   * @schema WorkflowSpecTemplatesVolumesProjectedSourcesSecret#items
   */
  readonly items?: WorkflowSpecTemplatesVolumesProjectedSourcesSecretItems[];

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesVolumesProjectedSourcesSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesVolumesProjectedSourcesSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * ServiceAccountTokenProjection represents a projected service account token volume. This projection can be used to insert a service account token into the pods runtime filesystem for use against APIs (Kubernetes API Server or otherwise).
 *
 * @schema WorkflowSpecTemplatesVolumesProjectedSourcesServiceAccountToken
 */
export interface WorkflowSpecTemplatesVolumesProjectedSourcesServiceAccountToken {
  /**
   * Audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.
   *
   * @schema WorkflowSpecTemplatesVolumesProjectedSourcesServiceAccountToken#audience
   */
  readonly audience?: string;

  /**
   * ExpirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.
   *
   * @default 1 hour and must be at least 10 minutes.
   * @schema WorkflowSpecTemplatesVolumesProjectedSourcesServiceAccountToken#expirationSeconds
   */
  readonly expirationSeconds?: number;

  /**
   * Path is the path relative to the mount point of the file to project the token into.
   *
   * @schema WorkflowSpecTemplatesVolumesProjectedSourcesServiceAccountToken#path
   */
  readonly path: string;

}

/**
 * Maps a string key to a path within a volume.
 *
 * @schema WorkflowSpecVolumesProjectedSourcesConfigMapItems
 */
export interface WorkflowSpecVolumesProjectedSourcesConfigMapItems {
  /**
   * The key to project.
   *
   * @schema WorkflowSpecVolumesProjectedSourcesConfigMapItems#key
   */
  readonly key: string;

  /**
   * Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema WorkflowSpecVolumesProjectedSourcesConfigMapItems#mode
   */
  readonly mode?: number;

  /**
   * The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
   *
   * @schema WorkflowSpecVolumesProjectedSourcesConfigMapItems#path
   */
  readonly path: string;

}

/**
 * DownwardAPIVolumeFile represents information to create the file containing the pod field
 *
 * @schema WorkflowSpecVolumesProjectedSourcesDownwardApiItems
 */
export interface WorkflowSpecVolumesProjectedSourcesDownwardApiItems {
  /**
   * ObjectFieldSelector selects an APIVersioned field of an object.
   *
   * @schema WorkflowSpecVolumesProjectedSourcesDownwardApiItems#fieldRef
   */
  readonly fieldRef?: WorkflowSpecVolumesProjectedSourcesDownwardApiItemsFieldRef;

  /**
   * Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema WorkflowSpecVolumesProjectedSourcesDownwardApiItems#mode
   */
  readonly mode?: number;

  /**
   * Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
   *
   * @schema WorkflowSpecVolumesProjectedSourcesDownwardApiItems#path
   */
  readonly path: string;

  /**
   * ResourceFieldSelector represents container resources (cpu, memory) and their output format
   *
   * @schema WorkflowSpecVolumesProjectedSourcesDownwardApiItems#resourceFieldRef
   */
  readonly resourceFieldRef?: WorkflowSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef;

}

/**
 * Maps a string key to a path within a volume.
 *
 * @schema WorkflowSpecVolumesProjectedSourcesSecretItems
 */
export interface WorkflowSpecVolumesProjectedSourcesSecretItems {
  /**
   * The key to project.
   *
   * @schema WorkflowSpecVolumesProjectedSourcesSecretItems#key
   */
  readonly key: string;

  /**
   * Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema WorkflowSpecVolumesProjectedSourcesSecretItems#mode
   */
  readonly mode?: number;

  /**
   * The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
   *
   * @schema WorkflowSpecVolumesProjectedSourcesSecretItems#path
   */
  readonly path: string;

}

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema WorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions
 */
export interface WorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema WorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema WorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   *
   * @schema WorkflowSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema WorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions
 */
export interface WorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema WorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema WorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   *
   * @schema WorkflowSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema WorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions
 */
export interface WorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
  /**
   * The label key that the selector applies to.
   *
   * @schema WorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#key
   */
  readonly key: string;

  /**
   * Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
   *
   * @schema WorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
   *
   * @schema WorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema WorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields
 */
export interface WorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
  /**
   * The label key that the selector applies to.
   *
   * @schema WorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#key
   */
  readonly key: string;

  /**
   * Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
   *
   * @schema WorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#operator
   */
  readonly operator: string;

  /**
   * An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
   *
   * @schema WorkflowSpecTemplatesAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#values
   */
  readonly values?: string[];

}

/**
 * A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema WorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions
 */
export interface WorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
  /**
   * The label key that the selector applies to.
   *
   * @schema WorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#key
   */
  readonly key: string;

  /**
   * Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
   *
   * @schema WorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
   *
   * @schema WorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema WorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields
 */
export interface WorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
  /**
   * The label key that the selector applies to.
   *
   * @schema WorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#key
   */
  readonly key: string;

  /**
   * Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
   *
   * @schema WorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#operator
   */
  readonly operator: string;

  /**
   * An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
   *
   * @schema WorkflowSpecTemplatesAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#values
   */
  readonly values?: string[];

}

/**
 * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
 *
 * @schema WorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector
 */
export interface WorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema WorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchExpressions
   */
  readonly matchExpressions?: WorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema WorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema WorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions
 */
export interface WorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema WorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema WorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   *
   * @schema WorkflowSpecTemplatesAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
 *
 * @schema WorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector
 */
export interface WorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema WorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchExpressions
   */
  readonly matchExpressions?: WorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema WorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema WorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions
 */
export interface WorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema WorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema WorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   *
   * @schema WorkflowSpecTemplatesAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema WorkflowSpecTemplatesContainerLifecyclePostStartHttpGetHttpHeaders
 */
export interface WorkflowSpecTemplatesContainerLifecyclePostStartHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema WorkflowSpecTemplatesContainerLifecyclePostStartHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema WorkflowSpecTemplatesContainerLifecyclePostStartHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema WorkflowSpecTemplatesContainerLifecyclePreStopHttpGetHttpHeaders
 */
export interface WorkflowSpecTemplatesContainerLifecyclePreStopHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema WorkflowSpecTemplatesContainerLifecyclePreStopHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema WorkflowSpecTemplatesContainerLifecyclePreStopHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * ArchiveStrategy describes how to archive files/directory when saving artifacts
 *
 * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsArchive
 */
export interface WorkflowSpecTemplatesDagTasksArgumentsArtifactsArchive {
  /**
   * NoneStrategy indicates to skip tar process and upload the files or directory tree as independent files. Note that if the artifact is a directory, the artifact driver must support the ability to save/load the directory appropriately.
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsArchive#none
   */
  readonly none?: any;

  /**
   * TarStrategy will tar and gzip the file or directory when saving
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsArchive#tar
   */
  readonly tar?: WorkflowSpecTemplatesDagTasksArgumentsArtifactsArchiveTar;

}

/**
 * ArtifactoryArtifact is the location of an artifactory artifact
 *
 * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactory
 */
export interface WorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactory {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactory#passwordSecret
   */
  readonly passwordSecret?: WorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactoryPasswordSecret;

  /**
   * URL of the artifact
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactory#url
   */
  readonly url: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactory#usernameSecret
   */
  readonly usernameSecret?: WorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactoryUsernameSecret;

}

/**
 * GCSArtifact is the location of a GCS artifact
 *
 * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsGcs
 */
export interface WorkflowSpecTemplatesDagTasksArgumentsArtifactsGcs {
  /**
   * Bucket is the name of the bucket
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsGcs#bucket
   */
  readonly bucket: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsGcs#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsGcs#serviceAccountKeySecret
   */
  readonly serviceAccountKeySecret?: WorkflowSpecTemplatesDagTasksArgumentsArtifactsGcsServiceAccountKeySecret;

}

/**
 * GitArtifact is the location of an git artifact
 *
 * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsGit
 */
export interface WorkflowSpecTemplatesDagTasksArgumentsArtifactsGit {
  /**
   * Depth specifies clones/fetches should be shallow and include the given number of commits from the branch tip
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsGit#depth
   */
  readonly depth?: number;

  /**
   * Fetch specifies a number of refs that should be fetched before checkout
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsGit#fetch
   */
  readonly fetch?: string[];

  /**
   * InsecureIgnoreHostKey disables SSH strict host key checking during git clone
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsGit#insecureIgnoreHostKey
   */
  readonly insecureIgnoreHostKey?: boolean;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsGit#passwordSecret
   */
  readonly passwordSecret?: WorkflowSpecTemplatesDagTasksArgumentsArtifactsGitPasswordSecret;

  /**
   * Repo is the git repository
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsGit#repo
   */
  readonly repo: string;

  /**
   * Revision is the git commit, tag, branch to checkout
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsGit#revision
   */
  readonly revision?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsGit#sshPrivateKeySecret
   */
  readonly sshPrivateKeySecret?: WorkflowSpecTemplatesDagTasksArgumentsArtifactsGitSshPrivateKeySecret;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsGit#usernameSecret
   */
  readonly usernameSecret?: WorkflowSpecTemplatesDagTasksArgumentsArtifactsGitUsernameSecret;

}

/**
 * HDFSArtifact is the location of an HDFS artifact
 *
 * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfs
 */
export interface WorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfs {
  /**
   * Addresses is accessible addresses of HDFS name nodes
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfs#addresses
   */
  readonly addresses: string[];

  /**
   * Force copies a file forcibly even if it exists (default: false)
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfs#force
   */
  readonly force?: boolean;

  /**
   * HDFSUser is the user to access HDFS file system. It is ignored if either ccache or keytab is used.
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfs#hdfsUser
   */
  readonly hdfsUser?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfs#krbCCacheSecret
   */
  readonly krbCCacheSecret?: WorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbCCacheSecret;

  /**
   * Selects a key from a ConfigMap.
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfs#krbConfigConfigMap
   */
  readonly krbConfigConfigMap?: WorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfs#krbKeytabSecret
   */
  readonly krbKeytabSecret?: WorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbKeytabSecret;

  /**
   * KrbRealm is the Kerberos realm used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfs#krbRealm
   */
  readonly krbRealm?: string;

  /**
   * KrbServicePrincipalName is the principal name of Kerberos service It must be set if either ccache or keytab is used.
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfs#krbServicePrincipalName
   */
  readonly krbServicePrincipalName?: string;

  /**
   * KrbUsername is the Kerberos username used with Kerberos keytab It must be set if keytab is used.
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfs#krbUsername
   */
  readonly krbUsername?: string;

  /**
   * Path is a file path in HDFS
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfs#path
   */
  readonly path: string;

}

/**
 * HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
 *
 * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsHttp
 */
export interface WorkflowSpecTemplatesDagTasksArgumentsArtifactsHttp {
  /**
   * URL of the artifact
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsHttp#url
   */
  readonly url: string;

}

/**
 * OSSArtifact is the location of an Alibaba Cloud OSS artifact
 *
 * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsOss
 */
export interface WorkflowSpecTemplatesDagTasksArgumentsArtifactsOss {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsOss#accessKeySecret
   */
  readonly accessKeySecret: WorkflowSpecTemplatesDagTasksArgumentsArtifactsOssAccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsOss#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsOss#endpoint
   */
  readonly endpoint: string;

  /**
   * Key is the path in the bucket where the artifact resides
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsOss#key
   */
  readonly key: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsOss#secretKeySecret
   */
  readonly secretKeySecret: WorkflowSpecTemplatesDagTasksArgumentsArtifactsOssSecretKeySecret;

}

/**
 * RawArtifact allows raw string content to be placed as an artifact in a container
 *
 * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsRaw
 */
export interface WorkflowSpecTemplatesDagTasksArgumentsArtifactsRaw {
  /**
   * Data is the string contents of the artifact
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsRaw#data
   */
  readonly data: string;

}

/**
 * S3Artifact is the location of an S3 artifact
 *
 * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsS3
 */
export interface WorkflowSpecTemplatesDagTasksArgumentsArtifactsS3 {
  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsS3#accessKeySecret
   */
  readonly accessKeySecret: WorkflowSpecTemplatesDagTasksArgumentsArtifactsS3AccessKeySecret;

  /**
   * Bucket is the name of the bucket
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsS3#bucket
   */
  readonly bucket: string;

  /**
   * Endpoint is the hostname of the bucket endpoint
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsS3#endpoint
   */
  readonly endpoint: string;

  /**
   * Insecure will connect to the service with TLS
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsS3#insecure
   */
  readonly insecure?: boolean;

  /**
   * Key is the key in the bucket where the artifact resides
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsS3#key
   */
  readonly key: string;

  /**
   * Region contains the optional bucket region
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsS3#region
   */
  readonly region?: string;

  /**
   * RoleARN is the Amazon Resource Name (ARN) of the role to assume.
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsS3#roleARN
   */
  readonly roleARN?: string;

  /**
   * SecretKeySelector selects a key of a Secret.
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsS3#secretKeySecret
   */
  readonly secretKeySecret: WorkflowSpecTemplatesDagTasksArgumentsArtifactsS3SecretKeySecret;

  /**
   * UseSDKCreds tells the driver to figure out credentials based on sdk defaults.
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsS3#useSDKCreds
   */
  readonly useSDKCreds?: boolean;

}

/**
 * ValueFrom describes a location in which to obtain the value to a parameter
 *
 * @schema WorkflowSpecTemplatesDagTasksArgumentsParametersValueFrom
 */
export interface WorkflowSpecTemplatesDagTasksArgumentsParametersValueFrom {
  /**
   * @schema WorkflowSpecTemplatesDagTasksArgumentsParametersValueFrom#default
   */
  readonly default?: string;

  /**
   * JQFilter expression against the resource object in resource templates
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsParametersValueFrom#jqFilter
   */
  readonly jqFilter?: string;

  /**
   * JSONPath of a resource to retrieve an output parameter value from in resource templates
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsParametersValueFrom#jsonPath
   */
  readonly jsonPath?: string;

  /**
   * Parameter reference to a step or dag task in which to retrieve an output parameter value from (e.g. '{{steps.mystep.outputs.myparam}}')
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsParametersValueFrom#parameter
   */
  readonly parameter?: string;

  /**
   * Path in the container to retrieve an output parameter value from in container templates
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsParametersValueFrom#path
   */
  readonly path?: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema WorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGetHttpHeaders
 */
export interface WorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema WorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema WorkflowSpecTemplatesInitContainersLifecyclePostStartHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema WorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGetHttpHeaders
 */
export interface WorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema WorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema WorkflowSpecTemplatesInitContainersLifecyclePreStopHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema WorkflowSpecTemplatesScriptLifecyclePostStartHttpGetHttpHeaders
 */
export interface WorkflowSpecTemplatesScriptLifecyclePostStartHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema WorkflowSpecTemplatesScriptLifecyclePostStartHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema WorkflowSpecTemplatesScriptLifecyclePostStartHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema WorkflowSpecTemplatesScriptLifecyclePreStopHttpGetHttpHeaders
 */
export interface WorkflowSpecTemplatesScriptLifecyclePreStopHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema WorkflowSpecTemplatesScriptLifecyclePreStopHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema WorkflowSpecTemplatesScriptLifecyclePreStopHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema WorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGetHttpHeaders
 */
export interface WorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema WorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema WorkflowSpecTemplatesSidecarsLifecyclePostStartHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema WorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGetHttpHeaders
 */
export interface WorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema WorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema WorkflowSpecTemplatesSidecarsLifecyclePreStopHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * TarStrategy will tar and gzip the file or directory when saving
 *
 * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsArchiveTar
 */
export interface WorkflowSpecTemplatesStepsArgumentsArtifactsArchiveTar {
  /**
   * CompressionLevel specifies the gzip compression level to use for the artifact. Defaults to gzip.DefaultCompression.
   *
   * @default gzip.DefaultCompression.
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsArchiveTar#compressionLevel
   */
  readonly compressionLevel?: number;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsArtifactoryPasswordSecret
 */
export interface WorkflowSpecTemplatesStepsArgumentsArtifactsArtifactoryPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsArtifactoryPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsArtifactoryPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsArtifactoryPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsArtifactoryUsernameSecret
 */
export interface WorkflowSpecTemplatesStepsArgumentsArtifactsArtifactoryUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsArtifactoryUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsArtifactoryUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsArtifactoryUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsGcsServiceAccountKeySecret
 */
export interface WorkflowSpecTemplatesStepsArgumentsArtifactsGcsServiceAccountKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsGcsServiceAccountKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsGcsServiceAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsGcsServiceAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsGitPasswordSecret
 */
export interface WorkflowSpecTemplatesStepsArgumentsArtifactsGitPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsGitPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsGitPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsGitPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsGitSshPrivateKeySecret
 */
export interface WorkflowSpecTemplatesStepsArgumentsArtifactsGitSshPrivateKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsGitSshPrivateKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsGitSshPrivateKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsGitSshPrivateKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsGitUsernameSecret
 */
export interface WorkflowSpecTemplatesStepsArgumentsArtifactsGitUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsGitUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsGitUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsGitUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsHdfsKrbCCacheSecret
 */
export interface WorkflowSpecTemplatesStepsArgumentsArtifactsHdfsKrbCCacheSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsHdfsKrbCCacheSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsHdfsKrbCCacheSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsHdfsKrbCCacheSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Selects a key from a ConfigMap.
 *
 * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsHdfsKrbConfigConfigMap
 */
export interface WorkflowSpecTemplatesStepsArgumentsArtifactsHdfsKrbConfigConfigMap {
  /**
   * The key to select.
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsHdfsKrbConfigConfigMap#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsHdfsKrbConfigConfigMap#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its key must be defined
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsHdfsKrbConfigConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsHdfsKrbKeytabSecret
 */
export interface WorkflowSpecTemplatesStepsArgumentsArtifactsHdfsKrbKeytabSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsHdfsKrbKeytabSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsHdfsKrbKeytabSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsHdfsKrbKeytabSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsOssAccessKeySecret
 */
export interface WorkflowSpecTemplatesStepsArgumentsArtifactsOssAccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsOssAccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsOssAccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsOssAccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsOssSecretKeySecret
 */
export interface WorkflowSpecTemplatesStepsArgumentsArtifactsOssSecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsOssSecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsOssSecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsOssSecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsS3AccessKeySecret
 */
export interface WorkflowSpecTemplatesStepsArgumentsArtifactsS3AccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsS3AccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsS3AccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsS3AccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsS3SecretKeySecret
 */
export interface WorkflowSpecTemplatesStepsArgumentsArtifactsS3SecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsS3SecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsS3SecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesStepsArgumentsArtifactsS3SecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Maps a string key to a path within a volume.
 *
 * @schema WorkflowSpecTemplatesVolumesProjectedSourcesConfigMapItems
 */
export interface WorkflowSpecTemplatesVolumesProjectedSourcesConfigMapItems {
  /**
   * The key to project.
   *
   * @schema WorkflowSpecTemplatesVolumesProjectedSourcesConfigMapItems#key
   */
  readonly key: string;

  /**
   * Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema WorkflowSpecTemplatesVolumesProjectedSourcesConfigMapItems#mode
   */
  readonly mode?: number;

  /**
   * The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
   *
   * @schema WorkflowSpecTemplatesVolumesProjectedSourcesConfigMapItems#path
   */
  readonly path: string;

}

/**
 * DownwardAPIVolumeFile represents information to create the file containing the pod field
 *
 * @schema WorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItems
 */
export interface WorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItems {
  /**
   * ObjectFieldSelector selects an APIVersioned field of an object.
   *
   * @schema WorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItems#fieldRef
   */
  readonly fieldRef?: WorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItemsFieldRef;

  /**
   * Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema WorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItems#mode
   */
  readonly mode?: number;

  /**
   * Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
   *
   * @schema WorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItems#path
   */
  readonly path: string;

  /**
   * ResourceFieldSelector represents container resources (cpu, memory) and their output format
   *
   * @schema WorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItems#resourceFieldRef
   */
  readonly resourceFieldRef?: WorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItemsResourceFieldRef;

}

/**
 * Maps a string key to a path within a volume.
 *
 * @schema WorkflowSpecTemplatesVolumesProjectedSourcesSecretItems
 */
export interface WorkflowSpecTemplatesVolumesProjectedSourcesSecretItems {
  /**
   * The key to project.
   *
   * @schema WorkflowSpecTemplatesVolumesProjectedSourcesSecretItems#key
   */
  readonly key: string;

  /**
   * Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema WorkflowSpecTemplatesVolumesProjectedSourcesSecretItems#mode
   */
  readonly mode?: number;

  /**
   * The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
   *
   * @schema WorkflowSpecTemplatesVolumesProjectedSourcesSecretItems#path
   */
  readonly path: string;

}

/**
 * ObjectFieldSelector selects an APIVersioned field of an object.
 *
 * @schema WorkflowSpecVolumesProjectedSourcesDownwardApiItemsFieldRef
 */
export interface WorkflowSpecVolumesProjectedSourcesDownwardApiItemsFieldRef {
  /**
   * Version of the schema the FieldPath is written in terms of, defaults to "v1".
   *
   * @schema WorkflowSpecVolumesProjectedSourcesDownwardApiItemsFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * Path of the field to select in the specified API version.
   *
   * @schema WorkflowSpecVolumesProjectedSourcesDownwardApiItemsFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * ResourceFieldSelector represents container resources (cpu, memory) and their output format
 *
 * @schema WorkflowSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef
 */
export interface WorkflowSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef {
  /**
   * Container name: required for volumes, optional for env vars
   *
   * @schema WorkflowSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and Int64() accessors.

The serialization format is:

<quantity>        ::= <signedNumber><suffix>
  (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
<decimalSI>       ::= m | "" | k | M | G | T | P | E
  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
<decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  a. No precision is lost
  b. No fractional digits will be emitted
  c. The exponent (or suffix) is as large as possible.
The sign will be omitted unless the number is negative.

Examples:
  1.5 will be serialized as "1500m"
  1.5Gi will be serialized as "1536Mi"

Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.

Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
   *
   * @schema WorkflowSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#divisor
   */
  readonly divisor?: string;

  /**
   * Required: resource to select
   *
   * @schema WorkflowSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema WorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions
 */
export interface WorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema WorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema WorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   *
   * @schema WorkflowSpecTemplatesAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema WorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions
 */
export interface WorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema WorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema WorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   *
   * @schema WorkflowSpecTemplatesAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * TarStrategy will tar and gzip the file or directory when saving
 *
 * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsArchiveTar
 */
export interface WorkflowSpecTemplatesDagTasksArgumentsArtifactsArchiveTar {
  /**
   * CompressionLevel specifies the gzip compression level to use for the artifact. Defaults to gzip.DefaultCompression.
   *
   * @default gzip.DefaultCompression.
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsArchiveTar#compressionLevel
   */
  readonly compressionLevel?: number;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactoryPasswordSecret
 */
export interface WorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactoryPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactoryPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactoryPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactoryPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactoryUsernameSecret
 */
export interface WorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactoryUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactoryUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactoryUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsArtifactoryUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsGcsServiceAccountKeySecret
 */
export interface WorkflowSpecTemplatesDagTasksArgumentsArtifactsGcsServiceAccountKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsGcsServiceAccountKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsGcsServiceAccountKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsGcsServiceAccountKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsGitPasswordSecret
 */
export interface WorkflowSpecTemplatesDagTasksArgumentsArtifactsGitPasswordSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsGitPasswordSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsGitPasswordSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsGitPasswordSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsGitSshPrivateKeySecret
 */
export interface WorkflowSpecTemplatesDagTasksArgumentsArtifactsGitSshPrivateKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsGitSshPrivateKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsGitSshPrivateKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsGitSshPrivateKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsGitUsernameSecret
 */
export interface WorkflowSpecTemplatesDagTasksArgumentsArtifactsGitUsernameSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsGitUsernameSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsGitUsernameSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsGitUsernameSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbCCacheSecret
 */
export interface WorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbCCacheSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbCCacheSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbCCacheSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbCCacheSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Selects a key from a ConfigMap.
 *
 * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap
 */
export interface WorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap {
  /**
   * The key to select.
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its key must be defined
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbConfigConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbKeytabSecret
 */
export interface WorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbKeytabSecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbKeytabSecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbKeytabSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsHdfsKrbKeytabSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsOssAccessKeySecret
 */
export interface WorkflowSpecTemplatesDagTasksArgumentsArtifactsOssAccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsOssAccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsOssAccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsOssAccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsOssSecretKeySecret
 */
export interface WorkflowSpecTemplatesDagTasksArgumentsArtifactsOssSecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsOssSecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsOssSecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsOssSecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsS3AccessKeySecret
 */
export interface WorkflowSpecTemplatesDagTasksArgumentsArtifactsS3AccessKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsS3AccessKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsS3AccessKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsS3AccessKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * SecretKeySelector selects a key of a Secret.
 *
 * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsS3SecretKeySecret
 */
export interface WorkflowSpecTemplatesDagTasksArgumentsArtifactsS3SecretKeySecret {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsS3SecretKeySecret#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsS3SecretKeySecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema WorkflowSpecTemplatesDagTasksArgumentsArtifactsS3SecretKeySecret#optional
   */
  readonly optional?: boolean;

}

/**
 * ObjectFieldSelector selects an APIVersioned field of an object.
 *
 * @schema WorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItemsFieldRef
 */
export interface WorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItemsFieldRef {
  /**
   * Version of the schema the FieldPath is written in terms of, defaults to "v1".
   *
   * @schema WorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItemsFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * Path of the field to select in the specified API version.
   *
   * @schema WorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItemsFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * ResourceFieldSelector represents container resources (cpu, memory) and their output format
 *
 * @schema WorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItemsResourceFieldRef
 */
export interface WorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItemsResourceFieldRef {
  /**
   * Container name: required for volumes, optional for env vars
   *
   * @schema WorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and Int64() accessors.

The serialization format is:

<quantity>        ::= <signedNumber><suffix>
  (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
<decimalSI>       ::= m | "" | k | M | G | T | P | E
  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
<decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  a. No precision is lost
  b. No fractional digits will be emitted
  c. The exponent (or suffix) is as large as possible.
The sign will be omitted unless the number is negative.

Examples:
  1.5 will be serialized as "1500m"
  1.5Gi will be serialized as "1536Mi"

Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.

Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
   *
   * @schema WorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#divisor
   */
  readonly divisor?: string;

  /**
   * Required: resource to select
   *
   * @schema WorkflowSpecTemplatesVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#resource
   */
  readonly resource: string;

}

